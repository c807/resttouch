{"version":3,"sources":["webpack:///src/app/shared/services/desktop-notification.service.ts","webpack:///src/app/admin/services/tablero.service.ts","webpack:///src/app/admin/components/tablero/graficas/grafica-linea/grafica-linea.component.ts","webpack:///src/app/admin/components/tablero/graficas/grafica-linea/grafica-linea.component.html","webpack:///src/app/admin/services/sub-modulo.service.ts","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/services/authguard.service.ts","webpack:///ws (ignored)","webpack:///src/app/admin/services/impuesto-especial.service.ts","webpack:///src/app/admin/services/app-menu.service.ts","webpack:///src/app/admin/services/acceso-usuario.service.ts","webpack:///src/app/admin/components/documento-tipo/lista-documento-tipo/lista-documento-tipo.component.ts","webpack:///src/app/admin/components/documento-tipo/lista-documento-tipo/lista-documento-tipo.component.html","webpack:///src/app/admin/components/vendor-tercero/form-vendor-tercero/form-vendor-tercero.component.ts","webpack:///src/app/admin/components/vendor-tercero/form-vendor-tercero/form-vendor-tercero.component.html","webpack:///src/app/admin/components/acceso-usuario/acceso-usuario/acceso-usuario.component.ts","webpack:///src/app/admin/components/acceso-usuario/acceso-usuario/acceso-usuario.component.html","webpack:///src/app/admin/components/empresa/lista-empresa/lista-empresa.component.ts","webpack:///src/app/admin/components/empresa/lista-empresa/lista-empresa.component.html","webpack:///src/app/admin/components/impuestoEspecial/form-impuesto-especial/form-impuesto-especial.component.ts","webpack:///src/app/admin/components/impuestoEspecial/form-impuesto-especial/form-impuesto-especial.component.html","webpack:///src/app/admin/components/acerca-de/acerca-de.component.ts","webpack:///src/app/admin/components/acerca-de/acerca-de.component.html","webpack:///src/app/wms/services/proveedor.service.ts","webpack:///src/app/admin/components/fpago/fpago/fpago.component.ts","webpack:///src/app/admin/components/fpago/fpago/fpago.component.html","webpack:///src/app/admin/components/usuario/lista-usuario/lista-usuario.component.ts","webpack:///src/app/admin/components/usuario/lista-usuario/lista-usuario.component.html","webpack:///src/app/admin/components/header/header.component.ts","webpack:///src/app/admin/components/header/header.component.html","webpack:///src/app/admin/components/vendor-tercero/form-sede-vendor-tercero-dialog/form-sede-vendor-tercero-dialog.component.ts","webpack:///src/app/admin/components/vendor-tercero/form-sede-vendor-tercero-dialog/form-sede-vendor-tercero-dialog.component.html","webpack:///src/app/admin/components/notificaciones-cliente/notificaciones-cliente.component.ts","webpack:///src/app/admin/components/notificaciones-cliente/notificaciones-cliente.component.html","webpack:///src/app/admin/components/empresa/form-empresa/form-empresa.component.ts","webpack:///src/app/admin/components/empresa/form-empresa/form-empresa.component.html","webpack:///src/app/admin/components/usuario-sede/usuario-sede-lista/usuario-sede-lista.component.ts","webpack:///src/app/admin/components/usuario-sede/usuario-sede-lista/usuario-sede-lista.component.html","webpack:///src/app/admin/components/formaPagoComandaOrigen/lista-forma-pago-comanda-origen/lista-forma-pago-comanda-origen.component.ts","webpack:///src/app/admin/components/formaPagoComandaOrigen/lista-forma-pago-comanda-origen/lista-forma-pago-comanda-origen.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/admin/services/jerarquia.service.ts","webpack:///src/app/admin/services/modulo.service.ts","webpack:///src/app/admin/services/presentacion.service.ts","webpack:///src/app/admin/services/tipo-compra-venta.service.ts","webpack:///src/app/admin/components/clock/clock.component.ts","webpack:///src/app/admin/components/clock/clock.component.html","webpack:///src/app/shared/components/rpt-fechas/rpt-fechas.component.ts","webpack:///src/app/shared/components/rpt-fechas/rpt-fechas.component.html","webpack:///src/app/admin/services/localstorage.service.ts","webpack:///src/app/shared/interceptors/token-auth.interceptor.ts","webpack:///src/app/admin/components/cliente/lista-cliente/lista-cliente.component.ts","webpack:///src/app/admin/components/cliente/lista-cliente/lista-cliente.component.html","webpack:///src/app/admin/components/tipoCompraVenta/form-tipo-compra-venta/form-tipo-compra-venta.component.ts","webpack:///src/app/admin/components/tipoCompraVenta/form-tipo-compra-venta/form-tipo-compra-venta.component.html","webpack:///src/app/admin/directives/sidebar.directive.ts","webpack:///src/app/admin/components/proveedor/lista-proveedor/lista-proveedor.component.ts","webpack:///src/app/admin/components/proveedor/lista-proveedor/lista-proveedor.component.html","webpack:///src/app/admin/services/sede.service.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/restaurante/services/comanda.service.ts","webpack:///src/app/admin/components/corporacion/corporacion/corporacion.component.ts","webpack:///src/app/admin/components/corporacion/corporacion/corporacion.component.html","webpack:///src/app/admin/components/vendor-tercero/lista-vendor-tercero/lista-vendor-tercero.component.ts","webpack:///src/app/admin/components/vendor-tercero/lista-vendor-tercero/lista-vendor-tercero.component.html","webpack:///src/app/admin/services/usuario.service.ts","webpack:///src/app/admin/components/login/login.component.ts","webpack:///src/app/admin/components/login/login.component.html","webpack:///src/app/admin/components/usuario/usuario/usuario.component.ts","webpack:///src/app/admin/components/usuario/usuario/usuario.component.html","webpack:///src/app/admin/components/cliente/form-cliente/form-cliente.component.ts","webpack:///src/app/admin/components/cliente/form-cliente/form-cliente.component.html","webpack:///src/app/admin/components/fpago/form-pago/form-pago.component.ts","webpack:///src/app/admin/components/fpago/form-pago/form-pago.component.html","webpack:///src/app/shared/components/dialog-combo/dialog-combo.component.ts","webpack:///src/app/shared/components/dialog-combo/dialog-combo.component.html","webpack:///src/app/admin/services/cliente.service.ts","webpack:///src/app/admin/components/presentacion/presentacion/presentacion.component.ts","webpack:///src/app/admin/components/presentacion/presentacion/presentacion.component.html","webpack:///src/app/admin/models/usuario.ts","webpack:///src/app/wms/services/articulo.service.ts","webpack:///src/app/admin/components/tipoCompraVenta/tipo-compra-venta/tipo-compra-venta.component.ts","webpack:///src/app/admin/components/tipoCompraVenta/tipo-compra-venta/tipo-compra-venta.component.html","webpack:///src/app/shared/components/rpt-botones/rpt-botones.component.ts","webpack:///src/app/shared/components/rpt-botones/rpt-botones.component.html","webpack:///src/app/shared/components/window/window.component.ts","webpack:///src/app/admin/components/certificador/datos/form-certificador-fel/form-certificador-fel.component.ts","webpack:///src/app/admin/components/certificador/datos/form-certificador-fel/form-certificador-fel.component.html","webpack:///src/app/shared/components/dialog-cocina/dialog-cocina.component.ts","webpack:///src/app/shared/components/dialog-cocina/dialog-cocina.component.html","webpack:///src/app/admin/components/vendor-tercero/vendor-tercero/vendor-tercero.component.ts","webpack:///src/app/admin/components/vendor-tercero/vendor-tercero/vendor-tercero.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/admin/components/impuestoEspecial/lista-impuesto-especial/lista-impuesto-especial.component.ts","webpack:///src/app/admin/components/impuestoEspecial/lista-impuesto-especial/lista-impuesto-especial.component.html","webpack:///src/app/admin/components/corporacion/form-corporacion/form-corporacion.component.ts","webpack:///src/app/admin/components/corporacion/form-corporacion/form-corporacion.component.html","webpack:///src/app/admin/components/medida/lista-medida/lista-medida.component.ts","webpack:///src/app/admin/components/medida/lista-medida/lista-medida.component.html","webpack:///src/app/shared/error-handler.ts","webpack:///src/app/admin/services/vendor-tercero.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/admin/components/tipo-usuario/lista-tipo-usuario/lista-tipo-usuario.component.ts","webpack:///src/app/admin/components/tipo-usuario/lista-tipo-usuario/lista-tipo-usuario.component.html","webpack:///src/app/admin/components/tablero/graficas/ventas/ventas.component.ts","webpack:///src/app/admin/components/tablero/graficas/ventas/ventas.component.html","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/shared/components/cargando/cargando.component.ts","webpack:///src/app/shared/components/cargando/cargando.component.html","webpack:///src/app/admin/components/documento-tipo/form-documento-tipo/form-documento-tipo.component.ts","webpack:///src/app/admin/components/documento-tipo/form-documento-tipo/form-documento-tipo.component.html","webpack:///src/app/admin/components/razon-anulacion/razon-anulacion/razon-anulacion.component.ts","webpack:///src/app/admin/components/razon-anulacion/razon-anulacion/razon-anulacion.component.html","webpack:///src/app/admin/components/impresora/impresora/impresora.component.ts","webpack:///src/app/admin/components/impresora/impresora/impresora.component.html","webpack:///src/app/shared/pipes/filter.pipe.ts","webpack:///src/app/admin/components/proveedor/form-proveedor/form-proveedor.component.ts","webpack:///src/app/admin/components/proveedor/form-proveedor/form-proveedor.component.html","webpack:///src/app/admin/components/presentacion/lista-presentacion/lista-presentacion.component.ts","webpack:///src/app/admin/components/presentacion/lista-presentacion/lista-presentacion.component.html","webpack:///src/app/admin/services/anulacion.service.ts","webpack:///src/app/admin/components/sede/form-sede/form-sede.component.ts","webpack:///src/app/admin/components/sede/form-sede/form-sede.component.html","webpack:///src/app/admin/components/formaPagoComandaOrigen/forma-pago-comanda-origen-dialog/forma-pago-comanda-origen-dialog.component.ts","webpack:///src/app/admin/components/formaPagoComandaOrigen/forma-pago-comanda-origen-dialog/forma-pago-comanda-origen-dialog.component.html","webpack:///src/app/admin/components/fpago/lista-pago/lista-pago.component.ts","webpack:///src/app/admin/components/fpago/lista-pago/lista-pago.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/admin/components/acceso-usuario/form-acceso-usuario/form-acceso-usuario.component.ts","webpack:///src/app/admin/components/acceso-usuario/form-acceso-usuario/form-acceso-usuario.component.html","webpack:///src/app/admin/services/comanda-origen.service.ts","webpack:///src/app/admin/components/usuario-sede/usuario-sede/usuario-sede.component.ts","webpack:///src/app/admin/components/usuario-sede/usuario-sede/usuario-sede.component.html","webpack:///src/app/admin/components/usuario/form-usuario/form-usuario.component.ts","webpack:///src/app/admin/components/usuario/form-usuario/form-usuario.component.html","webpack:///src/app/admin/components/certificador/configuracion/certificador-configuracion/certificador-configuracion.component.ts","webpack:///src/app/admin/components/certificador/configuracion/certificador-configuracion/certificador-configuracion.component.html","webpack:///src/app/shared/components/dialog-pedido/dialog-pedido.component.ts","webpack:///src/app/shared/components/dialog-pedido/dialog-pedido.component.html","webpack:///src/app/admin/components/impresora/lista-impresora/lista-impresora.component.ts","webpack:///src/app/admin/components/impresora/lista-impresora/lista-impresora.component.html","webpack:///src/app/admin/components/dashboard/dashboard.component.ts","webpack:///src/app/admin/components/dashboard/dashboard.component.html","webpack:///src/app/admin/components/formaPagoComandaOrigen/form-forma-pago-comanda-origen/form-forma-pago-comanda-origen.component.ts","webpack:///src/app/admin/components/formaPagoComandaOrigen/form-forma-pago-comanda-origen/form-forma-pago-comanda-origen.component.html","webpack:///src/app/admin/components/medida/form-medida/form-medida.component.ts","webpack:///src/app/admin/components/medida/form-medida/form-medida.component.html","webpack:///src/app/admin/components/presentacion/form-presentacion/form-presentacion.component.ts","webpack:///src/app/admin/components/presentacion/form-presentacion/form-presentacion.component.html","webpack:///src/app/admin/components/razon-anulacion/lista-razon-anulacion/lista-razon-anulacion.component.ts","webpack:///src/app/admin/components/razon-anulacion/lista-razon-anulacion/lista-razon-anulacion.component.html","webpack:///src/app/admin/components/vendor-tercero/form-sede-vendor-tercero/form-sede-vendor-tercero.component.html","webpack:///src/app/admin/components/vendor-tercero/form-sede-vendor-tercero/form-sede-vendor-tercero.component.ts","webpack:///src/app/admin/components/acceso-usuario/lista-acceso-usuario/lista-acceso-usuario.component.ts","webpack:///src/app/admin/components/acceso-usuario/lista-acceso-usuario/lista-acceso-usuario.component.html","webpack:///src/app/admin/components/bodega/form-bodega/form-bodega.component.ts","webpack:///src/app/admin/components/bodega/form-bodega/form-bodega.component.html","webpack:///src/app/admin/components/cliente/cliente/cliente.component.ts","webpack:///src/app/admin/components/cliente/cliente/cliente.component.html","webpack:///src/app/admin/components/proveedor/proveedor/proveedor.component.ts","webpack:///src/app/admin/components/proveedor/proveedor/proveedor.component.html","webpack:///src/app/admin/components/impresora/form-impresora/form-impresora.component.ts","webpack:///src/app/admin/components/impresora/form-impresora/form-impresora.component.html","webpack:///src/app/admin/components/menu/menu.component.ts","webpack:///src/app/admin/components/menu/menu.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/shared/components/check-password/check-password.component.ts","webpack:///src/app/shared/components/check-password/check-password.component.html","webpack:///src/app/admin/services/certificador.service.ts","webpack:///src/app/admin/components/bodega/bodega/bodega.component.ts","webpack:///src/app/admin/components/bodega/bodega/bodega.component.html","webpack:///src/app/admin/services/opcion.service.ts","webpack:///src/app/shared/components/dialog-elminar-producto/dialog-elminar-producto.component.ts","webpack:///src/app/shared/components/dialog-elminar-producto/dialog-elminar-producto.component.html","webpack:///src/app/admin/components/sede/lista-sede/lista-sede.component.ts","webpack:///src/app/admin/components/sede/lista-sede/lista-sede.component.html","webpack:///src/app/admin/components/documento-tipo/documento-tipo/documento-tipo.component.ts","webpack:///src/app/admin/components/documento-tipo/documento-tipo/documento-tipo.component.html","webpack:///src/app/admin/services/medida.service.ts","webpack:///src/app/admin/components/certificador/configuracion/form-certificador-configuracion/form-certificador-configuracion.component.ts","webpack:///src/app/admin/components/certificador/configuracion/form-certificador-configuracion/form-certificador-configuracion.component.html","webpack:///src/app/admin/components/tablero/tablero.component.ts","webpack:///src/app/admin/components/tablero/tablero.component.html","webpack:///src/app/admin/services/impresora.service.ts","webpack:///src/app/admin/components/bodega/lista-bodega/lista-bodega.component.ts","webpack:///src/app/admin/components/bodega/lista-bodega/lista-bodega.component.html","webpack:///src/app/admin/services/tipo-usuario.service.ts","webpack:///src/app/admin/services/configuracion.service.ts","webpack:///src/app/admin/services/notificacion-cliente.service.ts","webpack:///src/app/admin/services/fpago.service.ts","webpack:///src/app/admin/components/tipo-usuario/form-tipo-usuario/form-tipo-usuario.component.ts","webpack:///src/app/admin/components/tipo-usuario/form-tipo-usuario/form-tipo-usuario.component.html","webpack:///src/app/admin/components/medida/medida/medida.component.ts","webpack:///src/app/admin/components/medida/medida/medida.component.html","webpack:///src/app/shared/global.ts","webpack:///src/app/admin/components/certificador/datos/certificador-fel/certificador-fel.component.ts","webpack:///src/app/admin/components/certificador/datos/certificador-fel/certificador-fel.component.html","webpack:///src/app/admin/components/tipo-usuario/tipo-usuario/tipo-usuario.component.ts","webpack:///src/app/admin/components/tipo-usuario/tipo-usuario/tipo-usuario.component.html","webpack:///src/app/admin/components/corporacion/lista-corporacion/lista-corporacion.component.ts","webpack:///src/app/admin/components/corporacion/lista-corporacion/lista-corporacion.component.html","webpack:///src/app/admin/components/certificador/configuracion/lista-certificador-configuracion/lista-certificador-configuracion.component.ts","webpack:///src/app/admin/components/certificador/configuracion/lista-certificador-configuracion/lista-certificador-configuracion.component.html","webpack:///src/app/admin/components/cliente/form-cliente-dialog/form-cliente-dialog.component.ts","webpack:///src/app/admin/components/cliente/form-cliente-dialog/form-cliente-dialog.component.html","webpack:///src/app/wms/services/bodega.service.ts","webpack:///src/app/admin/components/solicita-pin-inactividad/solicita-pin-inactividad.component.ts","webpack:///src/app/admin/components/solicita-pin-inactividad/solicita-pin-inactividad.component.html","webpack:///src/app/admin/components/impuestoEspecial/impuesto-especial/impuesto-especial.component.ts","webpack:///src/app/admin/components/impuestoEspecial/impuesto-especial/impuesto-especial.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/admin/components/tipoCompraVenta/lista-tipo-compra-venta/lista-tipo-compra-venta.component.ts","webpack:///src/app/admin/components/tipoCompraVenta/lista-tipo-compra-venta/lista-tipo-compra-venta.component.html","webpack:///src/app/admin/components/razon-anulacion/form-razon-anulacion/form-razon-anulacion.component.ts","webpack:///src/app/admin/components/razon-anulacion/form-razon-anulacion/form-razon-anulacion.component.html","webpack:///src/app/shared/pipes/truncar.pipe.ts","webpack:///src/app/admin/services/documento-tipo.service.ts","webpack:///src/app/admin/components/usuario-sede/usuario-sede-form/usuario-sede-form.component.ts","webpack:///src/app/admin/components/usuario-sede/usuario-sede-form/usuario-sede-form.component.html","webpack:///src/app/admin/components/formaPagoComandaOrigen/forma-pago-comanda-origen/forma-pago-comanda-origen.component.ts","webpack:///src/app/admin/components/formaPagoComandaOrigen/forma-pago-comanda-origen/forma-pago-comanda-origen.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["DesktopNotificationService","requestPermission","window","Notification","permission","result","havePermission","createNotification","title","delay","options","notification","undefined","setTimeout","close","bind","TableroService","http","httpOptions","responseType","getDataGraficas","params","get","url","pipe","reintentos","srvcErrHndl","errorHandler","Accept","GraficaLineaComponent","lineChartData","lineChartLabels","lineChartColors","titulo","lineChartOptions","responsive","text","display","position","lineChartLegend","lineChartPlugins","SubModuloService","idmodulo","fltr","urlCatalogos","routes","path","component","canActivate","redirectTo","pathMatch","AdminRoutingModule","forChild","AuthguardService","usrSrvc","router","checkUserToken","valido","navigate","ImpuestoEspecialService","moduleUrl","urlMantenimientos","entidad","post","impuesto_especial","AppMenuService","dataObs$","opciones$","getData","updData","data","next","getOpciones","updOpciones","opcs","AccesoUsuarioService","acceso","usuario_sede","ListaDocumentoTipoComponent","tipoCompraVentaSrvc","ls","getDocumentoTipoEv","length","pageSize","pageSizeOptions","pageIndex","txtFiltro","keyboardLayout","IDIOMA_TECLADO","esMovil","loadDocumentosTipo","subscribe","lst","lstDocumentoTipo","applyFilter","getDocumentoTipo","obj","emit","pageChange","e","usrTokenVar","enmovil","tmpList","lstDocumentoTipoPaged","FormVendorTerceroComponent","snackBar","vendorTerceroSrvc","comandaOrigenSrvc","vendorTerceroSavedEv","lstComandaOrigen","loadComandaOrigen","res","vendorTercero","vendor_tercero","nombre","comanda_origen","frmSedeVendorTercero","resetSedeVendorTercero","save","exito","resetVendorTercero","open","mensaje","duration","onSubmit","AccesoUsuarioComponent","setUsuario","usr","usuario","frmAccesoUsuario","loadAccesos","resetAcceso","refreshUsuarioList","lstUsuarioComponent","loadUsuario","nombres","apellidos","ListaEmpresaComponent","sedeSrv","getEmpresaEv","getEmpresas","listaEmpresa","getEmpresa","corporacion","cambioPagina","listaEmpresaPaged","paginador","firstPage","FormImpuestoEspecialComponent","impuestoEspecialSrvc","impuestoEspecialSavedEv","impuestoEspecial","descripcion","porcentaje","resetImpuestoEspecial","AcercaDeComponent","dialogRef","sedeUuid","cerrar","sede_uuid","ProveedorService","proveedor","FpagoComponent","setFormPago","cli","fpago","refreshFpagoList","lstFpagoComponent","getFormasPago","forma_pago","descuento","comision_porcentaje","retencion_porcentaje","pedirdocumento","pedirautorizacion","adjuntararchivo","sinfactura","activo","ListaUsuarioComponent","usuarioSrvc","getUsuarioEv","loadUsuarios","lstUsuarios","lstUsuariosPaged","getAll","id","HeaderComponent","appMenuSrvc","idle","keepalive","configSrvc","dialog","notificacionClienteSrvc","usrInfo","idleState","timedOut","lastPing","notificaciones","loadNotificacionesCliente","openFromComponent","verticalPosition","horizontalPosition","setIdleConfigs","getConfig","CONSTANTES","RT_HABILITA_BLOQUEO_INACTIVIDAD","tiempo","RT_SEGUNDOS_INACTIVIDAD","setIdle","setInterrupts","onIdleEnd","onTimeout","solicitaPinRef","width","hasBackdrop","disableClose","autoFocus","afterClosed","reset","onIdleStart","onTimeoutWarning","conteo","interval","onPing","Date","watch","handleClick","modulo","set","usrLastModuleVar","objModulo","appMenu","find","m","submodulo","transformSubModule","acercaDe","aboutRef","load","then","lastModule","clear","usrUnlockVar","stop","LogOut","FormSedeVendorTerceroDialogComponent","cancelar","sedeVendorTercero","sede_vendor_tercero","sede","NotificacionesClienteComponent","snackBarRef","dismiss","FormEmpresaComponent","sedeSrvc","empresaSavedEv","metodoCosteo","resetEmpresa","empresa","numero_acceso","afiliacion_iva","codigo_establecimiento","correo_emisor","nit","nombre_comercial","direccion","codigo_postal","municipio","departamento","pais_iso_dos","agente_retenedor","porcentaje_iva","visa_merchant_id","visa_transaction_key","codigo","metodo_costeo","leyenda_isr","saveEmpresa","UsuarioSedeListaComponent","UsuarioSrvc","lstUsuario","getUsuario","lstUsuarioPaged","ListaFormaPagoComandaOrigenComponent","fpagoSrvc","getFormaPagoComandaOrigenEv","loadFormasPagoComandaOrigen","getFormaPagoComandaOrigen","lstFormasPagoComandaOrigen","getFPComandaOrigen","lstFormasPagoComandaOrigenPaged","environment","production","JerarquiaService","ModuloService","PresentacionService","presentacion","TipoCompraVentaService","tipo_compra_venta","ClockComponent","idleStatus","time","setInterval","RptFechasComponent","fdel","format","dbDateFormat","fdelChange","fal","falChange","configuracion","isRequiredFDel","isRequiredFAl","onFDelChange","onFAlChange","LocalstorageService","indice","objeto","esObjeto","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","TokenAuthInterceptor","request","currentUser","token","clone","setHeaders","Authorization","handle","ListaClienteComponent","dialogAddCliente","clienteSrvc","showAddButton","getClienteEv","lstClientes","lstClientesPaged","validateKey","inp","String","fromCharCode","keyCode","test","preventDefault","loadInfoContribuyente","tmpnit","trim","toUpperCase","replace","getInfoContribuyente","tmpCliente","cliente","contribuyente","resNvoCliente","loadClientes","getCliente","agregarCliente","addClienteRef","esDialogo","FormTipoCompraVentaComponent","tipoCompraVentaSavedEv","tipoCompraVenta","abreviatura","resetTipoCompraVenta","SidebarDirective","click","ListaProveedorComponent","proveedorSrvc","getProveedorEv","loadProveedores","lstProveedores","getProveedor","lstProveedoresPaged","SedeService","ConfirmDialogModel","message","lblBtnConfirm","lblBtnDeny","config","ConfirmDialogComponent","resultado","onDismiss","onConfirm","ComandaService","urlAppRestaurante","idmesa","comanda","idcomanda","pedido","idcuenta","detalle","detalle_comanda","idMesa","pwd","deCuenta","aCuenta","idComanda","idMesaOrigen","idMesaDestino","datos","comandasOnLine","total","estatus","turno","mesa","area","area_padre","numero","posx","posy","tamanio","cuentas","cuenta","propina_monto","propina_porcentaje","cerrada","productos","detalle_cuenta","cuenta_cuenta","articulo","categoria_grupo","precio","bien_servicio","existencias","impresora","direccion_ip","ubicacion","bluetooth","cantidad","impreso","notas","numero_cuenta","CorporacionComponent","resetSede","sede_padre","certificador_fel","fel_establecimiento","telefono","correo","cuenta_contable","onTabChanged","tabChangeEvent","index","lstEmpresaComponent","lstSedeComponent","getSedes","setFormCorporacion","setFormEmpresa","refreshEmpresaList","refreshCorporacionList","lstCorporacionComponent","getCorporaciones","admin_llave","setFormSede","refreshSedeList","ListaVendorTerceroComponent","getVendorTerceroEv","loadVendorTercero","lstVendorTercero","getVendorTercero","lstVendorTerceroPaged","UsuarioService","usrToken","desbloquear","pindesbloqueo","getAppMenu","subModulos","objMenu","forEach","sm","push","link","hijos","opciones","contrasenia","headers","debaja","setToken","toPromise","resp","filtros","LoginComponent","checkIfLogged","usavk","estoyEnMovil","ua","navigator","userAgent","login","usrname","idusr","usatecladovirtual","restaurante","error","console","log","doLogin","UsuarioComponent","refreshUserList","FormClienteComponent","inicializoCliente","verTodos","clienteSavedEv","resetCliente","match","FORMATO_EMAIL","guardarCliente","txtNitCliente","focus","validatePhone","validateEmail","FormPagoComponent","fpagoSavedEv","noComandaSinFactura","resetFormaPago","RT_COMANDA_SIN_FACTURA","ConfirmDialogComboModel","producto","DialogComboComponent","articuloSvr","getArticulos","getArticuloCombo","multiple","combo","i","receta","element","seleccionado","list","cont","cantidad_maxima","seleccion","input","setCantidad","todosSeleccionados","multi","vanTodos","Loop1","respuesta","filter","p","idx","findIndex","prod","ClienteService","PresentacionComponent","setPresentacion","pres","medida","refreshPresentacionList","lstMedidaComponent","loadPresentaciones","usrLogin","usrLogInResponse","Usuario","esmesero","ArticuloService","articuloUrl","categoriaUrl","categoriaGrupoUrl","transformArticuloToNodo","grps","np","grp","j","art","categoria_grupo_grupo","categoria","lista","item","bodega","antecesores","idsede","articulos","arbol","idarticulo","articulo_detalle","TipoCompraVentaComponent","setTipoCompraVenta","tcv","refreshTipoCompraVentaList","lstTipoCompraVenta","loadTiposCompraVenta","RptBotonesComponent","htmlClick","pdfClick","excelClick","resetParamsClick","isHtmlDisabled","isPdfDisabled","isExcelDisabled","showHtml","showPdf","showExcel","onHtmlClick","onPdfClick","onExcelClick","onResetParamsClick","WindowComponent","componentFactoryResolver","applicationRef","injector","windowConfig","height","left","top","menubar","resizable","titlebar","toolbar","externalWindow","host","document","body","attach","portal","FormCertificadorFelComponent","_snackBar","certificadorSrvc","CertificadorSavedEv","certificadores","fraseIsr","frases_isr","fraseIva","frases_iva","displayedColumns","resetCertificador","registro","llave","firma_llave","firma_codigo","firma_alias","frase_retencion_isr","frase_retencion_iva","certificador_configuracion","loadCertificadores","xid","certificador","getCertificador","updateTableDataSource","setAcceso","cert","dataSource","showTimer","DialogCocinaComponent","VendorTerceroComponent","setVendorTercero","frmVendorTercero","getSedeVendorTercero","refreshVendorTerceroList","SharedModule","forRoot","ListaImpuestoEspecialComponent","impuestoEspcialSrvc","getImpuestoEspecialEv","loadImpuestosEspeciales","lstImpuestosEspeciales","getImpuestoEspecial","lstImpuestosEspecialesPaged","FormCorporacionComponent","corporacionSavedEv","resetCorporacion","saveCorporacion","ListaMedidaComponent","medidaSrvc","getMedidaEv","loadMedidas","lstMedidas","getMedida","lstMedidasPaged","ServiceErrorHandler","errorMessage","ErrorEvent","status","VendorTerceroService","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","ListaTipoUsuarioComponent","tipoUsuarioSrvc","getTipoUsuarioEv","loadTipoUsuario","lstUsuarioTipo","getTipoUsuario","lstUsuarioTipoPaged","VentasComponent","dsPorDia","lblsPorDia","dsPorCategoria","lblsPorCategoria","dsPorTurno","lblsPorTurno","dsPorMesero","lblsPorMesero","setGraficas","setGraficaPorDia","setGraficaPorCategoria","setGraficaPorTurno","setGraficaPorMesero","porDia","pd","dataPorDia","d","venta","indexOf","fecha","label","porCategoria","porTurno","porMesero","mesero","AppComponent","isLogged","usrAppMenu","goToLogin","checkIfUserIsLogged","usrData","sidenav","toggle","CargandoComponent","w","h","align","size","FormDocumentoTipoComponent","documentoTipoSrvc","documentoTipoSavedEv","documentoTipo","documento_tipo","resetDocumentoTipo","RazonAnulacionComponent","setRazonAnulacion","razon","refreshRazonList","lstRazonComponent","getRazones","razon_anulacion","anulado","ImpresoraComponent","setImpresora","refreshImpresoraList","lstImpresoraComponent","loadImpresoras","FilterPipe","items","searchText","searchProp","toLowerCase","it","includes","FormProveedorComponent","proveedorSavedEv","resetProveedor","razon_social","ListaPresentacionComponent","presentacionSrvc","getPresentacionEv","lstPresentacion","getPresentacion","lstPresentacionPaged","AnulacionService","FormSedeComponent","sedes","sedeSavedEv","guardarSede","saveSede","FormaPagoComandaOrigenDialogComponent","ListaPagoComponent","getFpagoEv","fp","listaFpago","getFpago","listaFpagoPaged","AppModule","provide","useClass","FormAccesoUsuarioComponent","accesoUsuarioSrvc","moduloSrvc","subModuloSrvc","opcionSrvc","AccesoUsuarioSavedEv","accesos","modulos","submodulos","idusuario","loadModulos","loadSubModulos","temp","x","sub_modulo","loadOpciones","idsubmodulo","opcion","cp","a","removerAcceso","ComandaOrigenService","UsuarioSedeComponent","frmUsuarioSede","FormUsuarioComponent","usrSavedEv","habilitaBloqueo","loadSedes","guardarUsuario","resetUsuario","maxWidth","cnf","CertificadorConfiguracionComponent","setCertificador","conf","refreshCertificadorList","lstCertificadorComponent","loadCertificador","vinculo_factura","vinculo_firma","metodo_factura","vinculo_anulacion","metodo_anulacion","vinculo_grafo","metodo_grafo","titlew","cantidadPedido","DialogPedidoComponent","pedidos","ListaImpresoraComponent","impresoraSrvc","getImpresoraEv","lstImpresoras","getImpresora","lstImpresorasPaged","DashboardComponent","dns","FormFormaPagoComandaOrigenComponent","comandOrigenSrvc","formaPagoComandaOrigenSavedEv","lstFormasPago","loadFormasPago","resetFormaPagoComandaOrigen","formaPagoComandaOrigen","forma_pago_comanda_origen","saveFormaPagoComandaOrigen","FormMedidaComponent","medidaSavedEv","resetMedida","FormPresentacionComponent","presentacionSavedEv","medidas","resetPresentacion","ListaRazonAnulacionComponent","srvAnulacion","getRazonAnulacionEv","listaRazonAnulacion","getRazonAnulacion","listaRazonAnulacionPaged","FormSedeVendorTerceroComponent","lstSedes","saveSedeVendorTercero","ListaAccesoUsuarioComponent","FormBodegaComponent","srvBodega","bodegaSavedEv","resetBodega","merma","ClienteComponent","setCliente","refreshClienteList","lstClienteComponent","ProveedorComponent","setProveedor","prov","refreshProveedorList","lstProveedorComponent","FormImpresoraComponent","impresoraSavedEv","resetImpresora","bluetooth_mac_address","modelo","MenuComponent","elementClicked","treeControl","node","hasChild","_","tieneHijos","opc","AdminModule","ConfigCheckPasswordModel","tipo","subtitulo","etiquetaAceptar","CheckPasswordComponent","comandaSrvc","terminar","validarPwdGerenteTurno","validaPwdGerenteTurno","esgerente","CertificadorService","BodegaComponent","setBodega","bode","frmBodegaComponent","refreshBodegaList","lstBodegaComponent","getBodegas","OpcionService","ElminarProductoModel","DialogElminarProductoComponent","ListaSedeComponent","getSedeEv","listaSede","getSede","listaSedePaged","DocumentoTipoComponent","setDocumentoTipo","refreshDocumentoTipoList","MedidaService","FormCertificadorConfiguracionComponent","certificadorSavedEv","saveConfig","TableroComponent","tableroService","estDias","estMin","estMax","estMedia","estTotal","cargando","datosGraficas","grupos","loadDataGraficas","subtract","pordia","porcategoria","porturno","pormesero","cmpGraficas","dataSourceSettings","pivotData","expandAll","columns","name","caption","values","rows","formatSettings","filters","valueSortSettings","headerText","headerDelimiter","sortOrder","button","isPrimary","appendTo","onclick","pivotGridObj","excelExport","getTableroDatos","engineModule","fieldList","min","max","media","ImpresoraService","ListaBodegaComponent","getBodegaEv","listaBodega","getBodega","listaBodegaPaged","TipoUsuarioService","usuario_tipo","usuario_tipo_categoria_grupo","ConfiguracionService","promise","Promise","reject","tmp","err","configName","configuraciones","valor","campo","NotificacionClienteService","FpagoService","forma","fpco","FormTipoUsuarioComponent","jerarquiaSrvc","articuloSrvc","usuarioTipoSavedEv","jerarquias","utcgrupos","cgrupos","filteredCgrupos","categorias","filteredCategorias","txtSubCat","loadJerarquia","resetTipoUsuario","usuarioTipo","jerarquia","resetTipoUsuarioCGrupo","loadUTCGrupos","idUsuarioTipo","getUsuarioTipoCGrupo","loadCategorias","getCategorias","loadCatGrp","idCategoria","getCategoriasGrupos","onSubmitUTCGrupo","utcgrupo","saveUsuarioTipoCGrupo","toggleDeBaja","db","filtrarCategorias","value","filterValue","displayCategoria","c","filtrarSubCategorias","displaySubCategoria","MedidaComponent","setMedida","refreshMedidaList","LOCALHOST","PROTOCOLO","location","protocol","ANFITRION","hostname","urlBase","GLOBAL","dbDateTimeFormat","dbDateTimeFormatMilli","dateFormat","dateFormatBT","dateTimeFormat","dateTimeFormatMilli","dateTimeFormatBT","dateTimeFormatBTMilli","urlWms","urlFacturacion","urlGhostKitchen","rtClientePedido","DEEP_LINK_ANDROID","RT_IMPRESORA_DEFECTO","RT_PANTALLA_TOMA_COMANDA","RT_FACTURA_PROPINA","RT_CONCEPTO_MAYOR_VENTA","RT_CUENTA_CONTABLE_IVA_VENTA","RT_INGRESO_NUMERO_PEDIDO","RT_TOTAL_NUMEROS_PEDIDO","RT_VENDE_NEGATIVO","RT_MODO_COMANDA","RT_MODO_FACTURA","RT_MESERO_POR_DEFECTO","RT_FIRMA_DTE_AUTOMATICA","RT_CAMPO_NIT","RT_ORDER_ITEMS_FULLFILLED","RT_CUENTA_CONTABLE_PROPINA","RT_CUENTA_CONTABLE_IVA_PROPINA","RT_IMPRIME_PROPINA_SUGERIDA","RT_USA_CODIGO_BARRAS","RT_ENVIA_COMO_BASE64","RT_IMPRIME_RECETA_EN_COMANDA","PaginarArray","array","pageNumber","slice","CheckObjectType","prototype","toString","call","substring","MultiFiltro","filtro","key","OrdenarArrayObjetos","objs","sort","b","localeCompare","ms","CertificadorFelComponent","frmCertificador","TipoUsuarioComponent","setTipoUsuario","frmTipoUsuario","refreshtipoUsuarioList","ListaCorporacionComponent","getCorporacionEv","getCorporacion","listaCorporacion","listaCorporacionPaged","ListaCertificadorConfiguracionComponent","CertificadorSrvc","getCertificadorEv","lstCertificador","lstCertificadorPaged","FormClienteDialogComponent","clienteAgregado","BodegaService","SolicitaPinInactividadComponent","pinDesbloqueo","verificaPin","tmpPinDesbloqueo","substr","ImpuestoEspecialComponent","setImpuestoEspecial","impesp","refreshImpuestoEspecialList","lstImpuestoEspecial","loadChildren","RestauranteModule","WmsModule","OrdenCompraModule","PosModule","CallcenterModule","GhostKitchenModule","AppRoutingModule","relativeLinkResolution","ListaTipoCompraVentaComponent","getTipoCompraVentaEv","lstTiposCompraVenta","getTipoCompraVenta","lstTiposCompraVentaPaged","FormRazonAnulacionComponent","anulacionSrvc","razonAnulacionSavedEv","resetForm","confRef","guardarRazon","TruncarPipe","limit","completeWords","ellipsis","lastIndexOf","DocumentoTipoService","UsuarioSedeFormComponent","saveSedes","sedeYaAsignada","idSede","asignadas","FormaPagoComandaOrigenComponent","setFormaPagoComandaOrigen","frmFormaPagoComandaOrigen","refreshFormaPagoComandOrigenList","lstFormaPagoComandaOrigenComponent","bootstrapModule","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { SharedModule } from '../shared.module';\n\n@Injectable({\n  providedIn: SharedModule\n})\nexport class DesktopNotificationService {\n\n  constructor() { }\n\n  requestPermission = async (): Promise<NotificationPermission> => {\n    if (!('Notification' in window)) {\n      return;\n    }\n    if (Notification.permission === 'default') {\n      const result = await Notification.requestPermission();\n      return result;\n    } else {\n      return Notification.permission;\n    }\n  }\n\n  havePermission = async (): Promise<boolean> => Notification.permission === 'granted';\n\n  createNotification = (title: string, delay: number = 5000, options?: NotificationOptions) => {\n    if (Notification.permission === 'granted') {\n      const notification = new Notification(title, options);\n      if (delay !== null && delay !== undefined && +delay > 0) {\n        setTimeout(notification.close.bind(notification), delay);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TableroService {\n  private srvcErrHndl: ServiceErrorHandler;  \n  private httpOptions: object = { responseType: 'json' };\n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    this.httpOptions['headers'] = new HttpHeaders({      \n      Accept: 'application/pdf'\n    });\n  }\n\n  getTableroDatos(params: object) {\n    this.httpOptions['params'] = params;\n    return this.http.get<any>(\n      `${GLOBAL.url}/tablero/get_datos`,\n      this.httpOptions\n    ).pipe(\n      retry(GLOBAL.reintentos),\n      catchError(this.srvcErrHndl.errorHandler)\n    );\n  }\n\n  getDataGraficas = (params: object) => {   \n    return this.http.get<any>(`${GLOBAL.url}/tablero/get_datos_graficas_ventas?${qs.stringify(params)}`    \n    ).pipe( retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-grafica-linea',\n  templateUrl: './grafica-linea.component.html',\n  styleUrls: ['./grafica-linea.component.css']\n})\nexport class GraficaLineaComponent implements OnInit {\n\n  @Input() lineChartData: ChartDataSets[] = [];\n  @Input() lineChartLabels: Label[] = [];\n  @Input() lineChartColors: Color[] = [];\n  @Input() titulo = '';\n\n  lineChartOptions: ChartOptions = {\n    responsive: true,\n    title: {\n      text: this.titulo,\n      display: true,\n      position: 'chartArea'\n    }\n  };\n  lineChartLegend = true;\n  lineChartPlugins = [];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<div class=\"chart-wrapper\">\n    <canvas baseChart \n        [datasets]=\"lineChartData\" \n        [labels]=\"lineChartLabels\" \n        [options]=\"lineChartOptions\"\n        [colors]=\"lineChartColors\" \n        [legend]=\"lineChartLegend\" \n        [chartType]=\"'line'\" \n        [plugins]=\"lineChartPlugins\">\n    </canvas>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\n// import { SubModulo } from '../interfaces/sub-modulo';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubModuloService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(idmodulo: number, fltr: any = {}): Observable<any[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<any[]>(\n      `${GLOBAL.urlCatalogos}/get_sub_modulo/${idmodulo}/?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthguardService as AuthGuard } from './services/authguard.service';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { UsuarioComponent } from './components/usuario/usuario/usuario.component';\r\nimport { ClienteComponent } from './components/cliente/cliente/cliente.component';\r\nimport { MedidaComponent } from './components/medida/medida/medida.component';\r\nimport { PresentacionComponent } from './components/presentacion/presentacion/presentacion.component';\r\nimport { ImpresoraComponent } from './components/impresora/impresora/impresora.component';\r\nimport { FpagoComponent } from './components/fpago/fpago/fpago.component';\r\nimport { TipoUsuarioComponent } from './components/tipo-usuario/tipo-usuario/tipo-usuario.component';\r\nimport { AccesoUsuarioComponent } from './components/acceso-usuario/acceso-usuario/acceso-usuario.component';\r\nimport { TableroComponent } from './components/tablero/tablero.component';\r\nimport { ProveedorComponent } from './components/proveedor/proveedor/proveedor.component';\r\nimport { ImpuestoEspecialComponent } from './components/impuestoEspecial/impuesto-especial/impuesto-especial.component';\r\nimport { BodegaComponent } from './components/bodega/bodega/bodega.component';\r\nimport { UsuarioSedeComponent } from './components/usuario-sede/usuario-sede/usuario-sede.component';\r\nimport { CertificadorConfiguracionComponent } from './components/certificador/configuracion/certificador-configuracion/certificador-configuracion.component';\r\nimport { CertificadorFelComponent } from './components/certificador/datos/certificador-fel/certificador-fel.component';\r\nimport { CorporacionComponent } from './components/corporacion/corporacion/corporacion.component';\r\nimport { RazonAnulacionComponent } from './components/razon-anulacion/razon-anulacion/razon-anulacion.component';\r\nimport { TipoCompraVentaComponent } from './components/tipoCompraVenta/tipo-compra-venta/tipo-compra-venta.component';\r\nimport { DocumentoTipoComponent } from './components/documento-tipo/documento-tipo/documento-tipo.component';\r\nimport { FormaPagoComandaOrigenComponent } from './components/formaPagoComandaOrigen/forma-pago-comanda-origen/forma-pago-comanda-origen.component';\r\nimport { VendorTerceroComponent } from './components/vendor-tercero/vendor-tercero/vendor-tercero.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'usuario', component: UsuarioComponent, canActivate: [AuthGuard] },\r\n  { path: 'cliente', component: ClienteComponent, canActivate: [AuthGuard] },\r\n  { path: 'medida', component: MedidaComponent, canActivate: [AuthGuard] },\r\n  { path: 'presentacion', component: PresentacionComponent, canActivate: [AuthGuard] },\r\n  { path: 'impresora', component: ImpresoraComponent, canActivate: [AuthGuard] },\r\n  { path: 'formapago', component: FpagoComponent, canActivate: [AuthGuard] },\r\n  { path: 'tipo_usuario', component: TipoUsuarioComponent, canActivate: [AuthGuard] },\r\n  { path: 'acceso', component: AccesoUsuarioComponent, canActivate: [AuthGuard] },\r\n  { path: 'tablero', component: TableroComponent, canActivate: [AuthGuard] },\r\n  { path: 'proveedor', component: ProveedorComponent, canActivate: [AuthGuard] },\r\n  { path: 'impuesto_especial', component: ImpuestoEspecialComponent, canActivate: [AuthGuard] },\r\n  { path: 'bodega', component: BodegaComponent, canActivate: [AuthGuard] },\r\n  { path: 'usuario_sede', component: UsuarioSedeComponent, canActivate: [AuthGuard] },\r\n  { path: 'certificador_admin', component: CertificadorConfiguracionComponent, canActivate: [AuthGuard] },\r\n  { path: 'certificador_fel', component: CertificadorFelComponent, canActivate: [AuthGuard] },\r\n  { path: 'corporacion', component: CorporacionComponent, canActivate: [AuthGuard] },\r\n  { path: 'razon_anulacion', component: RazonAnulacionComponent, canActivate: [AuthGuard] },\r\n  { path: 'tipo_compra_venta', component: TipoCompraVentaComponent, canActivate: [AuthGuard] },\r\n  { path: 'documento_tipo', component: DocumentoTipoComponent, canActivate: [AuthGuard] },\r\n  { path: 'fp_co', component: FormaPagoComandaOrigenComponent, canActivate: [AuthGuard] },\r\n  { path: 'vdt', component: VendorTerceroComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: '/dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { UsuarioService } from './usuario.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthguardService implements CanActivate {\n\n  constructor(private usrSrvc: UsuarioService, private router: Router) { }\n\n  async canActivate(): Promise<boolean> {\n    const valido = await this.usrSrvc.checkUserToken();\n    if (valido) {\n      return true;\n    } else {\n      this.router.navigate(['/admin/login']);\n      return false;\n    }\n  }\n}\n","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { ImpuestoEspecial } from '../interfaces/impuesto-especial';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImpuestoEspecialService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'impuesto_especial';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<ImpuestoEspecial[]> {\n    return this.http.get<ImpuestoEspecial[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: ImpuestoEspecial): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.impuesto_especial ? ('/' + entidad.impuesto_especial) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppMenuService {\n\n  private dataObs$ = new Subject();\n  private opciones$ = new Subject();\n\n  constructor() { }\n\n  getData = () => this.dataObs$;\n\n  updData = (data: any) => this.dataObs$.next(data);\n\n  getOpciones = () => this.opciones$;\n\n  updOpciones = (opcs: any) => this.opciones$.next(opcs);\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Acceso, UsuarioSede } from '../interfaces/acceso';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccesoUsuarioService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'acceso';\n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<Acceso[]> {   \n    return this.http.get<Acceso[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Acceso): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.acceso ? ('/' + entidad.acceso) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getSedes(fltr: any = {}): Observable<UsuarioSede[]> {   \n    return this.http.get<UsuarioSede[]>(\n      `${GLOBAL.urlMantenimientos}/sede/get_sede_usuario?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveSedes(entidad: UsuarioSede): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/sede/set_usuario_sede${!!entidad.usuario_sede ? ('/' + entidad.usuario_sede) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { DocumentoTipo } from '../../../interfaces/documento-tipo';\nimport { DocumentoTipoService } from '../../../services/documento-tipo.service';\n\n\n@Component({\n  selector: 'app-lista-documento-tipo',\n  templateUrl: './lista-documento-tipo.component.html',\n  styleUrls: ['./lista-documento-tipo.component.css']\n})\nexport class ListaDocumentoTipoComponent implements OnInit {\n\n  public lstDocumentoTipo: DocumentoTipo[];\n  public lstDocumentoTipoPaged: DocumentoTipo[];\n  @Output() getDocumentoTipoEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private tipoCompraVentaSrvc: DocumentoTipoService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit(): void {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadDocumentosTipo();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstDocumentoTipo, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstDocumentoTipoPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstDocumentoTipo.length;\n      this.lstDocumentoTipoPaged = PaginarArray(this.lstDocumentoTipo, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadDocumentosTipo = () => {\n    this.tipoCompraVentaSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstDocumentoTipo = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getDocumentoTipo = (obj: DocumentoTipo) => {\n    this.getDocumentoTipoEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstDocumentoTipoPaged\" (click)=\"getDocumentoTipo(element)\">\n                <mat-icon mat-list-icon>receipt</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { LocalstorageService } from '../../../services/localstorage.service';\r\n\r\nimport { VendorTercero } from '../../../interfaces/vendor-tercero';\r\nimport { ComandaOrigen } from '../../../interfaces/comanda-origen';\r\nimport { VendorTerceroService } from '../../../services/vendor-tercero.service';\r\nimport { ComandaOrigenService } from '../../../services/comanda-origen.service';\r\n\r\nimport { FormSedeVendorTerceroComponent } from '../form-sede-vendor-tercero/form-sede-vendor-tercero.component';\r\n\r\n@Component({\r\n  selector: 'app-form-vendor-tercero',\r\n  templateUrl: './form-vendor-tercero.component.html',\r\n  styleUrls: ['./form-vendor-tercero.component.css']\r\n})\r\nexport class FormVendorTerceroComponent implements OnInit {\r\n\r\n  @Input() vendorTercero: VendorTercero;\r\n  @Output() vendorTerceroSavedEv = new EventEmitter();\r\n  @ViewChild('frmSedeVendorTercero') frmSedeVendorTercero: FormSedeVendorTerceroComponent;\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n  public lstComandaOrigen: ComandaOrigen[] = [];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private vendorTerceroSrvc: VendorTerceroService,\r\n    private comandaOrigenSrvc: ComandaOrigenService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.loadComandaOrigen();\r\n  }\r\n\r\n  loadComandaOrigen = () => {\r\n    this.comandaOrigenSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.lstComandaOrigen = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetVendorTercero() {\r\n    this.vendorTercero = { vendor_tercero: null, nombre: null, comanda_origen: null };\r\n    this.frmSedeVendorTercero.resetSedeVendorTercero();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.vendorTerceroSrvc.save(this.vendorTercero).subscribe((res) => {\r\n      if (res.exito) {\r\n        this.resetVendorTercero();\r\n        this.vendorTerceroSavedEv.emit();\r\n        this.snackBar.open(res.mensaje, 'Vendor', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Vendor', { duration: 7000 });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-tab-group>\r\n    <mat-tab label=\"Vendor\">\r\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n            <mat-card-title>\r\n                <h4>Vendor</h4>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form #frmVendorTercero=\"ngForm\" (ngSubmit)=\"frmVendorTercero.form.valid && onSubmit()\" novalidate>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"vendorTercero.nombre\" minlength=\"1\" maxlength=\"75\" required>\r\n                        <input matInput *ngIf=\"esMovil\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"vendorTercero.nombre\" minlength=\"1\" maxlength=\"75\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <mat-label>Origen</mat-label>\r\n                        <mat-select name=\"comanda_origen\" [(ngModel)]=\"vendorTercero.comanda_origen\" required>\r\n                            <mat-option *ngFor=\"let comorigen of lstComandaOrigen\" [value]=\"comorigen.comanda_origen\">\r\n                                {{comorigen.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div align=\"end\">\r\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmVendorTercero.form.valid\">\r\n                            Guardar\r\n                        </button>\r\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetVendorTercero()\" *ngIf=\"vendorTercero.vendor_tercero\">\r\n                            Nuevo\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>        \r\n    </mat-tab>\r\n    <mat-tab label=\"Atiende\">\r\n        <app-form-sede-vendor-tercero #frmSedeVendorTercero></app-form-sede-vendor-tercero>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\nimport { ListaAccesoUsuarioComponent } from '../lista-acceso-usuario/lista-acceso-usuario.component';\nimport { FormAccesoUsuarioComponent } from '../form-acceso-usuario/form-acceso-usuario.component';\nimport { Usuario } from '../../../interfaces/usuario';\n\n@Component({\n  selector: 'app-acceso-usuario',\n  templateUrl: './acceso-usuario.component.html',\n  styleUrls: ['./acceso-usuario.component.css']\n})\nexport class AccesoUsuarioComponent implements OnInit {\n\n\tpublic usuario: Usuario;\n\n\t@ViewChild('lstUsuario') lstUsuarioComponent: ListaAccesoUsuarioComponent;\n\t@ViewChild('frmAccesoUsuario') frmAccesoUsuario: FormAccesoUsuarioComponent;\n\n\tconstructor(\n\t\tprivate ls: LocalstorageService\n\t) {\n\t\tthis.usuario = {\n\t\t\tusuario: null, nombres: null, apellidos: null \n\t\t};\n\t}\n\n\tngOnInit() {\n\t}\n\n\tsetUsuario = (usr: Usuario) => {\n\t\tthis.usuario = usr;\n\t\tthis.frmAccesoUsuario.loadAccesos(+this.usuario.usuario);\n\t\tthis.frmAccesoUsuario.resetAcceso();\n\t}\n\trefreshUsuarioList = () => this.lstUsuarioComponent.loadUsuario();\n}\n","<div class=\"row\">\n\t<div class=\"col m5 s12\">\n\t\t<app-lista-acceso-usuario #lstUsuario (getUsuarioEv)=\"setUsuario($event)\"></app-lista-acceso-usuario>\n\t</div>\n\t<div class=\"col m7 s12\">\n\t\t<app-form-acceso-usuario #frmAccesoUsuario [usuario]=\"usuario\" (UsuarioSavedEv)=\"refreshUsuarioList()\"></app-form-acceso-usuario>\n\t</div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Corporacion, Empresa } from '../../../interfaces/sede';\nimport { SedeService } from '../../../services/sede.service';\n\n@Component({\n  selector: 'app-lista-empresa',\n  templateUrl: './lista-empresa.component.html',\n  styleUrls: ['./lista-empresa.component.css']\n})\nexport class ListaEmpresaComponent implements OnInit {\n\n  public listaEmpresa: Empresa[];\n  public listaEmpresaPaged: Empresa[];\n  @Output() getEmpresaEv = new EventEmitter();\n  @Input() corporacion: Corporacion;\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    private sedeSrv: SedeService\n  ) { }\n\n  ngOnInit() {\n    this.getEmpresas();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaEmpresa, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaEmpresaPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaEmpresa.length;\n      this.listaEmpresaPaged = PaginarArray(this.listaEmpresa, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina && this.paginador) {\n      this.paginador.firstPage();\n    }\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n\n  getEmpresas = () => {\n    this.listaEmpresa = [];\n    this.applyFilter();\n    \n    this.sedeSrv.getEmpresa({ corporacion: this.corporacion.corporacion }).subscribe((lst: Empresa[]) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.listaEmpresa = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getEmpresa = (obj: Empresa) => {\n    this.getEmpresaEv.emit(obj);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaEmpresaPaged\" (click)=\"getEmpresa(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { ImpuestoEspecial } from '../../../interfaces/impuesto-especial';\nimport { ImpuestoEspecialService } from '../../../services/impuesto-especial.service';\n\n@Component({\n  selector: 'app-form-impuesto-especial',\n  templateUrl: './form-impuesto-especial.component.html',\n  styleUrls: ['./form-impuesto-especial.component.css']\n})\nexport class FormImpuestoEspecialComponent implements OnInit {\n\n  @Input() impuestoEspecial: ImpuestoEspecial;\n  @Output() impuestoEspecialSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private impuestoEspecialSrvc: ImpuestoEspecialService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetImpuestoEspecial() {\n    this.impuestoEspecial = { impuesto_especial: null, descripcion: null, porcentaje: null };\n  }\n\n  onSubmit() {\n    this.impuestoEspecialSrvc.save(this.impuestoEspecial).subscribe((res) => {\n      if (res) {\n        this.resetImpuestoEspecial();\n        this.impuestoEspecialSavedEv.emit();\n        this.snackBar.open('Grabado con éxito.', 'Impuesto especial', { duration: 5000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Impuesto Especial</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmImpuestoEspecial=\"ngForm\" (ngSubmit)=\"frmImpuestoEspecial.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"impuestoEspecial.descripcion\" minlength=\"1\" maxlength=\"50\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"impuestoEspecial.descripcion\" minlength=\"1\" maxlength=\"50\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" placeholder=\"Porcentaje\" name=\"portcentaje\" [(ngModel)]=\"impuestoEspecial.porcentaje\" required>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmImpuestoEspecial.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetImpuestoEspecial()\" *ngIf=\"impuestoEspecial.impuesto_especial\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\n@Component({\n  selector: 'app-acerca-de',\n  templateUrl: './acerca-de.component.html',\n  styleUrls: ['./acerca-de.component.css']\n})\nexport class AcercaDeComponent implements OnInit {\n\n  public sedeUuid: string = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<AcercaDeComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.sedeUuid = this.ls.get(GLOBAL.usrTokenVar).sede_uuid || 'No se ha loggeado...';\n  }\n\n  cerrar = () => this.dialogRef.close();\n\n}\n","<h1 mat-dialog-title>\n    <img mat-card-image src=\"/assets/img/logo.svg\" alt=\"Rest-Touch Pro\">\n</h1>\n<div mat-dialog-content align=\"center\">\n    <p>{{sedeUuid}}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"cerrar()\">\n        <span>Cerrar</span>\n    </button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Proveedor } from '../interfaces/proveedor';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedorService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<Proveedor[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Proveedor[]>(\n      `${GLOBAL.urlCatalogos}/get_proveedor?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Proveedor): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/proveedor/guardar${!!entidad.proveedor ? ('/' + entidad.proveedor) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaPagoComponent } from '../lista-pago/lista-pago.component';\nimport { FormaPago } from '../../../interfaces/forma-pago';\n\n@Component({\n  selector: 'app-fpago',\n  templateUrl: './fpago.component.html',\n  styleUrls: ['./fpago.component.css']\n})\nexport class FpagoComponent implements OnInit {\n\n  public fpago: FormaPago;\n  @ViewChild('lstFPago') lstFpagoComponent: ListaPagoComponent;\n\n   constructor() {\n    this.fpago = {\n      forma_pago: null,\n      descripcion: null,\n      descuento: 0,\n      comision_porcentaje: 0.00,\n      retencion_porcentaje: 0.00,\n      pedirdocumento: 0,\n      pedirautorizacion: 0,\n      adjuntararchivo: 0,\n      sinfactura: 0,\n      activo: 1\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setFormPago = (cli: FormaPago) => this.fpago = cli;\n  refreshFpagoList = () => this.lstFpagoComponent.getFormasPago();\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-pago #lstFPago (getFpagoEv)=\"setFormPago($event)\"></app-lista-pago>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-pago #frmFpago [fpago]=\"fpago\" (fpagoSavedEv)=\"refreshFpagoList()\"></app-form-pago>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Usuario } from '../../../models/usuario';\nimport { UsuarioService } from '../../../services/usuario.service';\n\n@Component({\n  selector: 'app-lista-usuario',\n  templateUrl: './lista-usuario.component.html',\n  styleUrls: ['./lista-usuario.component.css']\n})\nexport class ListaUsuarioComponent implements OnInit {\n\n  public lstUsuarios: Usuario[];\n  public lstUsuariosPaged: Usuario[];\n  @Output() getUsuarioEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private usuarioSrvc: UsuarioService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadUsuarios();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstUsuarios, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstUsuariosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);      \n    } else {\n      this.length = this.lstUsuarios.length;\n      this.lstUsuariosPaged = PaginarArray(this.lstUsuarios, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  loadUsuarios() {\n    this.usuarioSrvc.getAll(3).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstUsuarios = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getUsuario(id: number) {\n    this.usuarioSrvc.get({ usuario: id }).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.getUsuarioEv.emit(lst[0]);\n        }\n      }\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstUsuariosPaged\" (click)=\"getUsuario(element.usuario)\">\n                <mat-icon mat-list-icon>face</mat-icon>\n                <h5 mat-line>{{element.nombres}}</h5>\n                <p mat-line>{{element.apellidos}}</p>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { AppMenuService } from '../../services/app-menu.service';\nimport { ConfiguracionService } from '../../services/configuracion.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport { Keepalive } from '@ng-idle/keepalive';\n\nimport { SolicitaPinInactividadComponent } from '../solicita-pin-inactividad/solicita-pin-inactividad.component';\nimport { AcercaDeComponent } from '../acerca-de/acerca-de.component';\nimport { NotificacionesClienteComponent } from '../notificaciones-cliente/notificaciones-cliente.component';\n\nimport { NotificacionClienteService } from '../../services/notificacion-cliente.service';\nimport { NotificacionCliente } from '../../interfaces/notificacion-cliente';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  public usrInfo: any = {};\n  public appMenu: any[];\n  public idleState = false;\n  public timedOut = false;\n  public lastPing?: Date = null;\n  public notificaciones: NotificacionCliente[] = [];\n\n  constructor(\n    private router: Router,\n    private ls: LocalstorageService,\n    private snackBar: MatSnackBar,\n    private usrSrvc: UsuarioService,\n    private appMenuSrvc: AppMenuService,\n    private idle: Idle,\n    private keepalive: Keepalive,\n    private configSrvc: ConfiguracionService,\n    public dialog: MatDialog,\n    public notificacionClienteSrvc: NotificacionClienteService\n  ) {\n    this.usrInfo = this.ls.get(GLOBAL.usrTokenVar);\n    this.configSrvc.load().then(() => this.setIdleConfigs());\n  }\n\n  ngOnInit() {\n    this.loadNotificacionesCliente();\n    this.appMenuSrvc.getData().subscribe((res: any) => {\n      if (res) {\n        this.appMenu = res;\n        const lastModule: string = this.ls.get(GLOBAL.usrLastModuleVar);\n        if (lastModule) {\n          this.handleClick(lastModule);\n        }\n      }\n    });\n  }\n\n  loadNotificacionesCliente = () => {\n    this.notificacionClienteSrvc.get().subscribe((res: NotificacionCliente[]) => {\n      if (res && res.length > 0) {\n        this.notificaciones = res;\n        this.snackBar.openFromComponent(NotificacionesClienteComponent, {\n          data: this.notificaciones,\n          verticalPosition: 'top',\n          horizontalPosition: 'center'\n        });\n      }\n    });\n  }\n\n  setIdleConfigs = () => {\n    if (this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_HABILITA_BLOQUEO_INACTIVIDAD)) {\n      const tiempo = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_SEGUNDOS_INACTIVIDAD);\n      this.idle.setIdle(tiempo);\n      this.idle.setTimeout(tiempo);\n      this.idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n      this.idle.onIdleEnd.subscribe(() => this.idleState = false);\n\n      this.idle.onTimeout.subscribe(() => {\n        this.idleState = true;\n        this.timedOut = true;\n\n        const solicitaPinRef = this.dialog.open(SolicitaPinInactividadComponent, {\n          width: '25%',\n          hasBackdrop: true,\n          disableClose: true,\n          autoFocus: true,\n          data: null\n        });\n\n        solicitaPinRef.afterClosed().subscribe(() => this.reset());\n      });\n\n      this.idle.onIdleStart.subscribe(() => this.idleState = true);\n\n      this.idle.onTimeoutWarning.subscribe((conteo: number) => this.idleState = true);\n\n      this.keepalive.interval(15);\n\n      this.keepalive.onPing.subscribe(() => this.lastPing = new Date());\n\n      this.reset();\n    }\n  }\n\n  reset = () => {\n    this.idle.watch();\n    this.idleState = false;\n    this.timedOut = false;\n  }\n\n  handleClick = (modulo: string = '') => {\n    this.ls.set(GLOBAL.usrLastModuleVar, modulo);\n    const objModulo: any = this.appMenu.find(m => m.nombre === modulo);\n    // console.log(objModulo);\n    if (objModulo) {\n      const submodulo: any = this.usrSrvc.transformSubModule(objModulo.submodulo);\n      // console.log(submodulo);\n      this.appMenuSrvc.updOpciones(submodulo);\n      this.snackBar.open(`Cambio al módulo ${modulo}`, 'Módulo', { duration: 5000 });\n    }\n  }\n\n  LogOut() {\n    this.ls.clear('ng2Idle.main.expiry');\n    this.ls.clear('ng2Idle.main.idling');\n    this.ls.clear(GLOBAL.usrTokenVar);\n    this.ls.clear(GLOBAL.usrUnlockVar);\n    this.ls.clear(GLOBAL.usrLastModuleVar);\n    this.idle.stop();\n    this.router.navigate(['/admin/login']);\n  }\n\n  acercaDe = () => {\n    const aboutRef = this.dialog.open(AcercaDeComponent, {\n      width: '50%',\n      hasBackdrop: true,\n      autoFocus: true,\n      data: null\n    });\n\n    // aboutRef.afterClosed().subscribe(() => { });\n  }\n\n}\n","<mat-toolbar color=\"primary-lighter\">\n    <mat-toolbar-row>\n        <img src=\"/assets/img/minilogo.svg\" width=\"30\" height=\"30\" alt=\"Rest-Touch Pro\" style=\"cursor: pointer;\" (click)=\"acercaDe()\">\n        <span class=\"spacer\"></span>\n        <app-clock [idleStatus]=\"idleState\"></app-clock>\n        <span class=\"spacer\"></span>\n        <button mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"menu\">\n            {{usrInfo.usuario}}&nbsp;<mat-icon>apps</mat-icon>\n        </button>\n        <button mat-icon-button type=\"button\" (click)=\"LogOut()\">\n            <mat-icon>power_settings_new</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <div align=\"center\">\n                <button mat-raised-button color=\"accent\" class=\"btnApp btnAccion\" *ngFor=\"let modulo of appMenu\" (click)=\"handleClick(modulo.nombre)\">\n                    <span>{{modulo.nombre}}</span>\n                </button>\n            </div>\n        </mat-menu>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { SedeVendorTercero } from '../../../interfaces/vendor-tercero';\r\n\r\ninterface IDataSedeVendorTercero {\r\n  vendor_tercero: number;\r\n  nombre_vendor_tercero: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-form-sede-vendor-tercero-dialog',\r\n  templateUrl: './form-sede-vendor-tercero-dialog.component.html',\r\n  styleUrls: ['./form-sede-vendor-tercero-dialog.component.css']\r\n})\r\nexport class FormSedeVendorTerceroDialogComponent implements OnInit {\r\n\r\n  public sedeVendorTercero: SedeVendorTercero;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormSedeVendorTerceroDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IDataSedeVendorTercero\r\n  ) {\r\n    this.sedeVendorTercero = {\r\n      sede_vendor_tercero: null, sede: null, vendor_tercero: data.vendor_tercero\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  cancelar = () => this.dialogRef.close();\r\n\r\n}\r\n","<h1 mat-dialog-title>\r\n    {{data.nombre_vendor_tercero}}\r\n</h1>\r\n<div mat-dialog-content class=\"contenido\">\r\n    <app-form-sede-vendor-tercero [sedeVendorTercero]=\"sedeVendorTercero\"></app-form-sede-vendor-tercero>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button (click)=\"cancelar()\" color=\"accent\">\r\n        Cerrar\r\n    </button>\r\n</div>","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\n\nimport { NotificacionCliente } from '../../interfaces/notificacion-cliente';\n\n@Component({\n  selector: 'app-notificaciones-cliente',\n  templateUrl: './notificaciones-cliente.component.html',\n  styleUrls: ['./notificaciones-cliente.component.css']\n})\nexport class NotificacionesClienteComponent implements OnInit {\n\n  constructor(\n    private snackBarRef: MatSnackBarRef<NotificacionesClienteComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: NotificacionCliente[]\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  cerrar = () => this.snackBarRef.dismiss();\n\n}\n","<div class=\"noticia\">\n    <p *ngFor=\"let noti of data; index as i\">{{i + 1}}) {{noti.notificacion}}</p>\n</div>\n<div align=\"right\">\n    <button mat-raised-button color=\"accent\" (click)=\"cerrar()\">Cerrar</button>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Corporacion, Empresa } from '../../../interfaces/sede';\r\nimport { SedeService } from '../../../services/sede.service';\r\n\r\n@Component({\r\n  selector: 'app-form-empresa',\r\n  templateUrl: './form-empresa.component.html',\r\n  styleUrls: ['./form-empresa.component.css']\r\n})\r\nexport class FormEmpresaComponent implements OnInit {\r\n\r\n  @Input() corporacion: Corporacion;\r\n  @Input() empresa: Empresa;\r\n  @Output() empresaSavedEv = new EventEmitter();\r\n  public metodoCosteo: any[] = [\r\n    {\r\n      \"id\": 1,\r\n      \"descripcion\": \"Ultima compra\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"descripcion\": \"Promedio\"\r\n    }\r\n  ];\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sedeSrvc: SedeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetEmpresa = () => this.empresa = {\r\n    empresa: null,\r\n    corporacion: null,\r\n    nombre: null,\r\n    numero_acceso: null,\r\n    afiliacion_iva: null,\r\n    codigo_establecimiento: null,\r\n    correo_emisor: null,\r\n    nit: null,\r\n    nombre_comercial: null,\r\n    direccion: null,\r\n    codigo_postal: null,\r\n    municipio: null,\r\n    departamento: null,\r\n    pais_iso_dos: null,\r\n    agente_retenedor: 0,\r\n    porcentaje_iva: 0.00,\r\n    visa_merchant_id: null,\r\n    visa_transaction_key: null,\r\n    codigo: null,\r\n    metodo_costeo: 1,\r\n    leyenda_isr: null\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.empresa.corporacion = this.corporacion.corporacion;    \r\n\r\n    this.sedeSrvc.saveEmpresa(this.empresa).subscribe(res => {\r\n      if (res.exito) {\r\n        this.empresaSavedEv.emit();\r\n        this.resetEmpresa();\r\n        this.snackBar.open('Empresa guardada exitosamente.', 'Empresa', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Empresa', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Empresa {{!!empresa.empresa ? empresa.nombre : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmEmpresa=\"ngForm\" (ngSubmit)=\"frmEmpresa.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"empresa.nombre\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Número de acceso\" name=\"acceso\" [(ngModel)]=\"empresa.numero_acceso\" minlength=\"1\" maxlength=\"25\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Afiliación I.V.A.\" name=\"iva\" [(ngModel)]=\"empresa.afiliacion_iva\" minlength=\"1\" maxlength=\"5\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Código de establecimiento\" name=\"codigo_establecimiento\" [(ngModel)]=\"empresa.codigo_establecimiento\" minlength=\"1\" maxlength=\"25\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Correo del emisor\" name=\"correo\" [(ngModel)]=\"empresa.correo_emisor\" minlength=\"1\" maxlength=\"50\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"empresa.nit\" minlength=\"1\" maxlength=\"25\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Nombre comercial\" name=\"nombre_comercial\" [(ngModel)]=\"empresa.nombre_comercial\" minlength=\"1\" maxlength=\"150\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Dirección\" name=\"direccion\" [(ngModel)]=\"empresa.direccion\" minlength=\"1\" maxlength=\"150\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Código postal\" name=\"codigo_postal\" [(ngModel)]=\"empresa.codigo_postal\" minlength=\"1\" maxlength=\"25\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Código ISO de país\" name=\"pais_iso_dos\" [(ngModel)]=\"empresa.pais_iso_dos\" minlength=\"1\" maxlength=\"2\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Departamento\" name=\"departamento\" [(ngModel)]=\"empresa.departamento\" minlength=\"1\" maxlength=\"100\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Municipio\" name=\"municipio\" [(ngModel)]=\"empresa.municipio\" minlength=\"1\" maxlength=\"100\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" step=\"0.01\" placeholder=\"Porcentaje I.V.A.\" name=\"porcentaje_iva\" [(ngModel)]=\"empresa.porcentaje_iva\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Visa merchant ID\" name=\"visa_id\" [(ngModel)]=\"empresa.visa_merchant_id\" minlength=\"1\" maxlength=\"25\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Visa transaction key\" name=\"visa_key\" [(ngModel)]=\"empresa.visa_transaction_key\" minlength=\"1\" maxlength=\"150\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"empresa.codigo\" minlength=\"1\" maxlength=\"45\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Método de costeo</mat-label>\n\t\t\t\t<mat-select name=\"metodo_costeo\" [(ngModel)]=\"+empresa.metodo_costeo\" required>\n\t\t\t\t\t<mat-option *ngFor=\"let metodo of metodoCosteo\" [value]=\"metodo.id\">\n\t\t\t\t\t\t{{ metodo.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Leyenda I.S.R.\" name=\"leyenda_isr\" [(ngModel)]=\"empresa.leyenda_isr\" minlength=\"1\" maxlength=\"255\">\n            </mat-form-field>            \n            <mat-checkbox name=\"agente_retenedor\" class=\"fullWidth\" [(ngModel)]=\"+empresa.agente_retenedor\">Agente Retenedor</mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmEmpresa.form.valid || !corporacion.corporacion\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetEmpresa()\" *ngIf=\"empresa.empresa\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Usuario } from '../../../interfaces/usuario';\nimport { UsuarioService } from '../../../services/usuario.service';\n\n@Component({\n  selector: 'app-usuario-sede-lista',\n  templateUrl: './usuario-sede-lista.component.html',\n  styleUrls: ['./usuario-sede-lista.component.css']\n})\nexport class UsuarioSedeListaComponent implements OnInit {\n\n  public lstUsuario: Usuario[];\n\tpublic lstUsuarioPaged: Usuario[];\n\t@Output() getUsuarioEv = new EventEmitter();\n\t@ViewChild('paginador') paginador: MatPaginator;\n\n\tpublic length = 0;\n\tpublic pageSize = 5;\n\tpublic pageSizeOptions: number[] = [5, 10, 15];\n\tpublic pageIndex = 0;\n\tpublic pageEvent: PageEvent;\n\tpublic txtFiltro = '';\n\n\tconstructor(private UsuarioSrvc: UsuarioService) { }\n\n  ngOnInit() {\n\t  this.loadUsuario();\n  }\n\n  applyFilter(cambioPagina = false) {\n\t\tif (this.txtFiltro.length > 0) {\n\t\t\tconst tmpList = MultiFiltro(this.lstUsuario, this.txtFiltro);\n\t\t\tthis.length = tmpList.length;\n\t\t\tthis.lstUsuarioPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n\t\t} else {\n\t\t\tthis.length = this.lstUsuario.length;\n\t\t\tthis.lstUsuarioPaged = PaginarArray(this.lstUsuario, this.pageSize, this.pageIndex + 1);\n\t\t}\n\t\tif (!cambioPagina) {\n\t\t\tthis.paginador.firstPage();\n\t\t}\n\t}\n\n\tloadUsuario = () => {\n\t\tthis.UsuarioSrvc.getAll().subscribe(lst => {\n\t\t\tif (lst) {\n\t\t\t\tif (lst.length > 0) {\n\t\t\t\t\tthis.lstUsuario = lst;\n\t\t\t\t\tthis.applyFilter();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetUsuario = (obj: Usuario) => {\n\t\tthis.getUsuarioEv.emit(obj);\n\t}\n\n\tpageChange = (e: PageEvent) => {\n\t\tthis.pageSize = e.pageSize;\n\t\tthis.pageIndex = e.pageIndex;\n\t\tthis.applyFilter(true);\n\t}\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstUsuarioPaged\" (click)=\"getUsuario(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombres}}</h5>\n                <span mat-line>{{element.apellidos}}</span>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\r\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\r\nimport { LocalstorageService } from '../../../services/localstorage.service';\r\n\r\nimport { FormaPagoComandaOrigenResponse } from '../../../interfaces/forma-pago';\r\nimport { FpagoService } from '../../../services/fpago.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-forma-pago-comanda-origen',\r\n  templateUrl: './lista-forma-pago-comanda-origen.component.html',\r\n  styleUrls: ['./lista-forma-pago-comanda-origen.component.css']\r\n})\r\nexport class ListaFormaPagoComandaOrigenComponent implements OnInit {\r\n\r\n  @Input() comanda_origen: number = null;\r\n  @Output() getFormaPagoComandaOrigenEv = new EventEmitter();\r\n  @ViewChild('paginador') paginador: MatPaginator;\r\n  public lstFormasPagoComandaOrigen: FormaPagoComandaOrigenResponse[];\r\n  public lstFormasPagoComandaOrigenPaged: FormaPagoComandaOrigenResponse[];\r\n\r\n  public length = 0;\r\n  public pageSize = 5;\r\n  public pageSizeOptions: number[] = [5, 10, 15];\r\n  public pageIndex = 0;\r\n  public pageEvent: PageEvent;\r\n  public txtFiltro = '';\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n\r\n  constructor(\r\n    private fpagoSrvc: FpagoService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.loadFormasPagoComandaOrigen();\r\n  }\r\n\r\n  applyFilter(cambioPagina = false) {\r\n    if (this.txtFiltro.length > 0) {\r\n      const tmpList = MultiFiltro(this.lstFormasPagoComandaOrigen, this.txtFiltro);\r\n      this.length = tmpList.length;\r\n      this.lstFormasPagoComandaOrigenPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\r\n    } else {\r\n      this.length = this.lstFormasPagoComandaOrigen.length;\r\n      this.lstFormasPagoComandaOrigenPaged = PaginarArray(this.lstFormasPagoComandaOrigen, this.pageSize, this.pageIndex + 1);\r\n    }\r\n    if (!cambioPagina) {\r\n\t\t\tthis.paginador.firstPage();\r\n\t\t}\r\n  }\r\n\r\n  loadFormasPagoComandaOrigen = () => {\r\n    const fltr = {\r\n      comanda_origen: null\r\n    };\r\n\r\n    if (this.comanda_origen) {\r\n      fltr.comanda_origen = this.comanda_origen;\r\n    } else {\r\n      delete(fltr.comanda_origen);\r\n    }\r\n\r\n    // console.log('FILTROS = ', fltr);\r\n\r\n    this.fpagoSrvc.getFormaPagoComandaOrigen(fltr).subscribe(lst => {\r\n      if (lst) {\r\n        if (lst.length > 0) {\r\n          this.lstFormasPagoComandaOrigen = lst;\r\n          this.applyFilter();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getFPComandaOrigen = (obj: FormaPagoComandaOrigenResponse) => {\r\n    this.getFormaPagoComandaOrigenEv.emit(obj);\r\n  }\r\n\r\n  pageChange = (e: PageEvent) => {\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n    this.applyFilter(true);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-content>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-nav-list>\r\n            <mat-list-item *ngFor=\"let element of lstFormasPagoComandaOrigenPaged\" (click)=\"getFPComandaOrigen(element)\">\r\n                <mat-icon mat-list-icon>payments</mat-icon>\r\n                <h5 mat-line>{{element.forma_pago ? element.forma_pago.descripcion : 'Pendiente de asignar'}}</h5>\r\n                <h6 mat-line>Código: {{element.codigo}}</h6>\r\n                <h6 mat-line>Origen: {{element.comanda_origen.descripcion}}</h6>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\r\n        </mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Jerarquia } from '../interfaces/jerarquia';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JerarquiaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<Jerarquia[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Jerarquia[]>(\n      `${GLOBAL.urlCatalogos}/get_jerarquia?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Modulo } from '../interfaces/modulo';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuloService {\n\n  private srvcErrHndl: ServiceErrorHandler;  \n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<Modulo[]> {   \n    return this.http.get<Modulo[]>(\n      `${GLOBAL.urlCatalogos}/get_modulo?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { Presentacion } from '../interfaces/presentacion';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport * as qs from 'qs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresentacionService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private moduleUrl = 'presentacion';\r\n\r\n  constructor(\r\n    private http: HttpClient,    \r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();    \r\n  }\r\n\r\n  get(fltr: any = {}): Observable<Presentacion[]> {   \r\n    return this.http.get<Presentacion[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  save(entidad: Presentacion): Observable<any> {   \r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.presentacion ? ('/' + entidad.presentacion) : ''}`,\r\n      entidad      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoCompraVenta } from '../interfaces/tipo-compra-venta';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoCompraVentaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'tipo_compra_venta';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<TipoCompraVenta[]> {\n    return this.http.get<TipoCompraVenta[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: TipoCompraVenta): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.tipo_compra_venta ? ('/' + entidad.tipo_compra_venta) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.css']\n})\nexport class ClockComponent implements OnInit {\n\n  @Input() idleStatus = false;\n  public time = new Date();\n\n  constructor() { }\n\n  ngOnInit() {\n    setInterval(() => {\n      this.time = new Date();\n    }, 1000);\n  }\n\n}\n","<h5 [ngClass]=\"{'activityColor': !idleStatus, 'idleColor': idleStatus}\">\r\n    {{time | date: 'dd/MM/yyyy HH:mm:ss'}}\r\n</h5>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GLOBAL } from '../../global';\nimport * as moment from 'moment';\n\nimport { ConfiguracionFechas } from '../../interfaces/config-reportes';\n\n@Component({\n  selector: 'app-rpt-fechas',\n  templateUrl: './rpt-fechas.component.html',\n  styleUrls: ['./rpt-fechas.component.css']\n})\nexport class RptFechasComponent implements OnInit {\n\n  @Input() fdel: string = moment().format(GLOBAL.dbDateFormat);\n  @Output() fdelChange = new EventEmitter();\n\n  @Input() fal: string = moment().format(GLOBAL.dbDateFormat);\n  @Output() falChange = new EventEmitter();\n\n  @Input() configuracion: ConfiguracionFechas = { isRequiredFDel: true, isRequiredFAl: true };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onFDelChange = () => this.fdelChange.emit(this.fdel);\n  onFAlChange =  () => this.falChange.emit(this.fal);\n\n}\n","<mat-form-field class=\"fullWidth\">\n    <input type=\"date\" matInput placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"fdel\" [required]=\"configuracion.isRequiredFDel\" (change)=\"onFDelChange()\">\n</mat-form-field>\n<mat-form-field class=\"fullWidth\">\n    <input type=\"date\" matInput placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"fal\" [required]=\"configuracion.isRequiredFAl\" (change)=\"onFAlChange()\">\n</mat-form-field>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n  constructor() { }\n\n  set(indice, objeto, esObjeto = true) {\n    if (esObjeto) {\n      localStorage.setItem(indice, JSON.stringify(objeto));\n    } else {\n      localStorage.setItem(indice, objeto);\n    }\n  }\n\n  get(indice, esObjeto = true) {\n    if (esObjeto) {\n      return JSON.parse(localStorage.getItem(indice));\n    } else {\n      return localStorage.getItem(indice);\n    }\n  }\n\n  clear(indice) { localStorage.removeItem(indice); }\n\n  clearAll() { localStorage.clear(); }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { GLOBAL } from '../global';\r\n\r\nimport { LocalstorageService } from '../../admin/services/localstorage.service';\r\n\r\n@Injectable()\r\nexport class TokenAuthInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private ls: LocalstorageService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const currentUser = this.ls.get(GLOBAL.usrTokenVar);\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: currentUser.token\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Cliente } from '../../../interfaces/cliente';\nimport { ClienteService } from '../../../services/cliente.service';\nimport { FormClienteDialogComponent } from '../form-cliente-dialog/form-cliente-dialog.component';\n\n@Component({\n  selector: 'app-lista-cliente',\n  templateUrl: './lista-cliente.component.html',\n  styleUrls: ['./lista-cliente.component.css']\n})\nexport class ListaClienteComponent implements OnInit {\n\n  public lstClientes: Cliente[];\n  public lstClientesPaged: Cliente[];\n  @Input() showAddButton = false;\n  @Output() getClienteEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogAddCliente: MatDialog,\n    private snackBar: MatSnackBar,\n    private clienteSrvc: ClienteService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadClientes();\n  }\n\n  applyFilter = (cambioPagina = false) => {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstClientes, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstClientesPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstClientes.length;\n      this.lstClientesPaged = PaginarArray(this.lstClientes, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  validateKey = (e: any) => {\n    const inp = String.fromCharCode(e.keyCode);\n    if (/[a-zA-Z0-9 -]/.test(inp)) {\n      return true;\n    } else {\n      e.preventDefault();\n      return false;\n    }\n  }\n\n  loadInfoContribuyente = (nit: string) => {\n    const tmpnit = nit.trim().toUpperCase().replace(/[^a-zA-Z0-9]/gi, '');\n    if (tmpnit !== 'CF') {\n      this.clienteSrvc.getInfoContribuyente(tmpnit).subscribe(res => {\n        if (res.exito) {\n          const tmpCliente: Cliente = {\n            cliente: undefined,\n            nombre: res.contribuyente.nombre,\n            nit: tmpnit,\n            direccion: res.contribuyente.direccion\n          };\n          this.clienteSrvc.save(tmpCliente).subscribe(resNvoCliente => {\n            if (resNvoCliente.exito) {\n              this.loadClientes();\n              this.getCliente(resNvoCliente.cliente);\n              this.snackBar.open(`${res.mensaje}. Cliente agregado.`, 'Cliente', { duration: 3000 });\n            } else {\n              this.snackBar.open(`ERROR: ${resNvoCliente.mensaje}`, 'Cliente', { duration: 7000 });\n            }\n          });\n        } else {\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cliente', { duration: 7000 });\n        }\n      });\n    }\n  }\n\n  loadClientes = () => {\n    this.clienteSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstClientes = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getCliente = (obj: Cliente) => this.getClienteEv.emit(obj);\n\n  agregarCliente = () => {\n    const addClienteRef = this.dialogAddCliente.open(FormClienteDialogComponent, {\n      width: '50%',\n      data: { esDialogo: true }\n    });\n\n    addClienteRef.afterClosed().subscribe(result => {\n      if (result) {\n        // console.log(result);\n        this.loadClientes();\n        this.getCliente(result);\n      }\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" (keypress)=\"validateKey($event)\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput type=\"text\" *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" (keypress)=\"validateKey($event)\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <button type=\"button\" mat-raised-button matSuffix color=\"accent\" (click)=\"loadInfoContribuyente(txtFiltro)\" *ngIf=\"length === 0 && txtFiltro.length >= 4\">\n                Validar NIT\n            </button>\n        </mat-form-field>\n        <!--\n        <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"agregarCliente()\" *ngIf=\"showAddButton\">\n            Agregar\n        </button>\n        -->\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let cli of lstClientesPaged\" (click)=\"getCliente(cli)\">\n                <mat-icon mat-list-icon>person</mat-icon>\n                <h5 mat-line>{{cli.nombre}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { TipoCompraVenta } from '../../../interfaces/tipo-compra-venta';\nimport { TipoCompraVentaService } from '../../../services/tipo-compra-venta.service';\n\n@Component({\n  selector: 'app-form-tipo-compra-venta',\n  templateUrl: './form-tipo-compra-venta.component.html',\n  styleUrls: ['./form-tipo-compra-venta.component.css']\n})\nexport class FormTipoCompraVentaComponent implements OnInit {\n\n  @Input() tipoCompraVenta: TipoCompraVenta;\n  @Output() tipoCompraVentaSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private tipoCompraVentaSrvc: TipoCompraVentaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit(): void {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetTipoCompraVenta() {\n    this.tipoCompraVenta = { tipo_compra_venta: null, descripcion: null, abreviatura: null, codigo: null };\n  }\n\n  onSubmit() {\n    this.tipoCompraVentaSrvc.save(this.tipoCompraVenta).subscribe((res) => {\n      if (res) {\n        this.resetTipoCompraVenta();\n        this.tipoCompraVentaSavedEv.emit();\n        this.snackBar.open('Grabado con éxito.', 'Tipo de compra/venta', { duration: 5000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Tipo de compra/venta</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmTipoCompraVenta=\"ngForm\" (ngSubmit)=\"frmTipoCompraVenta.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"tipoCompraVenta.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"tipoCompraVenta.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Abreviatura\" name=\"abreviatura\" [(ngModel)]=\"tipoCompraVenta.abreviatura\" minlength=\"1\" maxlength=\"1\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Abreviatura\" name=\"abreviatura\" [(ngModel)]=\"tipoCompraVenta.abreviatura\" minlength=\"1\" maxlength=\"1\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"tipoCompraVenta.codigo\" minlength=\"1\" maxlength=\"45\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"tipoCompraVenta.codigo\" minlength=\"1\" maxlength=\"45\">\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTipoCompraVenta.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTipoCompraVenta()\" *ngIf=\"tipoCompraVenta.tipo_compra_venta\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appSidebar]',\n  exportAs: 'appSidebar'\n})\nexport class SidebarDirective {\n\n  @HostBinding('class.is-open') click = false;\n\n  constructor() { }\n\n  @HostListener('click') onClic() {\n    this.click = !this.click;\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Proveedor } from '../../../../wms/interfaces/proveedor';\nimport { ProveedorService } from '../../../../wms/services/proveedor.service';\n\n@Component({\n  selector: 'app-lista-proveedor',\n  templateUrl: './lista-proveedor.component.html',\n  styleUrls: ['./lista-proveedor.component.css']\n})\nexport class ListaProveedorComponent implements OnInit {\n\n  public lstProveedores: Proveedor[];\n  public lstProveedoresPaged: Proveedor[];\n  @Output() getProveedorEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private proveedorSrvc: ProveedorService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadProveedores();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstProveedores, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstProveedoresPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstProveedores.length;\n      this.lstProveedoresPaged = PaginarArray(this.lstProveedores, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  loadProveedores = () => {\n    this.proveedorSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstProveedores = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getProveedor = (obj: Proveedor) => this.getProveedorEv.emit(obj);\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput type=\"text\" *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstProveedoresPaged\" (click)=\"getProveedor(element)\">\n                <mat-icon mat-list-icon>person</mat-icon>\n                <h5 mat-line>{{element.razon_social}}</h5>\n                <span mat-line>N.I.T.: {{element.nit}}</span>\n                <span mat-line>Código: {{element.codigo}}</span>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Corporacion, Sede, Empresa } from '../interfaces/sede';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SedeService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Sede[]> {\n    return this.http.get<Sede[]>(\n      `${GLOBAL.urlCatalogos}/get_sede?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveSede(obj: Sede): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/sede/guardar${!!obj.sede ? ('/' + obj.sede) : ''}`,\n      obj\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCorporacion(fltr: any = {}): Observable<Corporacion[]> {\n    return this.http.get<Corporacion[]>(\n      `${GLOBAL.urlMantenimientos}/corporacion/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveCorporacion(obj: Corporacion): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/corporacion/guardar${!!obj.corporacion ? ('/' + obj.corporacion) : ''}`,\n      obj\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getEmpresa(fltr: any = {}): Observable<Empresa[]> {\n    return this.http.get<Empresa[]>(\n      `${GLOBAL.urlMantenimientos}/empresa/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveEmpresa(obj: Empresa): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/empresa/guardar${!!obj.empresa ? ('/' + obj.empresa) : ''}`,\n      obj\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport class ConfirmDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n    public lblBtnConfirm: string,\n    public lblBtnDeny: string,\n    public config: any = null\n  ) { }\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  public title: string;\n  public message: string;\n  public lblBtnConfirm: string;\n  public lblBtnDeny: string;\n  public config: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel\n  ) {\n    this.title = data.title;\n    this.message = data.message;\n    this.lblBtnConfirm = data.lblBtnConfirm;\n    this.lblBtnDeny = data.lblBtnDeny;\n    this.config = data.config;\n    // console.log(this.config);\n  }\n\n  ngOnInit() {\n  }\n\n  onConfirm(): void {\n    if (this.config !== null) {\n      this.dialogRef.close({ resultado: true, config: this.config });\n    } else {\n      this.dialogRef.close(true);\n    }\n  }\n\n  onDismiss(): void {\n    if (this.config !== null) {\n      this.dialogRef.close({ resultado: false, config: this.config });\n    } else {\n      this.dialogRef.close(false);\n    }\n  }\n}\n","<h1 mat-dialog-title>\n  {{title}}\n</h1>\n<div mat-dialog-content>\n  <p>{{message}}</p>\n  <div *ngIf=\"config && config.input\">\n    <p *ngFor=\"let input of config.input\">\n      <mat-form-field class=\"fullWidth\" *ngIf=\"input.select\">\n        <mat-label>{{ input.label }}</mat-label>\n        <mat-select name=\"input.label\" [(ngModel)]=\"input.valor\" [ngModelOptions]=\"{standalone: true}\" [required]=\"input.requerido\">\n            <mat-option *ngFor=\"let dato of input.datos\" [value]=\"dato[input.id]\">\n                {{ dato[input.descripcion] }}\n            </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field class=\"fullWidth\" *ngIf=\"!input.select\">\n        <input matInput type=\"text\" [placeholder]=\"input.label\" [name]=\"input.label\" [(ngModel)]=\"input.valor\" [required]=\"input.requerido\">\n      </mat-form-field>\n    </p>\n  </div>\n</div>\n<div mat-dialog-actions align=\"center\">\n  <button mat-raised-button class=\"btnConfig\" (click)=\"onDismiss()\">{{lblBtnDeny}}</button>\n  <button mat-raised-button class=\"btnConfig\" color=\"accent\" (click)=\"onConfirm()\">{{lblBtnConfirm}}</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Comanda, ComandaGetResponse } from '../interfaces/comanda';\nimport { DetalleComanda } from '../interfaces/detalle-comanda';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComandaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'comanda';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Comanda[]> {\n    return this.http.get<Comanda[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getComandaDeMesa(idmesa: number): Observable<ComandaGetResponse> {\n    return this.http.get<ComandaGetResponse>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/get_comanda/${idmesa}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Comanda) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar${entidad.comanda ? ('/' + entidad.comanda) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  enviarPedido(idcomanda: number, pedido: any) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/callcenter/guardar_pedido/${idcomanda}`,\n      pedido\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalleCombo(idcomanda: number, idcuenta: number, detalle: DetalleComanda) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_detalle_combo/${idcomanda}/${idcuenta}`,\n      detalle\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveNotasGenerales(entidad: any) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_notas_generales/${entidad.comanda}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveNotasProducto(entidad: any) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_notas_producto/${entidad.detalle_comanda}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(idcomanda: number, idcuenta: number, detalle: DetalleComanda) {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_detalle/${idcomanda}/${idcuenta}`,\n      detalle\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  setProductoImpreso(idcuenta: number = 0) {\n    return this.http.get<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/imprimir/${idcuenta}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  cerrarMesa(idMesa: number): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/cerrar_mesa/${idMesa}`,\n      null\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getComandasOnLIne(): Observable<ComandaGetResponse[]> {\n    return this.http.get<ComandaGetResponse[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/get_comanda`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  validaPwdGerenteTurno(pwd: string): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/validapwdgerenteturno`,\n      { pwd }\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  cerrarEstacion(idcomanda: number): Observable<any> {\n    return this.http.get<ComandaGetResponse[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/cerrar_estacion/${idcomanda}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCuenta(idcuenta: number): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlAppRestaurante}/cuenta/get_cuenta/${idcuenta}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  unificarCuentas(deCuenta: number, aCuenta: number): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/unir_cuentas/${deCuenta}/${aCuenta}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  trasladarMesa(idComanda: number, idMesaOrigen: number, idMesaDestino: number): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/trasladar_mesa/${idComanda}/${idMesaOrigen}/${idMesaDestino}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getComandasCocina(): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/get_comanda_cocina`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  setComandaCocinada(idcomanda: number, datos: any): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/set_cocinado/${idcomanda}`,\n      datos\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  distribuirCuentas(datos: any): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/distribuir_cuentas`,\n      datos\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  cancelarPedido(idComanda: number, datos: any): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/anular_pedido/${idComanda}`,\n      datos\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getComandasOnLine_Test(): any[] {\n    const comandasOnLine: any[] = [\n      {\n        comanda: 37,\n        total: 8,\n        usuario: 6,\n        sede: 1,\n        estatus: 1,\n        turno: 2,\n        mesa: {\n          mesa: 1,\n          area: {\n            area: 1,\n            sede: 1,\n            area_padre: null,\n            nombre: 'Bar'\n          },\n          numero: 1,\n          posx: 23.8667,\n          posy: 18.8333,\n          tamanio: 72.0000,\n          estatus: 2\n        },\n        cuentas: [\n          {\n            cuenta: 31,\n            comanda: 37,\n            nombre: 'Única',\n            numero: 1,\n            propina_monto: 0.80,\n            propina_porcentaje: 10.00,\n            cerrada: 1,\n            productos: [\n              {\n                detalle_cuenta: 75,\n                cuenta_cuenta: 31,\n                detalle_comanda: 79,\n                comanda: 37,\n                articulo: {\n                  articulo: 1,\n                  categoria_grupo: 21,\n                  presentacion: null,\n                  descripcion: 'Original',\n                  precio: 8.00,\n                  bien_servicio: 'B',\n                  existencias: 969.00,\n                  impresora: {\n                    impresora: 1,\n                    sede: 1,\n                    nombre: 'EPSON L120 Series',\n                    direccion_ip: null,\n                    ubicacion: null,\n                    bluetooth: 0\n                  }\n                },\n                cantidad: 1,\n                precio: 8.00,\n                impreso: 1,\n                total: 8.00,\n                notas: '',\n                numero_cuenta: 1\n              }\n            ]\n          }\n        ]\n      },\n      {\n        comanda: 45,\n        total: 76,\n        usuario: 2,\n        sede: 1,\n        estatus: 1,\n        turno: 2,\n        mesa: {\n          mesa: 3,\n          area: {\n            area: 1,\n            sede: 1,\n            area_padre: null,\n            nombre: 'Bar'\n          },\n          numero: 3,\n          posx: 11.0667,\n          posy: 41.5000,\n          tamanio: 72.0000,\n          estatus: 2\n        },\n        cuentas: [\n          {\n            cuenta: 39,\n            comanda: 45,\n            nombre: 'uno',\n            numero: 1,\n            propina_monto: 0.80,\n            propina_porcentaje: 10.00,\n            cerrada: 1,\n            productos: [\n              {\n                detalle_cuenta: 84,\n                cuenta_cuenta: 39,\n                detalle_comanda: 88,\n                comanda: 45,\n                articulo: {\n                  articulo: 1,\n                  categoria_grupo: 21,\n                  presentacion: null,\n                  descripcion: 'Original',\n                  precio: 8.00,\n                  bien_servicio: 'B',\n                  existencias: 969.00,\n                  impresora: {\n                    impresora: 1,\n                    sede: 1,\n                    nombre: 'EPSON L120 Series',\n                    direccion_ip: null,\n                    ubicacion: null,\n                    bluetooth: 0\n                  }\n                },\n                cantidad: 1,\n                precio: 8.00,\n                impreso: 1,\n                total: 8.00,\n                notas: '',\n                numero_cuenta: 1\n              },\n              {\n                detalle_cuenta: 85,\n                cuenta_cuenta: 40,\n                detalle_comanda: 89,\n                comanda: 45,\n                articulo: {\n                  articulo: 2,\n                  categoria_grupo: 21,\n                  presentacion: null,\n                  descripcion: 'Zero',\n                  precio: 8.00,\n                  bien_servicio: 'B',\n                  existencias: 984.00,\n                  impresora: {\n                    impresora: 1,\n                    sede: 1,\n                    nombre: 'EPSON L120 Series',\n                    direccion_ip: null,\n                    ubicacion: null,\n                    bluetooth: 0\n                  }\n                },\n                cantidad: 1,\n                precio: 8.00,\n                impreso: 1,\n                total: 8.00,\n                notas: '',\n                numero_cuenta: 1\n              },\n              {\n                detalle_cuenta: 86,\n                cuenta_cuenta: 40,\n                detalle_comanda: 90,\n                comanda: 45,\n                articulo: {\n                  articulo: 6,\n                  categoria_grupo: 23,\n                  presentacion: null,\n                  descripcion: 'Fettuccine',\n                  precio: 60.00,\n                  bien_servicio: 'B',\n                  existencias: 995.00,\n                  impresora: {\n                    impresora: 2,\n                    sede: 1,\n                    nombre: 'EPSON L120 Series',\n                    direccion_ip: null,\n                    ubicacion: null,\n                    bluetooth: 0\n                  }\n                },\n                cantidad: 1,\n                precio: 60.00,\n                impreso: 1,\n                total: 60.00,\n                notas: '',\n                numero_cuenta: 1\n              }\n            ]\n          }\n        ]\n      }\n    ];\n    return comandasOnLine;\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { ListaCorporacionComponent } from '../lista-corporacion/lista-corporacion.component';\nimport { ListaEmpresaComponent } from '../../empresa/lista-empresa/lista-empresa.component';\nimport { ListaSedeComponent } from '../../sede/lista-sede/lista-sede.component';\nimport { Corporacion, Empresa, Sede } from '../../../interfaces/sede';\n\n@Component({\n  selector: 'app-corporacion',\n  templateUrl: './corporacion.component.html',\n  styleUrls: ['./corporacion.component.css']\n})\nexport class CorporacionComponent implements OnInit {\n\n  public corporacion: Corporacion;\n  public empresa: Empresa;\n  public sede: Sede;\n\n  @ViewChild('lstCorporacion') lstCorporacionComponent: ListaCorporacionComponent;\n  @ViewChild('lstEmpresa') lstEmpresaComponent: ListaEmpresaComponent;\n  @ViewChild('lstSede') lstSedeComponent: ListaSedeComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.corporacion = { corporacion: null, admin_llave: null, nombre: null };\n    this.resetEmpresa();\n    this.resetSede();\n  }\n\n  resetEmpresa = () => this.empresa = {\n    empresa: null,\n    corporacion: null,\n    nombre: null,\n    numero_acceso: null,\n    afiliacion_iva: null,\n    codigo_establecimiento: null,\n    correo_emisor: null,\n    nit: null,\n    nombre_comercial: null,\n    direccion: null,\n    codigo_postal: null,\n    municipio: null,\n    departamento: null,\n    pais_iso_dos: null,\n    agente_retenedor: 0,\n    porcentaje_iva: 0.00,\n    visa_merchant_id: null,\n    visa_transaction_key: null,\n    codigo: null,\n    metodo_costeo: 1\n  }\n\n  resetSede = () => this.sede = {\n    sede: null,\n    empresa: null,\n    sede_padre: null,\n    nombre: null,\n    certificador_fel: null,\n    fel_establecimiento: null,\n    direccion: null,\n    telefono: null,\n    correo: null,\n    codigo: null,\n    cuenta_contable: null\n  }\n\n  onTabChanged = (tabChangeEvent: MatTabChangeEvent): void => {\n    if (tabChangeEvent.index === 1) {\n      this.lstEmpresaComponent.getEmpresas();\n\n    } else if( tabChangeEvent.index === 2) {\n      this.lstSedeComponent.getSedes();\n    }\n  }\n\n  setFormCorporacion = (cli: Corporacion) => {\n    this.corporacion = cli;\n  }\n\n  setFormEmpresa = (cli: Empresa) => {\n    this.empresa = cli;\n  }\n\n  refreshEmpresaList = () => {\n    this.lstEmpresaComponent.getEmpresas();\n    this.resetEmpresa();\n  }\n\n  refreshCorporacionList = () => {\n    this.lstCorporacionComponent.getCorporaciones();\n    this.corporacion = {\n      corporacion: null, admin_llave: null, nombre: null\n    }\n  }\n\n  setFormSede = (cli: Sede) => this.sede = cli;\n  refreshSedeList = () => this.lstSedeComponent.getSedes();\n\n}\n","<mat-tab-group mat-align-tabs=\"center\" (selectedTabChange)=\"onTabChanged($event);\">\r\n    <mat-tab label=\"Corporación\">\r\n        <div class=\"row\">\r\n            <div class=\"col m5 s12\">\r\n                <app-list-corporacion #lstCorporacion (getCorporacionEv)=\"setFormCorporacion($event)\"></app-list-corporacion>\r\n            </div>\r\n            <div class=\"col m7 s12\">\r\n                <app-form-corporacion #frmCorporacion [corporacion]=\"corporacion\" (corporacionSavedEv)=\"refreshCorporacionList()\"></app-form-corporacion>\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Empresa\">\r\n        <div class=\"row\">\r\n            <div class=\"col m5 s12\">\r\n                <app-lista-empresa \r\n                    #lstEmpresa \r\n                    [corporacion]=\"corporacion\" \r\n                    (getEmpresaEv)=\"setFormEmpresa($event)\"\r\n                ></app-lista-empresa>\r\n            </div>\r\n            <div class=\"col m7 s12\">\r\n                <app-form-empresa \r\n                    #frmEmpresa \r\n                    [corporacion]=\"corporacion\" \r\n                    [empresa]=\"empresa\"\r\n                    (empresaSavedEv)=\"refreshEmpresaList()\"\r\n                >\r\n                </app-form-empresa>\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Sede\">\r\n        <div class=\"row\">\r\n            <div class=\"col m5 s12\">\r\n                <app-lista-sede #lstSede [empresa]=\"empresa\" (getSedeEv)=\"setFormSede($event)\"></app-lista-sede>\r\n            </div>\r\n            <div class=\"col m7 s12\">\r\n                <app-form-sede #frmSede [empresa]=\"empresa\" [sede]=\"sede\" (sedeSavedEv)=\"refreshSedeList()\"></app-form-sede>\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\r\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\r\nimport { LocalstorageService } from '../../../services/localstorage.service';\r\n\r\nimport { VendorTerceroResponse, VendorTercero } from '../../../interfaces/vendor-tercero';\r\nimport { VendorTerceroService } from '../../../services/vendor-tercero.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-vendor-tercero',\r\n  templateUrl: './lista-vendor-tercero.component.html',\r\n  styleUrls: ['./lista-vendor-tercero.component.css']\r\n})\r\nexport class ListaVendorTerceroComponent implements OnInit {\r\n\r\n  public lstVendorTercero: VendorTerceroResponse[];\r\n  public lstVendorTerceroPaged: VendorTerceroResponse[];\r\n  @Output() getVendorTerceroEv = new EventEmitter();\r\n  @ViewChild('paginador') paginador: MatPaginator;\r\n\r\n  public length = 0;\r\n  public pageSize = 5;\r\n  public pageSizeOptions: number[] = [5, 10, 15];\r\n  public pageIndex = 0;\r\n  public pageEvent: PageEvent;\r\n  public txtFiltro = '';\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n\r\n  constructor(\r\n    private vendorTerceroSrvc: VendorTerceroService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.loadVendorTercero();\r\n  }\r\n\r\n  applyFilter(cambioPagina = false) {\r\n    if (this.txtFiltro.length > 0) {\r\n      const tmpList = MultiFiltro(this.lstVendorTercero, this.txtFiltro);\r\n      this.length = tmpList.length;\r\n      this.lstVendorTerceroPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\r\n    } else {\r\n      this.length = this.lstVendorTercero.length;\r\n      this.lstVendorTerceroPaged = PaginarArray(this.lstVendorTercero, this.pageSize, this.pageIndex + 1);\r\n    }\r\n    if (!cambioPagina) {\r\n      this.paginador.firstPage();\r\n    }\r\n  }\r\n\r\n  loadVendorTercero = () => {\r\n    this.vendorTerceroSrvc.get().subscribe(lst => {\r\n      if (lst) {\r\n        if (lst.length > 0) {\r\n          this.lstVendorTercero = lst;\r\n          this.applyFilter();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getVendorTercero = (obj: VendorTerceroResponse) => {\r\n    this.getVendorTerceroEv.emit(obj);\r\n  }\r\n\r\n  pageChange = (e: PageEvent) => {\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n    this.applyFilter(true);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-content>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-nav-list>\r\n            <mat-list-item *ngFor=\"let element of lstVendorTerceroPaged\" (click)=\"getVendorTercero(element)\">\r\n                <mat-icon mat-list-icon>store</mat-icon>\r\n                <h5 mat-line>{{element.nombre}}</h5>\r\n                <h6 mat-line>{{element.comanda_origen.descripcion}}</h6>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\r\n        </mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { usrLogin, usrLogInResponse, Usuario } from '../models/usuario';\r\nimport { AccesoUsuario, SubModulo, NodoAppMenu } from '../interfaces/acceso-usuario';\r\nimport { LocalstorageService } from '../services/localstorage.service';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private moduleUrl = 'usuario';\r\n  private usrToken: string = null;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private ls: LocalstorageService\r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();\r\n    this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\r\n  }\r\n\r\n  private setToken() {\r\n    this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\r\n  }\r\n\r\n  login(usr: usrLogin): Observable<usrLogInResponse> {\r\n    const obj = {\r\n      usr: usr.usuario,\r\n      pwd: usr.contrasenia\r\n    };\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.post<usrLogInResponse>(\r\n      `${GLOBAL.url}/${this.moduleUrl}/login`,\r\n      JSON.stringify(obj),\r\n      httpOptions\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  desbloquear = (pindesbloqueo: number) => {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.url}/${this.moduleUrl}/desbloqueo_usuario`,\r\n      { pindesbloqueo }      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getAll(debaja: number = 0): Observable<Usuario[]> {\r\n    return this.http.get<Usuario[]>(\r\n      `${GLOBAL.url}/${this.moduleUrl}/obtener_usuarios`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  async checkUserToken() {\r\n    this.setToken();\r\n    if (this.usrToken) {\r\n      const resp: any = await this.http.get(`${GLOBAL.url}/${this.moduleUrl}/checktoken_get`).toPromise();\r\n      if (resp.valido) {\r\n        return resp.valido;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get(filtros: any): Observable<Usuario[]> {\r\n    return this.http.post<Usuario[]>(\r\n      `${GLOBAL.url}/${this.moduleUrl}/usuarios_post`,\r\n      filtros\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getMeserosTurno(): Observable<Usuario[]> {    \r\n    return this.http.get<Usuario[]>(\r\n      `${GLOBAL.urlCatalogos}/get_mesero`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  save(entidad: Usuario): Observable<any> {\r\n    if (entidad.usuario) {\r\n      return this.http.post<any>(\r\n        `${GLOBAL.url}/${this.moduleUrl}/guardar_usuario/${entidad.usuario}`,\r\n        entidad        \r\n      ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n    } else {\r\n      if (!entidad.contrasenia) {\r\n        delete entidad.contrasenia;\r\n      }\r\n      return this.http.post<any>(\r\n        `${GLOBAL.url}/${this.moduleUrl}/guardar_usuario`,\r\n        entidad        \r\n      ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n    }\r\n\r\n  }  \r\n\r\n  getAppMenu = (): AccesoUsuario[] => this.ls.get(GLOBAL.usrTokenVar).acceso || [];\r\n\r\n  transformSubModule = (subModulos: SubModulo[]): NodoAppMenu[] => {\r\n    const objMenu: NodoAppMenu[] = [];\r\n    subModulos.forEach(sm => objMenu.push({ nombre: sm.nombre, link: null, hijos: sm.opciones }));\r\n    return objMenu;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { usrLogin, Usuario, usrLogInResponse } from '../../models/usuario';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public usr: usrLogin;\n  public usuario: Usuario;\n\n  constructor(\n    private usrSrvc: UsuarioService,\n    private ls: LocalstorageService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.usr = new usrLogin(null, null);\n    this.usuario = new Usuario(null, null, null, null, null, null, 0, null, 0, 0);\n  }\n\n  ngOnInit() {\n    this.checkIfLogged();\n  }\n\n  checkIfLogged = async () => {\n    const valido = await this.usrSrvc.checkUserToken();\n    if (valido) {\n      this.router.navigate(['/admin/dashboard']);\n    } else {\n      this.router.navigate(['/admin/login']);\n    }\n  }\n\n  esMovil = (usavk: number = 0): boolean => {\n    let estoyEnMovil = usavk === 0 ? true : false;\n    // estoyEnMovil = true; // Solo para desarrollo\n    const ua = navigator.userAgent;\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Mobile|mobile|CriOS/i.test(ua)) {\n      estoyEnMovil = true;\n    }\n    return estoyEnMovil;\n  }\n\n  doLogin() {\n    this.usrSrvc.login(this.usr).subscribe((res: usrLogInResponse) => {\n      if (res.token) {\n        this.ls.set(GLOBAL.usrTokenVar, {\n          token: res.token, usuario: res.usrname, nombres: res.nombres, apellidos: res.apellidos, sede: +res.sede,\n          idusr: +res.idusr, enmovil: this.esMovil(+res.usatecladovirtual), acceso: res.acceso, sede_uuid: res.sede_uuid,\n          empresa: res.empresa, restaurante: res.restaurante, configuracion: [], usatecladovirtual: res.usatecladovirtual\n        });\n        this.router.navigate(['/admin/dashboard']);\n      } else {\n        this.snackBar.open(res.mensaje, 'Login', { duration: 7000 });\n      }\n    }, (error) => {\n      console.log(error);\n    });\n  }\n}\n","<div class=\"row\">\r\n    <div class=\"col m3 s1\"></div>\r\n    <div class=\"col m6 s10 topMargin\">\r\n        <mat-card class=\"example-card\">\r\n            <img id=\"imgLogo\" mat-card-image src=\"/assets/img/logo.svg\" alt=\"Rest-Touch\">\r\n            <mat-card-content>\r\n                <h5>Ingreso</h5>\r\n                <form #frmLogIn=\"ngForm\" novalidate>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"text\" placeholder=\"Usuario\" id=\"txtUsuario\" name=\"txtUsuario\" [(ngModel)]=\"usr.usuario\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"password\" id=\"txtContrasenia\" name=\"txtContrasenia\" [(ngModel)]=\"usr.contrasenia\" placeholder=\"Contraseña\" required>\r\n                    </mat-form-field>\r\n                </form>\r\n            </mat-card-content>\r\n            <mat-card-actions align=\"end\">\r\n                <button id=\"btnLogin\" mat-flat-button type=\"button\" color=\"accent\" class=\"fullWidth\" (click)=\"doLogin()\" [disabled]=\"!frmLogIn.form.valid\">Ingresar</button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n    </div>\r\n    <div class=\"col m3 s1\"></div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaUsuarioComponent } from '../lista-usuario/lista-usuario.component';\nimport { Usuario } from '../../../models/usuario';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent implements OnInit {\n\n  public usuario: Usuario;\n  @ViewChild('lstUsuarioComponent') lstUsuarioComponent: ListaUsuarioComponent;\n\n  constructor() {\n    this.usuario = new Usuario(null, null, null, null, null, null, 0, null, 0, 0);\n  }\n\n  ngOnInit() {\n  }\n\n  setUsuario(usr: Usuario) {\n    this.usuario = usr;\n  }\n\n  refreshUserList() {\n    this.lstUsuarioComponent.loadUsuarios();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-usuario #lstUsuarioComponent (getUsuarioEv)=\"setUsuario($event)\"></app-lista-usuario>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-usuario [usuario]=\"usuario\" (usrSavedEv)=\"refreshUserList()\"></app-form-usuario>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, Inject, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatInput } from '@angular/material/input';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Cliente } from '../../../interfaces/cliente';\nimport { ClienteService } from '../../../services/cliente.service';\n\n@Component({\n  selector: 'app-form-cliente',\n  templateUrl: './form-cliente.component.html',\n  styleUrls: ['./form-cliente.component.css']\n})\nexport class FormClienteComponent implements OnInit {\n\n  @Input() cliente: Cliente;\n  @Input() inicializoCliente = true;\n  @Input() verTodos = true;\n  @Output() clienteSavedEv = new EventEmitter();\n  @ViewChild('txtNitCliente') txtNitCliente: MatInput;\n  public esDialogo = false;\n  public esMovil = false;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private clienteSrvc: ClienteService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    if (this.inicializoCliente) {\n      this.resetCliente();\n    }\n  }\n\n  resetCliente = () => this.cliente = {\n    cliente: null, nombre: null, direccion: null, nit: null, telefono: null, correo: null,\n    codigo_postal: null, municipio: null, departamento: null, pais_iso_dos: null\n  }\n\n  onSubmit = () => {\n    if (this.cliente.correo && this.cliente.correo.length > 0) {\n      if (this.cliente.correo.match(GLOBAL.FORMATO_EMAIL)) {\n        this.guardarCliente();\n      } else {\n        this.snackBar.open(`El correo '${this.cliente.correo}' no es válido.`, 'Cliente', { duration: 3000 });\n      }\n    } else {\n      this.guardarCliente();\n    }\n  }\n\n  guardarCliente = () => {\n    this.clienteSrvc.save(this.cliente).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.clienteSavedEv.emit(res.cliente);\n        this.resetCliente();\n        this.snackBar.open(res.mensaje, 'Cliente', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cliente', { duration: 7000 });\n      }\n    });\n  }\n\n  loadInfoContribuyente = (nit: string) => {\n    const tmpnit = nit.trim().toUpperCase().replace(/[^0-9KkcCfF]/gi, '');\n    if (tmpnit !== 'CF') {\n      this.clienteSrvc.getInfoContribuyente(tmpnit).subscribe(res => {\n        if (res.exito) {\n          this.cliente.nombre = res.contribuyente.nombre;\n          this.cliente.nit = tmpnit;\n          this.cliente.direccion = res.contribuyente.direccion;\n        } else {\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cliente', { duration: 7000 });\n          this.cliente.nombre = null;\n          this.cliente.nit = tmpnit;\n          this.cliente.direccion = null;\n          this.txtNitCliente.focus();\n        }\n      });\n    }\n  }\n\n  validatePhone = (e: any) => {\n    const inp = String.fromCharCode(e.keyCode);\n    if (/[0-9 +()-]/.test(inp)) {\n      return true;\n    } else {\n      e.preventDefault();\n      return false;\n    }\n  }\n\n  validateEmail = (e: any) => {\n    const inp = String.fromCharCode(e.keyCode);\n    if (/[a-zA-Z0-9_@.]/.test(inp)) {\n      return true;\n    } else {\n      e.preventDefault();\n      return false;\n    }\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Cliente {{!!cliente.cliente ? cliente.nombre : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmCliente=\"ngForm\" (ngSubmit)=\"frmCliente.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" #txtNitCliente type=\"text\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"cliente.nit\" required maxlength=\"25\">\n                <input matInput *ngIf=\"esMovil\" #txtNitCliente type=\"text\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"cliente.nit\" required maxlength=\"25\">\n                <button type=\"button\" mat-raised-button matSuffix color=\"accent\" (click)=\"loadInfoContribuyente(cliente.nit)\" *ngIf=\"cliente && cliente.nit && cliente.nit.length >= 4 && !verTodos\">\n                    Validar NIT\n                </button>\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"cliente.nombre\" required maxlength=\"100\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"cliente.nombre\" required maxlength=\"100\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Dirección de factura\" name=\"direccion\" [(ngModel)]=\"cliente.direccion\" required maxlength=\"150\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Dirección de factura\" name=\"direccion\" [(ngModel)]=\"cliente.direccion\" required maxlength=\"150\">\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Teléfono\" name=\"telefono\" [(ngModel)]=\"cliente.telefono\" maxlength=\"25\" (keypress)=\"validatePhone($event)\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Teléfono\" name=\"telefono\" [(ngModel)]=\"cliente.telefono\" maxlength=\"25\" (keypress)=\"validatePhone($event)\">\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\" *ngIf=\"verTodos\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"E-mail\" name=\"correo\" [(ngModel)]=\"cliente.correo\" maxlength=\"50\" (keypress)=\"validateEmail($event)\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"E-mail\" name=\"correo\" [(ngModel)]=\"cliente.correo\" maxlength=\"50\" (keypress)=\"validateEmail($event)\">\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\" *ngIf=\"verTodos\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Código postal\" name=\"codigo_postal\" maxlength=\"25\" [(ngModel)]=\"cliente.codigo_postal\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Código postal\" name=\"codigo_postal\" maxlength=\"25\" [(ngModel)]=\"cliente.codigo_postal\">\n            </mat-form-field>            \n            \n            <mat-form-field class=\"fullWidth\" *ngIf=\"verTodos\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Municipio\" name=\"municipio\" [(ngModel)]=\"cliente.municipio\" maxlength=\"100\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Municipio\" name=\"municipio\" [(ngModel)]=\"cliente.municipio\" maxlength=\"100\">\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\" *ngIf=\"verTodos\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Departamento\" name=\"departamento\" [(ngModel)]=\"cliente.departamento\" maxlength=\"100\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Departamento\" name=\"departamento\" [(ngModel)]=\"cliente.departamento\" maxlength=\"100\">\n            </mat-form-field>            \n            \n            <mat-form-field class=\"fullWidth\" *ngIf=\"verTodos\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" maxlength=\"2\" placeholder=\"Pais ISO\" name=\"pais_iso_dos\" [(ngModel)]=\"cliente.pais_iso_dos\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" maxlength=\"2\" placeholder=\"Pais ISO\" name=\"pais_iso_dos\" [(ngModel)]=\"cliente.pais_iso_dos\">\n            </mat-form-field>\n                        \n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmCliente.form.valid\">\n                    Guardar\n                </button>                \n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetCliente()\" *ngIf=\"cliente.cliente\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormaPago } from '../../../interfaces/forma-pago';\nimport { FpagoService } from '../../../services/fpago.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ConfiguracionService } from '../../../services/configuracion.service';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\n\n@Component({\n  selector: 'app-form-pago',\n  templateUrl: './form-pago.component.html',\n  styleUrls: ['./form-pago.component.css']\n})\nexport class FormPagoComponent implements OnInit {\n\n  @Input() fpago: FormaPago;\n  @Output() fpagoSavedEv = new EventEmitter();\n  public noComandaSinFactura = true;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private fpagoSrvc: FpagoService,\n    private configSrvc: ConfiguracionService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.noComandaSinFactura = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_COMANDA_SIN_FACTURA) === false;\n  }\n\n  resetFormaPago = () => this.fpago = {\n    forma_pago: null, descripcion: null, activo: 1, descuento: 0, comision_porcentaje: 0.00,\n    retencion_porcentaje: 0.00, pedirdocumento: 0, adjuntararchivo: 0, pedirautorizacion: 0,\n    sinfactura: 0\n  }\n\n  onSubmit = () => {\n    this.fpagoSrvc.save(this.fpago).subscribe(res => {\n      if (res.exito) {\n        this.fpagoSavedEv.emit();\n        this.resetFormaPago();\n        this.snackBar.open('Forma de pago agregada...', 'Forma de pago', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Forma de pago', { duration: 3000 });\n      }\n    });\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Forma de pago {{!!fpago.forma_pago ? fpago.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmFpago=\"ngForm\" (ngSubmit)=\"frmFpago.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"fpago.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"fpago.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" placeholder=\"Porcentaje de comisión\" name=\"comision_porcentaje\" [(ngModel)]=\"fpago.comision_porcentaje\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" placeholder=\"Porcentaje de retención\" name=\"retencion_porcentaje\" [(ngModel)]=\"fpago.retencion_porcentaje\">            \n            </mat-form-field>\n            <mat-checkbox name=\"descuento\" class=\"btnAccion\" [(ngModel)]=\"+fpago.descuento\">¿Es descuento?</mat-checkbox>\n            <mat-checkbox name=\"pedirdocumento\" class=\"btnAccion\" [(ngModel)]=\"+fpago.pedirdocumento\">Pedir número de documento</mat-checkbox>\n            <mat-checkbox name=\"adjuntararchivo\" class=\"btnAccion\" [(ngModel)]=\"+fpago.adjuntararchivo\">Debe adjuntar archivo de respaldo</mat-checkbox>\n            <mat-checkbox name=\"pedirautorizacion\" class=\"btnAccion\" [(ngModel)]=\"+fpago.pedirautorizacion\">Pedir autorización del gerente de turno</mat-checkbox>\n            <mat-checkbox name=\"sinfactura\" class=\"btnAccion\" [(ngModel)]=\"+fpago.sinfactura\" [disabled]=\"noComandaSinFactura\">Sin factura</mat-checkbox>\n            <mat-checkbox name=\"activo\" class=\"fullWidth\" [(ngModel)]=\"+fpago.activo\">Activo</mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmFpago.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetFormaPago()\" *ngIf=\"fpago.forma_pago\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ArticuloService } from '../../../wms/services/articulo.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../global';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\n\nexport class ConfirmDialogComboModel {\n  constructor(\n    public producto: any,\n    public lblBtnConfirm: string,\n    public lblBtnDeny: string\n  ) { }\n}\n\n@Component({\n  selector: 'app-dialog-combo',\n  templateUrl: './dialog-combo.component.html',\n  styleUrls: ['./dialog-combo.component.css']\n})\nexport class DialogComboComponent implements OnInit {\n\n  public title: string;\n  public message: string;\n  public lblBtnConfirm: string;\n  public lblBtnDeny: string;\n  public datos: any;\n  public producto: any;\n  public combo: any;\n  public seleccion: any;\n  public esMovil = false;\n  public keyboardLayout: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogComboComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogComboModel,\n    private articuloSvr: ArticuloService,\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService\n  ) {\n    this.datos = {\n      respuesta: false,\n      seleccion: []\n    };\n    this.lblBtnConfirm = data.lblBtnConfirm;\n    this.lblBtnDeny = data.lblBtnDeny;\n    this.producto = data.producto;\n    this.seleccion = {\n      cantidad: 1,\n      articulo: this.producto.id,\n      descripcion: this.producto.nombre,\n      receta: []\n    };\n  }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n    this.combo = [];\n    this.getArticulos();\n  }\n\n  getArticulos = () => {\n    const fltr: any = { articulo: this.producto.id };\n    this.articuloSvr.getArticuloCombo(fltr).subscribe((res) => {\n      let multiple = 0;\n      this.combo = res;\n      for (let i = 0; i < this.combo.receta.length; i++) {\n\n        const element = this.combo.receta[i];\n\n        this.combo.receta[i].seleccionado = false;\n        if (+element.multiple === 1) {\n          multiple++;\n          const list = [];\n          for (let cont = 0; cont < +this.combo.receta[i].cantidad_maxima; cont++) {\n            list.push({\n              id: cont,\n              seleccion: {}\n            });\n          }\n          this.combo.receta[i].input = list;\n        } else {\n          this.seleccion.receta.push(this.combo.receta[i]);\n        }\n      }\n\n      // if (+multiple === 0) { this.onConfirm(); } // Se quitó esta validación para poder modificar la cantidad de los combos fijos.\n    });\n  }\n\n  setCantidad = () => {\n    let cantidad = 0;\n    if (this.seleccion.cantidad) {\n      cantidad = this.seleccion.cantidad;\n    }\n\n    for (let i = 0; i < this.combo.receta.length; i++) {\n\n      const element = this.combo.receta[i];\n\n      if (+element.multiple === 1) {\n        const list = [];\n        for (let cont = 0; cont < +this.combo.receta[i].cantidad_maxima * this.seleccion.cantidad; cont++) {\n          list.push({\n            id: cont,\n            seleccion: {}\n          });\n        }\n        this.combo.receta[i].input = list;\n      }\n    }\n  }\n\n  onConfirm(): void {\n    const multi = this.combo.receta.filter(p => +p.multiple === 1);\n    const vanTodos = this.todosSeleccionados(multi);\n    if (vanTodos) {\n      for (const element of multi) {\n        this.seleccion.receta.push({\n          articulo: element.articulo,\n          descripcion: element.descripcion,\n          receta: []\n        });\n        const idx = this.seleccion.receta.findIndex(p => +p.articulo === +element.articulo);\n        for (const inp of element.input) {\n          const prod = inp.seleccion;\n          this.seleccion.receta[idx].receta.push(prod);\n        }\n      }\n      /*for (let i = 0; i < multi.length; i++) {\n        const element = multi[i];\n        this.seleccion.receta.push({\n          articulo: element.articulo,\n          descripcion: element.descripcion,\n          receta: []\n        });\n        const idx = this.seleccion.receta.findIndex(p => +p.articulo === +element.articulo);\n        for (let j = 0; j < element.input.length; j++) {\n          const prod = element.input[j].seleccion;\n          this.seleccion.receta[idx].receta.push(prod);\n        }\n      }*/\n      this.datos.respuesta = true;\n      this.datos.seleccion = this.seleccion;\n      this.dialogRef.close(this.datos);\n    } else {\n      this.snackBar.open('Por favor seleccione todas las opciones para completar.', 'Combos', { duration: 7000 });\n    }\n  }\n\n  todosSeleccionados = (multi: any[]): boolean => {\n    let vanTodos = true;\n\n    Loop1:\n    for (const element of multi) {\n      for (const inp of element.input) {\n        if (inp.seleccion.articulo === undefined) {\n          vanTodos = false;\n          break Loop1;\n        }\n      }\n    }\n\n    return vanTodos;\n  }\n\n  onDismiss(): void {\n    this.datos.respuesta = false;\n    this.dialogRef.close(this.datos);\n  }\n\n}\n\n","<mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col m12 s12\">\n            <h5>Cantidad</h5>\n            <mat-form-field class=\"fullWidth\">\n                <!--<input type=\"number\" *ngIf=\"!esMovil\" matKeyboard (change)=\"setCantidad()\" matInput placeholder=\"Cantidad\" min=\"1\" step=\"1\" [(ngModel)] =\"seleccion.cantidad\" [ngModelOptions]=\"{standalone: true}\">\n                <input type=\"number\" *ngIf=\"esMovil\" (change)=\"setCantidad()\" matInput placeholder=\"Cantidad\" min=\"1\" step=\"1\" [(ngModel)] =\"seleccion.cantidad\" [ngModelOptions]=\"{standalone: true}\">-->\n                <input type=\"number\" (change)=\"setCantidad()\" matInput placeholder=\"Cantidad\" min=\"1\" step=\"1\" [(ngModel)] =\"seleccion.cantidad\" [ngModelOptions]=\"{standalone: true}\">\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div *ngFor=\"let rec of combo.receta\">\n                <div *ngIf=\"rec.receta.length > 0\">\n                    <h5>\n                        {{rec.descripcion}}\n                    </h5>\n                </div>\n                <div class=\"row\" *ngIf=\"rec.receta.length > 0\">\n                    <div class=\"col m12 s12\">\n                        <ng-container *ngFor=\"let sc of rec.input\">\n                            <mat-select [(ngModel)]=\"sc.seleccion\" [ngModelOptions]=\"{standalone: true}\">\n                                <mat-option *ngFor=\"let prod of rec.receta\" [value]=\"prod\">\n                                    {{prod.descripcion}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-divider></mat-divider>\n                            <br>\n                        </ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n\n    <div class=\"row text-right\" align=\"right\">\n        <div class=\"col m12 s12\">\n            <button mat-raised-button class=\"btnAccion\" color=\"accent\" (click)=\"onDismiss()\">\n                Cancelar\n            </button>\n            <button mat-raised-button class=\"btnAccion\" color=\"accent\" (click)=\"onConfirm()\">\n                Aceptar\n            </button>\n        </div>\n    </div>\n</mat-dialog-content>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Cliente } from '../interfaces/cliente';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'cliente';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Cliente): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.cliente ? ('/' + entidad.cliente) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getInfoContribuyente(nit: string): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_info_contribuyente/${nit}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaPresentacionComponent } from '../lista-presentacion/lista-presentacion.component';\nimport { Presentacion } from '../../../interfaces/presentacion';\n\n@Component({\n  selector: 'app-presentacion',\n  templateUrl: './presentacion.component.html',\n  styleUrls: ['./presentacion.component.css']\n})\nexport class PresentacionComponent implements OnInit {\n\n  public presentacion: Presentacion;\n  @ViewChild('lstPresentacion') lstMedidaComponent: ListaPresentacionComponent;\n\n  constructor() {\n    this.presentacion = {\n      presentacion: null, medida: null, descripcion: null, cantidad: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setPresentacion = (pres: any) => this.presentacion = {\n    presentacion: pres.presentacion,\n    medida: pres.medida.medida,\n    descripcion: pres.descripcion,\n    cantidad: pres.cantidad\n  };\n\n  refreshPresentacionList = () => this.lstMedidaComponent.loadPresentaciones();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-presentacion #lstPresentacion (getPresentacionEv)=\"setPresentacion($event)\"></app-lista-presentacion>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-presentacion #frmPresentacion [presentacion]=\"presentacion\"\n            (presentacionSavedEv)=\"refreshPresentacionList()\"></app-form-presentacion>\n    </div>\n</div>","export class usrLogin {\n    constructor(\n        public usuario: string,\n        public contrasenia: string\n    ) { }\n}\n\nexport class usrLogInResponse {\n    constructor(\n        public mensaje: string,\n        public token: string,\n        public usrname: string,\n        public nombres: string,\n        public apellidos: string,\n        public sede: number,\n        public idusr: number,\n        public sede_uuid: string,\n        public acceso: any,\n        public empresa: any,\n        public restaurante: any,\n        public usatecladovirtual: number\n    ) { }\n}\n\nexport class Usuario {\n    constructor(\n        public usuario: number,\n        public nombres: string,\n        public apellidos: string,\n        public usrname: string,\n        public contrasenia: string,\n        public sede: number,\n        public esmesero: number,\n        public pindesbloqueo: number,\n        public usatecladovirtual: number,\n        public debaja: number\n    ) { }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { Categoria } from '../interfaces/categoria';\r\nimport { Impresora } from '../interfaces/impresora';\r\nimport { CategoriaGrupo, CategoriaGrupoResponse, CategoriaGrupoImpresora } from '../interfaces/categoria-grupo';\r\nimport { Articulo, ArbolArticulos, NodoProducto, ArbolCategoriaGrupo, ArticuloResponse } from '../interfaces/articulo';\r\nimport { ArticuloDetalle } from '../interfaces/articulo-detalle';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport * as qs from 'qs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArticuloService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private articuloUrl = 'articulo';\r\n  private categoriaUrl = 'categoria';\r\n  private categoriaGrupoUrl = 'cgrupo';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();\r\n\r\n  }\r\n\r\n  getCategorias(fltr: any = {}): Observable<Categoria[]> {\r\n    return this.http.get<Categoria[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.categoriaUrl}/buscar?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getImpresoras(fltr: any = {}): Observable<Impresora[]> {\r\n    return this.http.get<Impresora[]>(\r\n      `${GLOBAL.urlMantenimientos}/impresora/buscar?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  saveCategoria(entidad: Categoria) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.categoriaUrl}/guardar${+entidad.categoria > 0 ? ('/' + entidad.categoria) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getCategoriasGrupos(fltr: any = {}): Observable<CategoriaGrupoResponse[]> {\r\n    return this.http.get<CategoriaGrupoResponse[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.categoriaGrupoUrl}/buscar?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getCategoriaGrupoImpresora(fltr: any = {}): Observable<CategoriaGrupoImpresora[]> {\r\n    return this.http.get<CategoriaGrupoImpresora[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.categoriaGrupoUrl}/get_categoria_grupo?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  adaptCategoriaGrupoResponse(lista: CategoriaGrupoResponse[]): CategoriaGrupo[] {\r\n    const lst: CategoriaGrupo[] = [];\r\n    lista.forEach(item => lst.push({\r\n      categoria_grupo: +item.categoria_grupo,\r\n      categoria: item.categoria.categoria,\r\n      categoria_grupo_grupo:\r\n        !!item.categoria_grupo_grupo && item.categoria_grupo_grupo.length > 0 ? +item.categoria_grupo_grupo[0].categoria_grupo : null,\r\n      descripcion: item.descripcion,\r\n      receta: +item.receta,\r\n      impresora: item.impresora,\r\n      descuento: item.descuento,\r\n      bodega: item.bodega,\r\n      cuenta_contable: item.cuenta_contable,\r\n      antecesores: null\r\n    }));\r\n    return lst;\r\n  }\r\n\r\n  saveCategoriaGrupo(entidad: CategoriaGrupo) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.categoriaGrupoUrl}/guardar${entidad.categoria_grupo ? ('/' + entidad.categoria_grupo) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticulos(fltr: any = {}): Observable<Articulo[]> {\r\n    return this.http.get<Articulo[]>(\r\n      `${GLOBAL.urlCatalogos}/get_articulo?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticuloCombo(fltr: any = {}): Observable<any[]> {\r\n    return this.http.get<any[]>(\r\n      `${GLOBAL.urlCatalogos}/get_articulo_combo?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticulosIngreso(fltr: any = {}): Observable<Articulo[]> {\r\n    return this.http.get<Articulo[]>(\r\n      `${GLOBAL.urlCatalogos}/get_articulo_ingreso?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticulo(fltr: any = {}): Observable<ArticuloResponse[]> {\r\n    return this.http.get<ArticuloResponse[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/buscar?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArbolArticulosMante(idsede: number): Observable<ArbolArticulos[]> {\r\n    return this.http.get<ArbolArticulos[]>(\r\n      `${GLOBAL.urlCatalogos}/get_lista_articulo/${idsede}?_todo=true`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArbolArticulos(idsede: number): Observable<ArbolArticulos[]> {\r\n    return this.http.get<ArbolArticulos[]>(\r\n      `${GLOBAL.urlCatalogos}/get_lista_articulo/${idsede}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  transformArticuloToNodo = (grps: ArbolCategoriaGrupo[]): NodoProducto[] => {\r\n    const np: NodoProducto[] = [];\r\n\r\n    for (let i = 0; i < grps.length; i++) {\r\n      let grp = grps[i];\r\n\r\n      if (!!grp.articulo && grp.articulo.length > 0) {\r\n        np.push({\r\n          id: grp.categoria_grupo,\r\n          nombre: grp.descripcion,\r\n          precio: null,\r\n          hijos: []\r\n        });\r\n\r\n        for (let j = 0; j < grp.articulo.length; j++) {\r\n          let art = grp.articulo[j];\r\n          np[np.length - 1].hijos.push({\r\n            id: art.articulo,\r\n            nombre: art.descripcion,\r\n            precio: art.precio,\r\n            impresora: art.impresora,\r\n            codigo: art.codigo,\r\n            presentacion: art.presentacion,\r\n            hijos: null\r\n          });\r\n        }\r\n      }\r\n\r\n      if (!!grp.categoria_grupo_grupo && grp.categoria_grupo_grupo.length > 0) {\r\n        np.push({\r\n          id: grp.categoria_grupo,\r\n          nombre: grp.descripcion,\r\n          precio: null,\r\n          hijos: []\r\n        });\r\n        np[np.length - 1].hijos = this.transformArticuloToNodo(grp.categoria_grupo_grupo);\r\n      }\r\n    }\r\n\r\n    return np;\r\n  }\r\n\r\n  convertToArbolNodoProducto(articulos: ArbolArticulos[]): NodoProducto[] {\r\n    const arbol: NodoProducto[] = [];\r\n\r\n    for (let i = 0; i < articulos.length; i++) {\r\n      const articulo = articulos[i];\r\n      arbol.push({\r\n        id: articulo.categoria,\r\n        nombre: articulo.descripcion,\r\n        precio: null,\r\n        hijos: this.transformArticuloToNodo(articulo.categoria_grupo)\r\n      });\r\n    }\r\n\r\n    return arbol;\r\n  }\r\n\r\n  saveArticulo(entidad: Articulo) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/guardar${entidad.articulo ? ('/' + entidad.articulo) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  tieneMovimientos(idarticulo: number) {\r\n    return this.http.get<any>(`${GLOBAL.urlMantenimientos}/${this.articuloUrl}/tiene_movimientos/${idarticulo}`).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticuloDetalle(idarticulo: number, fltr: any = {}): Observable<ArticuloDetalle[]> {\r\n    return this.http.get<ArticuloDetalle[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/buscar_receta/${idarticulo}?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  saveArticuloDetalle(entidad: ArticuloDetalle) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/guardar_receta/${entidad.receta}${entidad.articulo_detalle ? ('/' + entidad.articulo_detalle) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  replicaArticulosEnSedes(entidad: any) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/copiar`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getArticulosDePOS(): Observable<any> {\r\n    return this.http.get<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.articuloUrl}/articulos_de_pos`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaTipoCompraVentaComponent } from '../lista-tipo-compra-venta/lista-tipo-compra-venta.component';\nimport { TipoCompraVenta } from '../../../interfaces/tipo-compra-venta';\n\n@Component({\n  selector: 'app-tipo-compra-venta',\n  templateUrl: './tipo-compra-venta.component.html',\n  styleUrls: ['./tipo-compra-venta.component.css']\n})\nexport class TipoCompraVentaComponent implements OnInit {\n\n  public tipoCompraVenta: TipoCompraVenta;\n  @ViewChild('lstTipoCompraVenta') lstTipoCompraVenta: ListaTipoCompraVentaComponent;\n\n  constructor() {\n    this.tipoCompraVenta = { tipo_compra_venta: null, descripcion: null, abreviatura: null, codigo: null };\n  }\n\n  ngOnInit(): void {\n  }\n\n  setTipoCompraVenta = (tcv: TipoCompraVenta) => this.tipoCompraVenta = tcv;\n\n  refreshTipoCompraVentaList = () => this.lstTipoCompraVenta.loadTiposCompraVenta();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-tipo-compra-venta #lstTipoCompraVenta (getTipoCompraVentaEv)=\"setTipoCompraVenta($event)\"></app-lista-tipo-compra-venta>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-tipo-compra-venta #frmTipoCompraVenta [tipoCompraVenta]=\"tipoCompraVenta\" (tipoCompraVentaSavedEv)=\"refreshTipoCompraVentaList()\"></app-form-tipo-compra-venta>\n    </div>\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\nimport { ConfiguracionBotones } from '../../interfaces/config-reportes';\n\n@Component({\n  selector: 'app-rpt-botones',\n  templateUrl: './rpt-botones.component.html',\n  styleUrls: ['./rpt-botones.component.css']\n})\nexport class RptBotonesComponent implements OnInit {\n\n  @Output() htmlClick = new EventEmitter();\n  @Output() pdfClick = new EventEmitter();\n  @Output() excelClick = new EventEmitter();\n  @Output() resetParamsClick = new EventEmitter();\n\n  @Input() configuracion: ConfiguracionBotones = {\n    isHtmlDisabled: false, isPdfDisabled: false, isExcelDisabled: false, showHtml: true, showPdf: true, showExcel: true\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onHtmlClick = () => this.htmlClick.emit();\n  onPdfClick =  () => this.pdfClick.emit();\n  onExcelClick = () => this.excelClick.emit();\n  onResetParamsClick = () => this.resetParamsClick.emit();\n}\n","<div align=\"end\">\n    <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"onHtmlClick()\" [disabled]=\"configuracion.isHtmlDisabled\" *ngIf=\"configuracion.showHtml\">\n        Generar\n    </button>\n    <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"onPdfClick()\" [disabled]=\"configuracion.isPdfDisabled\" *ngIf=\"configuracion.showPdf\">\n        PDF\n    </button>    \n    <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"onExcelClick()\" [disabled]=\"configuracion.isExcelDisabled\" *ngIf=\"configuracion.showExcel\">\n        Excel\n    </button>    \n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"onResetParamsClick()\">\n        Restaurar\n    </button>\n</div>","import { Component, OnInit, ViewChild, ComponentFactoryResolver, ApplicationRef, Injector, OnDestroy, Input } from '@angular/core';\nimport { CdkPortal, DomPortalHost } from '@angular/cdk/portal';\nimport { WindowConfiguration } from '../../interfaces/window-configuration';\n\n@Component({\n  selector: 'app-window',\n  template: `\n    <ng-container *cdkPortal>\n      <ng-content></ng-content>\n    </ng-container>\n  `\n})\nexport class WindowComponent implements OnInit, OnDestroy {\n\n  // STEP 1: get a reference to the portal\n  @ViewChild(CdkPortal, { static: true }) portal: CdkPortal;\n  @Input() windowConfig: WindowConfiguration = { \n    width: 600, height: 400, left: 200, top: 200, menubar: 'no', resizable: 'no', titlebar: 'no', toolbar: 'no'\n  };\n\n  // STEP 2: save a reference to the window so we can close it\n  private externalWindow = null;\n\n  // STEP 3: Inject all the required dependencies for a PortalHost\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector) { }\n\n\n  ngOnInit() {\n    // STEP 4: create an external window\n    this.externalWindow = window.open('', '', `\n    width=${this.windowConfig.width}, \n    height=${this.windowConfig.height},\n    left=${this.windowConfig.left},\n    top=${this.windowConfig.top},\n    menubar=${this.windowConfig.menubar},\n    resizable=${this.windowConfig.resizable},\n    titlebar=${this.windowConfig.titlebar},\n    toolbar=${this.windowConfig.toolbar}\n    `);\n\n    // STEP 5: create a PortalHost with the body of the new window document    \n    const host = new DomPortalHost(\n      this.externalWindow.document.body,\n      this.componentFactoryResolver,\n      this.applicationRef,\n      this.injector\n    );\n\n    // STEP 6: Attach the portal\n    host.attach(this.portal);\n  }\n\n  ngOnDestroy() {\n    // STEP 7: close the window when this component destroyed\n    this.externalWindow.close()\n  }\n\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GLOBAL } from '../../../../../shared/global'\nimport { Configuracion, Certificador } from '../../../../interfaces/certificador';\nimport { CertificadorService } from '../../../../services/certificador.service';\n\n@Component({\n  selector: 'app-form-certificador-fel',\n  templateUrl: './form-certificador-fel.component.html',\n  styleUrls: ['./form-certificador-fel.component.css']\n})\nexport class FormCertificadorFelComponent implements OnInit {\n\n  @Input() certificador: Configuracion;\n\t@Output() CertificadorSavedEv = new EventEmitter();\n\n  public certificadores: Certificador[] = [];\n  public fraseIsr: any[] = GLOBAL.frases_isr;\n  public fraseIva: any[] = GLOBAL.frases_iva;\n  public registro: Certificador;\n  public displayedColumns: string[] = ['usuario', 'llave', 'editItem'];\n  public dataSource: MatTableDataSource<Certificador>;\n\n\tconstructor(\n\t\tprivate _snackBar: MatSnackBar,\n    private certificadorSrvc: CertificadorService\n\t) {\n\t\tthis.resetCertificador();\n\t}\n\n  ngOnInit() {\n  }\n\n  resetCertificador = () => {\n    this.registro = {\n      certificador_fel: null,\n      llave: null,\n      usuario: null,\n      firma_llave: null,\n      firma_codigo: null,\n      firma_alias: null,\n      nit: null,\n      correo_emisor: null,\n      frase_retencion_isr: null,\n      frase_retencion_iva: null,\n      certificador_configuracion: null\n    }\n  }\n  \n  loadCertificadores = (xid: number = +this.certificador.certificador_configuracion) => {\n\t\tthis.certificadorSrvc.getCertificador({certificador_configuracion:xid}).subscribe((res: any[]) => {\n\t\t\tif (res) {\n\t\t\t\tthis.certificadores = res\n\t\t\t\tthis.updateTableDataSource();\n\t\t\t}\n\t\t});\n  }\n  \n  setAcceso = (cert: any) => {\n\t\tthis.registro =  {\n\t\t\tcertificador_fel: +cert.certificador_fel,\n      llave: cert.llave,\n      usuario: cert.usuario,\n      firma_llave: cert.firma_llave,\n      firma_codigo: cert.firma_codigo,\n      firma_alias: cert.firma_alias,\n      nit: cert.nit,\n      correo_emisor: cert.correo_emisor,\n      frase_retencion_isr: +cert.frase_retencion_isr,\n      frase_retencion_iva: +cert.frase_retencion_iva,\n      certificador_configuracion: +cert.certificador_configuracion\n\t\t};\n\t}\n\n  \tonSubmit = () => {\n  \t\tthis.registro.certificador_configuracion = this.certificador.certificador_configuracion;\n\n  \t\tthis.certificadorSrvc.save(this.registro).subscribe(res => {\n  \t\t\tif (res.exito) {\n  \t\t\t\tthis.resetCertificador();\n  \t\t\t\tthis.loadCertificadores(this.certificador.certificador_configuracion);\n  \t\t\t\tthis._snackBar.open('Certificador guardado con éxito...', 'Certificador', { duration: 3000 });\n  \t\t\t} else {\n  \t\t\t\tthis._snackBar.open(`ERROR: ${res.mensaje}`, 'Certificador', { duration: 3000 });\n  \t\t\t}\n  \t\t})\n  \t}\n\n  updateTableDataSource = () => this.dataSource = new MatTableDataSource(this.certificadores);\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n\t<mat-card-title>\n\t\t<h4>Certificador {{!!this.certificador? this.certificador.nombre : '' }}</h4>\n\t</mat-card-title>\n\t<mat-card-content>\n\t\t<form #frmCertificadorFel=\"ngForm\" (ngSubmit)=\"frmCertificadorFel.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Token\" name=\"token\" [(ngModel)]=\"registro.llave\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Usuario\" name=\"usuario\" [(ngModel)]=\"registro.usuario\" minlength=\"1\" maxlength=\"25\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Llave de firma\" name=\"firma_llave\" [(ngModel)]=\"registro.firma_llave\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Código de firma\" name=\"firma_codigo\" [(ngModel)]=\"registro.firma_codigo\" minlength=\"1\" maxlength=\"25\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Alias de firma\" name=\"firma_alias\" [(ngModel)]=\"registro.firma_alias\" minlength=\"1\" maxlength=\"25\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"registro.nit\" minlength=\"1\" maxlength=\"25\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"email\" placeholder=\"Correo del emisor\" name=\"correo_emisor\" [(ngModel)]=\"registro.correo_emisor\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            \n            <mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Frase de retención de I.S.R.</mat-label>\n\t\t\t\t<mat-select name=\"isr\" [(ngModel)]=\"registro.frase_retencion_isr\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let isr of fraseIsr\" [value]=\"isr.id\">\n\t\t\t\t\t\t{{ isr.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Frase de retención de I.V.A.</mat-label>\n\t\t\t\t<mat-select name=\"iva\" [(ngModel)]=\"registro.frase_retencion_iva\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let iva of fraseIva\" [value]=\"iva.id\">\n\t\t\t\t\t\t{{ iva.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<div align=\"end\">\n\t\t\t\t<button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmCertificadorFel.form.valid\" \n\t\t\t\t*ngIf=\"this.certificador.certificador_configuracion\">\n\t\t\t\t\tGuardar\n\t\t\t\t</button>\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetCertificador()\"\n\t\t\t\t*ngIf=\"this.certificador.certificador_configuracion\">\n\t\t\t\t\tNuevo\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t\t<hr *ngIf=\"certificadores.length > 0\"/>\n\t\t<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"certificadores.length > 0\">\n\t\t\t<ng-container matColumnDef=\"usuario\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Usuario</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.usuario}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"llave\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Token</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.llave}}</td>\n\t\t\t</ng-container>\n\t\t\t<ng-container matColumnDef=\"editItem\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n\t\t\t\t\t<button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"setAcceso(element)\">\n\t\t\t\t\t\tEditar\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n\t\t\t</tr>\n\t\t</table>\n\t</mat-card-content>\n</mat-card>\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogCocina } from '../../interfaces/config-reportes';\n\nexport class ConfirmDialogModel {\n  constructor(\n    public title: string,\n    public message: string,\n    public lblBtnConfirm: string,\n    public lblBtnDeny: string,\n    public datos: DialogCocina,\n    public showTimer?: boolean\n  ) { }\n}\n\n@Component({\n  selector: 'app-dialog-cocina',\n  templateUrl: './dialog-cocina.component.html',\n  styleUrls: ['./dialog-cocina.component.css']\n})\nexport class DialogCocinaComponent implements OnInit {\n\n  public title: string;\n  public message: string;\n  public lblBtnConfirm: string;\n  public lblBtnDeny: string;\n  public datos: DialogCocina;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogCocinaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel\n  ) {\n    this.title = data.title;\n    this.message = data.message;\n    this.lblBtnConfirm = data.lblBtnConfirm;\n    this.lblBtnDeny = data.lblBtnDeny;\n    this.datos = {\n      respuesta: false,\n      tiempo: '00:00'\n    };\n  }\n\n  ngOnInit() {\n\n  }\n\n  onConfirm(datos: DialogCocina): void {\n    this.datos.respuesta = true;\n    this.datos.tiempo = datos.tiempo;\n    this.dialogRef.close(this.datos);\n  }\n\n  onDismiss(): void {\n    this.datos.respuesta = false;\n    this.dialogRef.close(this.datos);\n  }\n\n}\n","<h1 mat-dialog-title>\n    {{title}}\n  </h1>\n  <div mat-dialog-content>\n    <p>{{message}}</p>\n  </div>\n  <form *ngIf=\"data.showTimer\">\n      <mat-form-field class=\"fullWidth\">\n          <input type=\"number\" matInput placeholder=\"Minutos\" min=\"0\" max=\"59\" step=\"1\" [(ngModel)] =\"datos.tiempo\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n  </form>\n  <div mat-dialog-actions align=\"center\">\n    <button mat-raised-button class=\"btnConfig\" (click)=\"onDismiss()\">{{lblBtnDeny}}</button>\n    <button mat-raised-button class=\"btnConfig\" color=\"accent\" (click)=\"onConfirm(datos)\">{{lblBtnConfirm}}</button>\n  </div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { ListaVendorTerceroComponent } from '../lista-vendor-tercero/lista-vendor-tercero.component';\r\nimport { FormVendorTerceroComponent } from '../form-vendor-tercero/form-vendor-tercero.component';\r\nimport { VendorTerceroResponse, VendorTercero } from '../../../interfaces/vendor-tercero';\r\n\r\n@Component({\r\n  selector: 'app-vendor-tercero',\r\n  templateUrl: './vendor-tercero.component.html',\r\n  styleUrls: ['./vendor-tercero.component.css']\r\n})\r\nexport class VendorTerceroComponent implements OnInit {\r\n\r\n  public vendorTercero: VendorTercero;\r\n  @ViewChild('lstVendorTercero') lstVendorTercero: ListaVendorTerceroComponent;\r\n  @ViewChild('frmVendorTercero') frmVendorTercero: FormVendorTerceroComponent;\r\n\r\n  constructor() {\r\n    this.vendorTercero = { vendor_tercero: null, nombre: null, comanda_origen: null }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setVendorTercero = (obj: VendorTerceroResponse) => {\r\n    this.vendorTercero = {\r\n      vendor_tercero: obj.vendor_tercero,\r\n      nombre: obj.nombre,\r\n      comanda_origen: obj.comanda_origen.comanda_origen\r\n    }\r\n    this.frmVendorTercero.vendorTercero = this.vendorTercero;\r\n    this.frmVendorTercero.frmSedeVendorTercero.resetSedeVendorTercero();\r\n    this.frmVendorTercero.frmSedeVendorTercero.sedeVendorTercero.vendor_tercero = this.vendorTercero.vendor_tercero;\r\n    this.frmVendorTercero.frmSedeVendorTercero.getSedeVendorTercero();\r\n  }\r\n\r\n  refreshVendorTerceroList = () => this.lstVendorTercero.loadVendorTercero();\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m5 s12\">\r\n        <app-lista-vendor-tercero #lstVendorTercero (getVendorTerceroEv)=\"setVendorTercero($event)\"></app-lista-vendor-tercero>\r\n    </div>\r\n    <div class=\"col m7 s12\">\r\n        <app-form-vendor-tercero #frmVendorTercero [vendorTercero]=\"vendorTercero\" (vendorTerceroSavedEv)=\"refreshVendorTerceroList()\"></app-form-vendor-tercero>        \r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\r\n\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { PROTOCOLO, ANFITRION } from './global';\r\nimport { WindowComponent } from './components/window/window.component';\r\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\r\nimport { RptFechasComponent } from './components/rpt-fechas/rpt-fechas.component';\r\nimport { RptBotonesComponent } from './components/rpt-botones/rpt-botones.component';\r\nimport { CargandoComponent } from './components/cargando/cargando.component';\r\nimport { CheckPasswordComponent } from './components/check-password/check-password.component';\r\nimport { DialogCocinaComponent } from './components/dialog-cocina/dialog-cocina.component';\r\nimport { DialogPedidoComponent } from './components/dialog-pedido/dialog-pedido.component';\r\nimport { DialogComboComponent } from './components/dialog-combo/dialog-combo.component';\r\nimport { DialogElminarProductoComponent } from './components/dialog-elminar-producto/dialog-elminar-producto.component';\r\nimport { TruncarPipe } from './pipes/truncar.pipe';\r\n\r\nconst config: SocketIoConfig = { url: `${PROTOCOLO}//${ANFITRION}:8988`, options: {} }; // Dev\r\n// const config: SocketIoConfig = { url: `${PROTOCOLO}//restouch.c807.com:8988`, options: {} }; // Prod\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FilterPipe,\r\n    WindowComponent,\r\n    ConfirmDialogComponent,\r\n    RptFechasComponent,\r\n    RptBotonesComponent,\r\n    CargandoComponent,\r\n    CheckPasswordComponent,\r\n    DialogCocinaComponent,\r\n    DialogPedidoComponent,\r\n    DialogComboComponent,\r\n    DialogElminarProductoComponent,\r\n    TruncarPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PortalModule,\r\n    FormsModule,\r\n    SocketIoModule.forRoot(config),\r\n    MatKeyboardModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n    MatSidenavModule,\r\n    MatRippleModule,\r\n    FlexLayoutModule\r\n  ],\r\n  exports: [\r\n    FilterPipe,\r\n    WindowComponent,\r\n    ConfirmDialogComponent,\r\n    RptFechasComponent,\r\n    RptBotonesComponent,\r\n    CargandoComponent,\r\n    CheckPasswordComponent,\r\n    DialogCocinaComponent,\r\n    DialogPedidoComponent,\r\n    DialogComboComponent,\r\n    TruncarPipe\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { ImpuestoEspecial } from '../../../interfaces/impuesto-especial';\nimport { ImpuestoEspecialService } from '../../../services/impuesto-especial.service';\n\n@Component({\n  selector: 'app-lista-impuesto-especial',\n  templateUrl: './lista-impuesto-especial.component.html',\n  styleUrls: ['./lista-impuesto-especial.component.css']\n})\nexport class ListaImpuestoEspecialComponent implements OnInit {\n\n  public lstImpuestosEspeciales: ImpuestoEspecial[];\n  public lstImpuestosEspecialesPaged: ImpuestoEspecial[];\n  @Output() getImpuestoEspecialEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private impuestoEspcialSrvc: ImpuestoEspecialService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadImpuestosEspeciales();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstImpuestosEspeciales, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstImpuestosEspecialesPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstImpuestosEspeciales.length;\n      this.lstImpuestosEspecialesPaged = PaginarArray(this.lstImpuestosEspeciales, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  loadImpuestosEspeciales = () => {\n    this.impuestoEspcialSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstImpuestosEspeciales = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getImpuestoEspecial = (obj: ImpuestoEspecial) => {\n    this.getImpuestoEspecialEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstImpuestosEspecialesPaged\" (click)=\"getImpuestoEspecial(element)\">\n                <mat-icon mat-list-icon>request_quote</mat-icon>\n                <h5 mat-line>{{element.descripcion}} ({{element.porcentaje | number:'1.2-2'}}%)</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Corporacion } from '../../../interfaces/sede';\r\nimport { SedeService } from '../../../services/sede.service';\r\n\r\n@Component({\r\n  selector: 'app-form-corporacion',\r\n  templateUrl: './form-corporacion.component.html',\r\n  styleUrls: ['./form-corporacion.component.css']\r\n})\r\nexport class FormCorporacionComponent implements OnInit {\r\n\r\n  @Input() corporacion: Corporacion;\r\n  @Output() corporacionSavedEv = new EventEmitter();\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sedeSrvc: SedeService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetCorporacion = () => this.corporacion = {\r\n    corporacion: null, admin_llave: null, nombre: null\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.sedeSrvc.saveCorporacion(this.corporacion).subscribe(res => {\r\n      if (res.exito) {\r\n        this.corporacionSavedEv.emit();\r\n        this.resetCorporacion();\r\n        this.snackBar.open('Corporación guardada exitosamente.', 'Corporación', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Corporación', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Corporación {{!!corporacion.corporacion ? corporacion.nombre : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmCorporacion=\"ngForm\" (ngSubmit)=\"frmCorporacion.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"corporacion.nombre\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Llave\" name=\"llave\" [(ngModel)]=\"corporacion.admin_llave\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmCorporacion.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetCorporacion()\" *ngIf=\"corporacion.corporacion\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Medida } from '../../../interfaces/medida';\nimport { MedidaService } from '../../../services/medida.service';\n\n@Component({\n  selector: 'app-lista-medida',\n  templateUrl: './lista-medida.component.html',\n  styleUrls: ['./lista-medida.component.css']\n})\nexport class ListaMedidaComponent implements OnInit {\n\n  public lstMedidas: Medida[];\n  public lstMedidasPaged: Medida[];\n  @Output() getMedidaEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private medidaSrvc: MedidaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadMedidas();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstMedidas, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstMedidasPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstMedidas.length;\n      this.lstMedidasPaged = PaginarArray(this.lstMedidas, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadMedidas = () => {\n    this.medidaSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstMedidas = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getMedida = (obj: Medida) => {\n    this.getMedidaEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstMedidasPaged\" (click)=\"getMedida(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { throwError } from 'rxjs';\n\nexport class ServiceErrorHandler {\n    errorHandler(error: any) {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n            // Get client-side error\n            errorMessage = error.error.message;\n        } else {\n            // Get server-side error\n            errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        console.log(errorMessage);\n        return throwError(errorMessage);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { VendorTercero, VendorTerceroResponse, SedeVendorTercero } from '../interfaces/vendor-tercero';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport * as qs from 'qs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VendorTerceroService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private moduleUrl = 'vendor_tercero';\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();\r\n  }\r\n\r\n  get(fltr: any = {}): Observable<VendorTerceroResponse[]> {\r\n    return this.http.get<VendorTerceroResponse[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  save(entidad: VendorTercero): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.vendor_tercero ? ('/' + entidad.vendor_tercero) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getSedeVendorTercero(fltr: any = {}): Observable<SedeVendorTercero[]> {\r\n    return this.http.get<SedeVendorTercero[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_sede_vendor_tercero?${qs.stringify(fltr)}`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));    \r\n  }\r\n\r\n  saveSedeVendorTercero(entidad: SedeVendorTercero): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_sede_vendor_tercero${!!entidad.sede_vendor_tercero ? ('/' + entidad.sede_vendor_tercero) : ''}`,\r\n      entidad\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n}\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { UsuarioTipo } from '../../../interfaces/usuario-tipo';\nimport { TipoUsuarioService } from '../../../services/tipo-usuario.service';\n\n@Component({\n\tselector: 'app-lista-tipo-usuario',\n\ttemplateUrl: './lista-tipo-usuario.component.html',\n\tstyleUrls: ['./lista-tipo-usuario.component.css']\n})\n\nexport class ListaTipoUsuarioComponent implements OnInit {\n\n\tpublic lstUsuarioTipo: UsuarioTipo[];\n\tpublic lstUsuarioTipoPaged: UsuarioTipo[];\n\t@Output() getTipoUsuarioEv = new EventEmitter();\n\t@ViewChild('paginador') paginador: MatPaginator;\n\n\tpublic length = 0;\n\tpublic pageSize = 5;\n\tpublic pageSizeOptions: number[] = [5, 10, 15];\n\tpublic pageIndex = 0;\n\tpublic pageEvent: PageEvent;\n\tpublic txtFiltro = '';\n\tpublic keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n\tpublic esMovil = false;\n\n\tconstructor(\n\t\tprivate tipoUsuarioSrvc: TipoUsuarioService,\n\t\tprivate ls: LocalstorageService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n\t\tthis.loadTipoUsuario();\n\t}\n\n\tapplyFilter(cambioPagina = false) {\n\t\tif (this.txtFiltro.length > 0) {\n\t\t\tconst tmpList = MultiFiltro(this.lstUsuarioTipo, this.txtFiltro);\n\t\t\tthis.length = tmpList.length;\n\t\t\tthis.lstUsuarioTipoPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n\t\t} else {\n\t\t\tthis.length = this.lstUsuarioTipo.length;\n\t\t\tthis.lstUsuarioTipoPaged = PaginarArray(this.lstUsuarioTipo, this.pageSize, this.pageIndex + 1);\n\t\t}\n\t\tif (!cambioPagina) {\n\t\t\tthis.paginador.firstPage();\n\t\t}\n\t}\n\n\tloadTipoUsuario = () => {\n\t\tthis.tipoUsuarioSrvc.get().subscribe(lst => {\n\t\t\tif (lst) {\n\t\t\t\tif (lst.length > 0) {\n\t\t\t\t\tthis.lstUsuarioTipo = lst;\n\t\t\t\t\tthis.applyFilter();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetTipoUsuario = (obj: UsuarioTipo) => {\n\t\tthis.getTipoUsuarioEv.emit(obj);\n\t}\n\n\tpageChange = (e: PageEvent) => {\n\t\tthis.pageSize = e.pageSize;\n\t\tthis.pageIndex = e.pageIndex;\n\t\tthis.applyFilter(true);\n\t}\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstUsuarioTipoPaged\" (click)=\"getTipoUsuario(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n                <span mat-line>{{element.jerarquia.descripcion}}</span>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>        \n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\n\n@Component({\n  selector: 'app-graficas-ventas',\n  templateUrl: './ventas.component.html',\n  styleUrls: ['./ventas.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class VentasComponent implements OnInit {\n\n  @Input() datos: any = {};\n\n  /*public xAxisPorDia: any;\n  public yAxisPorDia: any;\n  public chartTitlePorDia: string;\n  public legendPorDia: any;\n  public markerSettingsPorDia: any;\n  public toolTipSettingsPorDia: any;*/\n\n  /*public xAxisPorCategoria: any;\n  public yAxisPorCategoria: any;\n  public chartTitlePorCategoria: string;\n  public legendPorCategoria: any;\n  public markerSettingsPorCategoria: any;\n  public toolTipSettingsPorCategoria: any;*/\n\n  /*public xAxisPorTurno: any;\n  public yAxisPorTurno: any;\n  public chartTitlePorTurno: string;\n  public legendPorTurno: any;\n  public markerSettingsPorTurno: any;\n  public toolTipSettingsPorTurno: any;*/\n\n  /*public xAxisPorMesero: any;\n  public yAxisPorMesero: any;\n  public chartTitlePorMesero: string;\n  public legendPorMesero: any;\n  public markerSettingsPorMesero: any;\n  public toolTipSettingsPorMesero: any;*/\n\n  dsPorDia: ChartDataSets[] = [];\n  lblsPorDia: string[] = [];\n\n  dsPorCategoria: ChartDataSets[] = [];\n  lblsPorCategoria: string[] = [];\n\n  dsPorTurno: ChartDataSets[] = [];\n  lblsPorTurno: string[] = [];\n\n  dsPorMesero: ChartDataSets[] = [];\n  lblsPorMesero: string[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    /*console.log('DATOS = ', this.datos);\n    this.setGraficaPorDia();\n    this.setGraficaPorCategoria();\n    this.setGraficaPorTurno();\n    this.setGraficaPorMesero();*/\n  }\n\n  setGraficas = () => {\n    this.setGraficaPorDia();\n    this.setGraficaPorCategoria();\n    this.setGraficaPorTurno();\n    this.setGraficaPorMesero();\n  }\n\n  setGraficaPorDia = () => {\n    /*this.chartTitlePorDia = 'Ventas por día';\n    this.toolTipSettingsPorDia = { enable: true };\n    this.markerSettingsPorDia = { visible: true, dataLabel: { visible: true } };\n    this.legendPorDia = { visible: true };\n    this.xAxisPorDia = { title: 'Día', valueType: 'Category', labelIntersectAction: 'Rotate90' };\n    this.yAxisPorDia = { title: 'Ventas' };*/\n    this.dsPorDia = [];\n    this.lblsPorDia = [];\n    if (this.datos.porDia) {\n      this.datos.porDia.forEach((pd: any) => {\n        const dataPorDia: number[] = [];\n        pd.datos.forEach((d: any) => {\n          dataPorDia.push(+d.venta);\n          const idx = this.lblsPorDia.indexOf(d.fecha);\n          if (idx < 0) {\n            this.lblsPorDia.push(d.fecha);\n          }\n        });\n\n        this.dsPorDia.push(\n          {\n            data: dataPorDia,\n            label: pd.nombre\n          }\n        );\n      });\n    }\n  }\n\n  setGraficaPorCategoria = () => {\n    /*this.chartTitlePorCategoria = 'Ventas por categoria';\n    this.toolTipSettingsPorCategoria = { enable: true };\n    this.markerSettingsPorCategoria = { visible: true, dataLabel: { visible: true } };\n    this.legendPorCategoria = { visible: true };\n    this.xAxisPorCategoria = { title: 'Categoría', valueType: 'Category', labelIntersectAction: 'Rotate90' };\n    this.yAxisPorCategoria = { title: 'Ventas' };*/\n    this.dsPorCategoria = [];\n    this.lblsPorCategoria = [];\n    if (this.datos.porCategoria) {\n      this.datos.porCategoria.forEach((pd: any) => {\n        const data: number[] = [];\n        pd.datos.forEach((d: any) => {\n          data.push(+d.venta);\n          const idx = this.lblsPorCategoria.indexOf(d.categoria);\n          if (idx < 0) {\n            this.lblsPorCategoria.push(d.categoria);\n          }\n        });\n\n        this.dsPorCategoria.push(\n          {\n            data,\n            label: pd.nombre\n          }\n        );\n      });\n    }\n  }\n\n  setGraficaPorTurno = () => {\n    /*this.chartTitlePorTurno = 'Ventas por turno';\n    this.toolTipSettingsPorTurno = { enable: true };\n    this.markerSettingsPorTurno = { visible: true, dataLabel: { visible: true } };\n    this.legendPorTurno = { visible: true };\n    this.xAxisPorTurno = { title: 'Turno', valueType: 'Category', labelIntersectAction: 'Rotate90' };\n    this.yAxisPorTurno = { title: 'Ventas' };*/\n    this.dsPorTurno = [];\n    this.lblsPorTurno = [];\n    if (this.datos.porTurno) {\n      this.datos.porTurno.forEach((pd: any) => {\n        const data: number[] = [];\n        pd.datos.forEach((d: any) => {\n          data.push(+d.venta);\n          const idx = this.lblsPorTurno.indexOf(d.turno);\n          if (idx < 0) {\n            this.lblsPorTurno.push(d.turno);\n          }\n        });\n\n        this.dsPorTurno.push(\n          {\n            data,\n            label: pd.nombre\n          }\n        );\n      });\n    }\n  }\n\n  setGraficaPorMesero = () => {\n    /*this.chartTitlePorMesero = 'Ventas por mesero';\n    this.toolTipSettingsPorMesero = { enable: true };\n    this.markerSettingsPorMesero = { visible: true, dataLabel: { visible: true } };\n    this.legendPorMesero = { visible: true };\n    this.xAxisPorMesero = { title: 'Mesero', valueType: 'Category', labelIntersectAction: 'Rotate90' };\n    this.yAxisPorMesero = { title: 'Ventas' };*/\n    this.dsPorMesero = [];\n    this.lblsPorMesero = [];\n    if (this.datos.porMesero) {\n      this.datos.porMesero.forEach((pd: any) => {\n        const data: number[] = [];\n        pd.datos.forEach((d: any) => {\n          data.push(+d.venta);\n          const idx = this.lblsPorMesero.indexOf(d.mesero);\n          if (idx < 0) {\n            this.lblsPorMesero.push(d.mesero);\n          }\n        });\n\n        this.dsPorMesero.push(\n          {\n            data,\n            label: pd.nombre\n          }\n        );\n      });\n    }\n  }\n\n}\n","<div fxLayout=\"column\" fxLayout.xs=\"column\" fxFlexFill>\n    <!--Inicia Fila superior-->\n    <div fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <!--Inicia ventas por día-->\n            <app-grafica-linea [lineChartData]=\"dsPorDia\" [lineChartLabels]=\"lblsPorDia\" [titulo]=\"'Ventas por día'\"></app-grafica-linea>\n            <!--<ejs-chart [primaryXAxis]=\"xAxisPorDia\" [primaryYAxis]=\"yAxisPorDia\" [title]=\"chartTitlePorDia\" [legendSettings]=\"legendPorDia\" [tooltip]=\"toolTipSettingsPorDia\">\n                <e-series-collection>                                        \n                    <e-series \n                        *ngFor=\"let pd of datos.porDia; index as i\" \n                        type=\"Line\" \n                        [dataSource]=\"pd.datos\" \n                        xName=\"fecha\" \n                        yName=\"venta\"                         \n                        [marker]=\"markerSettingsPorDia\">\n                    </e-series>                    \n                </e-series-collection>\n            </ejs-chart>-->\n            <!--Finaliza ventas por día-->\n        </div>\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <!--Inicia ventas por categoría-->\n            <app-grafica-linea [lineChartData]=\"dsPorCategoria\" [lineChartLabels]=\"lblsPorCategoria\" [titulo]=\"'Ventas por categoría'\"></app-grafica-linea>\n            <!--<ejs-chart [primaryXAxis]=\"xAxisPorCategoria\" [primaryYAxis]=\"yAxisPorCategoria\" [title]=\"chartTitlePorCategoria\" [legendSettings]=\"legendPorCategoria\" [tooltip]=\"toolTipSettingsPorCategoria\">\n                <e-series-collection>\n                    <e-series \n                        *ngFor=\"let porCategoria of datos.porCategoria; index as i\" \n                        type=\"Line\" \n                        [dataSource]=\"porCategoria.datos\" \n                        xName=\"categoria\" \n                        yName=\"venta\" \n                        [name]=\"porCategoria.nombre\" \n                        [marker]=\"markerSettingsPorCategoria\">\n                    </e-series>\n                </e-series-collection>\n            </ejs-chart>-->\n            <!--Finaliza ventas por categoría-->\n        </div>\n    </div>\n    <!--Termina fila superior-->\n    <!--Inicia fila inferior-->\n    <div fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <!--Inicia ventas por turno-->\n            <app-grafica-linea [lineChartData]=\"dsPorTurno\" [lineChartLabels]=\"lblsPorTurno\" [titulo]=\"'Ventas por turno'\"></app-grafica-linea>\n            <!--<ejs-chart [primaryXAxis]=\"xAxisPorTurno\" [primaryYAxis]=\"yAxisPorTurno\" [title]=\"chartTitlePorTurno\" [legendSettings]=\"legendPorTurno\" [tooltip]=\"toolTipSettingsPorTurno\">\n                <e-series-collection>\n                    <e-series \n                        *ngFor=\"let porTurno of datos.porTurno; index as i\" \n                        type=\"Line\" \n                        [dataSource]=\"porTurno.datos\" \n                        xName=\"turno\" \n                        yName=\"venta\" \n                        [name]=\"porTurno.nombre\" \n                        [marker]=\"markerSettingsPorTurno\">\n                    </e-series>\n                </e-series-collection>\n            </ejs-chart>-->\n            <!--Finaliza ventas por turno-->\n        </div>\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <!--Inicia ventas por mesero-->\n            <app-grafica-linea [lineChartData]=\"dsPorMesero\" [lineChartLabels]=\"lblsPorMesero\" [titulo]=\"'Ventas por mesero'\"></app-grafica-linea>\n            <!--<ejs-chart [primaryXAxis]=\"xAxisPorMesero\" [primaryYAxis]=\"yAxisPorMesero\" [title]=\"chartTitlePorMesero\" [legendSettings]=\"legendPorMesero\" [tooltip]=\"toolTipSettingsPorMesero\">\n                <e-series-collection>\n                    <e-series \n                        *ngFor=\"let porMesero of datos.porMesero; index as i\" \n                        type=\"Line\" \n                        [dataSource]=\"porMesero.datos\" \n                        xName=\"mesero\" \n                        yName=\"venta\" \n                        [name]=\"porMesero.nombre\" \n                        [marker]=\"markerSettingsPorMesero\">\n                    </e-series>\n                </e-series-collection>\n            </ejs-chart>-->\n            <!--Finaliza ventas por mesero-->\n        </div>\n    </div>\n    <!--Termina fila inferior-->\n</div>","<mat-toolbar *ngIf=\"isLogged\">\n    <mat-toolbar-row id=\"mtbHeader\">\n        <button mat-icon-button>\n            <mat-icon (click)=\"toggleSidenav()\">menu</mat-icon>\n        </button>\n        <app-header id=\"appHeader\"></app-header>\n    </mat-toolbar-row>\n</mat-toolbar>\n<mat-sidenav-container class=\"matSideNavContainer\">\n    <mat-sidenav #sidenav mode=\"over\" class=\"menuSideNav\" [(opened)]=\"opened\" *ngIf=\"isLogged\" position=\"start\">\n        <app-menu (elementClicked)=\"toggleSidenav()\"></app-menu>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <router-outlet (activate)=\"checkIfUserIsLogged()\"></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from './admin/services/localstorage.service';\nimport { GLOBAL } from './shared/global';\nimport { UsuarioService } from './admin/services/usuario.service';\nimport { Router } from '@angular/router';\nimport { AccesoUsuario, SubModulo, NodoAppMenu } from './admin/interfaces/acceso-usuario';\nimport { AppMenuService } from './admin/services/app-menu.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  @ViewChild('sidenav') sidenav: any;\n\n  title = 'Rest-Touch';\n  isLogged: boolean = false;\n  opened: boolean;\n\n  public usrAppMenu: AccesoUsuario[] = [];\n\n  constructor(\n    private ls: LocalstorageService,\n    private usrSrvc: UsuarioService,\n    private router: Router,\n    private appMenuSrvc: AppMenuService\n  ) { }\n\n  async ngOnInit() {\n    await this.checkIfUserIsLogged();\n  }\n\n  private goToLogin = () => {\n    this.isLogged = false;\n    this.usrAppMenu = [];\n    this.router.navigate(['/admin/login']);        \n  }\n\n  async checkIfUserIsLogged() {\n    const usrData = this.ls.get(GLOBAL.usrTokenVar);\n    if (usrData) {\n      if (usrData.token) {\n        const valido = await this.usrSrvc.checkUserToken();\n        if (valido) {\n          this.isLogged = true;\n          this.usrAppMenu = this.usrSrvc.getAppMenu();\n          this.appMenuSrvc.updData(this.usrAppMenu);\n          //console.log(this.usrAppMenu);\n        } else {\n          this.goToLogin();\n        }\n      } else {\n        this.goToLogin();\n      }\n    } else {\n      this.goToLogin();\n    }\n  }\n\n  toggleSidenav() {\n    this.sidenav.toggle();\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\ninterface IConfiguracion {\n  w: number;\n  h: number;\n  align: string;\n  size: number;\n}\n\n@Component({\n  selector: 'app-cargando',\n  templateUrl: './cargando.component.html',\n  styleUrls: ['./cargando.component.css']\n})\nexport class CargandoComponent implements OnInit {\n\n  @Input() configuracion: IConfiguracion = { w: 150, h: 150, align: 'center', size: 100 };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div [align]=\"configuracion.align\" [style.width.%]=\"configuracion.size\">\n    <img id=\"imgCargando\" src=\"/assets/img/loading.gif\" alt=\"Cargando...\" [style.width.px]=\"configuracion.w\" [style.height.px]=\"configuracion.h\" >\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { DocumentoTipo } from '../../../interfaces/documento-tipo';\nimport { DocumentoTipoService } from '../../../services/documento-tipo.service';\n\n@Component({\n  selector: 'app-form-documento-tipo',\n  templateUrl: './form-documento-tipo.component.html',\n  styleUrls: ['./form-documento-tipo.component.css']\n})\nexport class FormDocumentoTipoComponent implements OnInit {\n\n  @Input() documentoTipo: DocumentoTipo;\n  @Output() documentoTipoSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private documentoTipoSrvc: DocumentoTipoService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit(): void {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetDocumentoTipo() {\n    this.documentoTipo = { documento_tipo: null, descripcion: null, codigo: null };\n  }\n\n  onSubmit() {\n    this.documentoTipoSrvc.save(this.documentoTipo).subscribe((res) => {\n      if (res) {\n        this.resetDocumentoTipo();\n        this.documentoTipoSavedEv.emit();\n        this.snackBar.open('Grabado con éxito.', 'Tipo de documento', { duration: 5000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Tipo de compra/venta</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmDocumentoTipo=\"ngForm\" (ngSubmit)=\"frmDocumentoTipo.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"documentoTipo.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"documentoTipo.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n            </mat-form-field>            \n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"documentoTipo.codigo\" minlength=\"1\" maxlength=\"45\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"documentoTipo.codigo\" minlength=\"1\" maxlength=\"45\">\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmDocumentoTipo.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetDocumentoTipo()\" *ngIf=\"documentoTipo.documento_tipo\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaRazonAnulacionComponent } from '../lista-razon-anulacion/lista-razon-anulacion.component';\n\nimport { RazonAnulacion } from '../../../interfaces/razon-anulacion';\n\n@Component({\n  selector: 'app-razon-anulacion',\n  templateUrl: './razon-anulacion.component.html',\n  styleUrls: ['./razon-anulacion.component.css']\n})\nexport class RazonAnulacionComponent implements OnInit {\n\n  public razon: RazonAnulacion;\n  @ViewChild('lstRazon') lstRazonComponent: ListaRazonAnulacionComponent;\n\n  constructor() { \n    this.razon = {\n      razon_anulacion: null,\n      descripcion: null,\n      anulado: 0\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setRazonAnulacion = (obj: RazonAnulacion) => this.razon = obj;\n  refreshRazonList = () => this.lstRazonComponent.getRazones();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-razon-anulacion #lstRazon (getRazonAnulacionEv)=\"setRazonAnulacion($event)\"></app-lista-razon-anulacion>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-razon-anulacion #frmRazon [razon]=\"razon\" (razonAnulacionSavedEv)=\"refreshRazonList()\"></app-form-razon-anulacion>\n    </div>\n</div>\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaImpresoraComponent } from '../lista-impresora/lista-impresora.component';\nimport { Impresora } from '../../../interfaces/impresora';\n\n@Component({\n  selector: 'app-impresora',\n  templateUrl: './impresora.component.html',\n  styleUrls: ['./impresora.component.css']\n})\nexport class ImpresoraComponent implements OnInit {\n\n  public impresora: Impresora;\n  @ViewChild('lstImpresora') lstImpresoraComponent: ListaImpresoraComponent;\n\n  constructor() {\n    this.impresora = {\n      impresora: null, nombre: null, direccion_ip: null, ubicacion: null, bluetooth: 0, sede: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setImpresora = (cli: Impresora) => this.impresora = cli;\n\n  refreshImpresoraList = () => this.lstImpresoraComponent.loadImpresoras();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-impresora #lstImpresora (getImpresoraEv)=\"setImpresora($event)\"></app-lista-impresora>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-impresora #frmImpresora [impresora]=\"impresora\" (impresoraSavedEv)=\"refreshImpresoraList()\"></app-form-impresora>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(items: any[], searchText: string, searchProp: string): any {\n    if (!items) return [];\n    if (!searchText) return items;\n    searchText = searchText.toLowerCase();\n    return items.filter(it => {\n      return it[searchProp].toLowerCase().includes(searchText);\n    });\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Proveedor } from '../../../../wms/interfaces/proveedor';\nimport { ProveedorService } from '../../../../wms/services/proveedor.service';\n\n@Component({\n  selector: 'app-form-proveedor',\n  templateUrl: './form-proveedor.component.html',\n  styleUrls: ['./form-proveedor.component.css']\n})\nexport class FormProveedorComponent implements OnInit {\n\n  @Input() proveedor: Proveedor;\n  @Output() proveedorSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private proveedorSrvc: ProveedorService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetProveedor = () => this.proveedor = {\n    proveedor: null,\n    corporacion: null,\n    razon_social: null,\n    nit: null,\n    codigo: null\n  }\n\n  onSubmit = () => {\n    this.proveedor.nit = this.proveedor.nit.trim().toUpperCase().replace(/[^0-9KkcCfF]/gi, '');\n    this.proveedorSrvc.save(this.proveedor).subscribe(res => {\n      if (res.exito) {\n        this.proveedorSavedEv.emit();\n        this.resetProveedor();\n        this.snackBar.open('Proveedor agregado...', 'Proveedores', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Proveedores', { duration: 3000 });\n      }\n    });\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Proveedor {{!!proveedor.proveedor ? proveedor.razon_social : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmProveedor=\"ngForm\" (ngSubmit)=\"frmProveedor.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Razón Social\" name=\"razon_social\" [(ngModel)]=\"proveedor.razon_social\" minlength=\"1\" maxlength=\"150\" required>\n                <input matInput type=\"text\" *ngIf=\"esMovil\" placeholder=\"Razón Social\" name=\"razon_social\" [(ngModel)]=\"proveedor.razon_social\" minlength=\"1\" maxlength=\"150\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"proveedor.nit\" minlength=\"1\" maxlength=\"25\" required>\n                <input matInput type=\"text\" *ngIf=\"esMovil\" placeholder=\"N.I.T.\" name=\"nit\" [(ngModel)]=\"proveedor.nit\" minlength=\"1\" maxlength=\"25\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"proveedor.codigo\" minlength=\"1\" maxlength=\"45\">\n                <input matInput type=\"text\" *ngIf=\"esMovil\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"proveedor.codigo\" minlength=\"1\" maxlength=\"45\">\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmProveedor.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetProveedor()\" *ngIf=\"proveedor.proveedor\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Presentacion } from '../../../interfaces/presentacion';\nimport { PresentacionService } from '../../../services/presentacion.service';\n\n@Component({\n  selector: 'app-lista-presentacion',\n  templateUrl: './lista-presentacion.component.html',\n  styleUrls: ['./lista-presentacion.component.css']\n})\nexport class ListaPresentacionComponent implements OnInit {\n\n  public lstPresentacion: Presentacion[];\n  public lstPresentacionPaged: Presentacion[];\n  @Output() getPresentacionEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private presentacionSrvc: PresentacionService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadPresentaciones();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstPresentacion, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstPresentacionPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstPresentacion.length;\n      this.lstPresentacionPaged = PaginarArray(this.lstPresentacion, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  loadPresentaciones = () => {\n    this.presentacionSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstPresentacion = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getPresentacion = (obj: Presentacion) => {\n    this.getPresentacionEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstPresentacionPaged\" (click)=\"getPresentacion(element)\">\n                <mat-icon mat-list-icon>card_membership</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n                <span mat-line>{{element.cantidad | number:'1.2-2'}} {{element.medida.descripcion}}</span>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { RazonAnulacion } from '../interfaces/razon-anulacion';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnulacionService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'ranulacion';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<RazonAnulacion[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<RazonAnulacion[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: RazonAnulacion): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.razon_anulacion ? ('/' + entidad.razon_anulacion) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Sede, Empresa } from '../../../interfaces/sede';\r\nimport { Certificador } from '../../../interfaces/certificador';\r\nimport { SedeService } from '../../../services/sede.service';\r\nimport { CertificadorService } from '../../../services/certificador.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\n\r\n@Component({\r\n  selector: 'app-form-sede',\r\n  templateUrl: './form-sede.component.html',\r\n  styleUrls: ['./form-sede.component.css']\r\n})\r\nexport class FormSedeComponent implements OnInit {\r\n\r\n  public sedes: Sede[] = [];\r\n  public certificadores: Certificador[] = [];\r\n\r\n  @Input() sede: Sede;\r\n  @Input() empresa: Empresa;\r\n  @Output() sedeSavedEv = new EventEmitter();\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private sedeSrvc: SedeService,\r\n    private certificadorSrvc: CertificadorService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getSedes();\r\n    this.getCertificador();\r\n  }\r\n\r\n  getSedes = () => {\r\n    this.sedeSrvc.get().subscribe((lst: Sede[]) => {\r\n      if (lst) {\r\n        if (lst.length > 0) {\r\n          this.sedes = lst;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getCertificador = () => {\r\n    this.certificadorSrvc.getCertificador().subscribe(res => {\r\n      this.certificadores = res;\r\n    });\r\n  }\r\n\r\n  resetSede = () => this.sede = {\r\n    sede: null,\r\n    empresa: null,\r\n    sede_padre: null,\r\n    nombre: null,\r\n    certificador_fel: null,\r\n    fel_establecimiento: null,\r\n    direccion: null,\r\n    telefono: null,\r\n    correo: null,\r\n    codigo: null,\r\n    cuenta_contable: null\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if(this.sede.correo && this.sede.correo.length > 0) {\r\n      if (this.sede.correo.match(GLOBAL.FORMATO_EMAIL)) {\r\n        this.guardarSede();\r\n      } else {\r\n        this.snackBar.open(`El correo '${this.sede.correo}' no es válido.`, 'Sede', { duration: 3000 });\r\n      }\r\n    } else {\r\n      this.guardarSede();\r\n    }\r\n  }\r\n\r\n  guardarSede = () => {\r\n    this.sede.empresa = this.empresa.empresa;  \r\n    this.sedeSrvc.saveSede(this.sede).subscribe(res => {\r\n      if (res.exito) {\r\n        this.sedeSavedEv.emit();\r\n        this.resetSede();\r\n        this.getSedes();\r\n        this.snackBar.open('Sede guardada exitosamente.', 'Sede', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Sede', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  validatePhone = (e: any) => {\r\n    const inp = String.fromCharCode(e.keyCode);\r\n    if (/[0-9 +()-]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  validateEmail = (e: any) => {\r\n    const inp = String.fromCharCode(e.keyCode);\r\n    if (/[a-zA-Z0-9_@.]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Sede {{!!sede.sede ? sede.nombre : ''}}\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmSede=\"ngForm\" (ngSubmit)=\"frmSede.form.valid && onSubmit()\" novalidate>\r\n            <mat-form-field class=\"fullWidth\">\r\n\t\t\t\t<mat-label>Sede Padre</mat-label>\r\n\t\t\t\t<mat-select name=\"sede\" [(ngModel)]=\"sede.sede_padre\">\r\n\t\t\t\t\t<mat-option></mat-option>\r\n\t\t\t\t\t<mat-option *ngFor=\"let s of sedes\" [value]=\"s.sede\" [disabled]=\"+s.sede === +this.sede.sede\">\r\n\t\t\t\t\t\t{{ s.nombre }}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"sede.nombre\" minlength=\"1\" maxlength=\"100\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Dirección\" name=\"direccion\" [(ngModel)]=\"sede.direccion\" minlength=\"1\" maxlength=\"150\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Teléfono\" name=\"telefono\" [(ngModel)]=\"sede.telefono\" minlength=\"1\" maxlength=\"25\" (keypress)=\"validatePhone($event)\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Correo electrónico\" name=\"correo\" [(ngModel)]=\"sede.correo\" minlength=\"1\" maxlength=\"75\" (keypress)=\"validateEmail($event)\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"sede.codigo\" minlength=\"1\" maxlength=\"45\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"text\" placeholder=\"Cuenta contable\" name=\"cuenta_contable\" [(ngModel)]=\"sede.cuenta_contable\" minlength=\"1\" maxlength=\"10\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"number\" step=\"1\" placeholder=\"Establecimiento F.E.L.\" name=\"fel_establecimiento\" [(ngModel)]=\"sede.fel_establecimiento\">\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n\t\t\t\t<mat-label>Certificador F.E.L.</mat-label>\r\n\t\t\t\t<mat-select name=\"certificador_fel\" [(ngModel)]=\"sede.certificador_fel\" required>\r\n\t\t\t\t\t<mat-option></mat-option>\r\n\t\t\t\t\t<mat-option *ngFor=\"let cert of certificadores\" [value]=\"cert.certificador_fel\">\r\n\t\t\t\t\t\t{{ cert.nombre }} - {{ cert.usuario }}\r\n\t\t\t\t\t</mat-option>\r\n\t\t\t\t</mat-select>\r\n\t\t\t</mat-form-field>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmSede.form.valid || !empresa.empresa\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetSede()\" *ngIf=\"sede.sede\">\r\n                    Nueva\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\ninterface IDataFPComandaOrigen {\r\n  comanda_origen: number  \r\n}\r\n\r\n@Component({\r\n  selector: 'app-forma-pago-comanda-origen-dialog',\r\n  templateUrl: './forma-pago-comanda-origen-dialog.component.html',\r\n  styleUrls: ['./forma-pago-comanda-origen-dialog.component.css']\r\n})\r\nexport class FormaPagoComandaOrigenDialogComponent implements OnInit { \r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormaPagoComandaOrigenDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IDataFPComandaOrigen\r\n  ) { }\r\n\r\n  ngOnInit(): void {    \r\n    // console.log('DATA = ', this.data);    \r\n  }\r\n\r\n  cancelar = () => this.dialogRef.close();\r\n}\r\n","<div mat-dialog-content class=\"contenido\">\r\n    <app-forma-pago-comanda-origen #dialogFpco [comanda_origen]=\"data.comanda_origen\"></app-forma-pago-comanda-origen>\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button (click)=\"cancelar()\" color=\"accent\">\r\n        Cerrar\r\n    </button>\r\n</div>\r\n\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { FormaPago } from '../../../interfaces/forma-pago';\nimport { FpagoService } from '../../../services/fpago.service';\n\n@Component({\n  selector: 'app-lista-pago',\n  templateUrl: './lista-pago.component.html',\n  styleUrls: ['./lista-pago.component.css']\n})\nexport class ListaPagoComponent implements OnInit {\n\n  public listaFpago: FormaPago[];\n  public listaFpagoPaged: FormaPago[];\n  @Output() getFpagoEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private fpagoSrvc: FpagoService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.getFormasPago();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaFpago, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaFpagoPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaFpago.length;\n      this.listaFpagoPaged = PaginarArray(this.listaFpago, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  getFormasPago = () => {\n    this.fpagoSrvc.get().subscribe((lst: FormaPago[]) => {\n      if (lst) {\n        if (lst.length > 0) {\n          lst = lst.map(fp => {\n            fp.pedirdocumento = +fp.pedirdocumento;\n            fp.adjuntararchivo = +fp.adjuntararchivo;\n            fp.pedirautorizacion = +fp.pedirautorizacion;\n            fp.sinfactura = +fp.sinfactura;\n            fp.activo = +fp.activo;\n            return fp;\n          });\n          this.listaFpago = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getFpago = (obj: FormaPago) => {\n    this.getFpagoEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaFpagoPaged\" (click)=\"getFpago(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { TokenAuthInterceptor } from './shared/interceptors/token-auth.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { AdminModule } from './admin/admin.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    AdminModule,\n    BrowserAnimationsModule,\n    MatSidenavModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenAuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\n// import { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { OrdenarArrayObjetos } from '../../../../shared/global';\n// import * as moment from 'moment';\n\nimport { Usuario } from '../../../interfaces/usuario';\nimport { Acceso } from '../../../interfaces/acceso';\nimport { AccesoUsuarioService } from '../../../services/acceso-usuario.service';\nimport { Modulo } from '../../../interfaces/modulo';\nimport { ModuloService } from '../../../services/modulo.service';\nimport { SubModulo } from '../../../interfaces/sub-modulo';\nimport { SubModuloService } from '../../../services/sub-modulo.service';\nimport { Opcion } from '../../../interfaces/opcion';\nimport { OpcionService } from '../../../services/opcion.service';\n\n@Component({\n\tselector: 'app-form-acceso-usuario',\n\ttemplateUrl: './form-acceso-usuario.component.html',\n\tstyleUrls: ['./form-acceso-usuario.component.css']\n})\n\nexport class FormAccesoUsuarioComponent implements OnInit {\n\n\t@Input() usuario: Usuario;\n\t@Output() AccesoUsuarioSavedEv = new EventEmitter();\n\n\tpublic accesos: Acceso[] = [];\n\tpublic acceso: Acceso;\n\tpublic displayedColumns: string[] = ['modulo', 'submodulo', 'opcion', 'editItem'];\n\tpublic dataSource: MatTableDataSource<Acceso>;\n\tpublic modulos: Modulo[] = [];\n\tpublic submodulos: SubModulo[] = [];\n\tpublic opciones: Opcion[] = [];\n\n\tconstructor(\n\t\tprivate _snackBar: MatSnackBar,\n\t\tprivate accesoUsuarioSrvc: AccesoUsuarioService,\n\t\tprivate moduloSrvc: ModuloService,\n\t\tprivate subModuloSrvc: SubModuloService,\n\t\tprivate opcionSrvc: OpcionService\n\t) {\n\t\tthis.acceso = {\n\t\t\tacceso: null, modulo: null, usuario: null, submodulo: null, opcion: null, activo: 1\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.loadAccesos(this.usuario.usuario);\n\t\tthis.loadModulos();\n\t}\n\n\tloadAccesos = (idusuario: number = +this.usuario.usuario) => {\n\t\tthis.accesoUsuarioSrvc.get({ usuario: idusuario }).subscribe((res: any[]) => {\n\t\t\tif (res) {\n\t\t\t\tthis.accesos = res\n\t\t\t\tthis.updateTableDataSource();\n\t\t\t}\n\t\t});\n\t}\n\n\tloadModulos = () => {\n\t\tthis.moduloSrvc.get().subscribe(res => {\n\t\t\tif (res) {\n\t\t\t\tthis.modulos = res;\n\t\t\t}\n\t\t});\n\t}\n\n\tloadSubModulos = (idmodulo: number) => {\n\t\tif (idmodulo) {\n\t\t\tthis.subModuloSrvc.get(idmodulo).subscribe(res => {\n\t\t\t\tif (res) {\n\t\t\t\t\tlet temp = [];\n\t\t\t\t\tfor (let x in res) {\n\t\t\t\t\t\ttemp.push({\n\t\t\t\t\t\t\tsub_modulo: x,\n\t\t\t\t\t\t\tdescripcion: res[x].nombre\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tthis.submodulos = OrdenarArrayObjetos(temp, 'descripcion');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tloadOpciones = (idsubmodulo) => {\n\t\tlet temp = [];\n\n\t\tif (idsubmodulo && this.acceso.modulo) {\n\t\t\tthis.opcionSrvc.get(this.acceso.modulo, idsubmodulo).subscribe(res => {\n\t\t\t\tfor (let x in res) {\n\t\t\t\t\ttemp.push({\n\t\t\t\t\t\topcion: x,\n\t\t\t\t\t\tdescripcion: res[x].nombre\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.opciones = OrdenarArrayObjetos(temp, 'descripcion');\n\t\t\t});\n\t\t}\t\t\n\t}\n\n\tresetAcceso = () => {\n\t\tthis.acceso = {\n\t\t\tacceso: null, modulo: null, usuario: null, submodulo: null, opcion: null, activo: 1\n\t\t};\n\t}\n\n\tsetAcceso = (pres: any) => {\n\t\tthis.acceso = {\n\t\t\tacceso: pres.acceso,\n\t\t\tmodulo: pres.modulo.modulo,\n\t\t\tusuario: pres.usuario.usuario,\n\t\t\tsubmodulo: pres.submodulo.submodulo,\n\t\t\topcion: pres.opcion.opcion,\n\t\t\tactivo: pres.activo\n\t\t};\n\n\t\tthis.loadSubModulos(this.acceso.modulo);\n\t\tthis.loadOpciones(this.acceso.submodulo);\n\t}\n\n\tonSubmit = () => {\n\t\tthis.acceso.usuario = this.usuario.usuario;\n\t\tconst cp: any = JSON.parse(JSON.stringify(this.accesos));\n\t\tconst idx = cp.findIndex(a => +a.usuario.usuario === +this.acceso.usuario && +a.modulo.modulo === +this.acceso.modulo && +a.submodulo.submodulo === +this.acceso.submodulo && +a.opcion.opcion === +this.acceso.opcion);\n\t\tif (idx < 0) {\n\t\t\tthis.accesoUsuarioSrvc.save(this.acceso).subscribe(res => {\n\t\t\t\tif (res.exito) {\n\t\t\t\t\tthis.resetAcceso();\n\t\t\t\t\tthis.loadAccesos(this.usuario.usuario);\n\t\t\t\t\tthis._snackBar.open('Acceso guardado con éxito...', 'Acceso Usuario', { duration: 3000 });\n\t\t\t\t} else {\n\t\t\t\t\tthis._snackBar.open(`ERROR: ${res.mensaje}`, 'Acceso Usuario', { duration: 3000 });\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tthis._snackBar.open('Este usuario ya cuenta con este permiso.', 'Acceso Usuario', { duration: 3000 });\n\t\t}\n\t}\n\n\tremoverAcceso = (pres: any) => {\n\t\tpres.activo = 0;\n\t\tthis.accesoUsuarioSrvc.save(pres).subscribe(res => {\n\t\t\tif (res.exito) {\n\t\t\t\tthis.resetAcceso();\n\t\t\t\tthis.loadAccesos(this.usuario.usuario);\n\t\t\t\tthis._snackBar.open('Removido con éxito...', 'Acceso Usuario', { duration: 3000 });\n\t\t\t} else {\n\t\t\t\tthis._snackBar.open(`ERROR: ${res.mensaje}`, 'Acceso Usuario', { duration: 3000 });\n\t\t\t}\n\t\t})\n\t}\n\n\tupdateTableDataSource = () => this.dataSource = new MatTableDataSource(this.accesos);\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n\t<mat-card-title>\n\t\t<h4>Accesos {{!!this.usuario? this.usuario.nombres : '' }}</h4>\n\t</mat-card-title>\n\t<mat-card-content>\n\t\t<form #frmAccesoUsuario=\"ngForm\" (ngSubmit)=\"frmAccesoUsuario.form.valid && onSubmit()\" novalidate>\n\t\t\t<mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Módulo</mat-label>\n\t\t\t\t<mat-select name=\"modulo\" (selectionChange)=\"loadSubModulos($event.value)\" [(ngModel)]=\"acceso.modulo\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let m of modulos\" [value]=\"m.modulo\">\n\t\t\t\t\t\t{{ m.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Sub-Módulo</mat-label>\n\t\t\t\t<mat-select name=\"submodulo\" (selectionChange)=\"loadOpciones($event.value)\" [(ngModel)]=\"acceso.submodulo\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let m of submodulos\" [value]=\"m.sub_modulo\">\n\t\t\t\t\t\t{{ m.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Opción</mat-label>\n\t\t\t\t<mat-select name=\"opcion\" [(ngModel)]=\"acceso.opcion\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let m of opciones\" [value]=\"m.opcion\">\n\t\t\t\t\t\t{{ m.descripcion }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<!-- <mat-checkbox name=\"anulado\" class=\"fullWidth\">Anulado</mat-checkbox> -->\n\t\t\t<div>\n\t\t\t\t<strong>NOTA: Para que los permisos tengan efecto, el usuario debe cerrar sesión y volver a iniciar sesión.</strong>\n\t\t\t</div>\n\t\t\t<div align=\"end\">\n\t\t\t\t<button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmAccesoUsuario.form.valid\" \n\t\t\t\t*ngIf=\"this.usuario.usuario\">\n\t\t\t\t\tGuardar\n\t\t\t\t</button>\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetAcceso()\"\n\t\t\t\t*ngIf=\"this.usuario.usuario\">\n\t\t\t\t\tNuevo\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t\t<hr *ngIf=\"accesos.length > 0\"/>\n\t\t<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"accesos.length > 0\">\n\t\t\t<ng-container matColumnDef=\"modulo\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Módulo</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.modulo.descripcion }}</td>\n\t\t\t</ng-container>\n\t\t\t<ng-container matColumnDef=\"submodulo\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Sub-Módulo</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.submodulo.nombre}}</td>\n\t\t\t</ng-container>\n\t\t\t<ng-container matColumnDef=\"opcion\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Opción</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.opcion.nombre}}</td>\n\t\t\t</ng-container>\n\t\t\t<ng-container matColumnDef=\"editItem\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n\t\t\t\t\t<!--\n\t\t\t\t\t<button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"setAcceso(element)\">\n\t\t\t\t\t\tEditar\n\t\t\t\t\t</button>\n\t\t\t\t\t-->\n\t\t\t\t\t<button mat-raised-button type=\"button\" color=\"accent\" (click)=\"removerAcceso(element)\">\n\t\t\t\t\t\tEliminar\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n\t\t\t</tr>\n\t\t</table>\n\t</mat-card-content>\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { ComandaOrigen } from '../interfaces/comanda-origen';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComandaOrigenService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();\r\n  }\r\n\r\n  get(): Observable<ComandaOrigen[]> {\r\n    return this.http.get<ComandaOrigen[]>(\r\n      `${GLOBAL.urlCatalogos}/get_comanda_origen`\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UsuarioSedeListaComponent } from '../usuario-sede-lista/usuario-sede-lista.component';\nimport { UsuarioSedeFormComponent } from '../usuario-sede-form/usuario-sede-form.component';\nimport { Usuario } from '../../../interfaces/usuario';\n\n@Component({\n  selector: 'app-usuario-sede',\n  templateUrl: './usuario-sede.component.html',\n  styleUrls: ['./usuario-sede.component.css']\n})\nexport class UsuarioSedeComponent implements OnInit {\n\n  public usuario: Usuario;\n\n\t@ViewChild('lstUsuario') lstUsuarioComponent: UsuarioSedeListaComponent;\n\t@ViewChild('frmUsuarioSede') frmUsuarioSede: UsuarioSedeFormComponent;\n\n\tconstructor() {\n\t\tthis.usuario = {\n\t\t\tusuario: null, nombres: null, apellidos: null \n\t\t};\n\t}\n\n  ngOnInit() {\n  }\n\n  setUsuario = (usr: Usuario) => {\n\t\tthis.usuario = usr;\n\t\tthis.frmUsuarioSede.loadAccesos(+this.usuario.usuario);\n\t\tthis.frmUsuarioSede.resetAcceso();\n  }\n  \n\trefreshUsuarioList = () => this.lstUsuarioComponent.loadUsuario();\n\n}\n","<div class=\"row\">\n\t<div class=\"col m5 s12\">\n\t\t<app-usuario-sede-lista #lstUsuario (getUsuarioEv)=\"setUsuario($event)\"></app-usuario-sede-lista>\n\t</div>\n\t<div class=\"col m7 s12\">\n\t\t<app-usuario-sede-form #frmUsuarioSede [usuario]=\"usuario\" (UsuarioSavedEv)=\"refreshUsuarioList()\">\n\n        </app-usuario-sede-form>\n\t</div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Usuario } from '../../../models/usuario';\nimport { UsuarioService } from '../../../services/usuario.service';\nimport { Sede } from '../../../interfaces/sede';\nimport { SedeService } from '../../../services/sede.service';\nimport { ConfiguracionService } from '../../../services/configuracion.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-form-usuario',\n  templateUrl: './form-usuario.component.html',\n  styleUrls: ['./form-usuario.component.css']\n})\nexport class FormUsuarioComponent implements OnInit {\n\n  @Input() usuario: Usuario;\n  @Output() usrSavedEv = new EventEmitter();\n  public sedes: Sede[] = [];\n  public habilitaBloqueo = false;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private usuarioSrvc: UsuarioService,\n    private sedeSrvc: SedeService,\n    private configSrvc: ConfiguracionService,\n    private ls: LocalstorageService,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadSedes();\n    this.habilitaBloqueo = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_HABILITA_BLOQUEO_INACTIVIDAD);\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.get().subscribe(res => {\n      if (res) {\n        this.sedes = res;\n      }\n    });\n  }\n\n  resetUsuario() {\n    this.usuario = new Usuario(null, null, null, null, null, null, 0, null, 0, 0);\n  }\n\n  onSubmit() {\n    if (+this.usuario.debaja === 0) {\n      this.guardarUsuario();\n    } else {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel(\n          'De baja', `¿Está seguro(a) de dar de baja a ${this.usuario.nombres + ' ' + this.usuario.apellidos}?`, 'Sí', 'No'\n        )\n      });\n      dialogRef.afterClosed().subscribe(cnf => {\n        if (cnf) {\n          this.guardarUsuario();\n        }\n      });\n    }\n  }\n\n  guardarUsuario = () => {\n    this.usuarioSrvc.save(this.usuario).subscribe((res) => {\n      if (res && res.usuario) {\n        this.resetUsuario();\n        this.usrSavedEv.emit();\n        this.snackBar.open('Grabado con éxito.', 'Usuario', { duration: 5000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Usuario', { duration: 5000 });        \n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Usuario</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmUsuario=\"ngForm\" (ngSubmit)=\"frmUsuario.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Nombres\" name=\"nombres\" [(ngModel)]=\"usuario.nombres\" maxlength=\"255\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Nombres\" name=\"nombres\" [(ngModel)]=\"usuario.nombres\" maxlength=\"255\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Apellidos\" name=\"apellidos\" [(ngModel)]=\"usuario.apellidos\" maxlength=\"255\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Apellidos\" name=\"apellidos\" [(ngModel)]=\"usuario.apellidos\" maxlength=\"255\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Usuario\" name=\"usrname\" [(ngModel)]=\"usuario.usrname\" maxlength=\"15\" required>\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Usuario\" name=\"usrname\" [(ngModel)]=\"usuario.usrname\" maxlength=\"15\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth separacionPorHint\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"password\" placeholder=\"Contraseña\" name=\"contrasenia\" minlength=\"4\" maxlength=\"10\" [(ngModel)]=\"usuario.contrasenia\" [required]=\"!usuario.usuario\">\n                <input matInput *ngIf=\"esMovil\" type=\"password\" placeholder=\"Contraseña\" name=\"contrasenia\" minlength=\"4\" maxlength=\"10\" [(ngModel)]=\"usuario.contrasenia\" [required]=\"!usuario.usuario\">\n                <mat-hint align=\"start\"><strong>La contraseña debe tener entre 4 y 10 caracteres. Se recomienda una contraseña segura pero fácil de recordar.</strong></mat-hint>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"password\" placeholder=\"Pin desbloqueo\" name=\"pindesbloqueo\" [(ngModel)]=\"usuario.pindesbloqueo\" minlength=\"4\" maxlength=\"32\" [required]=\"habilitaBloqueo\">\n                <input matInput *ngIf=\"esMovil\" type=\"password\" placeholder=\"Pin desbloqueo\" name=\"pindesbloqueo\" [(ngModel)]=\"usuario.pindesbloqueo\" minlength=\"4\" maxlength=\"32\" [required]=\"habilitaBloqueo\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Sede</mat-label>\n                <mat-select name=\"sede\" [(ngModel)]=\"usuario.sede\" required>\n                    <mat-option *ngFor=\"let s of sedes\" [value]=\"s.sede\">\n                        {{s.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-checkbox name=\"esmesero\" [(ngModel)]=\"+usuario.esmesero\" class=\"fontFamily\">Es mesero</mat-checkbox>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <mat-checkbox name=\"usatecladovirtual\" [(ngModel)]=\"+usuario.usatecladovirtual\" class=\"fontFamily\">Usa teclado virtual</mat-checkbox>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <mat-checkbox name=\"debaja\" [(ngModel)]=\"+usuario.debaja\" class=\"fontFamily\">De baja</mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmUsuario.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetUsuario()\" *ngIf=\"usuario.usuario\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaCertificadorConfiguracionComponent } from '../lista-certificador-configuracion/lista-certificador-configuracion.component';\nimport { FormCertificadorConfiguracionComponent } from '../form-certificador-configuracion/form-certificador-configuracion.component';\nimport { Configuracion } from '../../../../interfaces/certificador';\n\n@Component({\n  selector: 'app-certificador-configuracion',\n  templateUrl: './certificador-configuracion.component.html',\n  styleUrls: ['./certificador-configuracion.component.css']\n})\nexport class CertificadorConfiguracionComponent implements OnInit {\n\n  public certificador: Configuracion;\n  @ViewChild('lstCertificador') lstCertificadorComponent: ListaCertificadorConfiguracionComponent;\n\t@ViewChild('frmCertificador') frmCertificador: FormCertificadorConfiguracionComponent;\n\n\tconstructor() {\n\t\tthis.certificador = {\n      certificador_configuracion: null,\n\t\t\tnombre: null,\n      vinculo_factura: null,\n      vinculo_firma: null,\n      metodo_factura: null,\n      vinculo_anulacion: null,\n      metodo_anulacion: null,\n      vinculo_grafo: null,\n      metodo_grafo: null\n\t\t};\n\t}\n\n  ngOnInit() {\n  }\n\n  setCertificador = (conf: Configuracion) => {\n\t\tthis.certificador = conf;\n  }\n  \n\trefreshCertificadorList = () => this.lstCertificadorComponent.loadCertificador();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-certificador-configuracion #lstCertificador (getCertificadorEv)=\"setCertificador($event)\">\n\n        </app-lista-certificador-configuracion>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-certificador-configuracion #frmCertificador [certificador]=\"certificador\"\n            (certificadorSavedEv)=\"refreshCertificadorList()\"></app-form-certificador-configuracion>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport class ConfirmDialogModel {\n  constructor(\n    public titlew: string,\n    public cantidadPedido: string,\n    public lblBtnConfirm: string,\n    public lblBtnDeny: string\n  ) { }\n}\n\n@Component({\n  selector: 'app-dialog-pedido',\n  templateUrl: './dialog-pedido.component.html',\n  styleUrls: ['./dialog-pedido.component.css']\n})\nexport class DialogPedidoComponent implements OnInit {\n\n  public title: string;\n  public message: string;\n  public lblBtnConfirm: string;\n  public lblBtnDeny: string;\n  public datos: any;\n  public cantidadPedido: string;\n  public pedidos: any[] = []\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogPedidoComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel\n  ) { \n    this.datos = {\n      respuesta: false,\n      pedido: \"\"\n    }\n    this.title = data.titlew\n    this.lblBtnConfirm = data.lblBtnConfirm\n    this.lblBtnDeny = data.lblBtnDeny\n    this.cantidadPedido = data.cantidadPedido\n    console.log(+this.cantidadPedido)\n    for (let i = 0; i < +this.cantidadPedido; i++) {\n      console.log(\"asdf\")\n      this.pedidos.push({numero: i+1})\n    }\n    console.log(this.pedidos)\n  }\n\n  ngOnInit() {\n    \n  }\n\n  onConfirm(pedido: string): void {\n    this.datos.respuesta = true;\n    this.datos.pedido = pedido;\n    this.dialogRef.close(this.datos);\n  }\n\n  onDismiss(): void {\n    this.datos.respuesta = false;\n    this.dialogRef.close(this.datos);\n  }\n\n}\n","<div class=\"row\">\n  <h1 mat-dialog-title>\n    {{title}}\n  </h1>\n</div>\n<mat-dialog-content>\n  <div fxFlex=\"100%\" fxFlex.xs=\"100%\" class=\"bordeRght\">\n    <div class=\"divContenedor\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" fxFlexFill fxLayoutAlign=\"start start\">\n        <div fxFlex=\"100%\" fxLayoutAlign=\"center start\"></div>\n        <div fxFlex=\"20%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"50%\" *ngFor=\"let ped of pedidos\">\n            <mat-card class=\"mat-elevation-z4\">\n                <mat-card-header>\n                    \n                </mat-card-header>\n                <mat-card-content>\n                    <ng-container>\n                      <div class=\"row\">\n                        <div class=\"col\">\n                          <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"onConfirm(ped.numero)\">{{ped.numero}}</button>\n                        </div>\n                      </div>\n                    </ng-container>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n  </div>\n<mat-dialog-content>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Impresora } from '../../../interfaces/impresora';\nimport { ImpresoraService } from '../../../services/impresora.service';\n\n@Component({\n  selector: 'app-lista-impresora',\n  templateUrl: './lista-impresora.component.html',\n  styleUrls: ['./lista-impresora.component.css']\n})\nexport class ListaImpresoraComponent implements OnInit {\n\n  public lstImpresoras: Impresora[];\n  public lstImpresorasPaged: Impresora[];\n  @Output() getImpresoraEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private impresoraSrvc: ImpresoraService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadImpresoras();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstImpresoras, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstImpresorasPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstImpresoras.length;\n      this.lstImpresorasPaged = PaginarArray(this.lstImpresoras, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n\t\t\tthis.paginador.firstPage();\n\t\t}\n  }\n\n  loadImpresoras = () => {\n    this.impresoraSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstImpresoras = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getImpresora = (obj: Impresora) => {\n    this.getImpresoraEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstImpresorasPaged\" (click)=\"getImpresora(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { AppMenuService } from '../../services/app-menu.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DesktopNotificationService } from '../../../shared/services/desktop-notification.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  public appMenu: any[];\n\n  constructor(\n    private router: Router,\n    private ls: LocalstorageService,\n    private snackBar: MatSnackBar,\n    private usrSrvc: UsuarioService,\n    private appMenuSrvc: AppMenuService,\n    private dns: DesktopNotificationService\n  ) {\n    // this.appMenu = this.usrSrvc.getUserAppMenu();\n  }\n\n  ngOnInit() {\n    this.appMenuSrvc.getData().subscribe((res: any) => {\n      if (res) {\n        this.appMenu = res;\n        const lastModule: string = this.ls.get(GLOBAL.usrLastModuleVar);\n        if (lastModule) {\n          this.handleClick(lastModule);\n        }\n      }\n    });\n    this.dns.havePermission().then((res) => {\n      if (!res) {\n        this.dns.requestPermission();\n      }\n    });\n  }\n\n  handleClick = (modulo: string = '') => {\n    this.ls.set(GLOBAL.usrLastModuleVar, modulo);\n    const objModulo: any = this.appMenu.find(m => m.nombre === modulo);\n    // console.log(objModulo);\n    if (objModulo) {\n      const submodulo: any = this.usrSrvc.transformSubModule(objModulo.submodulo);\n      // console.log(submodulo);\n      this.appMenuSrvc.updOpciones(submodulo);\n      this.snackBar.open(`Cambio al módulo ${modulo}`, 'Módulo', { duration: 5000 });\n    }\n  }\n\n  LogOut() {\n    this.ls.clear('ng2Idle.main.expiry');\n    this.ls.clear('ng2Idle.main.idling');\n    this.ls.clear(GLOBAL.usrTokenVar);\n    this.ls.clear(GLOBAL.usrUnlockVar);\n    this.ls.clear(GLOBAL.usrLastModuleVar);\n    this.router.navigate(['/admin/login']);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\" align=\"center\">\n        <h4>¿En qué módulo quieres empezar a trabajar?</h4>\n        <button mat-raised-button class=\"divBtnSize btnAccion\" color=\"accent\" *ngFor=\"let modulo of appMenu\" (click)=\"handleClick(modulo.nombre)\">\n            <span class=\"lnkBoton\">{{modulo.nombre}}</span>\n        </button>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { LocalstorageService } from '../../../services/localstorage.service';\r\n\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { FormaPagoComandaOrigen, FormaPago } from '../../../interfaces/forma-pago';\r\nimport { ComandaOrigen } from '../../../interfaces/comanda-origen';\r\nimport { FpagoService } from '../../../services/fpago.service';\r\nimport { ComandaOrigenService } from '../../../services/comanda-origen.service';\r\n\r\n@Component({\r\n  selector: 'app-form-forma-pago-comanda-origen',\r\n  templateUrl: './form-forma-pago-comanda-origen.component.html',\r\n  styleUrls: ['./form-forma-pago-comanda-origen.component.css']\r\n})\r\nexport class FormFormaPagoComandaOrigenComponent implements OnInit {\r\n\r\n  @Input() formaPagoComandaOrigen: FormaPagoComandaOrigen;\r\n  @Output() formaPagoComandaOrigenSavedEv = new EventEmitter();\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n\r\n  public lstFormasPago: FormaPago[] = [];\r\n  public lstComandaOrigen: ComandaOrigen[] = [];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private fpagoSrvc: FpagoService,\r\n    private comandOrigenSrvc: ComandaOrigenService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.loadFormasPago();\r\n    this.loadComandaOrigen();\r\n  }  \r\n\r\n  loadFormasPago = () => {\r\n    this.fpagoSrvc.get({ activo: 1 }).subscribe(res => {\r\n      if (res) {\r\n        this.lstFormasPago = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadComandaOrigen = () => {\r\n    this.comandOrigenSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.lstComandaOrigen = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetFormaPagoComandaOrigen = () => this.formaPagoComandaOrigen = {\r\n    forma_pago_comanda_origen: null, forma_pago: null, comanda_origen: null, codigo: null\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.fpagoSrvc.saveFormaPagoComandaOrigen(this.formaPagoComandaOrigen).subscribe(res => {      \r\n      if (res.exito) {\r\n        this.formaPagoComandaOrigenSavedEv.emit();\r\n        this.resetFormaPagoComandaOrigen();\r\n        this.snackBar.open('Forma de pago relacionada con el origen de pedidos...', 'Forma de pago por origen', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Forma de pago por origen', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-title>\r\n        <h4>Forma de pago por origen</h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmFormaPagoComandaOrigen=\"ngForm\" (ngSubmit)=\"frmFormaPagoComandaOrigen.form.valid && onSubmit()\" novalidate>            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Forma de pago</mat-label>\r\n                <mat-select name=\"forma_pago\" [(ngModel)]=\"formaPagoComandaOrigen.forma_pago\" required>\r\n                    <mat-option *ngFor=\"let fp of lstFormasPago\" [value]=\"fp.forma_pago\">\r\n                        {{fp.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Origen</mat-label>\r\n                <mat-select name=\"comanda_origen\" [(ngModel)]=\"formaPagoComandaOrigen.comanda_origen\" required>\r\n                    <mat-option *ngFor=\"let comorigen of lstComandaOrigen\" [value]=\"comorigen.comanda_origen\">\r\n                        {{comorigen.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input type=\"text\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"formaPagoComandaOrigen.codigo\" minlength=\"1\" maxlength=\"500\" required>\r\n                <input type=\"text\" matInput *ngIf=\"esMovil\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"formaPagoComandaOrigen.codigo\" minlength=\"1\" maxlength=\"500\" required>\r\n            </mat-form-field>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmFormaPagoComandaOrigen.form.valid\">\r\n                    Guardar\r\n                </button>                \r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetFormaPagoComandaOrigen()\" *ngIf=\"formaPagoComandaOrigen.forma_pago_comanda_origen\">\r\n                    Nuevo\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Medida } from '../../../interfaces/medida';\nimport { MedidaService } from '../../../services/medida.service';\n\n@Component({\n  selector: 'app-form-medida',\n  templateUrl: './form-medida.component.html',\n  styleUrls: ['./form-medida.component.css']\n})\nexport class FormMedidaComponent implements OnInit {\n\n  @Input() medida: Medida;\n  @Output() medidaSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private medidaSrvc: MedidaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetMedida = () => this.medida = { medida: null, descripcion: null };\n\n  onSubmit = () => {\n    this.medidaSrvc.save(this.medida).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.medidaSavedEv.emit();\n        this.resetMedida();\n        this.snackBar.open('Medida agregada...', 'Unida de medida', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Unida de medida', { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Unidad de medida {{!!medida.medida ? medida.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmMedida=\"ngForm\" (ngSubmit)=\"frmMedida.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"medida.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"medida.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmMedida.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetMedida()\" *ngIf=\"medida.medida\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Presentacion } from '../../../interfaces/presentacion';\nimport { PresentacionService } from '../../../services/presentacion.service';\nimport { Medida } from '../../../interfaces/medida';\nimport { MedidaService } from '../../../services/medida.service';\n\n@Component({\n  selector: 'app-form-presentacion',\n  templateUrl: './form-presentacion.component.html',\n  styleUrls: ['./form-presentacion.component.css']\n})\nexport class FormPresentacionComponent implements OnInit {\n\n  @Input() presentacion: Presentacion;\n  @Output() presentacionSavedEv = new EventEmitter();\n  public medidas: Medida[] = [];\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private presentacionSrvc: PresentacionService,\n    private medidaSrvc: MedidaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetPresentacion();\n    this.loadMedidas();\n  }\n\n  loadMedidas = () => {\n    this.medidaSrvc.get().subscribe(res => {\n      if (res) {\n        this.medidas = res;\n      }\n    });\n  }\n\n  resetPresentacion = () => this.presentacion = { presentacion: null, medida: null, descripcion: null, cantidad: null };\n\n  onSubmit = () => {\n    this.presentacionSrvc.save(this.presentacion).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.presentacionSavedEv.emit();\n        this.resetPresentacion();\n        this.snackBar.open('Presentación agregada...', 'Presentación', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Presentación', { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Presentación {{!!presentacion.presentacion ? presentacion.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmMedida=\"ngForm\" (ngSubmit)=\"frmMedida.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"presentacion.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"presentacion.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Medida</mat-label>\n                <mat-select name=\"medida\" [(ngModel)]=\"presentacion.medida\" required>\n                    <mat-option *ngFor=\"let m of medidas\" [value]=\"m.medida\">\n                        {{m.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" placeholder=\"Cantidad\" name=\"cantidad\" [(ngModel)]=\"presentacion.cantidad\" step=\"0.01\" maxlength=\"10\" required>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmMedida.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetPresentacion()\"\n                    *ngIf=\"presentacion.presentacion\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { AnulacionService } from '../../../services/anulacion.service';\nimport { RazonAnulacion } from '../../../interfaces/razon-anulacion';\n\n@Component({\n  selector: 'app-lista-razon-anulacion',\n  templateUrl: './lista-razon-anulacion.component.html',\n  styleUrls: ['./lista-razon-anulacion.component.css']\n})\nexport class ListaRazonAnulacionComponent implements OnInit {\n\n  public listaRazonAnulacion: RazonAnulacion[];\n  public listaRazonAnulacionPaged: RazonAnulacion[];\n  @Output() getRazonAnulacionEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private srvAnulacion: AnulacionService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.getRazones();\n  }\n\n  getRazones = () => {\n    this.srvAnulacion.get().subscribe((res: RazonAnulacion[]) => {\n      this.listaRazonAnulacion = res;\n      this.applyFilter();\n    });\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaRazonAnulacion, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaRazonAnulacionPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaRazonAnulacion.length;\n      this.listaRazonAnulacionPaged = PaginarArray(this.listaRazonAnulacion, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina) {\n      this.paginador.firstPage();\n    }\n  }\n\n  getRazonAnulacion = (obj: RazonAnulacion) => {\n    this.getRazonAnulacionEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaRazonAnulacionPaged\" (click)=\"getRazonAnulacion(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"+sedeVendorTercero.sede_vendor_tercero > 0 || (+sedeVendorTercero.sede_vendor_tercero === 0 && +sedeVendorTercero.vendor_tercero > 0)\">\r\n    <mat-card-title>\r\n        <h4>Atiende</h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmSedeVendorTercero=\"ngForm\" (ngSubmit)=\"frmSedeVendorTercero.form.valid && onSubmit()\" novalidate>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Sede</mat-label>\r\n                <mat-select name=\"sede\" [(ngModel)]=\"sedeVendorTercero.sede\" required>\r\n                    <mat-option *ngFor=\"let s of lstSedes\" [value]=\"s.sede\">\r\n                        {{s.nombre}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmSedeVendorTercero.form.valid\">\r\n                    Guardar\r\n                </button>                \r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Sede } from '../../../interfaces/sede';\r\nimport { SedeVendorTercero } from '../../../interfaces/vendor-tercero';\r\nimport { SedeService } from '../../../services/sede.service';\r\nimport { VendorTerceroService } from '../../../services/vendor-tercero.service';\r\n\r\n@Component({\r\n  selector: 'app-form-sede-vendor-tercero',\r\n  templateUrl: './form-sede-vendor-tercero.component.html',\r\n  styleUrls: ['./form-sede-vendor-tercero.component.css']\r\n})\r\nexport class FormSedeVendorTerceroComponent implements OnInit {\r\n\r\n  @Input() sedeVendorTercero: SedeVendorTercero = { sede_vendor_tercero: null, sede: null, vendor_tercero: null };\r\n  public lstSedes: Sede[] = [];\r\n\r\n  constructor(\r\n    private sedeSrvc: SedeService,\r\n    private snackBar: MatSnackBar,\r\n    private vendorTerceroSrvc: VendorTerceroService\r\n  ) {\r\n    // this.sedeVendorTercero = { sede_vendor_tercero: null, sede: null, vendor_tercero: null };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadSedes();\r\n  }\r\n\r\n  loadSedes = () => {\r\n    this.sedeSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.lstSedes = res;\r\n      }\r\n    });\r\n  }  \r\n\r\n  resetSedeVendorTercero = () => this.sedeVendorTercero = { sede_vendor_tercero: null, sede: null, vendor_tercero: null };\r\n\r\n  onSubmit() {\r\n    this.vendorTerceroSrvc.saveSedeVendorTercero(this.sedeVendorTercero).subscribe((res) => {\r\n      if (res.exito) {        \r\n        this.snackBar.open(res.mensaje, 'Sede de vendor', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Sede de vendor', { duration: 7000 });\r\n      }\r\n    });    \r\n  }\r\n\r\n  getSedeVendorTercero = () => {    \r\n    if (+this.sedeVendorTercero.vendor_tercero > 0) {\r\n      this.vendorTerceroSrvc.getSedeVendorTercero({ vendor_tercero: +this.sedeVendorTercero.vendor_tercero }).subscribe(res => {\r\n        if (res && res.length > 0) {\r\n          this.sedeVendorTercero = res[0];          \r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { Usuario } from '../../../interfaces/usuario';\nimport { UsuarioService } from '../../../services/usuario.service';\n\n@Component({\n\tselector: 'app-lista-acceso-usuario',\n\ttemplateUrl: './lista-acceso-usuario.component.html',\n\tstyleUrls: ['./lista-acceso-usuario.component.css']\n})\nexport class ListaAccesoUsuarioComponent implements OnInit {\n\n\tpublic lstUsuario: Usuario[];\n\tpublic lstUsuarioPaged: Usuario[];\n\t@Output() getUsuarioEv = new EventEmitter();\n\n\tpublic length = 0;\n\tpublic pageSize = 5;\n\tpublic pageSizeOptions: number[] = [5, 10, 15];\n\tpublic pageIndex = 0;\n\tpublic pageEvent: PageEvent;\n\tpublic txtFiltro = '';\n\tpublic keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n\tpublic esMovil = false;\n\n\tconstructor(\n\t\tprivate UsuarioSrvc: UsuarioService,\n\t\tprivate ls: LocalstorageService\n\t) { }\n\n\tngOnInit() {\n\t\tthis.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n\t\tthis.loadUsuario();\n\t}\n\n\tapplyFilter() {\n\t\tif (this.txtFiltro.length > 0) {\n\t\t\tconst tmpList = MultiFiltro(this.lstUsuario, this.txtFiltro);\n\t\t\tthis.length = tmpList.length;\n\t\t\tthis.lstUsuarioPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n\t\t} else {\n\t\t\tthis.length = this.lstUsuario.length;\n\t\t\tthis.lstUsuarioPaged = PaginarArray(this.lstUsuario, this.pageSize, this.pageIndex + 1);\n\t\t}\n\t}\n\n\tloadUsuario = () => {\n\t\tthis.UsuarioSrvc.getAll().subscribe(lst => {\n\t\t\tif (lst) {\n\t\t\t\tif (lst.length > 0) {\n\t\t\t\t\tthis.lstUsuario = lst;\n\t\t\t\t\tthis.applyFilter();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetUsuario = (obj: Usuario) => {\n\t\tthis.getUsuarioEv.emit(obj);\n\t}\n\n\tpageChange = (e: PageEvent) => {\n\t\tthis.pageSize = e.pageSize;\n\t\tthis.pageIndex = e.pageIndex;\n\t\tthis.applyFilter();\n\t}\n}","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstUsuarioPaged\" (click)=\"getUsuario(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombres}}</h5>\n                <span mat-line>{{element.apellidos}}</span>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport {BodegaService} from '../../../../wms/services/bodega.service';\nimport {Bodega} from '../../../../wms/interfaces/bodega';\n\n@Component({\n  selector: 'app-form-bodega',\n  templateUrl: './form-bodega.component.html',\n  styleUrls: ['./form-bodega.component.css']\n})\nexport class FormBodegaComponent implements OnInit {\n\n  @Input() bodega: Bodega;\n  @Output() bodegaSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private srvBodega: BodegaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetBodega = () => this.bodega = {\n    bodega: null, descripcion: null,  sede: null, merma: null\n  }\n\n  onSubmit = () => {\n    this.srvBodega.save(this.bodega).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.bodegaSavedEv.emit();\n        this.resetBodega();\n        this.snackBar.open('Bodega agregada...', 'Bodega', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Bodega', { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Bodega {{!!bodega.bodega ? bodega.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmBodega=\"ngForm\" (ngSubmit)=\"frmBodega.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"bodega.descripcion\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"bodega.descripcion\" required>\n            </mat-form-field>\n            <mat-checkbox name=\"merma\" class=\"fullWidth\" [(ngModel)]=\"+bodega.merma\">¿Es Merma?\n            </mat-checkbox>\n            \n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmBodega.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetBodega()\"\n                    *ngIf=\"bodega.bodega\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaClienteComponent } from '../lista-cliente/lista-cliente.component';\nimport { Cliente } from '../../../interfaces/cliente';\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css']\n})\nexport class ClienteComponent implements OnInit {\n\n  public cliente: Cliente;\n  @ViewChild('lstCliente') lstClienteComponent: ListaClienteComponent;\n\n  constructor() {\n    this.cliente = { \n      cliente: null, nombre: null, direccion: null, nit: null, telefono: null, correo: null,\n      codigo_postal: null, municipio: null, departamento: null, pais_iso_dos: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setCliente = (cli: Cliente) => this.cliente = cli;\n\n  refreshClienteList = () => this.lstClienteComponent.loadClientes();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-cliente #lstCliente (getClienteEv)=\"setCliente($event)\"></app-lista-cliente>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-cliente #frmCliente [cliente]=\"cliente\" (clienteSavedEv)=\"refreshClienteList()\"></app-form-cliente>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaProveedorComponent } from '../lista-proveedor/lista-proveedor.component';\nimport { Proveedor } from '../../../../wms/interfaces/proveedor';\n\n@Component({\n  selector: 'app-proveedor',\n  templateUrl: './proveedor.component.html',\n  styleUrls: ['./proveedor.component.css']\n})\nexport class ProveedorComponent implements OnInit {\n\n  public proveedor: Proveedor;\n  @ViewChild('lstProveedor') lstProveedorComponent: ListaProveedorComponent;\n\n  constructor() {\n    this.proveedor = {\n      proveedor: null,\n      corporacion: null,\n      razon_social: null,\n      nit: null      \n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setProveedor = (prov: Proveedor) => this.proveedor = prov;\n\n  refreshProveedorList = () => this.lstProveedorComponent.loadProveedores();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-proveedor #lstProveedor (getProveedorEv)=\"setProveedor($event)\"></app-lista-proveedor>\n    </div>\n    <div class=\"col m7 s12\">        \n        <app-form-proveedor #frmProveedor [proveedor]=\"proveedor\" (proveedorSavedEv)=\"refreshProveedorList()\"></app-form-proveedor>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Impresora } from '../../../interfaces/impresora';\nimport { ImpresoraService } from '../../../services/impresora.service';\n\n@Component({\n  selector: 'app-form-impresora',\n  templateUrl: './form-impresora.component.html',\n  styleUrls: ['./form-impresora.component.css']\n})\nexport class FormImpresoraComponent implements OnInit {\n\n  @Input() impresora: Impresora;\n  @Output() impresoraSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private impresoraSrvc: ImpresoraService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetImpresora = () => this.impresora = {\n    impresora: null, nombre: null, direccion_ip: null, ubicacion: null, bluetooth: 0, sede: null, bluetooth_mac_address: null, modelo: null\n  }\n\n  onSubmit = () => {\n    this.impresoraSrvc.save(this.impresora).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.impresoraSavedEv.emit();\n        this.resetImpresora();\n        this.snackBar.open('Impresora agregada...', 'Impresora', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Impresora', { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Impresora {{!!impresora.impresora ? impresora.nombre : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmImpresora=\"ngForm\" (ngSubmit)=\"frmImpresora.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth separacionPorHint\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"impresora.nombre\" minlength=\"1\" maxlength=\"75\" required>\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"impresora.nombre\" minlength=\"1\" maxlength=\"75\" required>\n                <mat-hint align=\"start\"><strong>Nombre con el que aparece instalada en el sistema operativo.</strong></mat-hint>                \n            </mat-form-field>\n            <mat-form-field class=\"fullWidth separacionPorHint\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Dirección IP\" name=\"ip\" [(ngModel)]=\"impresora.direccion_ip\" minlength=\"1\" maxlength=\"40\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Dirección IP\" name=\"ip\" [(ngModel)]=\"impresora.direccion_ip\" minlength=\"1\" maxlength=\"40\">\n                <mat-hint align=\"start\"><strong>Ejemplo: 192.168.1.16</strong></mat-hint>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Ubicación\" name=\"ubicacion\" [(ngModel)]=\"impresora.ubicacion\" minlength=\"1\" maxlength=\"150\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Ubicación\" name=\"ubicacion\" [(ngModel)]=\"impresora.ubicacion\" minlength=\"1\" maxlength=\"150\">\n            </mat-form-field>\n            <mat-checkbox name=\"traslado\" class=\"fullWidth\" [(ngModel)]=\"+impresora.bluetooth\">¿Es bluetooth?\n            </mat-checkbox>\n            <mat-form-field class=\"fullWidth separacionPorHint\" *ngIf=\"+impresora.bluetooth === 1\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Bluetooth MAC Address\" name=\"bluetooth_mac_address\" [(ngModel)]=\"impresora.bluetooth_mac_address\" minlength=\"1\" maxlength=\"40\" [required]=\"+impresora.bluetooth === 1\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Bluetooth MAC Address\" name=\"bluetooth_mac_address\" [(ngModel)]=\"impresora.bluetooth_mac_address\" minlength=\"1\" maxlength=\"40\" [required]=\"+impresora.bluetooth === 1\">\n                <mat-hint align=\"start\"><strong>Ejemplo: AA:BB:CC:DD:EE:FF</strong></mat-hint>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"+impresora.bluetooth === 1\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Modelo\" name=\"modelo\" [(ngModel)]=\"impresora.modelo\" minlength=\"1\" maxlength=\"50\">\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Modelo\" name=\"modelo\" [(ngModel)]=\"impresora.modelo\" minlength=\"1\" maxlength=\"50\">\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmImpresora.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetImpresora()\"\n                    *ngIf=\"impresora.impresora\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\n\nimport { NodoAppMenu } from '../../interfaces/acceso-usuario';\nimport { AppMenuService } from '../../services/app-menu.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  @Output() public elementClicked = new EventEmitter();\n  \n  treeControl = new NestedTreeControl<NodoAppMenu>(node => node.hijos);\n  dataSource = new MatTreeNestedDataSource<NodoAppMenu>();\n  public opciones: NodoAppMenu[] = [];\n\n  constructor(\n    private appMenuSrvc: AppMenuService\n  ) { }\n\n  ngOnInit() {\n    this.appMenuSrvc.getOpciones().subscribe((res: NodoAppMenu[]) => {\n      //console.log('MENU = ', res);\n      this.opciones = res;\n      this.dataSource.data = this.opciones;\n    });\n  }\n\n  itemClicked() {\n    this.elementClicked.emit();\n  }\n\n  hasChild = (_: number, node: NodoAppMenu) => !!node.hijos && node.hijos.length > 0;\n\n  tieneHijos = (node: NodoAppMenu) => !!node.hijos && node.hijos.length > 0;\n\n  onProductoClicked(opc: NodoAppMenu) {\n    //this.productoClickedEv.emit(producto);\n  }\n\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\" style=\"width: 100%;\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n        <li class=\"mat-tree-node\" style=\"padding-left: 10px !important;\">\n            <!-- use a disabled button to provide padding for tree leaf -->\n            <!--<button mat-icon-button disabled></button>-->\n            <span *ngIf=\"tieneHijos(node)\">{{node.nombre}}</span>\n            <!--\n            <button mat-raised-button type=\"button\" *ngIf=\"!tieneHijos(node)\" (click)=\"itemClicked()\">{{node.nombre}}</button>\n            -->\n            <mat-list-item *ngIf=\"!tieneHijos(node)\">\n                <mat-icon mat-list-icon>{{node.icono}}</mat-icon>\n                <a [routerLink]=\"node.link\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n                    {{node.nombre}}\n                </a>\n            </mat-list-item>\n        </li>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n        <li>\n            <div class=\"mat-tree-node\">\n                <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.nombre\">\n                    <mat-icon class=\"mat-icon-rtl-mirror\" style=\"font-size: 24pt !important;\">\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                    </mat-icon>\n                </button>\n                <span *ngIf=\"tieneHijos(node)\">{{node.nombre}}</span>\n                <button mat-raised-button type=\"button\" *ngIf=\"!tieneHijos(node)\" (click)=\"onProductoClicked(node)\">{{node.nombre}}</button>\n            </div>\n            <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n                <ng-container matTreeNodeOutlet></ng-container>\n            </ul>\n        </li>\n    </mat-nested-tree-node>\n</mat-tree>\n<!--\n<mat-nav-list>\n    <h4 mat-subheader>Menú</h4>\n    <mat-list-item>\n        <mat-icon mat-list-icon>home</mat-icon>\n        <a [routerLink]=\"['/admin/dashboard']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Inicio\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>schedule</mat-icon>\n        <a [routerLink]=\"['/restaurante/turno']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Turnos\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>settings</mat-icon>\n        <a [routerLink]=\"['/restaurante/mantareas']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Mantenimiento de áreas\n        </a>\n    </mat-list-item>    \n    <mat-list-item>\n        <mat-icon mat-list-icon>restaurant</mat-icon>\n        <a [routerLink]=\"['/restaurante/tranareas']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Áreas\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>fastfood</mat-icon>\n        <a [routerLink]=\"['/wms/articulos']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Artículos\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>trending_up</mat-icon>\n        <a [routerLink]=\"['/wms/ingresos']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Ingresos\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>trending_down</mat-icon>\n        <a [routerLink]=\"['/wms/egresos']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Egresos\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>description</mat-icon>\n        <a [routerLink]=\"['/ordcomp/ordcomp']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Órdenes de compra\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>account_balance_wallet</mat-icon>\n        <a [routerLink]=\"['/pos/fpago']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Formas de pago\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>person</mat-icon>\n        <a [routerLink]=\"['/admin/cliente']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Clientes\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>line_weight</mat-icon>\n        <a [routerLink]=\"['/admin/medida']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Unidades Medida\n        </a>\n    </mat-list-item>\n    <mat-list-item>\n        <mat-icon mat-list-icon>supervisor_account</mat-icon>\n        <a [routerLink]=\"['/admin/usuario']\" routerLinkActive=\"active\" matLine (click)=\"itemClicked()\">\n            Usuarios\n        </a>\n    </mat-list-item>\n</mat-nav-list>\n-->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { SidebarDirective } from './directives/sidebar.directive';\r\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\r\n\r\nimport { PivotViewAllModule, PivotFieldListAllModule } from '@syncfusion/ej2-angular-pivotview';\r\nimport {\r\n  ChartModule, LineSeriesService, CategoryService, LegendService, DataLabelService, TooltipService\r\n} from '@syncfusion/ej2-angular-charts';\r\n\r\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\r\n\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { ClockComponent } from './components/clock/clock.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { UsuarioComponent } from './components/usuario/usuario/usuario.component';\r\nimport { ListaUsuarioComponent } from './components/usuario/lista-usuario/lista-usuario.component';\r\nimport { FormUsuarioComponent } from './components/usuario/form-usuario/form-usuario.component';\r\nimport { ClienteComponent } from './components/cliente/cliente/cliente.component';\r\nimport { ListaClienteComponent } from './components/cliente/lista-cliente/lista-cliente.component';\r\nimport { FormClienteComponent } from './components/cliente/form-cliente/form-cliente.component';\r\nimport { MedidaComponent } from './components/medida/medida/medida.component';\r\nimport { ListaMedidaComponent } from './components/medida/lista-medida/lista-medida.component';\r\nimport { FormMedidaComponent } from './components/medida/form-medida/form-medida.component';\r\nimport { PresentacionComponent } from './components/presentacion/presentacion/presentacion.component';\r\nimport { ListaPresentacionComponent } from './components/presentacion/lista-presentacion/lista-presentacion.component';\r\nimport { FormPresentacionComponent } from './components/presentacion/form-presentacion/form-presentacion.component';\r\nimport { FormClienteDialogComponent } from './components/cliente/form-cliente-dialog/form-cliente-dialog.component';\r\nimport { ImpresoraComponent } from './components/impresora/impresora/impresora.component';\r\nimport { FormImpresoraComponent } from './components/impresora/form-impresora/form-impresora.component';\r\nimport { ListaImpresoraComponent } from './components/impresora/lista-impresora/lista-impresora.component';\r\nimport { FpagoComponent } from './components/fpago/fpago/fpago.component';\r\nimport { FormPagoComponent } from './components/fpago/form-pago/form-pago.component';\r\nimport { ListaPagoComponent } from './components/fpago/lista-pago/lista-pago.component';\r\nimport { TipoUsuarioComponent } from './components/tipo-usuario/tipo-usuario/tipo-usuario.component';\r\nimport { ListaTipoUsuarioComponent } from './components/tipo-usuario/lista-tipo-usuario/lista-tipo-usuario.component';\r\nimport { FormTipoUsuarioComponent } from './components/tipo-usuario/form-tipo-usuario/form-tipo-usuario.component';\r\nimport { AccesoUsuarioComponent } from './components/acceso-usuario/acceso-usuario/acceso-usuario.component';\r\nimport { FormAccesoUsuarioComponent } from './components/acceso-usuario/form-acceso-usuario/form-acceso-usuario.component';\r\nimport { ListaAccesoUsuarioComponent } from './components/acceso-usuario/lista-acceso-usuario/lista-acceso-usuario.component';\r\nimport { TableroComponent } from './components/tablero/tablero.component';\r\nimport { ProveedorComponent } from './components/proveedor/proveedor/proveedor.component';\r\nimport { ListaProveedorComponent } from './components/proveedor/lista-proveedor/lista-proveedor.component';\r\nimport { FormProveedorComponent } from './components/proveedor/form-proveedor/form-proveedor.component';\r\nimport { VentasComponent } from './components/tablero/graficas/ventas/ventas.component';\r\nimport { SolicitaPinInactividadComponent } from './components/solicita-pin-inactividad/solicita-pin-inactividad.component';\r\nimport { ImpuestoEspecialComponent } from './components/impuestoEspecial/impuesto-especial/impuesto-especial.component';\r\nimport { FormImpuestoEspecialComponent } from './components/impuestoEspecial/form-impuesto-especial/form-impuesto-especial.component';\r\nimport { ListaImpuestoEspecialComponent } from './components/impuestoEspecial/lista-impuesto-especial/lista-impuesto-especial.component';\r\nimport { BodegaComponent } from './components/bodega/bodega/bodega.component';\r\nimport { FormBodegaComponent } from './components/bodega/form-bodega/form-bodega.component';\r\nimport { ListaBodegaComponent } from './components/bodega/lista-bodega/lista-bodega.component';\r\nimport { UsuarioSedeComponent } from './components/usuario-sede/usuario-sede/usuario-sede.component';\r\nimport { UsuarioSedeListaComponent } from './components/usuario-sede/usuario-sede-lista/usuario-sede-lista.component';\r\nimport { UsuarioSedeFormComponent } from './components/usuario-sede/usuario-sede-form/usuario-sede-form.component';\r\nimport { AcercaDeComponent } from './components/acerca-de/acerca-de.component';\r\n\r\nimport { ListaCertificadorConfiguracionComponent } from './components/certificador/configuracion/lista-certificador-configuracion/lista-certificador-configuracion.component';\r\nimport { FormCertificadorConfiguracionComponent } from './components/certificador/configuracion/form-certificador-configuracion/form-certificador-configuracion.component';\r\nimport { CertificadorConfiguracionComponent } from './components/certificador/configuracion/certificador-configuracion/certificador-configuracion.component'\r\nimport { CertificadorFelComponent } from './components/certificador/datos/certificador-fel/certificador-fel.component'\r\nimport { FormCertificadorFelComponent } from './components/certificador/datos/form-certificador-fel/form-certificador-fel.component';\r\nimport { CorporacionComponent } from './components/corporacion/corporacion/corporacion.component';\r\nimport { FormCorporacionComponent } from './components/corporacion/form-corporacion/form-corporacion.component';\r\nimport { ListaCorporacionComponent } from './components/corporacion/lista-corporacion/lista-corporacion.component';\r\nimport { FormSedeComponent } from './components/sede/form-sede/form-sede.component';\r\nimport { ListaSedeComponent } from './components/sede/lista-sede/lista-sede.component';\r\nimport { FormEmpresaComponent } from './components/empresa/form-empresa/form-empresa.component';\r\nimport { ListaEmpresaComponent } from './components/empresa/lista-empresa/lista-empresa.component';\r\nimport { RazonAnulacionComponent } from './components/razon-anulacion/razon-anulacion/razon-anulacion.component';\r\nimport { FormRazonAnulacionComponent } from './components/razon-anulacion/form-razon-anulacion/form-razon-anulacion.component';\r\nimport { ListaRazonAnulacionComponent } from './components/razon-anulacion/lista-razon-anulacion/lista-razon-anulacion.component';\r\nimport { GraficaLineaComponent } from './components/tablero/graficas/grafica-linea/grafica-linea.component';\r\nimport { TipoCompraVentaComponent } from './components/tipoCompraVenta/tipo-compra-venta/tipo-compra-venta.component';\r\nimport { FormTipoCompraVentaComponent } from './components/tipoCompraVenta/form-tipo-compra-venta/form-tipo-compra-venta.component';\r\nimport { ListaTipoCompraVentaComponent } from './components/tipoCompraVenta/lista-tipo-compra-venta/lista-tipo-compra-venta.component';\r\nimport { DocumentoTipoComponent } from './components/documento-tipo/documento-tipo/documento-tipo.component';\r\nimport { ListaDocumentoTipoComponent } from './components/documento-tipo/lista-documento-tipo/lista-documento-tipo.component';\r\nimport { FormDocumentoTipoComponent } from './components/documento-tipo/form-documento-tipo/form-documento-tipo.component';\r\nimport { NotificacionesClienteComponent } from './components/notificaciones-cliente/notificaciones-cliente.component';\r\nimport { FormaPagoComandaOrigenComponent } from './components/formaPagoComandaOrigen/forma-pago-comanda-origen/forma-pago-comanda-origen.component';\r\nimport { ListaFormaPagoComandaOrigenComponent } from './components/formaPagoComandaOrigen/lista-forma-pago-comanda-origen/lista-forma-pago-comanda-origen.component';\r\nimport { FormFormaPagoComandaOrigenComponent } from './components/formaPagoComandaOrigen/form-forma-pago-comanda-origen/form-forma-pago-comanda-origen.component';\r\nimport { FormaPagoComandaOrigenDialogComponent } from './components/formaPagoComandaOrigen/forma-pago-comanda-origen-dialog/forma-pago-comanda-origen-dialog.component';\r\nimport { VendorTerceroComponent } from './components/vendor-tercero/vendor-tercero/vendor-tercero.component';\r\nimport { ListaVendorTerceroComponent } from './components/vendor-tercero/lista-vendor-tercero/lista-vendor-tercero.component';\r\nimport { FormVendorTerceroComponent } from './components/vendor-tercero/form-vendor-tercero/form-vendor-tercero.component';\r\nimport { FormSedeVendorTerceroComponent } from './components/vendor-tercero/form-sede-vendor-tercero/form-sede-vendor-tercero.component';\r\nimport { FormSedeVendorTerceroDialogComponent } from './components/vendor-tercero/form-sede-vendor-tercero-dialog/form-sede-vendor-tercero-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent, DashboardComponent, HeaderComponent, ClockComponent, MenuComponent, SidebarDirective,\r\n    UsuarioComponent, ListaUsuarioComponent, FormUsuarioComponent, ClienteComponent, ListaClienteComponent,\r\n    FormClienteComponent, MedidaComponent, ListaMedidaComponent, FormMedidaComponent, PresentacionComponent,\r\n    ListaPresentacionComponent, FormPresentacionComponent, FormClienteDialogComponent, ImpresoraComponent,\r\n    FormImpresoraComponent, ListaImpresoraComponent, FpagoComponent, FormPagoComponent, ListaPagoComponent,\r\n    TipoUsuarioComponent, ListaTipoUsuarioComponent, FormTipoUsuarioComponent, AccesoUsuarioComponent,\r\n    FormAccesoUsuarioComponent, ListaAccesoUsuarioComponent, TableroComponent, ProveedorComponent,\r\n    ListaProveedorComponent, FormProveedorComponent, VentasComponent, SolicitaPinInactividadComponent,\r\n    ImpuestoEspecialComponent, FormImpuestoEspecialComponent, ListaImpuestoEspecialComponent,\r\n    BodegaComponent, FormBodegaComponent, ListaBodegaComponent, UsuarioSedeComponent,\r\n    UsuarioSedeListaComponent, UsuarioSedeFormComponent, ListaCertificadorConfiguracionComponent,\r\n    CertificadorConfiguracionComponent, FormCertificadorConfiguracionComponent, CertificadorFelComponent,\r\n    FormCertificadorFelComponent, AcercaDeComponent, CorporacionComponent, FormCorporacionComponent,\r\n    ListaCorporacionComponent, FormSedeComponent, ListaSedeComponent, FormEmpresaComponent, ListaEmpresaComponent, RazonAnulacionComponent,\r\n    FormRazonAnulacionComponent, ListaRazonAnulacionComponent, GraficaLineaComponent, TipoCompraVentaComponent,\r\n    FormTipoCompraVentaComponent, ListaTipoCompraVentaComponent, DocumentoTipoComponent, ListaDocumentoTipoComponent,\r\n    FormDocumentoTipoComponent, NotificacionesClienteComponent, FormaPagoComandaOrigenComponent, ListaFormaPagoComandaOrigenComponent,\r\n    FormFormaPagoComandaOrigenComponent, FormaPagoComandaOrigenDialogComponent, VendorTerceroComponent, ListaVendorTerceroComponent, FormVendorTerceroComponent, FormSedeVendorTerceroComponent, FormSedeVendorTerceroDialogComponent\r\n  ],\r\n  imports: [\r\n    CommonModule, AdminRoutingModule, HttpClientModule, FormsModule, SharedModule, MatListModule, MatIconModule, MatFormFieldModule,\r\n    MatInputModule, MatCardModule, MatDividerModule, MatTabsModule, MatTableModule, MatSelectModule, MatCheckboxModule, MatButtonModule,\r\n    MatSnackBarModule, MatToolbarModule, MatMenuModule, MatGridListModule, MatPaginatorModule, MatTreeModule, MatDialogModule,\r\n    MatProgressBarModule, PivotViewAllModule, PivotFieldListAllModule, FlexLayoutModule, ChartModule, NgIdleKeepaliveModule.forRoot(),\r\n    MatAutocompleteModule, ChartsModule, MatKeyboardModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent, MenuComponent, ListaClienteComponent, FormClienteComponent, FormClienteDialogComponent,\r\n    FormaPagoComandaOrigenComponent, ListaFormaPagoComandaOrigenComponent, FormFormaPagoComandaOrigenComponent, FormSedeVendorTerceroComponent, FormSedeVendorTerceroDialogComponent\r\n  ],\r\n  providers: [\r\n    LineSeriesService, CategoryService, LegendService, DataLabelService, TooltipService\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { ComandaService } from '../../../restaurante/services/comanda.service';\n\nexport class ConfigCheckPasswordModel {\n  constructor(\n    public tipo: number,\n    public subtitulo?: string,\n    public etiquetaAceptar?: string\n  ) { }\n}\n\n@Component({\n  selector: 'app-check-password',\n  templateUrl: './check-password.component.html',\n  styleUrls: ['./check-password.component.css']\n})\nexport class CheckPasswordComponent implements OnInit {\n\n  public pwd: string = undefined;\n\n  constructor(\n    private comandaSrvc: ComandaService,\n    public dialogRef: MatDialogRef<CheckPasswordComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfigCheckPasswordModel\n  ) { }\n\n  ngOnInit() {\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n  terminar = () => {\n    switch (+this.data.tipo) {\n      case 1: this.validarPwdGerenteTurno(); break;\n    }\n  }\n\n  validarPwdGerenteTurno = () => {\n\n    this.comandaSrvc.validaPwdGerenteTurno(this.pwd).subscribe(res => {\n      if (res.exito) {\n        this.dialogRef.close(res.esgerente);\n      } else {\n        this.dialogRef.close(false);\n      }\n    });\n  }\n\n}\n","<h1 mat-dialog-title>\n    Validar contraseña<br/>\n    {{data.subtitulo || 'Gerente de turno'}}\n</h1>\n<mat-dialog-content>\n    <form #frmValidaPwd=\"ngForm\" (ngSubmit)=\"frmValidaPwd.form.valid\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"password\" matInput placeholder=\"Contraseña\" name=\"pwd\" [(ngModel)]=\"pwd\" required>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar()\" [disabled]=\"!frmValidaPwd.form.valid\" color=\"accent\">\n        {{data.etiquetaAceptar || 'Validar'}}\n    </button>\n</mat-dialog-actions>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Certificador, Configuracion } from '../interfaces/certificador';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CertificadorService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'certificador';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  getConfig(fltr: any = {}): Observable<Configuracion[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Configuracion[]>(`${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_configuracion?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCertificador(fltr: any = {}): Observable<Certificador[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Certificador[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_certificador?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveConfig(entidad: Configuracion): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_configuracion${!!entidad.certificador_configuracion ? ('/' + entidad.certificador_configuracion) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Certificador): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_certificador/${entidad.certificador_configuracion}${!!entidad.certificador_fel ? ('/' + entidad.certificador_fel) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaBodegaComponent } from '../lista-bodega/lista-bodega.component';\nimport { FormBodegaComponent } from '../form-bodega/form-bodega.component';\n// import {BodegaService} from '../../../../wms/services/bodega.service';\nimport { Bodega } from '../../../../wms/interfaces/bodega';\n\n@Component({\n  selector: 'app-bodega',\n  templateUrl: './bodega.component.html',\n  styleUrls: ['./bodega.component.css']\n})\n\nexport class BodegaComponent implements OnInit {\n\n  public bodega: Bodega;\n  @ViewChild('lstBodega') lstBodegaComponent: ListaBodegaComponent;\n  @ViewChild('frmBodega') frmBodegaComponent: FormBodegaComponent;\n\n  constructor() {\n    this.bodega = {\n      bodega: null,\n      descripcion: \"\",\n      sede: null,\n      merma: null\n    }\n   }\n\n  ngOnInit() {\n  }\n\n  setBodega = (bode: Bodega) => {\n    // console.log(bode);\n    this.bodega = bode;\n    this.frmBodegaComponent.bodega = bode;\n  };\n\n  refreshBodegaList = () => this.lstBodegaComponent.getBodegas();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-bodega #lstBodega (getBodegaEv)=\"setBodega($event)\"></app-lista-bodega>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-bodega #frmBodega [bodega]=\"bodega\" (bodegaSavedEv)=\"refreshBodegaList()\"></app-form-bodega>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpcionService {\n\n  private srvcErrHndl: ServiceErrorHandler;  \n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(idmodulo: number, idsubmodulo: number, fltr: any = {}): Observable<any[]> {   \n    return this.http.get<any[]>(\n      `${GLOBAL.urlCatalogos}/get_opcion/${idmodulo}/${idsubmodulo}/?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport class ElminarProductoModel {\n  constructor(\n    public producto: ProductoSelected\n  ) { }\n}\n\n@Component({\n  selector: 'app-dialog-elminar-producto',\n  templateUrl: './dialog-elminar-producto.component.html',\n  styleUrls: ['./dialog-elminar-producto.component.css']\n})\nexport class DialogElminarProductoComponent implements OnInit {\n\n  public prod: ProductoSelected\n  public datos: any = {};\n  public cantidad;\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<DialogElminarProductoComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ElminarProductoModel,\n    private snackBar: MatSnackBar\n  ) {\n    this.prod = data.producto\n    this.cantidad = this.prod.cantidad\n    this.datos = {\n      respuesta: false,\n      producto: null\n    };\n  }\n\n  ngOnInit() {\n\n  }\n\n  onConfirm(): void {\n    if (this.cantidad < 1 || this.cantidad > this.prod.cantidad){\n      this.snackBar.open('La cantidad debe estar entre 1 y '+this.prod.cantidad, 'Error', { duration: 5000 });\n    } else {\n      this.datos.respuesta = true;\n      this.prod.cantidad -= this.cantidad\n      this.datos.producto = this.prod;\n      this.dialogRef.close(this.datos);\n    }\n  }\n\n  onDismiss(): void {\n    this.datos.respuesta = false;\n    this.dialogRef.close(this.datos);\n  }\n\n}\n","<h1 mat-dialog-title>\n    Eliminar Articulos\n  </h1>\n  <div mat-dialog-content>\n    <p>Seleccione la cantidad que desea eliminar</p>\n  </div>\n  <form>\n      <mat-form-field class=\"fullWidth\">\n          <input type=\"number\" matInput placeholder=\"Cantidad\" min=\"1\" max=\"{{prod.cantidad}}\" step=\"1\" [(ngModel)] =\"cantidad\" [ngModelOptions]=\"{standalone: true}\">\n      </mat-form-field>\n  </form>\n  <div mat-dialog-actions align=\"center\">\n    <button mat-raised-button class=\"btnConfig\" (click)=\"onDismiss()\">Cancelar</button>\n    <button mat-raised-button class=\"btnConfig\" color=\"accent\" (click)=\"onConfirm()\">Aceptar</button>\n  </div>\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Sede, Empresa } from '../../../interfaces/sede';\nimport { SedeService } from '../../../services/sede.service';\n\n@Component({\n  selector: 'app-lista-sede',\n  templateUrl: './lista-sede.component.html',\n  styleUrls: ['./lista-sede.component.css']\n})\nexport class ListaSedeComponent implements OnInit {\n\n  @Input() empresa: Empresa;\n  public listaSede: Sede[];\n  public listaSedePaged: Sede[];\n  @Output() getSedeEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    private sedeSrv: SedeService\n  ) { }\n\n  ngOnInit() {\n    this.getSedes();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaSede, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaSedePaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaSede.length;\n      this.listaSedePaged = PaginarArray(this.listaSede, this.pageSize, this.pageIndex + 1);\n    }\n    if (!cambioPagina && this.paginador) {\n      this.paginador.firstPage();\n    }\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n\n  getSedes = () => {\n    this.listaSede = []\n    this.applyFilter();\n    this.sedeSrv.get({ empresa: this.empresa.empresa }).subscribe((lst: Sede[]) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.listaSede = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getSede = (obj: Sede) => {\n    this.getSedeEv.emit(obj);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaSedePaged\" (click)=\"getSede(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaDocumentoTipoComponent } from '../lista-documento-tipo/lista-documento-tipo.component';\nimport { DocumentoTipo } from '../../../interfaces/documento-tipo';\n\n@Component({\n  selector: 'app-documento-tipo',\n  templateUrl: './documento-tipo.component.html',\n  styleUrls: ['./documento-tipo.component.css']\n})\nexport class DocumentoTipoComponent implements OnInit {\n\n  public documentoTipo: DocumentoTipo;\n  @ViewChild('lstDocumentoTipo') lstDocumentoTipo: ListaDocumentoTipoComponent;\n\n  constructor() {\n    this.documentoTipo = { documento_tipo: null, descripcion: null, codigo: null };\n  }\n\n  ngOnInit(): void {\n  }\n\n  setDocumentoTipo = (tcv: DocumentoTipo) => this.documentoTipo = tcv;\n\n  refreshDocumentoTipoList = () => this.lstDocumentoTipo.loadDocumentosTipo();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-documento-tipo #lstDocumentoTipo (getDocumentoTipoEv)=\"setDocumentoTipo($event)\"></app-lista-documento-tipo>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-documento-tipo #frmDocumentoTipo [documentoTipo]=\"documentoTipo\" (documentoTipoSavedEv)=\"refreshDocumentoTipoList()\"></app-form-documento-tipo>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Medida } from '../interfaces/medida';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MedidaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'umedida';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Medida[]> {\n    return this.http.get<Medida[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Medida): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.medida ? ('/' + entidad.medida) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Configuracion } from '../../../../interfaces/certificador';\nimport { CertificadorService } from '../../../../services/certificador.service';\n\n@Component({\n  selector: 'app-form-certificador-configuracion',\n  templateUrl: './form-certificador-configuracion.component.html',\n  styleUrls: ['./form-certificador-configuracion.component.css']\n})\nexport class FormCertificadorConfiguracionComponent implements OnInit {\n\n  @Input() certificador: Configuracion;\n  @Output() certificadorSavedEv = new EventEmitter();\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private certificadorSrvc: CertificadorService\n  ) { }\n\n  ngOnInit() {\n    this.resetCertificador();\n  }\n\n  resetCertificador = () => {\n    this.certificador = {\n      certificador_configuracion: null,\n      nombre: null,\n      vinculo_factura: null,\n      vinculo_firma: null,\n      metodo_factura: null,\n      vinculo_anulacion: null,\n      metodo_anulacion: null,\n      vinculo_grafo: null,\n      metodo_grafo: null\n    };\n  }\n\n  onSubmit = () => {\n    this.certificadorSrvc.saveConfig(this.certificador).subscribe(res => {\n      if (res.exito) {\n        this.certificadorSavedEv.emit();\n        this.resetCertificador();\n        this.snackBar.open('Certificador guardado con éxito...', 'Certificador', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Sede Usuario', { duration: 3000 });\n      }\n    })\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Certificador {{!!certificador.certificador_configuracion ? certificador.nombre : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmCertificador=\"ngForm\" (ngSubmit)=\"frmCertificador.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"certificador.nombre\" minlength=\"1\" maxlength=\"75\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Vínculo factura\" name=\"vinculo_factura\" [(ngModel)]=\"certificador.vinculo_factura\" minlength=\"1\" maxlength=\"250\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Vínculo firma\" name=\"vinculo_firma\" [(ngModel)]=\"certificador.vinculo_firma\" minlength=\"1\" maxlength=\"250\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Método factura\" name=\"metodo_factura\" [(ngModel)]=\"certificador.metodo_factura\" minlength=\"1\" maxlength=\"50\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Vínculo anulación\" name=\"vinculo_anulacion\" [(ngModel)]=\"certificador.vinculo_anulacion\" minlength=\"1\" maxlength=\"250\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Método anulación\" name=\"metodo_anulacion\" [(ngModel)]=\"certificador.metodo_anulacion\" minlength=\"1\" maxlength=\"50\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Vínculo grafo\" name=\"vinculo_grafo\" [(ngModel)]=\"certificador.vinculo_grafo\" minlength=\"1\" maxlength=\"250\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Método grafo\" name=\"metodo_grafo\" [(ngModel)]=\"certificador.metodo_grafo\" minlength=\"1\" maxlength=\"50\" required>\n            </mat-form-field>            \n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmCertificador.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetCertificador()\"\n                    *ngIf=\"certificador.certificador_configuracion\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { PivotViewComponent, IDataOptions, IDataSet, FieldListService, PivotView } from '@syncfusion/ej2-angular-pivotview';\r\nimport { Button } from '@syncfusion/ej2-buttons';\r\nimport { TableroService } from '../../services/tablero.service';\r\nimport * as moment from 'moment';\r\nimport { GLOBAL } from '../../../shared/global';\r\n// import { SedeService } from '../../../admin/services/sede.service';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\n// import { Sede } from '../../../admin/interfaces/sede';\r\nimport { UsuarioSede } from '../../../admin/interfaces/acceso';\r\nimport { AccesoUsuarioService } from '../../../admin/services/acceso-usuario.service';\r\n// import { Global } from '@syncfusion/ej2-ng-grids';\r\nimport { VentasComponent } from './graficas/ventas/ventas.component';\r\n\r\n@Component({\r\n    selector: 'app-tablero',\r\n    providers: [FieldListService],\r\n    templateUrl: './tablero.component.html',\r\n    styleUrls: ['./tablero.component.css']\r\n})\r\n\r\nexport class TableroComponent implements OnInit {\r\n    public pivotData: IDataSet[];\r\n    public dataSourceSettings: IDataOptions;\r\n    public button: Button;\r\n\r\n    public params: any = {\r\n        sede: []\r\n    };\r\n    public titulo = 'Tablero';\r\n    public estDias = 0;\r\n    public estMin = '';\r\n    public estMax = '';\r\n    public estMedia = '';\r\n    public estTotal = '';\r\n    public cargando = false;\r\n    public datosGraficas: any = {};\r\n    public sedes: UsuarioSede[] = [];\r\n    public grupos = GLOBAL.grupos;\r\n\r\n    @ViewChild('pivotview') public pivotGridObj: PivotViewComponent;\r\n    @ViewChild('cmpGraficas') public cmpGraficas: VentasComponent;\r\n\r\n    constructor(\r\n        private snackBar: MatSnackBar,\r\n        private tableroService: TableroService,\r\n        private sedeSrvc: AccesoUsuarioService,\r\n        private ls: LocalstorageService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getSede();\r\n        this.dataSourceSettings = {\r\n            dataSource: this.pivotData,\r\n            expandAll: false,\r\n            columns: [\r\n                { name: 'dia', caption: 'Día' }\r\n            ],\r\n            values: [{ name: 'total', caption: 'Monto' }],\r\n            rows: [\r\n                { name: 'grupo', caption: 'Grupo' },\r\n                { name: 'descripcion', caption: 'Producto' }\r\n            ],\r\n            formatSettings: [{\r\n                name: 'total',\r\n                format: 'N2'\r\n            }],\r\n            filters: [],\r\n            valueSortSettings: { headerText: 'Monto', headerDelimiter: '##', sortOrder: 'Descending' }\r\n        };\r\n\r\n        this.button = new Button({ isPrimary: true });\r\n        this.button.appendTo('#export');\r\n\r\n        this.button.element.onclick = (): void => { this.pivotGridObj.excelExport(); };\r\n        this.loadDataGraficas();\r\n    }\r\n\r\n    getSede = (params: any = {}) => {\r\n        this.sedeSrvc.getSedes(params).subscribe(res => {\r\n            this.sedes = res;\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        this.cargando = true;\r\n        this.tableroService.getTableroDatos(this.params).subscribe(res => {\r\n            if (res.exito) {\r\n                this.pivotGridObj.engineModule.fieldList = {};\r\n                this.pivotGridObj.dataSourceSettings.dataSource = res.datos;\r\n\r\n                this.estDias = res.cantidad;\r\n                this.estMin = res.min;\r\n                this.estMax = res.max;\r\n                this.estMedia = res.media;\r\n                this.estTotal = res.total;\r\n            } else {\r\n                this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n            }\r\n\r\n            this.cargando = false;\r\n        });\r\n        this.loadDataGraficas();\r\n    }\r\n\r\n    loadDataGraficas = () => {\r\n        this.cargando = true;\r\n\r\n        if (!this.params.fdel) {\r\n            this.params.fdel = moment().subtract(1, 'week').format(GLOBAL.dbDateFormat);\r\n            // this.params.fdel = moment().subtract(3, 'day').format(GLOBAL.dbDateFormat);\r\n        }\r\n\r\n        if (!this.params.sede && this.params.sede.length === 0) {\r\n            this.params.sede.push(this.ls.get(GLOBAL.usrTokenVar).sede);\r\n        }\r\n\r\n        if (!this.params.fal) {\r\n            this.params.fal = moment().format(GLOBAL.dbDateFormat);\r\n            // this.params.fal = moment().subtract(3, 'day').format(GLOBAL.dbDateFormat);\r\n        }\r\n\r\n        this.tableroService.getDataGraficas(this.params).subscribe((res: any) => {\r\n            this.cargando = false;\r\n            if (res.exito) {\r\n                this.datosGraficas.porDia = res.pordia;\r\n                this.datosGraficas.porCategoria = res.porcategoria;\r\n                this.datosGraficas.porTurno = res.porturno;\r\n                this.datosGraficas.porMesero = res.pormesero;\r\n                this.cmpGraficas.setGraficas();\r\n            } else {\r\n                this.snackBar.open(`ERROR: ${res.mensaje}`, 'Graficas', { duration: 7000 });\r\n            }\r\n        });\r\n    }\r\n}\r\n","<div class=\"row\">\n\t<div class=\"col m12 s12\">\n\t\t<mat-card class=\"mat-elevation-z4 fullWidth\">\n\t\t\t<mat-card-content>\n\t\t\t\t<form (ngSubmit)=\"onSubmit()\" novalidate>\n\t\t\t\t\t<mat-form-field appearance=\"legacy\">\n\t\t\t\t\t\t<mat-label>Del</mat-label>\n\t\t\t\t\t\t<input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<mat-form-field appearance=\"legacy\" style=\"margin-left: 3px;\">\n\t\t\t\t\t\t<mat-label>Al</mat-label>\n\t\t\t\t\t\t<input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required>\n\t\t\t\t\t</mat-form-field>\n\t\t\t\t\t<mat-form-field appearance=\"legacy\" style=\"margin-left: 3px;\">\n\t\t\t\t\t\t<mat-label>Sede</mat-label>\n\t\t\t\t\t\t<mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\">\n\t\t\t\t\t\t\t<mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\n\t\t\t\t\t\t\t\t{{sede.sede.nombre}}\n\t\t\t\t\t\t\t</mat-option>\n\t\t\t\t\t\t</mat-select>\n\t\t\t\t\t  </mat-form-field>\n\t\t\t\t\t  <mat-form-field appearance=\"legacy\" style=\"margin-left: 3px;\" *ngIf=\"params.sede && params.sede.length > 1\">\n\t\t\t\t\t\t  <mat-label>Agrupar por</mat-label>\n\t\t\t\t\t\t  <mat-select name=\"grupo\"  [(ngModel)]=\"params._grupo\">\n\t\t\t\t\t\t\t  <mat-option *ngFor=\"let grp of grupos\" [value]=\"grp.id\">\n\t\t\t\t\t\t\t\t  {{grp.descripcion}}\n\t\t\t\t\t\t\t  </mat-option>\n\t\t\t\t\t\t  </mat-select>\n\t\t\t\t\t  </mat-form-field>\n\t\t\t\t\t<button mat-button color=\"accent\" type=\"submit\" style=\"margin-left: 3px;\">GENERAR</button>\n\t\t\t\t</form>\n\t\t\t\t<ng-template [ngIf]=\"cargando\">\n\t\t\t\t\t<mat-progress-bar mode=\"query\"></mat-progress-bar>\n\t\t\t\t</ng-template>\n\t\t\t</mat-card-content>\n\t\t</mat-card>\n\t</div>\n</div>\n<!-- Inicia gráficas de ventas -->\n<div class=\"row\">\n\t<div class=\"col m12 s12\">\n\t\t<app-graficas-ventas #cmpGraficas [datos]=\"datosGraficas\"></app-graficas-ventas>\n\t</div>\n</div>\n<!-- Finaliza gráficas de ventas -->\n\n<div class=\"row\">\n\t<div class=\"col m12 s12\">\t\t\n\t\t<ejs-pivotview #pivotview id='PivotView' [dataSourceSettings]=dataSourceSettings width='100%' height='350' allowExcelExport='true' showFieldList=\"true\"></ejs-pivotview>\n\t\t<button ej-button id='export'>Export</button>\t\t\n\t</div>\n</div>\n<div class=\"row\">\n\t<div class=\"col m6 s12\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Cantidad de días</th>\n\t\t\t\t\t<td>{{ estDias }}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Mínimo</th>\n\t\t\t\t\t<td>{{ estMin }}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Máximo</th>\n\t\t\t\t\t<td>{{ estMax }}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Media</th>\n\t\t\t\t\t<td>{{ estMedia }}</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Total</th>\n\t\t\t\t\t<td>{{ estTotal }}</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Impresora } from '../interfaces/impresora';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImpresoraService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'impresora';  \n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<Impresora[]> {   \n    return this.http.get<Impresora[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Impresora): Observable<any> {   \n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.impresora ? ('/' + entidad.impresora) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { BodegaService } from '../../../../wms/services/bodega.service';\nimport { Bodega } from '../../../../wms/interfaces/bodega';\n\n@Component({\n  selector: 'app-lista-bodega',\n  templateUrl: './lista-bodega.component.html',\n  styleUrls: ['./lista-bodega.component.css']\n})\nexport class ListaBodegaComponent implements OnInit {\n\n  public listaBodega: Bodega[];\n  public listaBodegaPaged: Bodega[];\n  @Output() getBodegaEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private srvBodega: BodegaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.getBodegas();\n  }\n\n  getBodegas = () => {\n    this.srvBodega.get().subscribe((res: Bodega[]) => {\n      this.listaBodega = res;\n      this.applyFilter();\n    });\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaBodega, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaBodegaPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaBodega.length;\n      this.listaBodegaPaged = PaginarArray(this.listaBodega, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  getBodega = (obj: Bodega) => {\n    this.getBodegaEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaBodegaPaged\" (click)=\"getBodega(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { UsuarioTipo } from '../interfaces/usuario-tipo';\nimport { UsuarioTipoCategoriaGrupo, UsuarioTipoCGrupo } from '../interfaces/usuario-tipo-categoria-grupo';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TipoUsuarioService {\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'tipo_usuario';\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<UsuarioTipo[]> {   \n    return this.http.get<UsuarioTipo[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: UsuarioTipo): Observable<any> {   \n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.usuario_tipo ? ('/' + entidad.usuario_tipo) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getUsuarioTipoCGrupo(fltr: any = {}): Observable<UsuarioTipoCGrupo[]> {\n    return this.http.get<UsuarioTipoCGrupo[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar_cgrupo?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveUsuarioTipoCGrupo(entidad: UsuarioTipoCategoriaGrupo): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_cgrupo${!!entidad.usuario_tipo_categoria_grupo ? ('/' + entidad.usuario_tipo_categoria_grupo) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Configuracion } from '../interfaces/configuracion';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfiguracionService {  \n\n  private moduleUrl = 'configuracion'; \n\n  constructor(\n    private http: HttpClient,\n    private ls: LocalstorageService\n  ) { }\n\n  load = () => {\n    const promise = new Promise<void>((resolve, reject) => {\n      this.http.get<Configuracion[]>(\n        `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar`\n        \n      ).toPromise().then((cnf: Configuracion[]) => {\n        const tmp = this.ls.get(GLOBAL.usrTokenVar);\n        tmp.configuracion = cnf;\n        this.ls.set(GLOBAL.usrTokenVar, tmp);\n        resolve();\n      }, err => reject(err));\n    });\n    return promise;\n  }\n\n  getConfig = (configName: string): any => {\n    const configuraciones: Configuracion[] = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).configuracion : [];\n    let valor: any = null;\n    for (const cnf of configuraciones) {\n      if (cnf.campo === configName) {\n        switch (+cnf.tipo) {\n          case 1: valor = +cnf.valor; break;\n          case 2: valor = cnf.valor; break;\n          case 3: valor = (+cnf.valor === 1); break;\n        }\n        break;\n      }\n    }\n    return valor;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { NotificacionCliente } from '../interfaces/notificacion-cliente';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificacionClienteService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(): Observable<NotificacionCliente[]> {\n    return this.http.get<NotificacionCliente[]>(\n      `${GLOBAL.urlCatalogos}/get_notificaciones_cliente`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { FormaPago, FormaPagoComandaOrigen, FormaPagoComandaOrigenResponse } from '../interfaces/forma-pago';\r\nimport { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport * as qs from 'qs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FpagoService {\r\n\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private moduleUrl = 'fpago';  \r\n\r\n  constructor(\r\n    private http: HttpClient    \r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();    \r\n  }\r\n\r\n  get(fltr: any = {}): Observable<FormaPago[]> {   \r\n    return this.http.get<FormaPago[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  save(forma: FormaPago): Observable<any> {   \r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!forma.forma_pago ? ('/' + forma.forma_pago) : ''}`,\r\n      forma      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getFormaPagoComandaOrigen(fltr: any = {}): Observable<FormaPagoComandaOrigenResponse[]> {\r\n    return this.http.get<FormaPagoComandaOrigenResponse[]>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_formas_pago_comanda_origen?${qs.stringify(fltr)}`      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  saveFormaPagoComandaOrigen(fpco: FormaPagoComandaOrigen): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_fpco${!!fpco.forma_pago_comanda_origen ? ('/' + fpco.forma_pago_comanda_origen) : ''}`,\r\n      fpco      \r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { UsuarioTipo } from '../../../interfaces/usuario-tipo';\nimport { UsuarioTipoCategoriaGrupo, UsuarioTipoCGrupo } from '../../../interfaces/usuario-tipo-categoria-grupo';\nimport { TipoUsuarioService } from '../../../services/tipo-usuario.service';\n\nimport { Jerarquia } from '../../../interfaces/jerarquia';\nimport { JerarquiaService } from '../../../services/jerarquia.service';\n\nimport { Categoria } from '../../../../wms/interfaces/categoria';\nimport { CategoriaGrupoResponse } from '../../../../wms/interfaces/categoria-grupo';\nimport { ArticuloService } from '../../../../wms/services/articulo.service';\n\n@Component({\n  selector: 'app-form-tipo-usuario',\n  templateUrl: './form-tipo-usuario.component.html',\n  styleUrls: ['./form-tipo-usuario.component.css']\n})\nexport class FormTipoUsuarioComponent implements OnInit {\n\n  @Input() usuarioTipo: UsuarioTipo;\n  @Output() usuarioTipoSavedEv = new EventEmitter();\n  public jerarquias: Jerarquia[] = [];\n  public utcgrupos: UsuarioTipoCGrupo[] = [];\n  public utcgrupo: UsuarioTipoCategoriaGrupo;\n  public cgrupos: CategoriaGrupoResponse[] = [];\n  public filteredCgrupos: CategoriaGrupoResponse[] = [];\n  public categorias: Categoria[] = [];\n  public filteredCategorias: Categoria[] = [];\n  public categoria: (Categoria | string) = undefined;\n  public txtSubCat: (CategoriaGrupoResponse | string) = undefined;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private tipoUsuarioSrvc: TipoUsuarioService,\n    private jerarquiaSrvc: JerarquiaService,\n    private articuloSrvc: ArticuloService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadJerarquia();\n    this.loadCategorias();\n    this.resetTipoUsuarioCGrupo();\n  }\n\n  loadJerarquia = () => {\n    this.jerarquiaSrvc.get().subscribe(res => {\n      this.jerarquias = res;\n    });\n  }\n\n  resetTipoUsuario = () => {\n    this.usuarioTipo = {\n      usuario_tipo: null, descripcion: null, jerarquia: null\n    };\n    this.resetTipoUsuarioCGrupo();\n  }\n\n  onSubmit = () => {\n    this.tipoUsuarioSrvc.save(this.usuarioTipo).subscribe(res => {\n      if (res.exito) {\n        this.usuarioTipoSavedEv.emit();\n        this.resetTipoUsuario();\n        this.snackBar.open('Tipo agregado...', 'Tipo Usuario', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Tipo Usuario', { duration: 3000 });\n      }\n    });\n  }\n\n  loadUTCGrupos = (idUsuarioTipo: number = null) => {\n    this.tipoUsuarioSrvc.getUsuarioTipoCGrupo({ usuario_tipo: (idUsuarioTipo || this.usuarioTipo.usuario_tipo) }).subscribe(res => {\n      if (res) {\n        this.utcgrupos = res;\n      }\n    });\n  }\n  loadCategorias = () => {\n    this.articuloSrvc.getCategorias().subscribe(res => {\n      if (res) {\n        this.categorias = res;\n      }\n    });\n  }\n\n  loadCatGrp = (idCategoria: number) => {\n    this.articuloSrvc.getCategoriasGrupos({ categoria: idCategoria }).subscribe(res => {\n      this.cgrupos = res;\n    });\n  }\n\n  onSubmitUTCGrupo = () => {\n    this.utcgrupo.usuario_tipo = this.usuarioTipo.usuario_tipo;\n\n    if (this.utcgrupo.usuario_tipo && this.utcgrupo.categoria_grupo) {\n      this.tipoUsuarioSrvc.saveUsuarioTipoCGrupo(this.utcgrupo).subscribe(res => {\n        if (res.exito) {\n          this.resetTipoUsuarioCGrupo();\n          this.loadUTCGrupos(this.utcgrupo.usuario_tipo);\n          this.snackBar.open(res.mensaje, 'Categoría grupo', { duration: 3000 });\n        } else {\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Categoría grupo', { duration: 7000 });\n        }\n      });\n    } else {\n      this.snackBar.open('Por favor seleccione una Sub-categoría.', 'Categoría grupo', { duration: 7000 });\n    }\n  }\n\n  resetTipoUsuarioCGrupo = () => {\n    this.categoria = undefined;\n    this.txtSubCat = undefined;\n    this.cgrupos = [];\n    this.filteredCgrupos = this.cgrupos;\n    this.utcgrupo = {\n      usuario_tipo_categoria_grupo: null, usuario_tipo: null, categoria_grupo: null, debaja: 0\n    };\n  }\n\n  toggleDeBaja = (obj: UsuarioTipoCGrupo, db = 0) => {\n    this.utcgrupo = {\n      usuario_tipo_categoria_grupo: obj.usuario_tipo_categoria_grupo,\n      usuario_tipo: obj.usuario_tipo.usuario_tipo,\n      categoria_grupo: obj.categoria_grupo.categoria_grupo,\n      debaja: db\n    };\n    this.onSubmitUTCGrupo();\n  }\n\n  filtrarCategorias = (value: (Categoria | string)) => {\n    if (value && (typeof value === 'string')) {\n      const filterValue = value.toLowerCase();\n      this.filteredCategorias =\n        this.categorias.filter(a => a.descripcion.toLowerCase().includes(filterValue));\n    } else {\n      this.filteredCategorias = this.categorias;\n    }\n  }\n\n  displayCategoria = (c: Categoria) => {\n    if (c) {\n      this.categoria = c;\n      this.loadCatGrp(+c.categoria);\n      return c.descripcion;\n    }\n    return undefined;\n  }\n\n  filtrarSubCategorias = (value: (CategoriaGrupoResponse | string)) => {\n    if (value && (typeof value === 'string')) {\n      const filterValue = value.toLowerCase();\n      this.filteredCgrupos =\n        this.cgrupos.filter(a => a.descripcion.toLowerCase().includes(filterValue));\n    } else {\n      this.filteredCgrupos = this.cgrupos;\n    }\n  }\n\n  displaySubCategoria = (c: CategoriaGrupoResponse) => {\n    if (c) {\n      this.utcgrupo.categoria_grupo = c.categoria_grupo;\n      return c.descripcion;\n    }\n    return undefined;\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Tipo de empleado\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                Tipo de empleado\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmTipoUsuario=\"ngForm\" (ngSubmit)=\"frmTipoUsuario.form.valid && onSubmit()\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Jerarquía</mat-label>\n                        <mat-select name=\"jerarquia\" [(ngModel)]=\"usuarioTipo.jerarquia\" required>\n                            <mat-option></mat-option>\n                            <mat-option *ngFor=\"let m of jerarquias\" [value]=\"m.jerarquia\">\n                                {{m.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"usuarioTipo.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n                        <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"usuarioTipo.descripcion\" minlength=\"1\" maxlength=\"75\" required>\n                    </mat-form-field>\n                    <div align=\"end\">\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTipoUsuario.form.valid\">\n                            Guardar\n                        </button>\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTipoUsuario()\" *ngIf=\"usuarioTipo.usuario_tipo\">\n                            Nuevo\n                        </button>\n                    </div>\n                </form>\n            </mat-card-content>\n        </mat-card>        \n    </mat-tab>\n    <mat-tab label=\"Categoría grupo\" *ngIf=\"+usuarioTipo.usuario_tipo > 0\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                Categoría grupo\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmTipoUsuarioCGrupo=\"ngForm\" (ngSubmit)=\"frmTipoUsuarioCGrupo.form.valid && onSubmitUTCGrupo()\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Categoría</mat-label>                        \n                        <input type=\"text\" [(ngModel)]=\"categoria\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Categoría\" matInput [matAutocomplete]=\"autoCategorias\" (keyup)=\"filtrarCategorias(categoria)\">\n                        <mat-autocomplete #autoCategorias=\"matAutocomplete\" [displayWith]=\"displayCategoria\">\n                            <mat-option *ngFor=\"let c of filteredCategorias\" [value]=\"c\">\n                                {{c.descripcion}}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Sub-categoría</mat-label>                        \n                        <input type=\"text\" [(ngModel)]=\"txtSubCat\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Sub-categoría\" matInput [matAutocomplete]=\"autoSubCategorias\" (keyup)=\"filtrarSubCategorias(txtSubCat)\">\n                        <mat-autocomplete #autoSubCategorias=\"matAutocomplete\" [displayWith]=\"displaySubCategoria\">\n                            <mat-option *ngFor=\"let cg of filteredCgrupos\" [value]=\"cg\">\n                                {{cg.descripcion}}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>                    \n                    <div align=\"end\">\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTipoUsuarioCGrupo.form.valid\">\n                            Guardar\n                        </button>\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTipoUsuarioCGrupo()\" *ngIf=\"utcgrupo.usuario_tipo_categoria_grupo\">\n                            Nuevo\n                        </button>\n                    </div>\n                </form>\n                <hr/>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Sub-categoría</th>\n                            <th>De baja</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let cg of utcgrupos\">\n                            <td>{{cg.categoria_grupo.descripcion}}</td>\n                            <td *ngIf=\"+cg.debaja === 0\">\n                                <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"toggleDeBaja(cg, 1)\">\n                                    Dar de baja\n                                </button>                                \n                            </td>\n                            <td *ngIf=\"+cg.debaja === 1\">\n                                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"toggleDeBaja(cg, 0)\">\n                                    Dar de alta\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </mat-card-content>\n        </mat-card>        \n    </mat-tab>\n</mat-tab-group>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaMedidaComponent } from '../lista-medida/lista-medida.component';\nimport { Medida } from '../../../interfaces/medida';\n\n@Component({\n  selector: 'app-medida',\n  templateUrl: './medida.component.html',\n  styleUrls: ['./medida.component.css']\n})\nexport class MedidaComponent implements OnInit {\n\n  public medida: Medida;\n  @ViewChild('lstMedida') lstMedidaComponent: ListaMedidaComponent;\n\n  constructor() {\n    this.medida = { \n      medida: null, descripcion: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setMedida = (cli: Medida) => this.medida = cli;\n\n  refreshMedidaList = () => this.lstMedidaComponent.loadMedidas();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-medida #lstMedida (getMedidaEv)=\"setMedida($event)\"></app-lista-medida>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-medida #frmMedida [medida]=\"medida\" (medidaSavedEv)=\"refreshMedidaList()\"></app-form-medida>\n    </div>\n</div>","const LOCALHOST = ['localhost', '127.0.0.1'];\r\nexport const PROTOCOLO = window.location.protocol;\r\nexport const ANFITRION = window.location.hostname;\r\nconst urlBase = `${PROTOCOLO}//${ANFITRION}/${LOCALHOST.indexOf(ANFITRION) < 0 ? 'api' : 'resttouch'}`;\r\n\r\nexport const GLOBAL = {\r\n    dbDateFormat: 'YYYY-MM-DD',\r\n    dbDateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\r\n    dbDateTimeFormatMilli: 'YYYY-MM-DD HH:mm:ss.SSS',\r\n    dateFormat: 'DD/MM/YYYY',\r\n    dateFormatBT: 'DD-MM-YYYY',\r\n    dateTimeFormat: 'DD/MM/YYYY HH:mm:ss',\r\n    dateTimeFormatMilli: 'DD/MM/YYYY HH:mm:ss.SSS',\r\n    dateTimeFormatBT: 'DD-MM-YYYY HH:mm:ss',\r\n    dateTimeFormatBTMilli: 'DD-MM-YYYY HH:mm:ss.SSS',\r\n    url: `${urlBase}/index.php`,\r\n    urlAppRestaurante: `${urlBase}/restaurante.php`,\r\n    urlCatalogos: `${urlBase}/index.php/catalogo`,\r\n    urlMantenimientos: `${urlBase}/index.php/mante`,\r\n    urlWms: `${urlBase}/wms.php`,\r\n    urlFacturacion: `${urlBase}/facturacion.php`,\r\n    urlGhostKitchen: `${urlBase}/ghost_kitchen.php`,\r\n    usrTokenVar: 'rttoken',\r\n    usrUnlockVar: 'rtunlock',\r\n    rtClientePedido: 'rt_cliente_pedido',\r\n    usrLastModuleVar: 'rtlastmodule',\r\n    reintentos: 0,\r\n    IDIOMA_TECLADO: 'Español',\r\n    DEEP_LINK_ANDROID: 'intent://scan/impresion/__INFOBASE64__#Intent;scheme=restouch;package=com.restouch.impresion;end',\r\n    FORMATO_EMAIL: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\r\n    CONSTANTES: {\r\n        RT_IMPRESORA_DEFECTO: 'RT_IMPRESORA_DEFECTO',\r\n        RT_PANTALLA_TOMA_COMANDA: 'RT_PANTALLA_TOMA_COMANDA',\r\n        RT_HABILITA_BLOQUEO_INACTIVIDAD: 'RT_HABILITA_BLOQUEO_INACTIVIDAD',\r\n        RT_SEGUNDOS_INACTIVIDAD: 'RT_SEGUNDOS_INACTIVIDAD',\r\n        RT_FACTURA_PROPINA: 'RT_FACTURA_PROPINA',\r\n        RT_CONCEPTO_MAYOR_VENTA: 'RT_CONCEPTO_MAYOR_VENTA',\r\n        RT_CUENTA_CONTABLE_IVA_VENTA: 'RT_CUENTA_CONTABLE_IVA_VENTA',\r\n        RT_INGRESO_NUMERO_PEDIDO: 'RT_INGRESO_NUMERO_PEDIDO',\r\n        RT_TOTAL_NUMEROS_PEDIDO: 'RT_TOTAL_NUMEROS_PEDIDO',\r\n        RT_VENDE_NEGATIVO: 'RT_VENDE_NEGATIVO',\r\n        RT_MODO_COMANDA: 'RT_MODO_COMANDA',\r\n        RT_COMANDA_SIN_FACTURA: 'RT_COMANDA_SIN_FACTURA',\r\n        RT_MODO_FACTURA: 'RT_MODO_FACTURA',\r\n        RT_MESERO_POR_DEFECTO: 'RT_MESERO_POR_DEFECTO',\r\n        RT_FIRMA_DTE_AUTOMATICA: 'RT_FIRMA_DTE_AUTOMATICA',\r\n        RT_CAMPO_NIT: 'RT_CAMPO_NIT',\r\n        RT_ORDER_ITEMS_FULLFILLED: 'RT_ORDER_ITEMS_FULLFILLED',\r\n        RT_CUENTA_CONTABLE_PROPINA: 'RT_CUENTA_CONTABLE_PROPINA',\r\n        RT_CUENTA_CONTABLE_IVA_PROPINA: 'RT_CUENTA_CONTABLE_IVA_PROPINA',\r\n        RT_IMPRIME_PROPINA_SUGERIDA: 'RT_IMPRIME_PROPINA_SUGERIDA',\r\n        RT_USA_CODIGO_BARRAS: 'RT_USA_CODIGO_BARRAS',\r\n        RT_ENVIA_COMO_BASE64: 'RT_ENVIA_COMO_BASE64',\r\n        RT_IMPRIME_RECETA_EN_COMANDA: 'RT_IMPRIME_RECETA_EN_COMANDA'\r\n    },\r\n    grupos: [\r\n        {\r\n            id: 1,\r\n            descripcion: 'General'\r\n        },\r\n        {\r\n            id: 2,\r\n            descripcion: 'Sede'\r\n        }\r\n    ],\r\n    frases_isr: [\r\n        {\r\n            id: 1,\r\n            descripcion: 'Sujeto a pagos trimestrales I.S.R.'\r\n        },\r\n        {\r\n            id: 2,\r\n            descripcion: 'Sujeto a retención definitiva I.S.R.'\r\n        },\r\n        {\r\n            id: 3,\r\n            descripcion: 'Sujeto a pago directo I.S.R.'\r\n        }\r\n    ],\r\n    frases_iva: [\r\n        {\r\n            id: 1,\r\n            descripcion: 'Agente de retención del I.V.A.'\r\n        }\r\n    ]\r\n};\r\n\r\nexport const PaginarArray = (array: any[], pageSize: number, pageNumber: number) =>\r\n    array.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\r\n\r\nexport const CheckObjectType = (objeto, tipo: string) =>\r\n    Object.prototype.toString.call(objeto).toLowerCase().substring(7).indexOf(tipo.trim().toLowerCase()) > -1;\r\n\r\nexport const MultiFiltro = (array: any[], filtro: any) => {\r\n    if (array.length > 0) {\r\n        const keys = Object.keys(array[0]);\r\n        const tmp: any[] = [];\r\n        let valor: any;\r\n        array.forEach(item => {\r\n            for (const key of keys) {\r\n                if (!!item[key]) {\r\n                    if (CheckObjectType(item[key], 'array') || CheckObjectType(item[key], 'object')) {\r\n                        valor = JSON.stringify(item[key]);\r\n                    } else {\r\n                        valor = item[key].toString();\r\n                    }\r\n                    if (valor.trim().toLowerCase().indexOf(filtro.trim().toLowerCase()) > -1) {\r\n                        tmp.push(item);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return tmp;\r\n    }\r\n    return array;\r\n};\r\n\r\nexport const OrdenarArrayObjetos = (objs: any[], campo: string, tipo = 2) => {\r\n    if (tipo === 2) {\r\n        return objs.sort((a, b) => a[campo].localeCompare(b[campo]));\r\n    } else {\r\n        return objs.sort((a, b) => (a[campo] > b[campo]) ? 1 : ((b[campo] > a[campo]) ? -1 : 0));\r\n    }\r\n};\r\n\r\nexport const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaCertificadorConfiguracionComponent } from '../../configuracion/lista-certificador-configuracion/lista-certificador-configuracion.component';\nimport { FormCertificadorFelComponent } from '../form-certificador-fel/form-certificador-fel.component';\nimport { Configuracion } from '../../../../interfaces/certificador';\n\n@Component({\n  selector: 'app-certificador-fel',\n  templateUrl: './certificador-fel.component.html',\n  styleUrls: ['./certificador-fel.component.css']\n})\nexport class CertificadorFelComponent implements OnInit {\n\n  public certificador: Configuracion;\n\n  @ViewChild('lstCertificador') lstCertificadorComponent: ListaCertificadorConfiguracionComponent;\n  @ViewChild('frmCertificador') frmCertificador: FormCertificadorFelComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.certificador = {\n      certificador_configuracion: null,\n      nombre: null,\n      vinculo_factura: null,\n      vinculo_firma: null,\n      metodo_factura: null,\n      vinculo_anulacion: null,\n      metodo_anulacion: null,\n      vinculo_grafo: null,\n      metodo_grafo: null\n    };\n  }\n\n  setCertificador = (usr: Configuracion) => {\n    this.certificador = usr;\n    this.frmCertificador.loadCertificadores(+this.certificador.certificador_configuracion);\n    this.frmCertificador.resetCertificador();\n  }\n\n  refreshCertificadorList = () => this.lstCertificadorComponent.loadCertificador();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-certificador-configuracion #lstCertificador (getCertificadorEv)=\"setCertificador($event)\">\n\n        </app-lista-certificador-configuracion>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-certificador-fel #frmCertificador [certificador]=\"certificador\"\n            (certificadorSavedEv)=\"refreshCertificadorList()\"></app-form-certificador-fel>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaTipoUsuarioComponent } from '../lista-tipo-usuario/lista-tipo-usuario.component';\nimport { FormTipoUsuarioComponent } from '../form-tipo-usuario/form-tipo-usuario.component';\nimport { UsuarioTipo } from '../../../interfaces/usuario-tipo';\n\n@Component({\n  selector: 'app-tipo-usuario',\n  templateUrl: './tipo-usuario.component.html',\n  styleUrls: ['./tipo-usuario.component.css']\n})\nexport class TipoUsuarioComponent implements OnInit {\n  public usuarioTipo: UsuarioTipo;\n  @ViewChild('lstTipoUsuario') lstUsuarioTipo: ListaTipoUsuarioComponent;\n  @ViewChild('frmTipoUsuario') frmTipoUsuario: FormTipoUsuarioComponent;\n  constructor() {\n    this.usuarioTipo = {\n      usuario_tipo: null, descripcion: null, jerarquia: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setTipoUsuario = (pres: any) => {\n    this.usuarioTipo = {\n      usuario_tipo: pres.usuario_tipo,\n      descripcion: pres.descripcion,\n      jerarquia: pres.jerarquia.jerarquia\n    };\n    this.frmTipoUsuario.loadUTCGrupos(this.usuarioTipo.usuario_tipo);\n    this.frmTipoUsuario.resetTipoUsuarioCGrupo();\n  }\n\n  refreshtipoUsuarioList = () => this.lstUsuarioTipo.loadTipoUsuario();\n}\n","<div class=\"row\">\n\t<div class=\"col m5 s12\">\n\t\t<app-lista-tipo-usuario #lstTipoUsuario (getTipoUsuarioEv)=\"setTipoUsuario($event)\"></app-lista-tipo-usuario>\n\t</div>\n\t<div class=\"col m7 s12\">\n\t\t<app-form-tipo-usuario #frmTipoUsuario [usuarioTipo]=\"usuarioTipo\" (usuarioTipoSavedEv)=\"refreshtipoUsuarioList()\"></app-form-tipo-usuario>\n\t</div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Corporacion } from '../../../interfaces/sede';\nimport { SedeService } from '../../../services/sede.service';\n\n@Component({\n  selector: 'app-list-corporacion',\n  templateUrl: './lista-corporacion.component.html',\n  styleUrls: ['./lista-corporacion.component.css']\n})\nexport class ListaCorporacionComponent implements OnInit {\n\n  public listaCorporacion: Corporacion[];\n  public listaCorporacionPaged: Corporacion[];\n  @Output() getCorporacionEv = new EventEmitter();\n  @ViewChild('paginador') paginador: MatPaginator;\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    private sedeSrv: SedeService\n  ) { }\n\n  ngOnInit() {\n    this.getCorporaciones();\n  }\n\n  applyFilter(cambioPagina = false) {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.listaCorporacion, this.txtFiltro);\n      this.length = tmpList.length;\n      this.listaCorporacionPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.listaCorporacion.length;\n      this.listaCorporacionPaged = PaginarArray(this.listaCorporacion, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter(true);\n  }\n\n  getCorporaciones = () => {\n    this.sedeSrv.getCorporacion().subscribe((lst: Corporacion[]) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.listaCorporacion = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getCorporacion = (obj: Corporacion) => {\n    this.getCorporacionEv.emit(obj);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of listaCorporacionPaged\" (click)=\"getCorporacion(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent, MatPaginator } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../../shared/global';\n\nimport { Configuracion } from '../../../../interfaces/certificador';\nimport { CertificadorService } from '../../../../services/certificador.service';\n\n@Component({\n\tselector: 'app-lista-certificador-configuracion',\n\ttemplateUrl: './lista-certificador-configuracion.component.html',\n\tstyleUrls: ['./lista-certificador-configuracion.component.css']\n})\nexport class ListaCertificadorConfiguracionComponent implements OnInit {\n\n\tpublic lstCertificador: Configuracion[];\n\tpublic lstCertificadorPaged: Configuracion[];\n\t@Output() getCertificadorEv = new EventEmitter();\n\t@ViewChild('paginador') paginador: MatPaginator;\n\n\tpublic length = 0;\n\tpublic pageSize = 5;\n\tpublic pageSizeOptions: number[] = [5, 10, 15];\n\tpublic pageIndex = 0;\n\tpublic pageEvent: PageEvent;\n\tpublic txtFiltro = '';\n\n\tconstructor(private CertificadorSrvc: CertificadorService) { }\n\n\tngOnInit() {\n\t\tthis.loadCertificador();\n\t}\n\n\tapplyFilter(cambioPagina = false) {\n\t\tif (this.txtFiltro.length > 0) {\n\t\t\tconst tmpList = MultiFiltro(this.lstCertificador, this.txtFiltro);\n\t\t\tthis.length = tmpList.length;\n\t\t\tthis.lstCertificadorPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n\t\t} else {\n\t\t\tthis.length = this.lstCertificador.length;\n\t\t\tthis.lstCertificadorPaged = PaginarArray(this.lstCertificador, this.pageSize, this.pageIndex + 1);\n\t\t}\n\t\tif (!cambioPagina) {\n\t\t\tthis.paginador.firstPage();\n\t\t}\n\t}\n\n\tloadCertificador = () => {\n\t\tthis.CertificadorSrvc.getConfig().subscribe(lst => {\n\t\t\tif (lst) {\n\t\t\t\tif (lst.length > 0) {\n\t\t\t\t\tthis.lstCertificador = lst;\n\t\t\t\t\tthis.applyFilter();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCertificador = (obj: Configuracion) => {\n\t\tthis.getCertificadorEv.emit(obj);\n\t}\n\n\tpageChange = (e: PageEvent) => {\n\t\tthis.pageSize = e.pageSize;\n\t\tthis.pageIndex = e.pageIndex;\n\t\tthis.applyFilter(true);\n\t}\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstCertificadorPaged\" (click)=\"getCertificador(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>                \n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator #paginador [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Cliente } from '../../../interfaces/cliente';\n\n@Component({\n  selector: 'app-form-cliente-dialog',\n  templateUrl: './form-cliente-dialog.component.html',\n  styleUrls: ['./form-cliente-dialog.component.css']\n})\nexport class FormClienteDialogComponent implements OnInit {\n\n  public cliente: Cliente;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormClienteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    if (this.data.cliente) {\n      // console.log(this.data.cliente);\n      this.cliente = this.data.cliente;\n      // console.log(this.cliente);\n    } else {\n      this.cliente = {\n        cliente: null, nombre: null, direccion: null, nit: null, telefono: null, correo: null,\n        codigo_postal: null, municipio: null, departamento: null, pais_iso_dos: null\n      };\n    }\n  }\n\n  clienteAgregado = (obj: Cliente) => {\n    this.dialogRef.close(obj);\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n}\n","<h1 mat-dialog-title>AGREGAR CLIENTE</h1>\n<div mat-dialog-content>\n    <app-form-cliente #frmCliente [cliente]=\"cliente\" [inicializoCliente]=\"false\" [verTodos]=\"false\" (clienteSavedEv)=\"clienteAgregado($event)\"></app-form-cliente>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Bodega } from '../interfaces/bodega';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BodegaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Bodega[]> {\n    return this.http.get<Bodega[]>(\n      `${GLOBAL.urlCatalogos}/get_bodega?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Bodega) {\n    return this.http.post<any>(`${GLOBAL.urlMantenimientos}/bodega/guardar${entidad.bodega ? ('/' + entidad.bodega) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { UsuarioService } from '../../services/usuario.service';\nimport { LocalstorageService } from '../../services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\n@Component({\n  selector: 'app-solicita-pin-inactividad',\n  templateUrl: './solicita-pin-inactividad.component.html',\n  styleUrls: ['./solicita-pin-inactividad.component.css']\n})\nexport class SolicitaPinInactividadComponent implements OnInit {\n\n  public pinDesbloqueo: string = undefined;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<SolicitaPinInactividadComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private usuarioSrvc: UsuarioService,\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.ls.clear(GLOBAL.usrUnlockVar);\n  }\n\n  verificaPin = () => {\n    const tmpPinDesbloqueo = +this.pinDesbloqueo.replace(/[^0-9]/gi, '').substr(0, 36).trim();\n    this.usuarioSrvc.desbloquear(tmpPinDesbloqueo).subscribe(res => {\n      if (res.exito && res.token) {\n        this.ls.set(GLOBAL.usrUnlockVar, {\n          token: res.token, usuario: res.usrname, nombres: res.nombres, apellidos: res.apellidos, sede: +res.sede,\n          idusr: +res.idusr, sede_uuid: res.sede_uuid, empresa: res.empresa, restaurante: res.restaurante\n        });\n        this.dialogRef.close();\n      } else {\n        this.pinDesbloqueo = undefined;\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Desbloqueo', { duration: 7000 });\n      }\n    });\n  }\n\n}\n","<h1 mat-dialog-title>Pin de desbloqueo</h1>\n<div mat-dialog-content>\n    <form #frmDesbloqueo=\"ngForm\" (ngSubmit)=\"frmDesbloqueo.form.valid && verificaPin()\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"password\" placeholder=\"Pin de desbloqueo\" name=\"pinDesbloqueo\" [(ngModel)]=\"pinDesbloqueo\" required>\n            <input matInput *ngIf=\"esMovil\" type=\"password\" placeholder=\"Pin de desbloqueo\" name=\"pinDesbloqueo\" [(ngModel)]=\"pinDesbloqueo\" required>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button type=\"submit\" color=\"accent\" (click)=\"verificaPin()\"\n        [disabled]=\"!frmDesbloqueo.form.valid\">\n        <span>Validar</span>\n    </button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaImpuestoEspecialComponent } from '../lista-impuesto-especial/lista-impuesto-especial.component';\nimport { ImpuestoEspecial } from '../../../interfaces/impuesto-especial';\n\n\n@Component({\n  selector: 'app-impuesto-especial',\n  templateUrl: './impuesto-especial.component.html',\n  styleUrls: ['./impuesto-especial.component.css']\n})\nexport class ImpuestoEspecialComponent implements OnInit {\n\n  public impuestoEspecial: ImpuestoEspecial;\n  @ViewChild('lstImpuestoEspecial') lstImpuestoEspecial: ListaImpuestoEspecialComponent;\n\n  constructor() {\n    this.impuestoEspecial = { impuesto_especial: null, descripcion: null, porcentaje: null };\n  }\n\n  ngOnInit() {\n  }\n\n  setImpuestoEspecial = (impesp: ImpuestoEspecial) => this.impuestoEspecial = impesp;\n\n  refreshImpuestoEspecialList = () => this.lstImpuestoEspecial.loadImpuestosEspeciales();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-impuesto-especial #lstImpuestoEspecial (getImpuestoEspecialEv)=\"setImpuestoEspecial($event)\"></app-lista-impuesto-especial>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-impuesto-especial #frmImpuestoEspecial [impuestoEspecial]=\"impuestoEspecial\" (impuestoEspecialSavedEv)=\"refreshImpuestoEspecialList()\"></app-form-impuesto-especial>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'admin', loadChildren:() => import('./admin/admin.module').then(m => m.AdminModule) },\r\n  { path: 'restaurante', loadChildren:() => import('./restaurante/restaurante.module').then(m => m.RestauranteModule) },\r\n  { path: 'wms', loadChildren:() => import('./wms/wms.module').then(m => m.WmsModule) },\r\n  { path: 'ordcomp', loadChildren:() => import('./orden-compra/orden-compra.module').then(m => m.OrdenCompraModule) },\r\n  { path: 'pos', loadChildren:() => import('./pos/pos.module').then(m => m.PosModule) },\r\n  { path: 'callcenter', loadChildren:() => import('./callcenter/callcenter.module').then(m => m.CallcenterModule) },\r\n  { path: 'gk', loadChildren:() => import('./ghost-kitchen/ghost-kitchen.module').then(m => m.GhostKitchenModule) },\r\n  { path: '', redirectTo: 'admin/login', pathMatch: 'full' },\r\n  { path: '**', redirectTo: '/', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\n\nimport { TipoCompraVenta } from '../../../interfaces/tipo-compra-venta';\nimport { TipoCompraVentaService } from '../../../services/tipo-compra-venta.service';\n\n@Component({\n  selector: 'app-lista-tipo-compra-venta',\n  templateUrl: './lista-tipo-compra-venta.component.html',\n  styleUrls: ['./lista-tipo-compra-venta.component.css']\n})\nexport class ListaTipoCompraVentaComponent implements OnInit {\n\n  public lstTiposCompraVenta: TipoCompraVenta[];\n  public lstTiposCompraVentaPaged: TipoCompraVenta[];\n  @Output() getTipoCompraVentaEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private tipoCompraVentaSrvc: TipoCompraVentaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit(): void {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadTiposCompraVenta();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstTiposCompraVenta, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstTiposCompraVentaPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstTiposCompraVenta.length;\n      this.lstTiposCompraVentaPaged = PaginarArray(this.lstTiposCompraVenta, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadTiposCompraVenta = () => {\n    this.tipoCompraVentaSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstTiposCompraVenta = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getTipoCompraVenta = (obj: TipoCompraVenta) => {\n    this.getTipoCompraVentaEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstTiposCompraVentaPaged\" (click)=\"getTipoCompraVenta(element)\">\n                <mat-icon mat-list-icon>shopping_basket</mat-icon>\n                <h5 mat-line>{{element.descripcion}} ({{element.abreviatura}})</h5>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../services/localstorage.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\n\nimport { AnulacionService } from '../../../services/anulacion.service';\nimport { RazonAnulacion } from '../../../interfaces/razon-anulacion';\n\n@Component({\n  selector: 'app-form-razon-anulacion',\n  templateUrl: './form-razon-anulacion.component.html',\n  styleUrls: ['./form-razon-anulacion.component.css']\n})\nexport class FormRazonAnulacionComponent implements OnInit {\n\n  @Input() razon: RazonAnulacion;\n  @Output() razonAnulacionSavedEv = new EventEmitter();\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    private anulacionSrvc: AnulacionService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  resetForm = () => this.razon = { razon_anulacion: null, descripcion: null, anulado: 0 };\n\n  onSubmit = () => {\n    if (+this.razon.anulado === 1 && +this.razon.razon_anulacion > 0) {\n      const confRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel('De baja',\n          `Esto dará de baja la razón de anulación '${this.razon.descripcion}'. ¿Desea de continuar?`,\n          'Sí', 'No')\n      });\n      confRef.afterClosed().subscribe(cnf => {\n        if (cnf) {\n          this.guardarRazon();\n        }\n      });\n    } else {\n      this.guardarRazon();\n    }\n  }\n\n  guardarRazon = () => {\n    this.anulacionSrvc.save(this.razon).subscribe(res => {\n      if (res.exito) {\n        this.razonAnulacionSavedEv.emit();\n        this.resetForm();\n        this.snackBar.open('Razon de Anulación Guardada...', 'Razon de Anulacion', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Razon de Anulacion', { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Razón Anulación {{!!razon.razon_anulacion ? razon.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmRazonAnulacion=\"ngForm\" (ngSubmit)=\"frmRazonAnulacion.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"razon.descripcion\" minlength=\"1\" maxlength=\"100\" required>\n                <input matInput type=\"text\" *ngIf=\"esMovil\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"razon.descripcion\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <mat-checkbox name=\"traslado\" class=\"fullWidth\" [(ngModel)]=\"+razon.anulado\" [disabled]=\"!razon.razon_anulacion\">Anulado\n            </mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmRazonAnulacion.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetForm()\" *ngIf=\"razon.razon_anulacion\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncar'\r\n})\r\nexport class TruncarPipe implements PipeTransform {\r\n\r\n  transform(value: string, limit = 25, completeWords = false, ellipsis = '...'): string {\r\n    if (completeWords) {\r\n      limit = value.substr(0, limit).lastIndexOf(' ');\r\n    }\r\n    return value.length > limit ? value.substr(0, limit) + ellipsis : value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { DocumentoTipo } from '../interfaces/documento-tipo';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocumentoTipoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'documento_tipo';\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<DocumentoTipo[]> {\n    return this.http.get<DocumentoTipo[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: DocumentoTipo): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${!!entidad.documento_tipo ? ('/' + entidad.documento_tipo) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SedeService } from '../../../services/sede.service';\nimport { Sede } from '../../../interfaces/sede'\nimport { Usuario } from '../../../interfaces/usuario';\nimport { UsuarioSede } from '../../../interfaces/acceso';\nimport { AccesoUsuarioService } from '../../../services/acceso-usuario.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\n\n@Component({\n\tselector: 'app-usuario-sede-form',\n\ttemplateUrl: './usuario-sede-form.component.html',\n\tstyleUrls: ['./usuario-sede-form.component.css']\n})\nexport class UsuarioSedeFormComponent implements OnInit {\n\n\t@Input() usuario: Usuario;\n\t@Output() AccesoUsuarioSavedEv = new EventEmitter();\n\n\tpublic accesos: UsuarioSede[] = [];\n\tpublic sedes: Sede[] = []\n\tpublic acceso: UsuarioSede;\n\tpublic displayedColumns: string[] = ['sede', 'editItem'];\n\tpublic dataSource: MatTableDataSource<UsuarioSede>;\n\n\tconstructor(\n\t\tprivate _snackBar: MatSnackBar,\n\t\tprivate accesoUsuarioSrvc: AccesoUsuarioService,\n\t\tprivate sedeSrvc: SedeService,\n\t\tpublic dialog: MatDialog,\n\t) {\n\t\tthis.resetAcceso();\n\t}\n\n\tngOnInit() {\n\t\tthis.loadSedes()\n\t}\n\n\tloadAccesos = (idusuario: number = +this.usuario.usuario) => {\n\t\tthis.accesoUsuarioSrvc.getSedes({ usuario: idusuario }).subscribe((res: any[]) => {\n\t\t\tif (res) {\n\t\t\t\tthis.accesos = res;\n\t\t\t\tthis.updateTableDataSource();\n\t\t\t}\n\t\t});\n\t}\n\n\tloadSedes = () => {\n\t\tthis.sedeSrvc.get().subscribe(res => {\n\t\t\tif (res) {\n\t\t\t\tthis.sedes = res;\n\t\t\t}\n\t\t});\n\t}\n\n\tresetAcceso = () => {\n\t\tthis.acceso = {\n\t\t\tusuario_sede: null, sede: null, usuario: null, anulado: 0\n\t\t};\n\t}\n\n\tsetAcceso = (pres: any) => {\n\t\tthis.acceso = {\n\t\t\tusuario_sede: pres.usuario_sede,\n\t\t\tsede: pres.sede.sede,\n\t\t\tusuario: pres.usuario.usuario,\n\t\t\tanulado: pres.anulado\n\t\t};\n\t}\n\n\tonSubmit = () => {\n\t\tthis.acceso.usuario = this.usuario.usuario;\n\n\t\tthis.accesoUsuarioSrvc.saveSedes(this.acceso).subscribe(res => {\n\t\t\tif (res.exito) {\n\t\t\t\t//this.resetAcceso();\n\t\t\t\tthis.loadAccesos(this.usuario.usuario);\n\t\t\t\tthis._snackBar.open('Acceso guardado con éxito...', 'Sede Usuario', { duration: 3000 });\n\t\t\t\tthis.acceso.sede = null;\n\t\t\t} else {\n\t\t\t\tthis._snackBar.open(`ERROR: ${res.mensaje}`, 'Sede Usuario', { duration: 3000 });\n\t\t\t}\n\t\t})\n\t}\n\n\tremoverAcceso = (pres: any) => {\n\t\tconst dialogRef = this.dialog.open(ConfirmDialogComponent, {\n\t\t\tmaxWidth: '400px',\n\t\t\tdata: new ConfirmDialogModel(\n\t\t\t\t'Eliminar sede de usuario', `¿Seguro(a) de eliminar la sede '${pres.sede.nombre}' del usuario '${this.usuario.nombres}'?`, 'Sí', 'No'\n\t\t\t)\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(cnf => {\n\t\t\tif (cnf) {\n\t\t\t\tpres.anulado = 1;\n\t\t\t\tthis.accesoUsuarioSrvc.saveSedes(pres).subscribe(res => {\n\t\t\t\t\tif (res.exito) {\n\t\t\t\t\t\tthis.resetAcceso();\n\t\t\t\t\t\tthis.loadAccesos(this.usuario.usuario);\n\t\t\t\t\t\tthis._snackBar.open('Removido con éxito...', 'Sede Usuario', { duration: 3000 });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._snackBar.open(`ERROR: ${res.mensaje}`, 'Sede Usuario', { duration: 3000 });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t});\n\t}\n\n\tupdateTableDataSource = () => this.dataSource = new MatTableDataSource(this.accesos);\n\n\tsedeYaAsignada = (idSede: number) => {\n\t\tconst asignadas: any[] = JSON.parse(JSON.stringify(this.accesos));\n\t\treturn asignadas.findIndex(a => idSede === +a.sede.sede) >= 0;\n\t}\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n\t<mat-card-title>\n\t\t<h4>Sedes {{!!this.usuario? this.usuario.nombres : '' }}</h4>\n\t</mat-card-title>\n\t<mat-card-content>\n\t\t<form #frmAccesoUsuario=\"ngForm\" (ngSubmit)=\"frmAccesoUsuario.form.valid && onSubmit()\" novalidate>\n\t\t\t<mat-form-field class=\"fullWidth\">\n\t\t\t\t<mat-label>Sede</mat-label>\n\t\t\t\t<mat-select name=\"sede\" [(ngModel)]=\"acceso.sede\" required>\n\t\t\t\t\t<mat-option></mat-option>\n\t\t\t\t\t<mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede\" [disabled]=\"sedeYaAsignada(+sede.sede)\">\n\t\t\t\t\t\t{{ sede.nombre }}\n\t\t\t\t\t</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<!-- <mat-checkbox name=\"anulado\" class=\"fullWidth\">Anulado</mat-checkbox> -->\n\t\t\t<div align=\"end\">\n\t\t\t\t<button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmAccesoUsuario.form.valid\" \n\t\t\t\t*ngIf=\"this.usuario.usuario\">\n\t\t\t\t\tGuardar\n\t\t\t\t</button>\n\t\t\t\t<button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetAcceso()\"\n\t\t\t\t*ngIf=\"this.usuario.usuario\">\n\t\t\t\t\tNuevo\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t\t<hr *ngIf=\"accesos.length > 0\"/>\n\t\t<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"accesos.length > 0\">\n\t\t\t<ng-container matColumnDef=\"sede\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>Sede</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{ element.sede.nombre}}</td>\n\t\t\t</ng-container>\n\t\t\t<ng-container matColumnDef=\"editItem\">\n\t\t\t\t<th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n\t\t\t\t<td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n\t\t\t\t\t<button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"setAcceso(element)\">\n\t\t\t\t\t\tEditar\n\t\t\t\t\t</button>\n\t\t\t\t\t<button mat-raised-button type=\"button\" color=\"accent\" (click)=\"removerAcceso(element)\">\n\t\t\t\t\t\tEliminar\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n\t\t\t</tr>\n\t\t</table>\n\t</mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\n\r\nimport { ListaFormaPagoComandaOrigenComponent } from '../lista-forma-pago-comanda-origen/lista-forma-pago-comanda-origen.component';\r\nimport { FormFormaPagoComandaOrigenComponent } from '../form-forma-pago-comanda-origen/form-forma-pago-comanda-origen.component';\r\nimport { FormaPagoComandaOrigen, FormaPagoComandaOrigenResponse } from '../../../interfaces/forma-pago';\r\n\r\n@Component({\r\n  selector: 'app-forma-pago-comanda-origen',\r\n  templateUrl: './forma-pago-comanda-origen.component.html',\r\n  styleUrls: ['./forma-pago-comanda-origen.component.css']\r\n})\r\nexport class FormaPagoComandaOrigenComponent implements OnInit {\r\n\r\n  @Input() comanda_origen: number = null;\r\n  @ViewChild('lstFormaPagoComandaOrigen') lstFormaPagoComandaOrigenComponent: ListaFormaPagoComandaOrigenComponent;\r\n  @ViewChild('frmFormaPagoComandaOrigen') frmFormaPagoComandaOrigen: FormFormaPagoComandaOrigenComponent;\r\n  public formaPagoComandaOrigen: FormaPagoComandaOrigen;\r\n\r\n  constructor() {\r\n    this.formaPagoComandaOrigen = {\r\n      forma_pago_comanda_origen: null, forma_pago: null, comanda_origen: null, codigo: null\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // console.log('ORIGEN DESDE DIALGO FORMA PAGO', this.comanda_origen);\r\n  }\r\n\r\n  setFormaPagoComandaOrigen = (fpco: FormaPagoComandaOrigenResponse) => {\r\n    this.formaPagoComandaOrigen = {\r\n      forma_pago_comanda_origen: fpco.forma_pago_comanda_origen,\r\n      forma_pago: fpco.forma_pago ? fpco.forma_pago.forma_pago : null,\r\n      comanda_origen: fpco.comanda_origen.comanda_origen,\r\n      codigo: fpco.codigo      \r\n    }\r\n    this.frmFormaPagoComandaOrigen.formaPagoComandaOrigen = this.formaPagoComandaOrigen;\r\n  };\r\n\r\n  refreshFormaPagoComandOrigenList = () => this.lstFormaPagoComandaOrigenComponent.loadFormasPagoComandaOrigen();\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m5 s12\">\r\n        <app-lista-forma-pago-comanda-origen #lstFormaPagoComandaOrigen [comanda_origen]=\"comanda_origen\" (getFormaPagoComandaOrigenEv)=\"setFormaPagoComandaOrigen($event)\"></app-lista-forma-pago-comanda-origen>\r\n    </div>\r\n    <div class=\"col m7 s12\">\r\n        <app-form-forma-pago-comanda-origen #frmFormaPagoComandaOrigen [formaPagoComandaOrigen]=\"formaPagoComandaOrigen\" (formaPagoComandaOrigenSavedEv)=\"refreshFormaPagoComandOrigenList()\"></app-form-forma-pago-comanda-origen>\r\n    </div>\r\n</div>","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}