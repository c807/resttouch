{"version":3,"sources":["webpack:///src/app/wms/components/produccion/produccion.component.ts","webpack:///src/app/wms/components/produccion/produccion.component.html","webpack:///src/app/wms/services/tipo-movimiento.service.ts","webpack:///src/app/wms/components/reporte/existencias/existencias.component.ts","webpack:///src/app/wms/components/reporte/existencias/existencias.component.html","webpack:///src/app/wms/components/fisico/reporte/reporte.component.ts","webpack:///src/app/wms/components/fisico/reporte/reporte.component.html","webpack:///src/app/wms/components/producto/replicar-a-sedes-dialog/replicar-a-sedes-dialog.component.ts","webpack:///src/app/wms/components/producto/replicar-a-sedes-dialog/replicar-a-sedes-dialog.component.html","webpack:///src/app/wms/components/producto/lista-producto-alt/lista-producto-alt.component.ts","webpack:///src/app/wms/components/producto/lista-producto-alt/lista-producto-alt.component.html","webpack:///src/app/wms/components/egreso/egreso/egreso.component.ts","webpack:///src/app/wms/components/egreso/egreso/egreso.component.html","webpack:///src/app/restaurante/services/reporte-pdf.service.ts","webpack:///src/app/wms/components/reporte/valorizado/valorizado.component.ts","webpack:///src/app/wms/components/reporte/valorizado/valorizado.component.html","webpack:///src/app/wms/services/egreso.service.ts","webpack:///node_modules/file-saver/dist/FileSaver.min.js","webpack:///src/app/wms/services/transformacion.service.ts","webpack:///src/app/wms/components/fisico/fisico/fisico.component.ts","webpack:///src/app/wms/components/fisico/fisico/fisico.component.html","webpack:///src/app/wms/services/fisico.service.ts","webpack:///src/app/wms/components/producto/sub-categoria-producto/sub-categoria-producto.component.ts","webpack:///src/app/wms/components/producto/sub-categoria-producto/sub-categoria-producto.component.html","webpack:///src/app/wms/components/reporte/kardex/kardex.component.ts","webpack:///src/app/wms/components/reporte/kardex/kardex.component.html","webpack:///src/app/wms/wms-routing.module.ts","webpack:///src/app/wms/components/producto/lista-producto/lista-producto.component.ts","webpack:///src/app/wms/components/producto/lista-producto/lista-producto.component.html","webpack:///src/app/wms/components/producto/categoria-producto/categoria-producto.component.ts","webpack:///src/app/wms/components/producto/categoria-producto/categoria-producto.component.html","webpack:///src/app/wms/components/producto/replicar-a-sedes/replicar-a-sedes.component.ts","webpack:///src/app/wms/components/producto/replicar-a-sedes/replicar-a-sedes.component.html","webpack:///src/app/wms/components/producto/form-producto/form-producto.component.ts","webpack:///src/app/wms/components/producto/form-producto/form-producto.component.html","webpack:///src/app/wms/components/ingreso/lista-ingreso/lista-ingreso.component.ts","webpack:///src/app/wms/components/ingreso/lista-ingreso/lista-ingreso.component.html","webpack:///src/app/wms/components/ingreso/form-ingreso/form-ingreso.component.ts","webpack:///src/app/wms/components/ingreso/form-ingreso/form-ingreso.component.html","webpack:///src/app/wms/components/fisico/form-inventario-fisico/form-inventario-fisico.component.ts","webpack:///src/app/wms/components/fisico/form-inventario-fisico/form-inventario-fisico.component.html","webpack:///src/app/wms/components/egreso/lista-egreso/lista-egreso.component.ts","webpack:///src/app/wms/components/egreso/lista-egreso/lista-egreso.component.html","webpack:///src/app/wms/components/producto/producto/producto.component.ts","webpack:///src/app/wms/components/producto/producto/producto.component.html","webpack:///src/app/wms/services/ingreso.service.ts","webpack:///src/app/wms/components/transformacion/transformacion.component.ts","webpack:///src/app/wms/components/transformacion/transformacion.component.html","webpack:///src/app/wms/components/ingreso/ingreso/ingreso.component.ts","webpack:///src/app/wms/components/ingreso/ingreso/ingreso.component.html","webpack:///src/app/wms/wms.module.ts","webpack:///src/app/wms/components/egreso/form-egreso/form-egreso.component.ts","webpack:///src/app/wms/components/egreso/form-egreso/form-egreso.component.html"],"names":["ProduccionComponent","ls","snackBar","transformacionSrvc","bloqueoBotones","transformar","ingreso","frmIngreso","produccion","tipo_movimiento","fecha","proveedor","bodega","usuario","bodega_origen","comentario","detalle","detallesIngreso","forEach","di","push","articulo","cantidad","precio_unitario","precio_total","presentacion","length","producir","subscribe","res","exito","resetIngreso","open","duration","mensaje","doSomething","format","dbDateFormat","get","usrTokenVar","idusr","TipoMovimientoService","http","srvcErrHndl","fltr","urlCatalogos","pipe","reintentos","errorHandler","ExistenciasComponent","pdfServicio","sedeSrvc","bodegaSrvc","bodegas","sedes","params","titulo","cargando","configBotones","showPdf","showHtml","showExcel","getSede","getSedes","getBodega","excelClick","_excel","getReporteExistencia","blob","Blob","type","onSedesSelected","obj","sede","resetParams","onSubmit","ReporteComponent","articuloSrvc","fisicoSrvc","categorias","categoriasGruposPadre","categoriasGrupos","showReporte","loadCategorias","getCategorias","onCategoriaSelected","loadSubCategorias","value","categoria","idcategoria","getCategoriasGrupos","adaptCategoriaGrupoResponse","onSubCategoriaPadreSelected","loadSubCategoriasSubcategorias","idsubcat","categoria_grupo_grupo","generarInventarioFisico","console","log","imprimirInventarioFisico","inventario","resImp","ReplicarASedesDialogComponent","dialogRef","data","ListaProductoAltComponent","productoClickedEv","categoriasFilledEv","subcategorias","articulos","loadArbolArticulos","getArbolArticulos","fillCategorias","cats","cat","emit","fillSubCategorias","subcats","subcat","fillArticulos","arts","a","clickOnCategoria","categoria_grupo","clickOnSubCategoria","scat","clickOnArticulo","art","id","nombre","descripcion","precio","impresora","codigo","combo","multiple","EgresoComponent","setEgreso","egr","egreso","frmEgreso","resetDetalleEgreso","loadDetalleEgreso","refreshEgresoList","lstEgresoComponent","loadEgresos","estatus_movimiento","traslado","ReportePdfService","usrToken","httpOptions","responseType","token","post","urlAppRestaurante","urlWms","urlMantenimientos","idcuenta","ValorizadoComponent","getReporteValorizado","EgresoService","egresoUrl","entidad","idegreso","egreso_detalle","b","autoBom","warn","test","c","d","XMLHttpRequest","onload","g","response","onerror","error","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","saveAs","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports","TransformacionService","conversorUrl","FisicoComponent","FisicoService","fisicoUrl","inventario_fisico","idingreso","SubCategoriaProductoComponent","impresoras","keyboardLayout","IDIOMA_TECLADO","esMovil","loadImpresoras","getImpresoras","loadBodegas","resetCategoriaGrupo","categoriaGrupo","JSON","parse","stringify","receta","descuento","antecesores","onSubmitSubCategoria","saveCategoriaGrupo","setCatGrp","enmovil","KardexComponent","filteredArticulos","txtArticuloSelected","undefined","getDescripcionArticulo","idarticulo","find","filtrarArticulos","filterValue","toLowerCase","filter","includes","displayArticulo","getArticulo","getArticulosIngreso","getReporteKardex","fdel","fal","routes","path","component","canActivate","redirectTo","pathMatch","WmsRoutingModule","forChild","ListaProductoComponent","treeHeight","treeControl","node","hijos","dataSource","hasChild","_","tieneHijos","producto","getArbolArticulosMante","arbol","convertToArbolNodoProducto","CategoriaProductoComponent","categoriaGrupoSvd","onChangeSubCategoriaEv","editCategoriaMode","editSubCategoriaMode","showCategoriasForm","resetCategoria","onSubmitCategoria","saveCategoria","onSubCategoriaSelected","ReplicarASedesComponent","dialog","miSede","loadSedes","maxWidth","afterClosed","s","replicaArticulosEnSedes","resReplica","FormProductoComponent","medidaSrvc","presentacionSrvc","impuestoEspecialSrvc","rptSrvc","subcategoria","articuloSvd","showArticuloForm","medidas","medidasFull","presentaciones","presentacionesFiltered","recetas","impuestosEspeciales","showDetalleForm","displayedColumns","endSubs","resetArticulo","bien_servicio","mostrar_pos","presentacion_reporte","impuesto_especial","shopify_id","cantidad_minima","cantidad_maxima","rendimiento","mostrar_inventario","resetReceta","setArticuloCategoriaGrupo","idcatgrp","add","saveArticulo","loadRecetas","loadArticulos","filtrarPresentaciones","loadMedidas","loadPresentaciones","tieneMovimientos","tiene_movimientos","presReporte","p","medida","getArticulos","loadImpuestosEspeciales","filtrarMedidas","pres","articulo_detalle","racionable","anulado","precio_extra","updateTableDataSource","getArticuloDetalle","getReceta","iddetalle","eliminaReceta","item","confirmRef","conf","saveArticuloDetalle","onSubmitDetail","imprimirReceta","filterPredicate","replicarASedes","replicarASedesRef","width","applyFilter","toLocaleLowerCase","setOpcMultOff","setComboOff","unsubscribe","ListaIngresoComponent","ingresoSrvc","getIngresoEv","pageSize","pageSizeOptions","pageIndex","txtFiltro","_fdel","startOf","_fal","endOf","loadIngresos","lst","lstIngresos","getIngreso","pageChange","tmpList","lstIngresosPaged","FormIngresoComponent","proveedorSrvc","tipoMovimientoSrvc","presentacinSrvc","documentoTipoSrvc","tipoCompraVentaSrvc","saveToDB","ingresoSavedEv","showIngresoForm","showDetalleIngresoForm","showDocumentoForm","tiposMovimiento","proveedores","filteredProveedores","fltrPresentaciones","txtProveedorSelected","documentosTipo","tiposCompraVenta","loadTiposMovimiento","loadProveedores","loadDocumentosTipo","loadTiposCompraVenta","removeFromDetail","idx","findIndex","de","splice","resetDetalleIngreso","resetDocumento","save","setProveedor","args","detalleIngreso","ingreso_detalle","loadDetalleIngreso","getDetalle","getDetalleIngreso","setPresentaciones","saveDetalle","agregaADetalle","index","addToDetail","cantidad_utilizada","editFromDetail","tmp","getDescripcionPresentacion","idpresentacion","eliminarArticulo","element","filtrarProveedores","razon_social","nit","displayProveedor","idProveedor","documento","documento_tipo","serie","numero","tipo_compra_venta","enviado","setDocumentoIngreso","dc","loadDocumento","getDocumento","doc","submitDocumento","saveDocumento","enviarAConta","confirma","enviarDocumentoAConta","FormInventarioFisicoComponent","showForm","resetDatos","fhcreacion","notas","confirmado","buscar","actualizar","confirmar","imprimir","existencia_fisica","imprimirXls","ListaEgresoComponent","egresoSrvc","getEgresoEv","lstEgresos","getEgreso","idcomandafox","lstEgresosPaged","ProductoComponent","listasCategoriasGrupo","articulosFull","setArticulo","esreceta","frmProductoComponent","idcategoriagrupo","refreshArticuloList","reloadCategoriasInSubcategoriasArticulos","frmSubcategoria","verTodos","selectCategoria","selectSubcat","IngresoService","ingresoUrl","documentoUrl","idDocumento","TransformacionComponent","_snackBar","mermaDetalle","showMerma","transformacion","bodega_destino","tipo_movimiento_destino","merma","detallesMerma","dm","detallesEgreso","resetEgreso","resetDetalleMerma","IngresoComponent","breakpoint","onWindowResize","ev","innerWidth","setIngreso","ing","refreshIngresoList","lstIngresoComponent","WmsModule","FormEgresoComponent","egresoSavedEv","showEgresoForm","showDetalleEgresoForm","displayedColumnsM","tiposMovimientoIngreso","fltrPresentacionesMerma","txtArticuloSelectedM","paraEgreso","updateTableDataSourceM","creacion","confirmarEgreso","detalleEgreso","detalleMerma","getDetalleEgreso","setPresentacionesMerma","addToDetailMerma","editFromDetailMerma","removeFromDetailMerma","dataSourceM","update","displayArticuloMerma"],"mappings":"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","file":"default~restaurante-restaurante-module~wms-wms-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\n// import { FormEgresoComponent } from '../egreso/form-egreso/form-egreso.component';\r\nimport { FormIngresoComponent } from '../ingreso/form-ingreso/form-ingreso.component';\r\n\r\nimport { TransformacionIngreso } from '../../interfaces/transformacion';\r\nimport { TransformacionService } from '../../services/transformacion.service';\r\nimport { Ingreso } from '../../interfaces/ingreso';\r\n\r\n@Component({\r\n  selector: 'app-produccion',\r\n  templateUrl: './produccion.component.html',\r\n  styleUrls: ['./produccion.component.css']\r\n})\r\nexport class ProduccionComponent implements OnInit {\r\n\r\n  @ViewChild('frmIngreso') frmIngreso: FormIngresoComponent;\r\n  public ingreso: Ingreso;\r\n  public produccion: TransformacionIngreso;\r\n  public bloqueoBotones = false;\r\n\r\n  constructor(\r\n    private ls: LocalstorageService,\r\n    private snackBar: MatSnackBar,\r\n    private transformacionSrvc: TransformacionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.ingreso = {\r\n      ingreso: null, tipo_movimiento: null, fecha: moment().format(GLOBAL.dbDateFormat), bodega: null,\r\n      usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), comentario: null, proveedor: null\r\n    };\r\n  }\r\n\r\n  transformar = () => {\r\n    this.bloqueoBotones = true;\r\n    this.ingreso = this.frmIngreso.ingreso;\r\n\r\n    this.produccion = {\r\n      tipo_movimiento: this.ingreso.tipo_movimiento,\r\n      fecha: this.ingreso.fecha,\r\n      proveedor: this.ingreso.proveedor,\r\n      bodega: this.ingreso.bodega,\r\n      usuario: this.ingreso.usuario,\r\n      bodega_origen: this.ingreso.bodega_origen,\r\n      comentario: this.ingreso.comentario,\r\n      detalle: []\r\n    };\r\n\r\n    this.frmIngreso.detallesIngreso.forEach(di => this.produccion.detalle.push({\r\n      articulo: di.articulo,\r\n      cantidad: di.cantidad,\r\n      precio_unitario: di.precio_unitario,\r\n      precio_total: di.precio_total,\r\n      presentacion: di.presentacion\r\n    }));\r\n\r\n    if (\r\n      !!this.produccion && !!this.produccion.detalle && this.produccion.detalle.length > 0\r\n    ) {\r\n      this.transformacionSrvc.producir(this.produccion).subscribe(res => {\r\n        this.bloqueoBotones = false;\r\n        if (res.exito) {\r\n          this.frmIngreso.resetIngreso();\r\n          this.frmIngreso.detallesIngreso = [];\r\n          this.snackBar.open('Producto generado con éxito...', 'Producción', { duration: 5000 });\r\n        } else {\r\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Producción', { duration: 3000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.bloqueoBotones = false;\r\n      this.snackBar.open(`Faltan datos necesario. Favor complete los datos e intente de nuevo.`, 'Transformación', { duration: 3000 });\r\n    }\r\n  }\r\n\r\n  doSomething = () => { }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m12 s12\" style=\"padding-bottom: 5px !important;\">\r\n        <div align=\"end\">\r\n            <button [disabled]=\"bloqueoBotones\" mat-raised-button type=\"button\" color=\"accent\" (click)=\"transformar()\">\r\n                <mat-icon style=\"font-size: 18pt;\">transform</mat-icon>&nbsp;Producir\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col m12 s12\">\r\n        <app-form-ingreso #frmIngreso [produccion] = \"true\" [(ingreso)]=\"ingreso\" [saveToDB]=\"false\" (ingresoSavedEv)=\"doSomething()\">\r\n        </app-form-ingreso>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoMovimiento } from '../interfaces/tipo-movimiento';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoMovimientoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<TipoMovimiento[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    }; */\n    return this.http.get<TipoMovimiento[]>(\n      `${GLOBAL.urlCatalogos}/get_tipo_movimiento?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso';\r\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\r\nimport { saveAs } from 'file-saver';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-existencias',\r\n  templateUrl: './existencias.component.html',\r\n  styleUrls: ['./existencias.component.css']\r\n})\r\n\r\nexport class ExistenciasComponent implements OnInit {\r\n\r\n  public bodegas: Bodega[] = [];\r\n  public sedes: UsuarioSede[] = [];\r\n  public params: any = {};\r\n  public titulo: string = \"Existencias\";\r\n  public cargando = false;\r\n  public configBotones: ConfiguracionBotones = {\r\n    showPdf: true, showHtml: false, showExcel: true\r\n  };\r\n\r\n  constructor(\r\n  \tprivate snackBar: MatSnackBar,\r\n    private pdfServicio: ReportePdfService,\r\n    private sedeSrvc: AccesoUsuarioService,\r\n    private bodegaSrvc: BodegaService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.params.fecha = moment().format(GLOBAL.dbDateFormat);\r\n  \tthis.getSede();\r\n  \t//this.getBodega();\r\n  }\r\n\r\n  getSede = (params: any = {}) => {\r\n    this.sedeSrvc.getSedes(params).subscribe(res => {\r\n      this.sedes = res;\r\n    });\r\n  }\r\n\r\n  getBodega = (params: any = {}) => {\r\n    this.bodegaSrvc.get(params).subscribe(res => {\r\n      this.bodegas = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.params._excel = 0;\r\n    this.cargando = true;\r\n  \tthis.pdfServicio.getReporteExistencia(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n  \t\tif (res) {\r\n\t        const blob = new Blob([res], { type: 'application/pdf' });\r\n\t        saveAs(blob, `${this.titulo}.pdf`);\r\n\t      } else {\r\n\t        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n\t      }\r\n  \t});\r\n  }\r\n\r\n  excelClick = () => {\r\n    this.params._excel = 1;\r\n    this.cargando = true;\r\n    this.pdfServicio.getReporteExistencia(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n        saveAs(blob, `${this.titulo}.xls`);\r\n      } else {\r\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSedesSelected = (obj: any) => {\r\n    this.getBodega({sede: this.params.sede});\r\n  }\r\n\r\n  resetParams = () => {\r\n    this.params = {};\r\n    this.cargando = false;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col m12 s12\">\r\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n      <mat-card-title>\r\n        <h4>Reporte de existencias</h4>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form #frmRptExistencias=\"ngForm\" novalidate>\r\n          <mat-form-field class=\"fullWidth\">\r\n            <mat-label>Sede</mat-label>\r\n            <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\" (selectionChange)=\"onSedesSelected($event)\">\r\n                <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\r\n                  {{sede.sede.nombre}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n          <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Bodega</mat-label>\r\n              <mat-select name=\"bodega\" multiple [(ngModel)]=\"params.bodega\">\r\n                  <mat-option *ngFor=\"let bod of bodegas\" [value]=\"bod.bodega\">\r\n                      {{bod.descripcion}}\r\n                  </mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n          \r\n          <mat-form-field class=\"fullWidth\">            \r\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fecha\" [ngModelOptions]=\"{standalone: true}\" required>\r\n          </mat-form-field>\r\n          <div align=\"end\">\r\n            <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\r\n          </div>\r\n        </form>   \r\n        <app-cargando *ngIf=\"cargando\"></app-cargando>     \r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { SedeService } from '../../../../admin/services/sede.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { Categoria } from '../../../interfaces/categoria';\r\nimport { CategoriaGrupo } from '../../../interfaces/categoria-grupo';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { FisicoService } from '../../../services/fisico.service';\r\nimport { Sede } from '../../../../admin/interfaces/sede';\r\nimport { saveAs } from 'file-saver';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-reporte',\r\n  templateUrl: './reporte.component.html',\r\n  styleUrls: ['./reporte.component.css']\r\n})\r\nexport class ReporteComponent implements OnInit {\r\n\r\n  public bodegas: Bodega[] = [];\r\n  public sedes: Sede[] = [];\r\n  public params: any = {};\r\n  public categorias: Categoria[] = [];\r\n  public categoriasGruposPadre: CategoriaGrupo[] = [];\r\n  public categoriasGrupos: CategoriaGrupo[] = [];\r\n  public titulo: string = \"Fisico\";\r\n  public cargando = false;\r\n  public showReporte = true;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private pdfServicio: ReportePdfService,\r\n    private sedeSrvc: SedeService,\r\n    private bodegaSrvc: BodegaService,\r\n    private articuloSrvc: ArticuloService,\r\n    private fisicoSrvc: FisicoService,\r\n    private ls: LocalstorageService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getSede();\r\n    this.getBodega();\r\n    this.loadCategorias();\r\n    this.params.fecha = moment().format(GLOBAL.dbDateFormat);\r\n  }\r\n\r\n  getSede = (params: any = {}) => {\r\n    this.sedeSrvc.get(params).subscribe(res => {\r\n      this.sedes = res;\r\n    });\r\n  }\r\n\r\n  getBodega = (params: any = {}) => {\r\n    this.bodegaSrvc.get(params).subscribe(res => {\r\n      this.bodegas = res;\r\n    });\r\n  }\r\n\r\n  loadCategorias = () => {\r\n    this.articuloSrvc.getCategorias({sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0)}).subscribe(res => {\r\n      //console.log(res);\r\n      if (res) {\r\n        this.categorias = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  onCategoriaSelected = (obj: any) => this.loadSubCategorias(+obj.value.categoria);\r\n\r\n  loadSubCategorias = (idcategoria: number) => {\r\n    this.articuloSrvc.getCategoriasGrupos({ categoria: +idcategoria }).subscribe(res => {\r\n      if (res) {\r\n        this.categoriasGruposPadre = this.articuloSrvc.adaptCategoriaGrupoResponse(res);\r\n        this.categoriasGrupos = this.categoriasGruposPadre;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubCategoriaPadreSelected = (obj: any) => this.loadSubCategoriasSubcategorias(+obj.value);\r\n\r\n  loadSubCategoriasSubcategorias = (idsubcat: number) => {\r\n    this.articuloSrvc.getCategoriasGrupos({ categoria_grupo_grupo: idsubcat }).subscribe(res => {\r\n      if (res) {\r\n        this.categoriasGrupos = this.articuloSrvc.adaptCategoriaGrupoResponse(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.cargando = true;\r\n    \r\n    this.fisicoSrvc.generarInventarioFisico(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n      console.log(res)\r\n      if (res.exito) {\r\n        this.pdfServicio.imprimirInventarioFisico(res.inventario, this.params).subscribe(resImp => {\r\n          if (this.params._excel) {\r\n            const blob = new Blob([resImp], { type: 'application/vnd.ms-excel' });  \r\n            saveAs(blob, `${this.titulo}.xls`);\r\n          } else {\r\n            const blob = new Blob([resImp], { type: 'application/pdf' });\r\n            saveAs(blob, `${this.titulo}.pdf`);\r\n          }\r\n\r\n          \r\n        });\r\n      } else {\r\n        this.snackBar.open('No se pudo generar el reporte... '+res.mensaje, this.titulo, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m12 s12\">\r\n      <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n        <mat-card-title>\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n              <h4>Inventario Físico</h4>\r\n            </div>\r\n            <div class=\"col\" style=\"float: right;\">\r\n              <button mat-button type=\"button\" color=\"accent\" (click)=\"showReporte = !showReporte;\">\r\n                <mat-icon class=\"iconFontSize\" *ngIf=\"showReporte\">expand_more</mat-icon>\r\n                <mat-icon class=\"iconFontSize\" *ngIf=\"!showReporte\">expand_less</mat-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </mat-card-title>\r\n        <mat-card-content *ngIf=\"showReporte\">\r\n          <form #frmFisicoReporte=\"ngForm\" (ngSubmit)=\"frmFisicoReporte.form.valid && onSubmit()\" novalidate>\r\n            <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Bodega</mat-label>\r\n              <mat-select name=\"bodega\" [(ngModel)]=\"params.bodega\" required>\r\n                  <mat-option *ngFor=\"let bod of bodegas\" [value]=\"bod.bodega\">\r\n                      {{bod.descripcion}}\r\n                  </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Sede</mat-label>\r\n                <mat-select name=\"sede\" [(ngModel)]=\"params.sede\" required>\r\n                    <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede\">\r\n                        {{sede.nombre}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Categoría</mat-label>\r\n              <mat-select name=\"categoria\" (selectionChange)=\"onCategoriaSelected($event)\">\r\n                  <mat-option *ngFor=\"let cat of categorias\" [value]=\"cat\">\r\n                      {{cat.descripcion}}\r\n                  </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Sub-categoría</mat-label>\r\n              <mat-select name=\"categoriaGrupoPadre\" [(ngModel)]=\"params.categoria_grupo_grupo\">\r\n                  <mat-option *ngFor=\"let subcatpadre of categoriasGruposPadre\" [value]=\"subcatpadre.categoria_grupo\">\r\n                      {{subcatpadre.descripcion}}\r\n                  </mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">            \r\n              <input matInput type=\"date\" placeholder=\"Fecha\" [(ngModel)]=\"params.fecha\" readonly [ngModelOptions]=\"{standalone: true}\" required>\r\n            </mat-form-field>\r\n            <mat-checkbox name=\"excel\" class=\"fullWidth\" [(ngModel)]=\"+params._excel\">Generar en Excel\r\n            </mat-checkbox>\r\n            <div align=\"end\">\r\n              <button \r\n                mat-button \r\n                color=\"accent\" \r\n                type=\"submit\" \r\n                [disabled]=\"!frmFisicoReporte.form.valid\"\r\n                >GENERAR</button>\r\n            </div>\r\n          </form>  \r\n          <app-cargando *ngIf=\"cargando\"></app-cargando>      \r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Articulo } from '../../../interfaces/articulo';\n\n@Component({\n  selector: 'app-replicar-a-sedes-dialog',\n  templateUrl: './replicar-a-sedes-dialog.component.html',\n  styleUrls: ['./replicar-a-sedes-dialog.component.css']\n})\nexport class ReplicarASedesDialogComponent implements OnInit {\n\n  public articulo: Articulo = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<ReplicarASedesDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    if (this.data.articulo) {\n      this.articulo = this.data.articulo;\n    }\n  }\n\n}\n","<!--<h1 mat-dialog-title>AGREGAR CLIENTE</h1>-->\n<div mat-dialog-content>\n    <app-replicar-asedes [articulo]=\"articulo\"></app-replicar-asedes>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"dialogRef.close()\">\n        Terminar\n    </button>\n</div>\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\n\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { ArbolArticulos, ArbolCategoriaGrupo, Articulo, NodoProducto } from '../../../interfaces/articulo';\nimport { ArticuloService } from '../../../services/articulo.service';\n\n@Component({\n  selector: 'app-lista-producto-alt',\n  templateUrl: './lista-producto-alt.component.html',\n  styleUrls: ['./lista-producto-alt.component.css']\n})\nexport class ListaProductoAltComponent implements OnInit {\n\n  @Input() bloqueoBotones = false;\n  @Output() productoClickedEv = new EventEmitter();\n  @Output() categoriasFilledEv = new EventEmitter();\n  public categorias: ArbolArticulos[] = [];\n  public subcategorias: ArbolCategoriaGrupo[] = [];\n  public articulos: Articulo[] = [];\n\n  constructor(\n    private articuloSrvc: ArticuloService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.loadArbolArticulos();\n  }\n\n  loadArbolArticulos = () => {\n    this.articuloSrvc.getArbolArticulos((this.ls.get(GLOBAL.usrTokenVar).sede || 0)).subscribe((res: ArbolArticulos[]) => {\n      this.fillCategorias(res);\n    });\n  }\n\n  fillCategorias = (cats: ArbolArticulos[]) => {\n    this.categorias = [];\n    this.subcategorias = [];\n    this.articulos = [];\n    for (const cat of cats) {\n      this.categorias.push(cat);\n    }\n    this.categoriasFilledEv.emit(this.categorias);\n  }\n\n  fillSubCategorias = (subcats: ArbolCategoriaGrupo[]) => {\n    this.subcategorias = [];\n    this.articulos = [];\n    for (const subcat of subcats) {\n      this.subcategorias.push(subcat);\n    }\n  }\n\n  fillArticulos = (arts: Articulo[]) => {\n    this.articulos = [];\n    for (const a of arts) {\n      this.articulos.push(a);\n    }\n  }\n\n  clickOnCategoria = (cat: ArbolArticulos) => {\n    if (cat.categoria_grupo.length > 0) {\n      this.fillSubCategorias(cat.categoria_grupo);\n    }\n  }\n\n  clickOnSubCategoria = (scat: ArbolCategoriaGrupo) => {\n    if (scat.articulo.length > 0) {\n      this.fillArticulos(scat.articulo);\n    }\n  }\n\n  clickOnArticulo = (art: Articulo) => {\n    const obj: NodoProducto = {\n      id: +art.articulo,\n      nombre: art.descripcion,\n      precio: +art.precio,\n      impresora: art.impresora,\n      presentacion: art.presentacion,\n      codigo: art.codigo,\n      combo: art.combo,\n      multiple: art.multiple\n    };\n    // console.log(obj);\n    this.productoClickedEv.emit(obj);\n    // this.subcategorias = [];\n    // this.articulos = [];\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <ng-container *ngFor=\"let sc of subcategorias\">\n            <button mat-raised-button class=\"btnAccion\" color=\"primary\" *ngIf=\"sc.mostrarEnPos\" (click)=\"clickOnSubCategoria(sc)\" [disabled]=\"bloqueoBotones\">\n                {{sc.descripcion}}\n            </button>\n        </ng-container>\n    </div>\n</div>\n<hr *ngIf=\"articulos.length > 0\" />\n<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <button mat-raised-button class=\"btnAccion\" color=\"warn\" *ngFor=\"let art of articulos\" (click)=\"clickOnArticulo(art)\" [disabled]=\"bloqueoBotones\">\n            {{art.descripcion}}\n        </button>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\nimport { ListaEgresoComponent } from '../lista-egreso/lista-egreso.component';\nimport { FormEgresoComponent } from '../form-egreso/form-egreso.component';\nimport { Egreso } from '../../../interfaces/egreso';\n\n@Component({\n  selector: 'app-egreso',\n  templateUrl: './egreso.component.html',\n  styleUrls: ['./egreso.component.css']\n})\nexport class EgresoComponent implements OnInit {\n\n  public egreso: Egreso;\n  @ViewChild('lstEgreso') lstEgresoComponent: ListaEgresoComponent;\n  @ViewChild('frmEgreso') frmEgreso: FormEgresoComponent;\n\n  constructor(\n    private ls: LocalstorageService\n  ) {\n    this.egreso = {\n      egreso: null, tipo_movimiento: null, bodega: null, fecha: moment().format(GLOBAL.dbDateFormat),\n      usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), estatus_movimiento: 1, traslado: 0\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setEgreso = (egr: Egreso) => {\n    this.egreso = egr;\n    this.frmEgreso.resetDetalleEgreso();\n    this.frmEgreso.loadDetalleEgreso(+this.egreso.egreso);\n  }\n\n  refreshEgresoList = () => {\n    this.lstEgresoComponent.loadEgresos();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-egreso #lstEgreso (getEgresoEv)=\"setEgreso($event)\"></app-lista-egreso>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-egreso #frmEgreso [egreso]=\"egreso\" (egresoSavedEv)=\"refreshEgresoList()\"></app-form-egreso>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { ServiceErrorHandler } from '../../shared/error-handler';\r\nimport { LocalstorageService } from '../../admin/services/localstorage.service';\r\n// import { Observable } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportePdfService {\r\n  private srvcErrHndl: ServiceErrorHandler;\r\n  private usrToken: string = null;\r\n  private httpOptions: Object = {responseType:'blob'};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private ls: LocalstorageService\r\n  ) {\r\n    this.srvcErrHndl = new ServiceErrorHandler();\r\n    this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\r\n\r\n    this.httpOptions['headers'] = new HttpHeaders({\r\n      'Authorization': this.usrToken,\r\n      'Accept': 'application/pdf'\r\n    });\r\n  }\r\n\r\n  getReporteCaja(params: Object) {\r\n    return this.http.post<any>(\r\n      `${GLOBAL.urlAppRestaurante}/reporte/caja`,\r\n      params,\r\n      this.httpOptions\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getReporteExistencia(params: Object) {\r\n\r\n    return this.http.post<string>(\r\n        `${GLOBAL.urlWms}/reporte/existencia`,\r\n        params,\r\n        this.httpOptions\r\n        ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getReporteValorizado(params: Object) {\r\n    return this.http.post<string>(\r\n      `${GLOBAL.urlWms}/reporte/valorizado`,\r\n      params,\r\n      this.httpOptions\r\n      ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  imprimirInventarioFisico(id: number, params?:Object) {\r\n    this.httpOptions['params'] = params;\r\n    return this.http.get<string>(\r\n      `${GLOBAL.urlWms}/fisico/imprimir/${id}`,\r\n      this.httpOptions\r\n      ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  imprimirReceta(id: number) {\r\n    return this.http.get<string>(\r\n      `${GLOBAL.urlMantenimientos}/articulo/imprimir_receta/${id}`,\r\n      this.httpOptions\r\n      ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getReporteKardex(params: Object) {\r\n    return this.http.post<string>(\r\n        `${GLOBAL.urlWms}/reporte/kardex`,\r\n        params,\r\n        this.httpOptions\r\n        ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getReporteFactura(params: Object) {\r\n    this.httpOptions['params'] = params;\r\n\r\n    return this.http.get<string>(\r\n      `${GLOBAL.urlAppRestaurante}/reporte/factura`,\r\n      this.httpOptions\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getReportePropina(params: Object) {\r\n    this.httpOptions['params'] = params;\r\n\r\n    return this.http.get<string>(\r\n      `${GLOBAL.urlAppRestaurante}/reporte/distribucion_propina`,\r\n      this.httpOptions\r\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n\r\n  getComanda(idcuenta: number) {\r\n    return this.http.get<string>(\r\n        `${GLOBAL.urlAppRestaurante}/comanda/imprimir/${idcuenta}/1`,\r\n        this.httpOptions\r\n        ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso';\r\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\r\nimport { saveAs } from 'file-saver';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-valorizado',\r\n  templateUrl: './valorizado.component.html',\r\n  styleUrls: ['./valorizado.component.css']\r\n})\r\nexport class ValorizadoComponent implements OnInit {\r\n\r\n  public bodegas: Bodega[] = [];\r\n  public sedes: UsuarioSede[] = [];\r\n  public params: any = {};\r\n  public titulo: string = \"Valorizado\";\r\n  public cargando = false;\r\n  public configBotones: ConfiguracionBotones = {\r\n    showPdf: true, showHtml: false, showExcel: true\r\n  };\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private pdfServicio: ReportePdfService,\r\n    private sedeSrvc: AccesoUsuarioService,\r\n    private bodegaSrvc: BodegaService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.params.fecha = moment().format(GLOBAL.dbDateFormat);\r\n    this.getSede();\r\n  \tthis.getBodega();\r\n  }\r\n\r\n  getSede = (params: any = {}) => {\r\n    this.sedeSrvc.getSedes(params).subscribe(res => {\r\n      this.sedes = res;\r\n    });\r\n  }\r\n\r\n  getBodega = (params: any = {}) => {\r\n    this.bodegaSrvc.get(params).subscribe(res => {\r\n      this.bodegas = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.params._excel = 0;\r\n    this.cargando = true;\r\n  \tthis.pdfServicio.getReporteValorizado(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n  \t\tif (res) {\r\n\t        const blob = new Blob([res], { type: 'application/pdf' });\r\n\t        saveAs(blob, `${this.titulo}.pdf`);\r\n\t      } else {\r\n\t        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n\t      }\r\n  \t});\r\n  }\r\n\r\n  excelClick = () => {\r\n    this.params._excel = 1;\r\n    this.cargando = true;\r\n    this.pdfServicio.getReporteValorizado(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n        saveAs(blob, `${this.titulo}.xls`);\r\n      } else {\r\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSedesSelected = (obj: any) => {\r\n    this.getBodega({sede: this.params.sede});\r\n  }\r\n\r\n  resetParams = () => {\r\n    this.params = {};\r\n    this.cargando = false;\r\n  }\r\n  \r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m12 s12\">\r\n      <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n        <mat-card-title>\r\n          <h4>Inventario Valorizado</h4>\r\n        </mat-card-title>\r\n        <mat-card-content>\r\n          <form #frmRptValorizado=\"ngForm\" novalidate>\r\n            <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Sede</mat-label>\r\n              <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\" (selectionChange)=\"onSedesSelected($event)\">\r\n                  <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\" >\r\n                      {{sede.sede.nombre}}\r\n                  </mat-option>\r\n              </mat-select>\r\n            </mat-form-field> \r\n            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Bodega</mat-label>\r\n                <mat-select name=\"bodega\" multiple [(ngModel)]=\"params.bodega\">\r\n                    <mat-option *ngFor=\"let bod of bodegas\" [value]=\"bod.bodega\">\r\n                        {{bod.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field class=\"fullWidth\">            \r\n              <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fecha\" [ngModelOptions]=\"{standalone: true}\" required>\r\n            </mat-form-field>\r\n            <div align=\"end\">\r\n              <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\r\n            </div>\r\n          </form>  \r\n          <app-cargando *ngIf=\"cargando\"></app-cargando>      \r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Egreso } from '../interfaces/egreso';\nimport { DetalleEgreso } from '../interfaces/detalle-egreso';\nimport { Observable, of } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EgresoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private egresoUrl = 'egreso';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Egreso[]> {\n    return this.http.get<Egreso[]>(\n      `${GLOBAL.urlWms}/${this.egresoUrl}/buscar_egreso?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Egreso) {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.egresoUrl}/guardar${+entidad.egreso > 0 ? ('/' + entidad.egreso) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idegreso: number, fltr: any = {}): Observable<DetalleEgreso[]> {\n    return this.http.get<DetalleEgreso[]>(\n      `${GLOBAL.urlWms}/${this.egresoUrl}/buscar_detalle/${idegreso}?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleEgreso) {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.egresoUrl}/guardar_detalle/${entidad.egreso}${+entidad.egreso_detalle > 0 ? ('/' + entidad.egreso_detalle) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Transformacion } from '../interfaces/transformacion';\nimport { TransformacionIngreso } from '../interfaces/transformacion';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransformacionService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private conversorUrl = 'conversor';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  transformar(entidad: Transformacion): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.conversorUrl}/transformar`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  producir(entidad: TransformacionIngreso): Observable<any> {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.conversorUrl}/producir`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormInventarioFisicoComponent } from '../form-inventario-fisico/form-inventario-fisico.component'\nimport { ReporteComponent } from '../reporte/reporte.component'\nimport { Articulo, ArticuloResponse } from '../../../interfaces/articulo';\nimport { ArticuloService } from '../../../services/articulo.service';\n\n@Component({\n  selector: 'app-fisico',\n  templateUrl: './fisico.component.html',\n  styleUrls: ['./fisico.component.css']\n})\nexport class FisicoComponent implements OnInit {\n\n  @ViewChild('rptInventario') rptInventarioComponent: ReporteComponent;\n  @ViewChild('frmInventario') frmInventarioComponent: FormInventarioFisicoComponent;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s12 m12\">\n        <app-reporte></app-reporte>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col s12 m12\">\n        <app-form-inventario-fisico></app-form-inventario-fisico>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FisicoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private fisicoUrl = 'fisico';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  generarInventarioFisico(params: Object) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.fisicoUrl}/generar`,\n      params\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  confirmar(entidad: any) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.fisicoUrl}/confirmar/${+entidad.inventario_fisico > 0 ? ('/' + entidad.inventario_fisico) : ''}`,\n      {}\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idingreso: number, fltr: any = {}): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<any>(\n      `${GLOBAL.urlWms}/${this.fisicoUrl}/buscar_detalle/${idingreso}?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(params: any) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.fisicoUrl}/actualizar/`,\n      params\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Impresora } from '../../../interfaces/impresora';\nimport { Categoria } from '../../../interfaces/categoria';\nimport { CategoriaGrupo } from '../../../interfaces/categoria-grupo';\nimport { ArticuloService } from '../../../services/articulo.service';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\n\nimport { Bodega } from '../../../interfaces/bodega';\nimport { BodegaService } from '../../../services/bodega.service';\n\n\n@Component({\n  selector: 'app-sub-categoria-producto',\n  templateUrl: './sub-categoria-producto.component.html',\n  styleUrls: ['./sub-categoria-producto.component.css']\n})\nexport class SubCategoriaProductoComponent implements OnInit {\n\n  public categoria: Categoria;\n  public categorias: Categoria[] = [];\n  public impresoras: Impresora[] = [];\n  public categoriaGrupo: CategoriaGrupo;\n  public categoriasGruposPadre: CategoriaGrupo[] = [];\n  public categoriasGrupos: CategoriaGrupo[] = [];\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n  public bodegas: Bodega[] = [];\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private articuloSrvc: ArticuloService,\n    private bodegaSrvc: BodegaService,\n    private ls: LocalstorageService\n  ) {\n    this.resetCategoriaGrupo();\n  }\n\n  ngOnInit(): void {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadCategorias();\n    this.loadImpresoras();\n    this.loadBodegas();\n  }\n\n  loadCategorias = () => {\n    this.articuloSrvc.getCategorias({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((res: Categoria[]) => {\n      if (res) {\n        this.categorias = res;\n      }\n    });\n  }\n\n  loadImpresoras = () => {\n    this.articuloSrvc.getImpresoras({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.impresoras = res;\n      }\n    });\n  }\n\n  loadBodegas = () => {\n    this.bodegaSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((res: Bodega[]) => {\n      if (res) {\n        this.bodegas = res;\n      }\n    });\n  }\n\n  loadSubCategorias = (idcategoria: number) => {\n    this.resetCategoriaGrupo();\n    this.categoriaGrupo.categoria = idcategoria;\n    this.articuloSrvc.getCategoriasGrupos({ categoria: +idcategoria }).subscribe(res => {\n      if (res) {\n        this.categoriasGruposPadre = this.articuloSrvc.adaptCategoriaGrupoResponse(res);\n        this.categoriasGrupos = JSON.parse(JSON.stringify(this.categoriasGruposPadre));\n        // console.log('CG PADRE = ', this.categoriasGruposPadre);\n        // console.log('CG = ', this.categoriasGrupos);\n      }\n    });\n  }\n\n  resetCategoriaGrupo = () => {\n    this.categoriaGrupo = {\n      categoria_grupo: null,\n      // categoria: this.categoria?.categoria || null,\n      categoria: null,\n      categoria_grupo_grupo: null,\n      descripcion: null,\n      receta: 0,\n      impresora: null,\n      descuento: 0,\n      antecesores: null\n    };\n  }\n\n  onSubmitSubCategoria = () => {\n    this.articuloSrvc.saveCategoriaGrupo(this.categoriaGrupo).subscribe(res => {\n      if (res.exito) {\n        this.loadSubCategorias(+this.categoriaGrupo.categoria);\n        this.resetCategoriaGrupo();\n        this.snackBar.open('Grabada con éxito.', 'Sub - Categoría', { duration: 5000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Sub - Categoría', { duration: 5000 });\n      }\n    });\n  }\n\n  setCatGrp = (obj: CategoriaGrupo) => {\n    this.categoriaGrupo = obj;\n    // console.log(obj);\n    // console.log(this.categoriaGrupo);\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4\">\n    <mat-card-title>\n        <h4>Sub - categorías</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmCategoriaGrupo=\"ngForm\" novalidate>\n\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Categoría</mat-label>\n                <mat-select name=\"categoria\" [(ngModel)]=\"categoriaGrupo.categoria\" required>\n                    <mat-option *ngFor=\"let selCat of categorias\" [value]=\"selCat.categoria\">\n                        {{selCat.descripcion}}\n                    </mat-option>\n                </mat-select>                \n            </mat-form-field>            \n\n            <mat-form-field class=\"fullWidth\">\n                <input type=\"text\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Descripción de la sub - categoría\" name=\"descripcion\" [(ngModel)]=\"categoriaGrupo.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n                <input type=\"text\" matInput *ngIf=\"esMovil\" placeholder=\"Descripción de la sub - categoría\" name=\"descripcion\" [(ngModel)]=\"categoriaGrupo.descripcion\" minlength=\"1\" maxlength=\"45\" required>\n            </mat-form-field>\n\n            <!-- <mat-checkbox name=\"descuento\" class=\"fullWidth\" [(ngModel)]=\"+categoriaGrupo.descuento\">¿Aplica Descuento?</mat-checkbox> -->\n\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Impresora:</mat-label>\n                <mat-select name=\"impresora\" [(ngModel)]=\"categoriaGrupo.impresora\" required>\n                    <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                        {{imp.nombre}}\n                    </mat-option>\n                </mat-select>                \n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Sacar de la bodega:</mat-label>\n                <mat-select name=\"bodega\" [(ngModel)]=\"categoriaGrupo.bodega\" required>\n                    <mat-option *ngFor=\"let bode of bodegas\" [value]=\"bode.bodega\">\n                        {{bode.descripcion}}\n                    </mat-option>\n                </mat-select>                \n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\">\n                <input type=\"text\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Cuenta contable (si aplica)\" name=\"cuenta_contable\" [(ngModel)]=\"categoriaGrupo.cuenta_contable\" minlength=\"0\" maxlength=\"10\">\n                <input type=\"text\" matInput *ngIf=\"esMovil\" placeholder=\"Cuenta contable (si aplica)\" name=\"cuenta_contable\" [(ngModel)]=\"categoriaGrupo.cuenta_contable\" minlength=\"0\" maxlength=\"10\">\n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Anidar dentro de</mat-label>\n                <mat-select name=\"categoriaGrupoPadre\" [(ngModel)]=\"categoriaGrupo.categoria_grupo_grupo\">\n                    <mat-option *ngFor=\"let subcatpadre of categoriasGruposPadre\" [value]=\"subcatpadre.categoria_grupo\" [disabled]=\"+subcatpadre.categoria_grupo === +categoriaGrupo.categoria_grupo\">\n                        {{subcatpadre.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <div align=\"end\">\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"onSubmitSubCategoria()\" [disabled]=\"!frmCategoriaGrupo.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"resetCategoriaGrupo()\">\n                    Cancelar\n                </button>\n            </div>\n        </form>\n        <hr />\n        <mat-chip-list>\n            <mat-chip color=\"accent\" *ngFor=\"let cat of categorias\" (click)=\"categoria = cat; loadSubCategorias(cat.categoria)\" selected>\n                {{cat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n\n        <mat-chip-list>\n            <mat-chip color=\"warn\" *ngFor=\"let catGrupo of categoriasGrupos\" (click)=\"setCatGrp(catGrupo)\" selected>\n                {{catGrupo.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { Articulo } from '../../../interfaces/articulo';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso';\r\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\r\nimport { saveAs } from 'file-saver';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-kardex',\r\n  templateUrl: './kardex.component.html',\r\n  styleUrls: ['./kardex.component.css']\r\n})\r\nexport class KardexComponent implements OnInit {\r\n\r\n  public bodegas: Bodega[] = [];\r\n  public sedes: UsuarioSede[] = [];\r\n  public articulos: Articulo[] = [];\r\n  public filteredArticulos: Articulo[] = [];\r\n  public txtArticuloSelected: (Articulo | string) = undefined;\r\n  public params: any = {};\r\n  public titulo: string = \"Kardex\";\r\n  public cargando = false;\r\n  public configBotones: ConfiguracionBotones = {\r\n    showPdf: true, showHtml: false, showExcel: true\r\n  };\r\n\r\n  constructor(\r\n  \tprivate snackBar: MatSnackBar,\r\n    private pdfServicio: ReportePdfService,\r\n    private sedeSrvc: AccesoUsuarioService,\r\n    private bodegaSrvc: BodegaService,\r\n    private articuloSrvc: ArticuloService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.getSede();\r\n  \t//this.getBodega();\r\n    this.getArticulo();\r\n    this.txtArticuloSelected = undefined;\r\n    this.params.fdel = moment().format(GLOBAL.dbDateFormat);\r\n    this.params.fal = moment().format(GLOBAL.dbDateFormat);\r\n  }\r\n\r\n  getDescripcionArticulo = (idarticulo: number) => this.articulos.find(art => +art.articulo === +idarticulo).descripcion || '';\r\n\r\n  filtrarArticulos = (value: (Articulo | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredArticulos =\r\n        this.articulos.filter(a => a.descripcion.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredArticulos = this.articulos;\r\n    }\r\n  }\r\n\r\n  displayArticulo = (art: Articulo) => {\r\n    if (art) {\r\n      this.params.articulo = art.articulo;\r\n      return art.descripcion;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  getSede = (params: any = {}) => {\r\n    this.sedeSrvc.getSedes(params).subscribe(res => {\r\n      this.sedes = res;\r\n    });\r\n  }\r\n\r\n  getArticulo = (params: any= {}) => {\r\n    this.articuloSrvc.getArticulosIngreso(params).subscribe(res => {\r\n      this.articulos = res;\r\n    });\r\n  }\r\n\r\n  getBodega = (params: any = {}) => {\r\n    this.bodegaSrvc.get(params).subscribe(res => {\r\n      this.bodegas = res;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.params._excel = 0;\r\n  \tthis.pdfServicio.getReporteKardex(this.params).subscribe(res => {\r\n  \t\tif (res) {\r\n\t        const blob = new Blob([res], { type: 'application/pdf' });\r\n\t        saveAs(blob, `${this.titulo}.pdf`);\r\n\t      } else {\r\n\t        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n\t      }\r\n  \t});\r\n  }\r\n\r\n  excelClick = () => {\r\n    this.params._excel = 1;\r\n    this.cargando = true;\r\n    this.pdfServicio.getReporteKardex(this.params).subscribe(res => {\r\n      this.cargando = false;\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n        saveAs(blob, `${this.titulo}.xls`);\r\n      } else {\r\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  onSedesSelected = (obj: any) => {\r\n    this.getBodega({sede: this.params.sede});\r\n  }\r\n\r\n  resetParams = () => {\r\n    this.params = {};\r\n    this.cargando = false;\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col m12 s12\">\r\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n      <mat-card-title>\r\n        <h4>Kardex</h4>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form novalidate>\r\n          <mat-form-field class=\"fullWidth\">\r\n            <mat-label>Artículo</mat-label>                    \r\n            <input type=\"text\" [(ngModel)]=\"txtArticuloSelected\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Artículo\" matInput [matAutocomplete]=\"autoArticulos\" (keyup)=\"filtrarArticulos(txtArticuloSelected)\" required>\r\n            <mat-autocomplete #autoArticulos=\"matAutocomplete\" [displayWith]=\"displayArticulo\">\r\n                <mat-option *ngFor=\"let a of filteredArticulos\" [value]=\"a\">\r\n                    {{a.descripcion}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n          \r\n          <mat-form-field class=\"fullWidth\">\r\n              <mat-label>Sede</mat-label>\r\n              <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\" (selectionChange)=\"onSedesSelected($event)\">\r\n                  <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\r\n                    {{sede.sede.nombre}}\r\n                  </mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"fullWidth\">\r\n            <mat-label>Bodega</mat-label>\r\n            <mat-select name=\"bodega\" multiple [(ngModel)]=\"params.bodega\">\r\n                <mat-option *ngFor=\"let bod of bodegas\" [value]=\"bod.bodega\">\r\n                    {{bod.descripcion}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n          <mat-form-field class=\"fullWidth\">            \r\n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\" [ngModelOptions]=\"{standalone: true}\" required>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"fullWidth\">            \r\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\" [ngModelOptions]=\"{standalone: true}\" required>\r\n          </mat-form-field>\r\n          <div align=\"end\">\r\n            <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\r\n          </div>\r\n        </form> \r\n        <app-cargando *ngIf=\"cargando\"></app-cargando>       \r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthguardService as AuthGuard } from '../admin/services/authguard.service';\n\nimport { IngresoComponent } from './components/ingreso/ingreso/ingreso.component';\nimport { EgresoComponent } from './components/egreso/egreso/egreso.component';\nimport { ProductoComponent } from './components/producto/producto/producto.component';\nimport { TransformacionComponent } from './components/transformacion/transformacion.component';\nimport { ExistenciasComponent } from './components/reporte/existencias/existencias.component';\nimport { KardexComponent } from './components/reporte/kardex/kardex.component';\nimport { ProduccionComponent } from './components/produccion/produccion.component';\nimport { ValorizadoComponent } from './components/reporte/valorizado/valorizado.component';\nimport { FisicoComponent } from './components/fisico/fisico/fisico.component';\nimport { ReplicarASedesComponent } from './components/producto/replicar-a-sedes/replicar-a-sedes.component';\n\nconst routes: Routes = [\n  { path: 'ingresos', component: IngresoComponent, canActivate: [AuthGuard] },\n  { path: 'egresos', component: EgresoComponent, canActivate: [AuthGuard] },\n  { path: 'articulos', component: ProductoComponent, canActivate: [AuthGuard] },\n  { path: 'transformaciones', component: TransformacionComponent, canActivate: [AuthGuard] },\n  { path: 'rptexistencia', component: ExistenciasComponent, canActivate: [AuthGuard] },\n  { path: 'rptkardex', component: KardexComponent, canActivate: [AuthGuard] },\n  { path: 'produccion', component: ProduccionComponent, canActivate: [AuthGuard] },\n  { path: 'rptvalorizado', component: ValorizadoComponent, canActivate: [AuthGuard] },\n  { path: 'fisico', component: FisicoComponent, canActivate: [AuthGuard] },\n  { path: 'replicar_articulos_sedes', component: ReplicarASedesComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/admin/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WmsRoutingModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { ArbolArticulos, NodoProducto } from '../../../interfaces/articulo';\nimport { ArticuloService } from '../../../services/articulo.service';\n\n@Component({\n  selector: 'app-lista-producto',\n  templateUrl: './lista-producto.component.html',\n  styleUrls: ['./lista-producto.component.css']\n})\nexport class ListaProductoComponent implements OnInit {\n\n  @Input() treeHeight = '450px';\n  @Output() productoClickedEv = new EventEmitter();\n\n  treeControl = new NestedTreeControl<NodoProducto>(node => node.hijos);\n  dataSource = new MatTreeNestedDataSource<NodoProducto>();\n  public arbol: NodoProducto[];\n\n  constructor(\n    private ls: LocalstorageService,\n    private articuloSrvc: ArticuloService\n  ) {\n    // this.dataSource.data = TREE_DATA;\n  }\n\n  ngOnInit() {\n    this.loadArbolArticulos();\n  }\n\n  hasChild = (_: number, node: NodoProducto) => !!node.hijos && node.hijos.length > 0;\n\n  tieneHijos = (node: NodoProducto) => !!node.hijos && node.hijos.length > 0;\n\n  onProductoClicked(producto: NodoProducto) {\n    this.productoClickedEv.emit(producto);\n  }\n\n  loadArbolArticulos() {\n    this.articuloSrvc.getArbolArticulosMante((this.ls.get(GLOBAL.usrTokenVar).sede || 0)).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.arbol = this.articuloSrvc.convertToArbolNodoProducto(res);\n        // console.log(this.arbol);\n        this.dataSource.data = this.arbol;\n      }\n    });\n  }\n}\n","<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\" [style.height]=\"treeHeight\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n        <li class=\"mat-tree-node\">\n            <!-- use a disabled button to provide padding for tree leaf -->\n            <button mat-icon-button disabled></button>\n            <span *ngIf=\"tieneHijos(node)\">{{node.nombre}}</span>\n            <button mat-raised-button type=\"button\" *ngIf=\"!tieneHijos(node)\"\n                (click)=\"onProductoClicked(node)\">{{node.nombre}}</button>\n        </li>\n    </mat-tree-node>\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n        <li>\n            <div class=\"mat-tree-node\">\n                <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.nombre\">\n                    <mat-icon class=\"mat-icon-rtl-mirror\" style=\"font-size: 24pt !important;\">\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                    </mat-icon>\n                </button>\n                <span *ngIf=\"tieneHijos(node)\">{{node.nombre}}</span>\n                <button mat-raised-button type=\"button\" *ngIf=\"!tieneHijos(node)\" (click)=\"onProductoClicked(node);\">{{node.nombre}}</button>\n            </div>\n            <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n                <ng-container matTreeNodeOutlet></ng-container>\n            </ul>\n        </li>\n    </mat-nested-tree-node>\n</mat-tree>\n<!--\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n    \n    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n        <li class=\"mat-tree-node\">\n            \n            <button mat-icon-button disabled></button>\n            {{node.nombre}}\n        </li>\n    </mat-tree-node>\n    \n    <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n        <li>\n            <div class=\"mat-tree-node\">\n                <button mat-icon-button matTreeNodeToggle [attr.aria-label]=\"'toggle ' + node.nombre\">\n                    <mat-icon class=\"mat-icon-rtl-mirror\">\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                    </mat-icon>\n                </button>\n                {{node.nombre}}\n            </div>\n            <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n                <ng-container matTreeNodeOutlet></ng-container>\n            </ul>\n        </li>\n    </mat-nested-tree-node>\n</mat-tree>\n-->","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Impresora } from '../../../interfaces/impresora';\nimport { Categoria } from '../../../interfaces/categoria';\nimport { CategoriaGrupo } from '../../../interfaces/categoria-grupo';\nimport { ArticuloService } from '../../../services/articulo.service';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\n\n@Component({\n  selector: 'app-categoria-producto',\n  templateUrl: './categoria-producto.component.html',\n  styleUrls: ['./categoria-producto.component.css']\n})\nexport class CategoriaProductoComponent implements OnInit {\n\n  @Output() categoriaGrupoSvd = new EventEmitter();\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onChangeSubCategoriaEv = new EventEmitter();\n\n  public categoria: Categoria;\n  public categorias: Categoria[] = [];\n  public categoriaGrupo: CategoriaGrupo;\n  public categoriasGruposPadre: CategoriaGrupo[] = [];\n  public categoriasGrupos: CategoriaGrupo[] = [];\n  public editCategoriaMode = false;\n  public editSubCategoriaMode = false;\n  public showCategoriasForm = true;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n  public impresoras: Impresora[] = [];\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private articuloSrvc: ArticuloService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetCategoria();\n    this.loadCategorias();\n    this.loadImpresoras();\n  }\n\n  resetCategoria = () => {\n    this.categoria = { categoria: null, sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0), descripcion: null };\n    this.resetCategoriaGrupo();\n    this.editCategoriaMode = false;\n  }\n\n  resetCategoriaGrupo = () => {\n    this.categoriaGrupo = {\n      categoria_grupo: null,\n      categoria: this.categoria.categoria,\n      categoria_grupo_grupo: null,\n      descripcion: null,\n      receta: 0,\n      impresora: null,\n      descuento: 0,\n      antecesores: null\n    };\n    this.editSubCategoriaMode = false;\n  }\n\n  loadCategorias = () => {\n    this.articuloSrvc.getCategorias({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.categorias = res;\n      }\n    });\n  }\n\n  onCategoriaSelected = (obj: any) => this.loadSubCategorias(+obj.value.categoria);\n\n  loadSubCategorias = (idcategoria: number) => {\n    this.articuloSrvc.getCategoriasGrupos({ categoria: +idcategoria }).subscribe(res => {\n      if (res) {\n        this.categoriasGruposPadre = this.articuloSrvc.adaptCategoriaGrupoResponse(res);\n        this.categoriasGrupos = this.categoriasGruposPadre;\n      }\n    });\n  }\n\n  loadImpresoras = () => {\n    this.articuloSrvc.getImpresoras({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.impresoras = res;\n      }\n    });\n  }\n\n  onSubCategoriaPadreSelected = (obj: any) => this.loadSubCategoriasSubcategorias(+obj.value);\n\n  loadSubCategoriasSubcategorias = (idsubcat: number) => {\n    this.articuloSrvc.getCategoriasGrupos({ categoria_grupo_grupo: idsubcat }).subscribe(res => {\n      if (res) {\n        this.categoriasGrupos = this.articuloSrvc.adaptCategoriaGrupoResponse(res);\n      }\n    });\n  }\n\n  onSubmitCategoria = () => {\n    this.articuloSrvc.saveCategoria(this.categoria).subscribe(res => {\n      if (res.exito) {\n        this.editCategoriaMode = false;\n        this.resetCategoria();\n        this.loadCategorias();\n        this.categoriaGrupoSvd.emit();\n        this.snackBar.open('Grabada con éxito.', 'Categoría', { duration: 5000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Categoría', { duration: 5000 });\n      }\n    })\n  }\n\n  onSubCategoriaSelected = (obj: any) => this.onChangeSubCategoriaEv.emit(+obj.value.categoria_grupo);\n\n  onSubmitSubCategoria = () => {\n    this.articuloSrvc.saveCategoriaGrupo(this.categoriaGrupo).subscribe(res => {\n      if (res.exito) {\n        this.resetCategoriaGrupo();\n        this.loadSubCategorias(+this.categoria.categoria);\n        // this.categoriaGrupoSvd.emit();\n        this.snackBar.open('Grabada con éxito.', 'Sub - Categoría', { duration: 5000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Sub - Categoría', { duration: 5000 });\n      }\n    })\n  }\n}\n","<mat-card class=\"mat-elevation-z4\">\n    <mat-card-title>\n        <h4>Categorías</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmCategoria=\"ngForm\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" matInput placeholder=\"Descripción de la categoría\" name=\"descripcion\" [(ngModel)]=\"categoria.descripcion\" minlength=\"1\" maxlength=\"150\" required>\n                <input type=\"text\" *ngIf=\"esMovil\" matInput placeholder=\"Descripción de la categoría\" name=\"descripcion\" [(ngModel)]=\"categoria.descripcion\" minlength=\"1\" maxlength=\"150\" required>\n            </mat-form-field>\n\n            <div align=\"end\">\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"onSubmitCategoria()\"\n                    [disabled]=\"!frmCategoria.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"resetCategoria()\">\n                    Cancelar\n                </button>\n            </div>\n        </form>\n        <hr/>\n        <mat-chip-list>\n            <mat-chip color=\"accent\" *ngFor=\"let cat of categorias\" (click)=\"categoria = cat\" selected>\n                {{cat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Sede } from '../../../../admin/interfaces/sede';\nimport { SedeService } from '../../../../admin/services/sede.service';\nimport { ArticuloService } from '../../../services/articulo.service';\nimport { Articulo } from '../../../interfaces/articulo';\n\n@Component({\n  selector: 'app-replicar-asedes',\n  templateUrl: './replicar-a-sedes.component.html',\n  styleUrls: ['./replicar-a-sedes.component.css']\n})\nexport class ReplicarASedesComponent implements OnInit {\n\n  @Input() articulo: Articulo = null;\n\n  public cargando = false;\n  public sedes: Sede[] = [];\n  public params: any = {};\n  public miSede = 0;\n\n  constructor(\n    private sedeSrvc: SedeService,\n    private ls: LocalstorageService,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    private articuloSrvc: ArticuloService\n  ) { }\n\n  ngOnInit() {\n    this.miSede = this.ls.get(GLOBAL.usrTokenVar).sede || 0;\n    this.loadSedes();\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.get().subscribe(res => {\n      if (res) {\n        this.sedes = res;\n      }\n    });\n  }\n\n  onSubmit = () => {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '400px',\n      data: new ConfirmDialogModel(\n        'Replicar artículos',\n        'Este proceso replicará TODOS los artículos a las sedes seleccionadas. ¿Desea continuar?',\n        'Sí', 'No'\n      )\n    });\n\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        this.cargando = true;\n        const obj = { sedes: [], articulo: null };\n        this.params.sede.forEach((s: string) => obj.sedes.push({ sede: +s }));\n\n        if (this.articulo) {\n          obj.articulo = +this.articulo.articulo;\n        }\n\n        this.articuloSrvc.replicaArticulosEnSedes(obj).subscribe(resReplica => {\n          if (resReplica.exito) {\n            this.snackBar.open(resReplica.mensaje, 'Replicar artículos', { duration: 3000 });\n          } else {\n            this.snackBar.open(`ERROR: ${resReplica.mensaje}`, 'Replicar artículos', { duration: 7000 });\n          }\n          this.params = {};\n          this.cargando = false;\n        });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Replicar {{articulo?.descripcion || 'TODOS los artículos'}} a las sedes</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmReplicaArticulosSedes=\"ngForm\" (ngSubmit)=\"frmReplicaArticulosSedes.form.valid && onSubmit()\" novalidate>\n                    <mat-form-field style=\"width: 90%;\">\n                        <mat-label>Sede</mat-label>\n                        <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\" required>\n                            <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede\" [disabled]=\"+sede.sede === +miSede\">\n                                {{sede.nombre}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div align=\"end\">\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmReplicaArticulosSedes.form.valid || cargando\">\n                            Replicar\n                        </button>\n                    </div>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { Categoria } from '../../../interfaces/categoria';\r\nimport { CategoriaGrupo } from '../../../interfaces/categoria-grupo';\r\nimport { Articulo } from '../../../interfaces/articulo';\r\nimport { ArticuloDetalle } from '../../../interfaces/articulo-detalle';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { Medida } from '../../../../admin/interfaces/medida';\r\nimport { MedidaService } from '../../../../admin/services/medida.service';\r\nimport { Presentacion } from '../../../../admin/interfaces/presentacion';\r\nimport { PresentacionService } from '../../../../admin/services/presentacion.service';\r\nimport { ImpuestoEspecial } from '../../../../admin/interfaces/impuesto-especial';\r\nimport { ImpuestoEspecialService } from '../../../../admin/services/impuesto-especial.service';\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { ReplicarASedesDialogComponent } from '../replicar-a-sedes-dialog/replicar-a-sedes-dialog.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-form-producto',\r\n  templateUrl: './form-producto.component.html',\r\n  styleUrls: ['./form-producto.component.css']\r\n})\r\nexport class FormProductoComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() articulo: Articulo;\r\n  @Input() categoria: Categoria = null;\r\n  @Input() subcategoria: CategoriaGrupo = null;\r\n  @Output() articuloSvd = new EventEmitter();\r\n  private titulo = 'Receta';\r\n  public showArticuloForm = true;\r\n  public medidas: Medida[] = [];\r\n  public medidasFull: Medida[] = [];\r\n  public presentaciones: Presentacion[] = [];\r\n  public presentacionesFiltered: Presentacion[] = [];\r\n  public articulos: Articulo[] = [];\r\n  public filteredArticulos: Articulo[] = [];\r\n  public recetas: ArticuloDetalle[] = [];\r\n  public receta: ArticuloDetalle;\r\n  public impuestosEspeciales: ImpuestoEspecial[] = [];\r\n  public showDetalleForm = true;\r\n  public displayedColumns: string[] = ['articulo', 'cantidad', 'medida', 'precio', 'editItem'];\r\n  public dataSource: MatTableDataSource<ArticuloDetalle>;\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n  public txtArticuloSelected: (Articulo | string) = undefined;\r\n\r\n  private endSubs = new Subscription();\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private ls: LocalstorageService,\r\n    private articuloSrvc: ArticuloService,\r\n    private medidaSrvc: MedidaService,\r\n    private presentacionSrvc: PresentacionService,\r\n    private impuestoEspecialSrvc: ImpuestoEspecialService,\r\n    private rptSrvc: ReportePdfService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.resetArticulo();\r\n    this.loadMedidas();\r\n    this.loadArticulos();\r\n    this.loadPresentaciones();\r\n    this.loadImpuestosEspeciales();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.endSubs.unsubscribe();\r\n  }\r\n\r\n  resetArticulo = () => {\r\n    this.articulo = {\r\n      articulo: null,\r\n      categoria_grupo: this.articulo.categoria_grupo,\r\n      presentacion: null,\r\n      descripcion: null,\r\n      precio: null,\r\n      bien_servicio: 'B',\r\n      produccion: 0,\r\n      mostrar_pos: 1,\r\n      presentacion_reporte: null,\r\n      impuesto_especial: null,\r\n      shopify_id: null,\r\n      multiple: 0,\r\n      cantidad_minima: 1,\r\n      cantidad_maxima: 1,\r\n      combo: 0,\r\n      rendimiento: 0.00,\r\n      mostrar_inventario: 0\r\n    };\r\n    this.recetas = [];\r\n    this.resetReceta();\r\n    this.presentacionesFiltered = JSON.parse(JSON.stringify(this.presentaciones));\r\n  }\r\n\r\n  setArticuloCategoriaGrupo = (idcatgrp: number) => this.articulo.categoria_grupo = +idcatgrp;\r\n\r\n  onSubmit = () => {\r\n    // console.log(this.articulo);\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.saveArticulo(this.articulo).subscribe(res => {\r\n        // console.log(res);\r\n        if (res.exito) {\r\n          this.articuloSvd.emit();\r\n          this.resetArticulo();\r\n          this.articulo = res.articulo;\r\n          this.loadRecetas(this.articulo.articulo);\r\n          this.loadArticulos();\r\n          this.filtrarPresentaciones(this.articulo);\r\n          this.snackBar.open('Artículo guardado con éxito...', 'Artículo', { duration: 3000 });\r\n        } else {\r\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Articulo', { duration: 3000 });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadMedidas = () => {\r\n    this.endSubs.add(      \r\n      this.medidaSrvc.get().subscribe(res => {\r\n        if (res) {\r\n          this.medidasFull = res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadPresentaciones = () => {\r\n    this.endSubs.add(      \r\n      this.presentacionSrvc.get().subscribe(res => {\r\n        if (res) {\r\n          this.presentaciones = res;\r\n          this.filtrarPresentaciones();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  filtrarPresentaciones = (art: Articulo = null) => {\r\n    if (this.presentaciones && this.presentaciones.length > 0) {\r\n      if (art?.articulo) {\r\n        // console.log('ARTICULO = ', art);\r\n        this.endSubs.add(          \r\n          this.articuloSrvc.tieneMovimientos(art.articulo).subscribe(res => {\r\n            if (res.exito) {\r\n              if (res.tiene_movimientos) {\r\n                const presReporte = this.presentaciones.find(p => +p.presentacion === +art.presentacion_reporte);\r\n                // console.log('PRES REPORTE = ', presReporte);\r\n                this.presentacionesFiltered = this.presentaciones.filter(p => +p.medida.medida === +presReporte.medida.medida);\r\n              } else {\r\n                this.presentacionesFiltered = JSON.parse(JSON.stringify(this.presentaciones));              \r\n              }\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Artículo', { duration: 7000 });\r\n            }\r\n          })\r\n        );\r\n      } else {\r\n        this.presentacionesFiltered = JSON.parse(JSON.stringify(this.presentaciones));\r\n      }\r\n    }\r\n  }\r\n\r\n  loadArticulos = () => {\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getArticulos().subscribe(res => {\r\n        if (res) {\r\n          this.articulos = res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadImpuestosEspeciales = () => {\r\n    this.endSubs.add(      \r\n      this.impuestoEspecialSrvc.get().subscribe(res => {\r\n        if (res) {\r\n          this.impuestosEspeciales = res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  displayArticulo = (art: Articulo) => {\r\n    if (art) {\r\n      this.receta.articulo = art.articulo;\r\n      this.filtrarMedidas(art);\r\n      return art.descripcion;\r\n    }\r\n    this.medidas = [];\r\n    return undefined;\r\n  }\r\n\r\n  filtrarMedidas = (art: Articulo) => {\r\n    const pres: Presentacion = this.presentaciones.find(p => +p.presentacion === +art.presentacion_reporte);\r\n    if (pres) {\r\n      this.medidas = this.medidasFull.filter(m => +m.medida === +pres.medida.medida);\r\n    } else {\r\n      this.medidas = [];\r\n    }\r\n  }\r\n\r\n  filtrarArticulos = (value: (Articulo | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredArticulos = this.articulos.filter(a => a.descripcion.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredArticulos = JSON.parse(JSON.stringify(this.articulos));\r\n    }\r\n    // console.log(this.filteredArticulos);\r\n  }\r\n\r\n  resetReceta = () => {\r\n    this.receta = {\r\n      articulo_detalle: null,\r\n      receta: (this.articulo.articulo || 0),\r\n      racionable: 0,\r\n      articulo: null,\r\n      cantidad: 1.00,\r\n      medida: null,\r\n      anulado: 0,\r\n      precio_extra: 0,\r\n      precio: 0\r\n    };\r\n    this.txtArticuloSelected = undefined;\r\n    // this.recetas = [];\r\n    this.updateTableDataSource();\r\n  }\r\n\r\n  loadRecetas = (idarticulo: number = +this.articulo.articulo) => {\r\n    this.endSubs.add(\r\n      this.articuloSrvc.getArticuloDetalle(+idarticulo, { receta: +idarticulo }).subscribe(res => {\r\n        if (res) {\r\n          this.recetas = res;\r\n          this.updateTableDataSource();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getReceta = (idarticulo: number = +this.articulo.articulo, iddetalle: number) => {\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getArticuloDetalle(idarticulo, { articulo_detalle: iddetalle }).subscribe((res: any[]) => {\r\n        // console.log(res);\r\n        if (res) {\r\n          this.receta = {\r\n            articulo_detalle: res[0].articulo_detalle,\r\n            receta: res[0].receta.articulo,\r\n            racionable: res[0].articulo.articulo,\r\n            articulo: res[0].articulo.articulo,\r\n            cantidad: +res[0].cantidad,\r\n            medida: res[0].medida.medida,\r\n            anulado: res[0].anulado || 0,\r\n            precio_extra: res[0].precio_extra || 0,\r\n            precio: +res[0].precio\r\n          };\r\n          this.txtArticuloSelected = res[0].articulo;\r\n          this.showDetalleForm = true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  eliminaReceta = (item: any) => {\r\n    // console.log('ITEM A ELIMINAR = ', item);\r\n    const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel(\r\n        'Eliminar detalle',\r\n        `¿Desea eliminar '${item.cantidad} de ${item.articulo.descripcion}' de la receta?`,\r\n        'Sí',\r\n        'No'\r\n      )\r\n    });\r\n\r\n    this.endSubs.add(      \r\n      confirmRef.afterClosed().subscribe((conf: boolean) => {\r\n        if (conf) {\r\n          item.anulado = 1;\r\n          item.articulo = item.articulo.articulo;\r\n          this.endSubs.add(            \r\n            this.articuloSrvc.saveArticuloDetalle(item).subscribe(res => {\r\n              // console.log(res);\r\n              this.loadRecetas();\r\n              this.resetReceta();\r\n            })\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  onSubmitDetail = () => {\r\n    this.receta.receta = this.articulo.articulo;\r\n    // console.log(this.articulo);\r\n    // console.log(this.receta); return;\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.saveArticuloDetalle(this.receta).subscribe(res => {\r\n        // console.log(res);\r\n        if (res) {\r\n          if (res.exito) {\r\n            this.loadRecetas();\r\n            this.resetReceta();\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Artículo', { duration: 3000 });\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  imprimirReceta = () => {\r\n    this.endSubs.add(      \r\n      this.rptSrvc.imprimirReceta(this.articulo.articulo).subscribe(res => {\r\n        if (res) {\r\n          const blob = new Blob([res], { type: 'application/pdf' });\r\n          saveAs(blob, `${this.titulo}_${this.articulo.descripcion}.pdf`);\r\n        } else {\r\n          this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  updateTableDataSource = () => {\r\n    this.dataSource = new MatTableDataSource(this.recetas);\r\n    this.dataSource.filterPredicate = (data: ArticuloDetalle, filter: string) => {\r\n      return data.articulo.descripcion.toLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  replicarASedes = () => {\r\n    const replicarASedesRef = this.dialog.open(ReplicarASedesDialogComponent, {\r\n      width: '50%',\r\n      data: { articulo: this.articulo }\r\n    });\r\n\r\n    this.endSubs.add(      \r\n      replicarASedesRef.afterClosed().subscribe((conf: boolean) => {\r\n        if (conf) {\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  applyFilter = (filter: string) => {\r\n    this.dataSource.filter = filter.toLocaleLowerCase();\r\n  }\r\n\r\n  setOpcMultOff = () => {\r\n    if (+this.articulo.combo === 1) {\r\n      this.articulo.multiple = 0;\r\n    }\r\n  }\r\n\r\n  setComboOff = () => {\r\n    if (+this.articulo.multiple === 1) {\r\n      this.articulo.combo = 0;\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Artículo {{!!articulo.articulo ? (articulo.descripcion | truncar:35) : ''}}\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showArticuloForm = true;\"\r\n                *ngIf=\"!showArticuloForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showArticuloForm = false;\"\r\n                *ngIf=\"showArticuloForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n            </button>\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmArticulo=\"ngForm\" *ngIf=\"showArticuloForm\" (ngSubmit)=\"frmArticulo.form.valid && onSubmit()\" novalidate>\r\n            <mat-hint align=\"start\" *ngIf=\"!categoria || !categoria.descripcion\"><strong>Por favor seleccione un categoría.</strong></mat-hint><br *ngIf=\"!categoria || !categoria.descripcion\"/>\r\n            <mat-hint align=\"start\" *ngIf=\"!subcategoria || !subcategoria.descripcion\"><strong>Por favor seleccione un sub-categoría.</strong></mat-hint>\r\n            <mat-chip-list>\r\n                <mat-chip color=\"accent\" class=\"catSubCat\" *ngIf=\"categoria\" selected>\r\n                    {{categoria.descripcion}}\r\n                </mat-chip>\r\n                <mat-chip color=\"warn\" class=\"catSubCat\" *ngIf=\"subcategoria\" selected>\r\n                    {{subcategoria.descripcion}}\r\n                </mat-chip>\r\n            </mat-chip-list>\r\n            <mat-form-field class=\"fullWidth\" style=\"margin-top: 10px;\">\r\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"articulo.descripcion\" minlength=\"1\" maxlength=\"250\" required>\r\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"articulo.descripcion\" minlength=\"1\" maxlength=\"250\" required>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"number\" placeholder=\"Precio\" name=\"precio\" [(ngModel)]=\"articulo.precio\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Presentación Venta</mat-label>\r\n                <mat-select name=\"presentacion\" [(ngModel)]=\"articulo.presentacion\" required>\r\n                    <mat-option *ngFor=\"let p of presentaciones\" [value]=\"p.presentacion\">\r\n                        {{p.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Presentación Reportes</mat-label>\r\n                <mat-select name=\"presentacion_reporte\" [(ngModel)]=\"articulo.presentacion_reporte\" required>\r\n                    <mat-option *ngFor=\"let p of presentacionesFiltered\" [value]=\"p.presentacion\">\r\n                        {{p.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"articulo.codigo\" minlength=\"1\" maxlength=\"25\" required>\r\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Código\" name=\"codigo\" [(ngModel)]=\"articulo.codigo\" minlength=\"1\" maxlength=\"25\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" type=\"text\" placeholder=\"Shopify ID\" name=\"shopify_id\" [(ngModel)]=\"articulo.shopify_id\" minlength=\"1\" maxlength=\"25\">\r\n                <input matInput *ngIf=\"esMovil\" type=\"text\" placeholder=\"Shopify ID\" name=\"shopify_id\" [(ngModel)]=\"articulo.shopify_id\" minlength=\"1\" maxlength=\"25\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Impuesto Especial</mat-label>\r\n                <mat-select name=\"impuesto_especial\" [(ngModel)]=\"articulo.impuesto_especial\">\r\n                    <mat-option *ngFor=\"let impesp of impuestosEspeciales\" [value]=\"impesp.impuesto_especial\">\r\n                        {{impesp.descripcion}} ({{impesp.porcentaje | number:'1.2-2'}}%)\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\" *ngIf = \"+articulo.produccion == 1\">\r\n                <input matInput type=\"number\" step=\"0.05\" placeholder=\"Rendimiento\" name=\"rendimiento\" [(ngModel)]=\"articulo.rendimiento\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\" *ngIf = \"+articulo.multiple == 1 || +articulo.combo\">\r\n                <input matInput type=\"number\" step=\"1\" placeholder=\"Cantidad minima\" name=\"minima\" [(ngModel)]=\"articulo.cantidad_minima\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\" *ngIf = \"+articulo.multiple == 1 || +articulo.combo\">\r\n                <input matInput type=\"number\" step=\"1\" placeholder=\"Cantidad maxima\" name=\"maxima\" [(ngModel)]=\"articulo.cantidad_maxima\" required>\r\n            </mat-form-field>\r\n            <div class=\"row\">\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"produccion\" class=\"example-margin\" [(ngModel)]=\"+articulo.produccion\">¿Es producción?</mat-checkbox>\r\n                </div>\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"mostrar_pos\" class=\"example-margin\" [(ngModel)]=\"+articulo.mostrar_pos\">Mostrar en POS</mat-checkbox>\r\n                </div>\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"combo\" class=\"example-margin\" [(ngModel)]=\"+articulo.combo\" (change)=\"setOpcMultOff()\">Combo</mat-checkbox>\r\n                </div>\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"multiple\" class=\"example-margin\" [(ngModel)]=\"+articulo.multiple\" (change)=\"setComboOff()\">Opción múltiple</mat-checkbox>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"mostrar_inventario\" class=\"example-margin\" [(ngModel)]=\"+articulo.mostrar_inventario\">Mostrar en Inventario</mat-checkbox>\r\n                </div>\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"esreceta\" class=\"example-margin\" [(ngModel)]=\"+articulo.esreceta\">Es receta</mat-checkbox>\r\n                </div>\r\n            </div>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmArticulo.form.valid || !articulo.categoria_grupo\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"replicarASedes()\" *ngIf=\"articulo.articulo\">\r\n                    Replicar a sedes\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetArticulo()\" *ngIf=\"articulo.articulo\">\r\n                    Nuevo\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n<hr *ngIf=\"articulo.articulo\" />\r\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"articulo.articulo\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Detalle del artículo {{articulo.descripcion | truncar:35}}\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleForm = true;\"\r\n                *ngIf=\"!showDetalleForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleForm = false;\"\r\n                *ngIf=\"showDetalleForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n            </button>\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmDetalleArticulo=\"ngForm\" *ngIf=\"showDetalleForm\" (ngSubmit)=\"frmDetalleArticulo.form.valid && onSubmitDetail()\" novalidate>            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Artículo</mat-label>                    \r\n                <input type=\"text\" [(ngModel)]=\"txtArticuloSelected\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Artículo\" matInput [matAutocomplete]=\"autoArticulos\" (keyup)=\"filtrarArticulos(txtArticuloSelected)\" required>\r\n                <mat-autocomplete #autoArticulos=\"matAutocomplete\" [displayWith]=\"displayArticulo\">\r\n                    <mat-option *ngFor=\"let a of filteredArticulos\" [value]=\"a\">\r\n                        {{a.descripcion}}{{ a.subcategoria && a.subcategoria.descripcion ? (' (' + a.subcategoria.descripcion + ')') : '' }}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput placeholder=\"Cantidad\" type=\"number\" step=\"0.01\" name=\"cantidad\" [(ngModel)]=\"receta.cantidad\" required>\r\n            </mat-form-field>            \r\n            <mat-form-field class=\"fullWidth\" *ngIf=\"receta.precio_extra && receta.precio_extra > 0\">\r\n                <input matInput placeholder=\"Precio\" name=\"precio\" [(ngModel)]=\"receta.precio\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Unidad de medida</mat-label>\r\n                <mat-select name=\"medida\" [(ngModel)]=\"receta.medida\" required>\r\n                    <mat-option *ngFor=\"let m of medidas\" [value]=\"m.medida\">\r\n                        {{m.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox name=\"racionable\" class=\"fullWidth\" [(ngModel)]=\"+receta.racionable\">¿Es racionable?</mat-checkbox>\r\n                </div>\r\n                <div class=\"col m3 s3\">\r\n                    <mat-checkbox \r\n                        name=\"extra\" \r\n                        class=\"fullWidth\" \r\n                        [(ngModel)]=\"+receta.precio_extra\">\r\n                        Precio Extra\r\n                    </mat-checkbox>\r\n                </div>\r\n            </div>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmDetalleArticulo.form.valid\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetReceta()\" *ngIf=\"receta.articulo_detalle\">\r\n                    Nuevo\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"imprimirReceta()\" *ngIf=\"recetas.length > 0\">\r\n                    Imprimir\r\n                </button>\r\n            </div>\r\n        </form>\r\n        <hr *ngIf=\"recetas.length > 0\" />\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar\">\r\n        </mat-form-field>\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"recetas.length > 0\">\r\n            <ng-container matColumnDef=\"articulo\">\r\n                <th mat-header-cell *matHeaderCellDef>Artículo</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{element.articulo.descripcion}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"cantidad\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"medida\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Unida de medida</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.medida.descripcion}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"precio\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Precio</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.precio | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"editItem\">\r\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"getReceta(element.receta, element.articulo_detalle)\">\r\n                        Editar\r\n                    </button>\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"eliminaReceta(element)\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n            </tr>\r\n        </table>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\nimport { Ingreso } from '../../../interfaces/ingreso';\r\nimport { IngresoService } from '../../../services/ingreso.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-ingreso',\r\n  templateUrl: './lista-ingreso.component.html',\r\n  styleUrls: ['./lista-ingreso.component.css']\r\n})\r\nexport class ListaIngresoComponent implements OnInit {\r\n\r\n  public lstIngresos: Ingreso[];\r\n  public lstIngresosPaged: Ingreso[];\r\n  @Output() getIngresoEv = new EventEmitter();\r\n\r\n  public length = 0;\r\n  public pageSize = 5;\r\n  public pageSizeOptions: number[] = [5, 10, 15];\r\n  public pageIndex = 0;\r\n  public pageEvent: PageEvent;\r\n  public txtFiltro = '';\r\n\r\n  public params = {\r\n    _fdel: moment().startOf('month').format(GLOBAL.dbDateFormat),\r\n    _fal: moment().endOf('month').format(GLOBAL.dbDateFormat)\r\n  }\r\n\r\n  constructor(\r\n    private ingresoSrvc: IngresoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadIngresos();\r\n  }\r\n\r\n  applyFilter() {\r\n    if (this.txtFiltro.length > 0) {\r\n      const tmpList = MultiFiltro(this.lstIngresos, this.txtFiltro);\r\n      this.length = tmpList.length;\r\n      this.lstIngresosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\r\n    } else {\r\n      this.length = this.lstIngresos.length;\r\n      this.lstIngresosPaged = PaginarArray(this.lstIngresos, this.pageSize, this.pageIndex + 1);\r\n    }\r\n  }\r\n\r\n  loadIngresos = () => {\r\n    this.ingresoSrvc.get(this.params).subscribe(lst => {\r\n      if (lst) {\r\n        this.lstIngresos = lst;\r\n        this.applyFilter();        \r\n      }\r\n    });\r\n  }\r\n\r\n  getIngreso = (obj: any) => {\r\n    this.getIngresoEv.emit({\r\n      ingreso: obj.ingreso,\r\n      tipo_movimiento: obj.tipo_movimiento.tipo_movimiento,\r\n      fecha: obj.fecha,\r\n      bodega_origen: !!obj.bodega_origen && !!obj.bodega_origen.bodega ? obj.bodega_origen.bodega : null,\r\n      bodega: obj.bodega.bodega,\r\n      usuario: obj.usuario.usuario,\r\n      comentario: obj.comentario,\r\n      proveedor: obj.proveedor.proveedor\r\n    });\r\n  }\r\n\r\n  pageChange = (e: PageEvent) => {\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n    this.applyFilter();\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\" style=\"height: 100% important;\">\r\n    <mat-card-content>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params._fdel\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params._fal\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>        \r\n        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"loadIngresos()\">\r\n            Buscar\r\n        </button>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-nav-list>\r\n            <mat-list-item *ngFor=\"let element of lstIngresosPaged\" (click)=\"getIngreso(element)\">\r\n                <mat-icon mat-list-icon>trending_up</mat-icon>\r\n                <h5 mat-line>No. {{element.ingreso}}</h5><br/>\r\n                <p mat-line>\r\n                    Fecha: {{element.fecha | date: 'dd/MM/yyyy'}}<br/>\r\n                    Bodega: {{element.bodega.descripcion}}<br/>\r\n                </p>\r\n                <p mat-line>\r\n                    Proveedor: {{element.proveedor.razon_social}}\r\n                </p>\r\n            </mat-list-item>                        \r\n        </mat-nav-list>\r\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\r\n        </mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\nimport { Ingreso } from '../../../interfaces/ingreso';\r\nimport { DetalleIngreso } from '../../../interfaces/detalle-ingreso';\r\nimport { Documento } from '../../../interfaces/documento';\r\nimport { IngresoService } from '../../../services/ingreso.service';\r\nimport { TipoMovimiento } from '../../../interfaces/tipo-movimiento';\r\nimport { TipoMovimientoService } from '../../../services/tipo-movimiento.service';\r\nimport { Proveedor } from '../../../interfaces/proveedor';\r\nimport { ProveedorService } from '../../../services/proveedor.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { Articulo } from '../../../interfaces/articulo';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { Presentacion } from '../../../../admin/interfaces/presentacion';\r\nimport { PresentacionService } from '../../../../admin/services/presentacion.service';\r\nimport { DocumentoTipo } from '../../../../admin/interfaces/documento-tipo';\r\nimport { DocumentoTipoService } from '../../../../admin/services/documento-tipo.service';\r\nimport { TipoCompraVenta } from '../../../../admin/interfaces/tipo-compra-venta';\r\nimport { TipoCompraVentaService } from '../../../../admin/services/tipo-compra-venta.service';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-form-ingreso',\r\n  templateUrl: './form-ingreso.component.html',\r\n  styleUrls: ['./form-ingreso.component.css']\r\n})\r\nexport class FormIngresoComponent implements OnInit {\r\n\r\n  @Input() ingreso: Ingreso;\r\n  @Input() saveToDB = true;\r\n  @Input() bodega = true;\r\n  @Input() produccion = false;\r\n  @Output() ingresoSavedEv = new EventEmitter();\r\n\r\n  public showIngresoForm = true;\r\n  public showDetalleIngresoForm = true;\r\n  public showDocumentoForm = true;\r\n\r\n  public detallesIngreso: DetalleIngreso[] = [];\r\n  public detalleIngreso: DetalleIngreso;\r\n  public displayedColumns: string[] = ['articulo', 'presentacion', 'cantidad', 'costo_unitario', 'costo_total', 'deleteItem'];\r\n  public dataSource: MatTableDataSource<DetalleIngreso>;\r\n  public tiposMovimiento: TipoMovimiento[] = [];\r\n  public proveedores: Proveedor[] = [];\r\n  public filteredProveedores: Proveedor[] = [];\r\n  public bodegas: Bodega[] = [];\r\n  public articulos: Articulo[] = [];\r\n  public filteredArticulos: Articulo[] = [];\r\n  public presentaciones: Presentacion[] = [];\r\n  public fltrPresentaciones: Presentacion[] = [];\r\n  public esMovil = false;\r\n  public bloqueoBotones = false;\r\n  public txtArticuloSelected: (Articulo | string) = undefined;\r\n  public txtProveedorSelected: (Proveedor | string) = undefined;\r\n  public documento: Documento;\r\n  public documentosTipo: DocumentoTipo[] = [];\r\n  public tiposCompraVenta: TipoCompraVenta[] = [];\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private ls: LocalstorageService,\r\n    private ingresoSrvc: IngresoService,\r\n    private proveedorSrvc: ProveedorService,\r\n    private tipoMovimientoSrvc: TipoMovimientoService,\r\n    private bodegaSrvc: BodegaService,\r\n    private articuloSrvc: ArticuloService,\r\n    private presentacinSrvc: PresentacionService,\r\n    private documentoTipoSrvc: DocumentoTipoService,\r\n    private tipoCompraVentaSrvc: TipoCompraVentaService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.resetIngreso();\r\n    this.loadTiposMovimiento();\r\n    this.loadProveedores();\r\n    this.loadBodegas();\r\n    this.loadArticulos();\r\n    this.loadPresentaciones();\r\n    this.loadDocumentosTipo();\r\n    this.loadTiposCompraVenta();\r\n    if (!this.bodega) {\r\n      this.displayedColumns = ['cantidad_utilizada', 'articulo', 'presentacion', 'cantidad', 'deleteItem'];\r\n    }\r\n\r\n    if (this.produccion) {\r\n      this.displayedColumns = ['articulo', 'presentacion', 'cantidad', 'deleteItem'];\r\n    }\r\n  }\r\n\r\n  loadTiposMovimiento = () => {\r\n    this.tipoMovimientoSrvc.get({ ingreso: 1 }).subscribe(res => {\r\n      if (res) {\r\n        this.tiposMovimiento = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadProveedores = () => {\r\n    this.proveedorSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.proveedores = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBodegas = () => {\r\n    this.bodegaSrvc.get({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\r\n      if (res) {\r\n        this.bodegas = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPresentaciones = () => {\r\n    this.presentacinSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.presentaciones = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadDocumentosTipo = () => {\r\n    this.documentoTipoSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.documentosTipo = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadTiposCompraVenta = () => {\r\n    this.tipoCompraVentaSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.tiposCompraVenta = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  removeFromDetail = (idarticulo: number) => {\r\n    const idx = this.detallesIngreso.findIndex(de => +de.articulo === +idarticulo);\r\n    if (idx >= 0) {\r\n      this.detallesIngreso.splice(idx, 1);\r\n      this.updateTableDataSource();\r\n    }\r\n  }\r\n\r\n  resetIngreso = () => {\r\n    this.ingreso = {\r\n      ingreso: null, tipo_movimiento: null, fecha: moment().format(GLOBAL.dbDateFormat), bodega: null,\r\n      usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), comentario: null, proveedor: null,\r\n      estatus_movimiento: 1\r\n    };\r\n    this.resetDetalleIngreso();\r\n    this.detallesIngreso = [];\r\n    this.resetDocumento();\r\n    this.updateTableDataSource();\r\n    this.txtProveedorSelected = undefined;\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.bloqueoBotones = true;\r\n    this.ingresoSrvc.save(this.ingreso).subscribe(res => {\r\n      // console.log(res);\r\n      this.resetIngreso();\r\n      if (res.exito) {\r\n        this.ingreso = res.ingreso;\r\n        this.setProveedor(+this.ingreso.proveedor);\r\n      }\r\n      this.ingresoSavedEv.emit();\r\n      this.bloqueoBotones = false;\r\n    });\r\n  }\r\n\r\n  loadArticulos = () => {\r\n    var args = {};\r\n    if (this.produccion) {\r\n      args = { produccion: 1 };\r\n    }\r\n    this.articuloSrvc.getArticulosIngreso(args).subscribe(res => {\r\n      if (res) {\r\n        this.articulos = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetDetalleIngreso = () => {\r\n    this.detalleIngreso = {\r\n      ingreso_detalle: null, ingreso: (!!this.ingreso.ingreso ? this.ingreso.ingreso : null), articulo: null,\r\n      cantidad: null, precio_unitario: null, precio_total: null, presentacion: 0\r\n    };\r\n    this.txtArticuloSelected = undefined;\r\n  }\r\n\r\n  loadDetalleIngreso = (idingreso: number = +this.ingreso.ingreso) => {\r\n    this.ingresoSrvc.getDetalle(idingreso, { ingreso: idingreso }).subscribe(res => {\r\n      // console.log(res);\r\n      if (res) {\r\n        this.detallesIngreso = res;\r\n        this.updateTableDataSource();\r\n      }\r\n    });\r\n  }\r\n\r\n  getDetalleIngreso = (idingreso: number = +this.ingreso.ingreso, iddetalle: number) => {\r\n    this.ingresoSrvc.getDetalle(idingreso, { ingreso_detalle: iddetalle }).subscribe((res: any[]) => {\r\n      // console.log(res);\r\n      if (res) {\r\n        this.detalleIngreso = {\r\n          ingreso_detalle: res[0].ingreso_detalle,\r\n          ingreso: res[0].ingreso,\r\n          articulo: res[0].articulo.articulo,\r\n          cantidad: +res[0].cantidad,\r\n          precio_unitario: +res[0].precio_unitario,\r\n          precio_total: +res[0].precio_total,\r\n          presentacion: res[0].presentacion.presentacion\r\n        };\r\n        this.setPresentaciones();\r\n        this.txtArticuloSelected = res[0].articulo;\r\n        this.showDetalleIngresoForm = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmitDetail = () => {\r\n    this.bloqueoBotones = true;\r\n    this.detalleIngreso.ingreso = this.ingreso.ingreso;\r\n    this.detalleIngreso.precio_total = +this.detalleIngreso.cantidad * +this.detalleIngreso.precio_unitario;\r\n    // console.log(this.detalleIngreso);\r\n    if (+this.detalleIngreso.cantidad < 1) {\r\n      this.detalleIngreso.cantidad = 1;\r\n    }\r\n    this.ingresoSrvc.saveDetalle(this.detalleIngreso).subscribe(res => {\r\n      // console.log(res);\r\n      if (res) {\r\n        this.loadDetalleIngreso();\r\n        this.resetDetalleIngreso();\r\n      }\r\n      this.bloqueoBotones = false;\r\n    });\r\n  }\r\n\r\n  agregaADetalle = () => {\r\n    var index = this.detallesIngreso.findIndex(de => +de.articulo === +this.detalleIngreso.articulo)\r\n    if (index > -1) {\r\n      this.detallesIngreso.splice(index, 1);\r\n    }\r\n\r\n    var art: any;\r\n    art = this.articulos.filter(p => +p.articulo == this.detalleIngreso.articulo);\r\n    this.detalleIngreso.presentacion = art[0].presentacion_reporte;\r\n\r\n    if (+this.detalleIngreso.cantidad < 1) {\r\n      this.detalleIngreso.cantidad = 1;\r\n    }\r\n\r\n    this.detallesIngreso.push(this.detalleIngreso);\r\n    this.resetDetalleIngreso();\r\n    this.updateTableDataSource();\r\n  }\r\n\r\n  addToDetail = () => {\r\n    // console.log('DETALLE INGRESO = ', this.detalleIngreso);\r\n    // console.log('ESTOY EN PRODUCCION = ', this.produccion);\r\n    if (this.detalleIngreso.cantidad > 0) {\r\n      if (this.produccion) {\r\n        this.agregaADetalle();\r\n      } else {\r\n        if (this.detalleIngreso.cantidad_utilizada > 0) {\r\n          this.agregaADetalle();\r\n        } else {\r\n          this.snackBar.open(`ERROR: La cantidad a utilizar debe ser mayor a 0`, 'Egreso', { duration: 3000 });\r\n        }\r\n      }\r\n    } else {\r\n      this.snackBar.open(`ERROR: La cantidad debe ser mayor a 0`, 'Egreso', { duration: 3000 });\r\n    }\r\n  }\r\n\r\n  editFromDetail = (idarticulo: number) => {\r\n    var tmp = this.detallesIngreso.filter(de => +de.articulo === +idarticulo)[0];\r\n    this.detalleIngreso = {\r\n      ingreso_detalle: tmp.ingreso_detalle, ingreso: tmp.ingreso, articulo: tmp.articulo,\r\n      cantidad: (+tmp.cantidad < 1 ? 1 : tmp.cantidad), precio_unitario: tmp.precio_unitario, precio_total: tmp.precio_total,\r\n      presentacion: tmp.presentacion, cantidad_utilizada: tmp.cantidad_utilizada\r\n    };\r\n    this.setPresentaciones();\r\n    this.txtArticuloSelected = this.articulos.filter(p => +p.articulo == this.detalleIngreso.articulo)[0];\r\n    //this.showDetalleIngresoForm = true;\r\n    //\r\n  }\r\n\r\n\r\n  getDescripcionArticulo = (idarticulo: number) => this.articulos.find(art => +art.articulo === +idarticulo).descripcion || '';\r\n\r\n  getDescripcionPresentacion = (idpresentacion: number) =>\r\n    this.presentaciones.find(p => +p.presentacion === +idpresentacion).descripcion || '';\r\n\r\n  updateTableDataSource = () => {\r\n    this.dataSource = new MatTableDataSource(this.detallesIngreso);\r\n    this.dataSource.filterPredicate = (data: DetalleIngreso, filter: string) => {\r\n      return data.articulo.descripcion.toLowerCase().includes(filter);\r\n    };\r\n  }\r\n\r\n  eliminarArticulo = (element: DetalleIngreso) => {\r\n    // const idx = this.detallesIngreso.findIndex(d => d.ingreso_detalle === element.ingreso_detalle);\r\n    this.detallesIngreso.splice(this.detallesIngreso.findIndex(d => d.ingreso_detalle === element.ingreso_detalle), 1);\r\n    this.updateTableDataSource();\r\n  }\r\n\r\n  filtrarArticulos = (value: (Articulo | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredArticulos =\r\n        this.articulos.filter(a => a.descripcion.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredArticulos = this.articulos;\r\n    }\r\n  }\r\n\r\n  displayArticulo = (art: Articulo) => {\r\n    if (art) {\r\n      this.detalleIngreso.articulo = art.articulo;\r\n      return art.descripcion;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  filtrarProveedores = (value: (Proveedor | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredProveedores =\r\n        this.proveedores.filter(a => a.razon_social.toLowerCase().includes(filterValue) || a.nit.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredProveedores = this.proveedores;\r\n    }\r\n  }\r\n\r\n  displayProveedor = (p: Proveedor) => {\r\n    if (p) {\r\n      this.ingreso.proveedor = p.proveedor;\r\n      return `(${p.nit}) ${p.razon_social}`;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  setPresentaciones = () => {\r\n    this.fltrPresentaciones = [];\r\n    const idx = this.articulos.findIndex(p => +p.articulo === +this.detalleIngreso.articulo);\r\n    const articulo = this.articulos[idx];\r\n    this.fltrPresentaciones = this.presentaciones.filter(p => +p.medida.medida === +articulo.presentacion.medida);\r\n  }\r\n\r\n  setProveedor = (idProveedor: number) => this.txtProveedorSelected = this.proveedores.find(p => +p.proveedor === idProveedor);\r\n\r\n  applyFilter = (filter: string) => {\r\n    this.dataSource.filter = filter.toLocaleLowerCase();\r\n  }\r\n\r\n  resetDocumento = () => this.documento = {\r\n    documento: null, ingreso: null, documento_tipo: null, serie: null, numero: null, fecha: null, tipo_compra_venta: null, enviado: 0\r\n  }\r\n\r\n  setDocumentoIngreso = (dc: any) => {\r\n    this.documento = {\r\n      documento: +dc.documento,\r\n      ingreso: +dc.ingreso,\r\n      documento_tipo: dc.documento_tipo.documento_tipo,\r\n      serie: dc.serie,\r\n      numero: dc.numero,\r\n      fecha: dc.fecha,\r\n      tipo_compra_venta: dc.tipo_compra_venta.tipo_compra_venta,\r\n      enviado: dc.enviado\r\n    };\r\n  }\r\n\r\n  loadDocumento = (idingreso: number = (this.ingreso.ingreso || null)) => {\r\n    if (idingreso) {\r\n      this.ingresoSrvc.getDocumento({ ingreso: idingreso }).subscribe((doc: Documento[]) => {\r\n        if (doc && doc.length > 0) {\r\n          this.setDocumentoIngreso(doc[0]);\r\n        } else {\r\n          this.resetDocumento();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  submitDocumento = () => {\r\n    this.documento.ingreso = this.ingreso.ingreso;\r\n    this.ingresoSrvc.saveDocumento(this.documento).subscribe(res => {\r\n      if (res.exito) {\r\n        this.setDocumentoIngreso(res.documento);\r\n        this.snackBar.open('Documento guardado con éxito.', 'Ingreso', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Ingreso', { duration: 7000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  enviarAConta = () => {\r\n    if (+this.documento?.documento > 0) {\r\n      const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n        maxWidth: '400px',\r\n        data: new ConfirmDialogModel('Envío a contabilidad', 'Una vez enviado a contabilidad no podrá modificar el ingreso ni el documento. ¿Desea continuar?', 'Sí', 'No')\r\n      });\r\n\r\n      confirmRef.afterClosed().subscribe((confirma: boolean) => {\r\n        if (confirma) {\r\n          this.ingresoSrvc.enviarDocumentoAConta(this.documento.documento).subscribe(res => {\r\n            if (res.exito) {\r\n              this.documento = res.documento;\r\n              this.snackBar.open('Documento enviado a contabilidad.', 'Ingreso', { duration: 3000 });\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Ingreso', { duration: 7000 });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","<mat-tab-group>\r\n    <mat-tab label=\"Ingreso\">\r\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n            <mat-card-title>\r\n                <h4>\r\n                    Ingreso{{!!ingreso.ingreso ? (' No. ' + ingreso.ingreso) : ''}}\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showIngresoForm = true;\"\r\n                        *ngIf=\"!showIngresoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showIngresoForm = false;\"\r\n                        *ngIf=\"showIngresoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n                    </button>\r\n                </h4>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form #frmIngreso=\"ngForm\" *ngIf=\"showIngresoForm\" (ngSubmit)=\"frmIngreso.form.valid && onSubmit()\"\r\n                    novalidate>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Tipo de movimiento</mat-label>\r\n                        <mat-select name=\"tipo_movimiento\" [(ngModel)]=\"ingreso.tipo_movimiento\" required>\r\n                            <mat-option *ngFor=\"let tm of tiposMovimiento\" [value]=\"tm.tipo_movimiento\">\r\n                                {{tm.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"date\" placeholder=\"Fecha\" name=\"fecha\" [(ngModel)]=\"ingreso.fecha\"\r\n                            required>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf = \"bodega\">\r\n                        <mat-label>Bodega</mat-label>\r\n                        <mat-select name=\"bodega\" [(ngModel)]=\"ingreso.bodega\" required>\r\n                            <mat-option *ngFor=\"let bode of bodegas\" [value]=\"bode.bodega\">\r\n                                {{bode.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Bodega de origen</mat-label>\r\n                        <mat-select name=\"bodega_origen\" [(ngModel)]=\"ingreso.bodega_origen\">\r\n                            <mat-option *ngFor=\"let bodeO of bodegas\" [value]=\"bodeO.bodega\">\r\n                                {{bodeO.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <button type=\"button\" mat-button *ngIf=\"ingreso.bodega_origen\" matSuffix mat-icon-button\r\n                            aria-label=\"Clear\" (click)=\"ingreso.bodega_origen = undefined\">\r\n                            <mat-icon class=\"iconFontSize\">close</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Proveedor</mat-label>                        \r\n                        <input type=\"text\" [(ngModel)]=\"txtProveedorSelected\" [ngModelOptions]=\"{standalone: true}\"\r\n                            placeholder=\"Proveedor\" matInput [matAutocomplete]=\"autoProveedores\"\r\n                            (keyup)=\"filtrarProveedores(txtProveedorSelected)\" required>\r\n                        <mat-autocomplete #autoProveedores=\"matAutocomplete\" [displayWith]=\"displayProveedor\">\r\n                            <mat-option *ngFor=\"let prov of filteredProveedores\" [value]=\"prov\">\r\n                                ({{prov.nit}}) {{prov.razon_social}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput placeholder=\"Comentarios\" name=\"comentario\" [(ngModel)]=\"ingreso.comentario\">\r\n                    </mat-form-field>                    \r\n                    <div align=\"end\">\r\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\r\n                            [disabled]=\"!frmIngreso.form.valid || bloqueoBotones || +documento.enviado === 1\" *ngIf=\"saveToDB\">\r\n                            Guardar\r\n                        </button>\r\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetIngreso()\"\r\n                            *ngIf=\"ingreso.ingreso\">\r\n                            Nuevo\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n        <hr *ngIf=\"ingreso.ingreso || !saveToDB\" />\r\n        <mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"ingreso.ingreso || !saveToDB\">\r\n            <mat-card-title>\r\n                <h4>\r\n                    Detalle del ingreso {{saveToDB ? 'No.' : ''}} {{ingreso.ingreso}}\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleIngresoForm = true;\"\r\n                        *ngIf=\"!showDetalleIngresoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleIngresoForm = false;\"\r\n                        *ngIf=\"showDetalleIngresoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n                    </button>\r\n                </h4>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form #frmDetalleIngreso=\"ngForm\" *ngIf=\"showDetalleIngresoForm\"\r\n                    (ngSubmit)=\"frmDetalleIngreso.form.valid && onSubmitDetail()\" novalidate>                    \r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <mat-label>Artículo</mat-label>\r\n                        <input type=\"text\" [(ngModel)]=\"txtArticuloSelected\" [ngModelOptions]=\"{standalone: true}\"\r\n                            placeholder=\"Artículo\" matInput [matAutocomplete]=\"autoArticulos\"\r\n                            (keyup)=\"filtrarArticulos(txtArticuloSelected)\" required>\r\n                        <mat-autocomplete #autoArticulos=\"matAutocomplete\" [displayWith]=\"displayArticulo\"\r\n                            (optionSelected)=\"setPresentaciones()\">\r\n                            <mat-option *ngFor=\"let a of filteredArticulos\" [value]=\"a\">\r\n                                {{a.descripcion}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Presentación</mat-label>\r\n                        <mat-select name=\"presentacion\" [(ngModel)]=\"detalleIngreso.presentacion\" required>\r\n                            <mat-option *ngFor=\"let p of fltrPresentaciones\" [value]=\"p.presentacion\">\r\n                                {{p.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    \r\n                    <mat-form-field class=\"fullWidth\" *ngIf = \"!bodega\">\r\n                        <input matInput placeholder=\"Cantidad a Utilizar\" name=\"cantidad_utilizada\" [(ngModel)]=\"detalleIngreso.cantidad_utilizada\"\r\n                            required>\r\n                    </mat-form-field>  \r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput placeholder=\"Cantidad\" name=\"cantidad\" type=\"number\" step=\"0.01\" min=\"1\" [(ngModel)]=\"detalleIngreso.cantidad\"\r\n                            (change)=\"detalleIngreso.precio_total = +detalleIngreso.precio_unitario * +detalleIngreso.cantidad\"\r\n                            required>\r\n                    </mat-form-field>                    \r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <input matInput placeholder=\"Costo unitario Con IVA\" name=\"precio_unitario\"\r\n                            type=\"number\" step=\"0.01\"\r\n                            [(ngModel)]=\"detalleIngreso.precio_unitario\"\r\n                            (change)=\"detalleIngreso.precio_total = +detalleIngreso.precio_unitario * +detalleIngreso.cantidad\"\r\n                            required>\r\n                    </mat-form-field>                    \r\n                    <div align=\"end\">\r\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\r\n                            [disabled]=\"!frmDetalleIngreso.form.valid || bloqueoBotones || +documento.enviado === 1 || +detalleIngreso.cantidad < 1\" *ngIf=\"saveToDB\">\r\n                            Guardar\r\n                        </button>\r\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"addToDetail()\"\r\n                            [disabled]=\"!detalleIngreso.articulo || !frmDetalleIngreso.form.valid || [2, 3].indexOf(+ingreso.estatus_movimiento) >= 0 || +detalleIngreso.cantidad < 1\"\r\n                            *ngIf=\"!saveToDB\">\r\n                            Guardar producción\r\n                        </button>\r\n                        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetDetalleIngreso()\"\r\n                            *ngIf=\"detalleIngreso.ingreso_detalle\">\r\n                            Nuevo\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <hr *ngIf=\"detallesIngreso.length > 0\" />\r\n                <mat-form-field class=\"fullWidth\">\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar\">\r\n                </mat-form-field>\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\"\r\n                    *ngIf=\"detallesIngreso.length > 0\">\r\n                    <ng-container matColumnDef=\"articulo\">\r\n                        <th mat-header-cell *matHeaderCellDef>Artículo</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                            {{saveToDB ? element.articulo.descripcion : getDescripcionArticulo(element.articulo)}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"presentacion\">\r\n                        <th mat-header-cell *matHeaderCellDef>Presentación</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                            {{saveToDB ? element.presentacion.descripcion :\r\n                            getDescripcionPresentacion(element.presentacion)}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"cantidad_utilizada\">\r\n                        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad a Utilizar</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad_utilizada | number:'1.2-2'}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"cantidad\">\r\n                        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"costo_unitario\">\r\n                        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Costo Unitario Con IVA</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.precio_unitario |\r\n                            number:'1.2-2'}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"costo_total\">\r\n                        <th mat-header-cell *matHeaderCellDef class=\"text-right\">Costo Total con IVA</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.precio_total |\r\n                            number:'1.2-2'}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"deleteItem\">\r\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                            <button mat-raised-button type=\"button\" color=\"accent\"\r\n                                (click)=\"getDetalleIngreso(element.ingreso, element.ingreso_detalle)\" *ngIf=\"saveToDB\"\r\n                                [disabled]=\"bloqueoBotones || +documento.enviado === 1\">\r\n                                Editar\r\n                            </button>\r\n                            <button mat-raised-button type=\"button\" color=\"accent\"\r\n                                (click)=\"editFromDetail(element.articulo)\"\r\n                                [disabled]=\"([2, 3].indexOf(+ingreso.estatus_movimiento) >= 0) || bloqueoBotones\"\r\n                                *ngIf=\"!saveToDB\">\r\n                                Editar\r\n                            </button>\r\n                            <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"removeFromDetail(element.articulo)\"\r\n                                [disabled]=\"[2, 3].indexOf(+ingreso.estatus_movimiento) >= 0 || bloqueoBotones\"\r\n                                *ngIf=\"!saveToDB\">\r\n                                Eliminar\r\n                            </button>\r\n                        </td>\r\n                        <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                            \r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </tr>\r\n                </table>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Documento\" *ngIf=\"+ingreso.ingreso > 0\">\r\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n            <mat-card-title>\r\n                <h4>\r\n                    Documento del ingreso{{!!ingreso.ingreso ? (' No. ' + ingreso.ingreso) : ''}}\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDocumentoForm = true;\"\r\n                        *ngIf=\"!showDocumentoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDocumentoForm = false;\"\r\n                        *ngIf=\"showDocumentoForm\">\r\n                        <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n                    </button>\r\n                </h4>\r\n            </mat-card-title>\r\n            <mat-card-content>\r\n                <form #frmDocumento=\"ngForm\" *ngIf=\"showDocumentoForm\"\r\n                    (ngSubmit)=\"frmDocumento.form.valid && submitDocumento()\" novalidate>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Tipo de documento</mat-label>\r\n                        <mat-select name=\"documento_tipo\" [(ngModel)]=\"documento.documento_tipo\" required\r\n                            [disabled]=\"+documento.enviado === 1\">\r\n                            <mat-option *ngFor=\"let dt of documentosTipo\" [value]=\"dt.documento_tipo\">\r\n                                {{dt.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"text\" placeholder=\"Serie\" name=\"serie\" [(ngModel)]=\"documento.serie\"\r\n                            minlength=\"1\" maxlength=\"50\" required [disabled]=\"+documento.enviado === 1\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"text\" placeholder=\"Número\" name=\"numero\" [(ngModel)]=\"documento.numero\"\r\n                            minlength=\"1\" maxlength=\"50\" required [disabled]=\"+documento.enviado === 1\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\">\r\n                        <input matInput type=\"date\" placeholder=\"Fecha\" name=\"fecha\" [(ngModel)]=\"documento.fecha\"\r\n                            required [disabled]=\"+documento.enviado === 1\">\r\n                    </mat-form-field>\r\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"saveToDB\">\r\n                        <mat-label>Tipo de compra</mat-label>\r\n                        <mat-select name=\"tipo_compra_venta\" [(ngModel)]=\"documento.tipo_compra_venta\" required [disabled]=\"+documento.enviado === 1\">\r\n                            <mat-option *ngFor=\"let tcv of tiposCompraVenta\" [value]=\"tcv.tipo_compra_venta\">\r\n                                {{tcv.descripcion}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div align=\"end\">\r\n                        <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\r\n                            [disabled]=\"!frmDocumento.form.valid || bloqueoBotones || +documento.enviado === 1\"\r\n                            *ngIf=\"saveToDB\">\r\n                            Guardar detalle\r\n                        </button>\r\n                        <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\"\r\n                            [disabled]=\"!frmDocumento.form.valid || bloqueoBotones || +documento.enviado === 1\"\r\n                            (click)=\"enviarAConta()\"\r\n                            *ngIf=\"saveToDB && +documento.documento > 0 && +documento.enviado === 0\">\r\n                            Enviar a contabilidad\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </mat-tab>\r\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../../../shared/components/confirm-dialog/confirm-dialog.component'\r\nimport { ReportePdfService } from '../../../../restaurante/services/reporte-pdf.service';\r\nimport { FisicoService } from '../../../services/fisico.service';\r\nimport { saveAs } from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-form-inventario-fisico',\r\n  templateUrl: './form-inventario-fisico.component.html',\r\n  styleUrls: ['./form-inventario-fisico.component.css']\r\n})\r\nexport class FormInventarioFisicoComponent implements OnInit {\r\n\r\n  public showForm = true;\r\n  public params: any = {};\r\n  public cargando = false;\r\n  public articulos: any[] = [];\r\n  public inventario: any = {};\r\n  private titulo = \"Inventario_Fisico\";\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private pdfServicio: ReportePdfService,\r\n    private fisicoSrvc: FisicoService,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.resetDatos();\r\n  }\r\n\r\n  resetDatos = () => {\r\n    this.articulos = [];\r\n    this.inventario = {\r\n      inventario_fisico: 0,\r\n      sede: null,\r\n      usuario: null,\r\n      categoria_grupo: null,\r\n      fhcreacion: null,\r\n      fecha: null,\r\n      notas: null,\r\n      confirmado: 0\r\n    }\r\n  }\r\n\r\n  buscar = () => {\r\n    let numero = \"\"+this.params.numero;\r\n    if (numero.length < 19) {\r\n      this.resetDatos();\r\n      this.fisicoSrvc.getDetalle(this.params.numero).subscribe(res => {\r\n        if(res && res.exito) {\r\n          this.articulos = res.detalle;\r\n          this.inventario = res.inventario;\r\n        } else {\r\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Inventario', { duration: 3000 });\r\n        }\r\n      })\r\n    } else {\r\n      this.snackBar.open(`ERROR: El texto sobrepasa la longitud permitida`, 'Inventario', { duration: 3000 });\r\n    }\r\n    \r\n  }\r\n\r\n  actualizar = () => {\r\n    this.fisicoSrvc.saveDetalle(this.articulos).subscribe(res => {\r\n      if (res.exito) {\r\n        this.snackBar.open('Datos actualizados exitosamente', 'Inventario', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Inventario', { duration: 3000 });\r\n      }\r\n    })\r\n  }\r\n\r\n  confirmar = () => {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel('Confirmar Inventario Fisico', 'No podrá modificar los datos ingresados. ¿Desea continuar?', 'Sí', 'No')\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.fisicoSrvc.confirmar(this.inventario).subscribe(res => {\r\n          if (res.exito) {\r\n            this.inventario = res.inventario;\r\n            this.snackBar.open('Inventario confirmado exitosamente', 'Inventario', { duration: 3000 });\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Inventario', { duration: 3000 });\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  imprimir = () => {\r\n    this.pdfServicio.imprimirInventarioFisico(this.inventario.inventario_fisico, {existencia_fisica:true}).subscribe(resImp => {\r\n      const blob = new Blob([resImp], { type: 'application/pdf' });\r\n      saveAs(blob, `${this.titulo}.pdf`);\r\n    });\r\n  }\r\n\r\n  imprimirXls = () => {\r\n    let params = {existencia_fisica: true, \"_excel\": true};\r\n\r\n    this.pdfServicio.imprimirInventarioFisico(this.inventario.inventario_fisico, params).subscribe(resImp => {\r\n      const blob = new Blob([resImp], { type: 'application/vnd.ms-excel' });\r\n      saveAs(blob, `${this.titulo}.xls`);\r\n    });\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row\">\r\n  <div class=\"col m12 s12\">    \r\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n      <mat-card-title>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <h4>Ingreso Inventario Físico</h4>\r\n          </div>\r\n          <div class=\"col\" style=\"float: right;\">\r\n            <button mat-button type=\"button\" color=\"accent\" (click)=\"showForm = !showForm;\">\r\n              <mat-icon class=\"iconFontSize\" *ngIf=\"showForm\">expand_more</mat-icon>\r\n              <mat-icon class=\"iconFontSize\" *ngIf=\"!showForm\">expand_less</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </mat-card-title>\r\n      <mat-card-content *ngIf=\"showForm\">\r\n        <form (ngSubmit)=\"buscar()\" novalidate>\r\n          <mat-form-field class=\"fullWidth\">\r\n            <input matInput type=\"number\" maxlength=\"17\" max=\"17\" placeholder=\"Número\" name=\"numero\" [(ngModel)]=\"params.numero\" required>\r\n            <button mat-raised-button matSuffix color=\"accent\" type=\"submit\">Buscar</button>\r\n          </mat-form-field>\r\n        </form>\r\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"articulos.length > 0\">\r\n  <div class=\"col m12 s12\">\r\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\r\n      <mat-card-title>\r\n      </mat-card-title>\r\n      <mat-card-content>\r\n        <form #frmConteoFisico=\"ngForm\" (ngSubmit)=\"frmConteoFisico.form.valid && actualizar()\" novalidate autocomplete=\"off\">\r\n          <table class=\"tbl\">\r\n            <ng-container *ngFor=\"let cat of articulos\">\r\n              <tr>\r\n                <th class=\"brdTSingleBSingle\" colspan=\"2\">\r\n                  <mat-label>{{ cat.descripcion }}</mat-label>\r\n                </th>\r\n              </tr>\r\n              <ng-container *ngFor=\"let gcat of cat.datos\">\r\n                <tr>\r\n                  <th class=\"brdTSingleBSingle\" colspan=\"3\">{{ gcat.descripcion }}</th>\r\n                </tr>\r\n                <tr *ngFor=\"let art of gcat.datos\">\r\n                  <td class=\"brdTSingleBSingle\">\r\n                    {{ art.narticulo }}\r\n                  </td>\r\n                  <td class=\"brdTSingleBSingle\">\r\n                    <mat-form-field>\r\n                      <input \r\n                        matInput \r\n                        type=\"number\" \r\n                        step=\"0.01\" \r\n                        placeholder=\"Existencia Sistema\" \r\n                        [(ngModel)]=\"art.existencia_sistema\" \r\n                        [ngModelOptions]=\"{standalone: true}\" \r\n                        disabled\r\n                        style=\"color: black;\r\n                        -webkit-text-fill-color: black\">\r\n                    </mat-form-field>\r\n                  </td>\r\n                  <td class=\"brdTSingleBSingle\">\r\n                    <mat-form-field class=\"fullWidth\">\r\n                      <input matInput type=\"number\" step=\"0.01\" placeholder=\"Cantidad\" [(ngModel)]=\"art.existencia_fisica\" [ngModelOptions]=\"{standalone: true}\" required>\r\n                    </mat-form-field>\r\n                  </td>\r\n                </tr>\r\n              </ng-container>\r\n            </ng-container>\r\n          </table>\r\n          <div align=\"end\">\r\n            <button mat-button color=\"accent\" type=\"submit\" *ngIf=\"inventario.confirmado == 0\">Guardar</button>\r\n            <button mat-button color=\"accent\" type=\"button\" (click)=\"imprimir()\">PDF</button>\r\n            <button mat-button color=\"accent\" type=\"button\" (click)=\"imprimirXls()\">Excel</button>\r\n            <button mat-button color=\"accent\" type=\"button\" *ngIf=\"inventario.confirmado == 0\" (click)=\"confirmar()\">Confirmar</button>\r\n          </div>\r\n        </form>\r\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport * as moment from 'moment';\r\n\r\nimport { Egreso } from '../../../interfaces/egreso';\r\nimport { EgresoService } from '../../../services/egreso.service';\r\n\r\n@Component({\r\n  selector: 'app-lista-egreso',\r\n  templateUrl: './lista-egreso.component.html',\r\n  styleUrls: ['./lista-egreso.component.css']\r\n})\r\nexport class ListaEgresoComponent implements OnInit {\r\n\r\n  public lstEgresos: Egreso[];\r\n  public lstEgresosPaged: Egreso[];\r\n  @Output() getEgresoEv = new EventEmitter();\r\n\r\n  public length = 0;\r\n  public pageSize = 5;\r\n  public pageSizeOptions: number[] = [5, 10, 15];\r\n  public pageIndex = 0;\r\n  public pageEvent: PageEvent;\r\n  public txtFiltro = '';\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n  public params = {\r\n    _fdel: moment().startOf('month').format(GLOBAL.dbDateFormat),\r\n    _fal: moment().endOf('month').format(GLOBAL.dbDateFormat)\r\n  }\r\n\r\n  constructor(\r\n    private egresoSrvc: EgresoService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.loadEgresos();\r\n  }\r\n\r\n  applyFilter() {\r\n    if (this.txtFiltro.length > 0) {\r\n      const tmpList = MultiFiltro(this.lstEgresos, this.txtFiltro);\r\n      this.length = tmpList.length;\r\n      this.lstEgresosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\r\n    } else {\r\n      this.length = this.lstEgresos.length;\r\n      this.lstEgresosPaged = PaginarArray(this.lstEgresos, this.pageSize, this.pageIndex + 1);\r\n    }\r\n  }\r\n\r\n  loadEgresos = () => {\r\n    this.egresoSrvc.get(this.params).subscribe(lst => {\r\n      if (lst) {\r\n        this.lstEgresos = lst;\r\n        this.applyFilter();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEgreso = (obj: any) => {\r\n    this.getEgresoEv.emit({\r\n      egreso: obj.egreso,\r\n      tipo_movimiento: obj.tipo_movimiento.tipo_movimiento,\r\n      bodega: obj.bodega.bodega,\r\n      fecha: obj.fecha,\r\n      usuario: obj.usuario.usuario,\r\n      estatus_movimiento: obj.estatus_movimiento || 1,\r\n      traslado: obj.traslado || 0,\r\n      idcomandafox: obj.idcomandafox\r\n    });\r\n  }\r\n\r\n  pageChange = (e: PageEvent) => {\r\n    this.pageSize = e.pageSize;\r\n    this.pageIndex = e.pageIndex;\r\n    this.applyFilter();\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-content>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params._fdel\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params._fal\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>        \r\n        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"loadEgresos()\">\r\n            Buscar\r\n        </button>        \r\n        <mat-form-field class=\"fullWidth\">\r\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n        </mat-form-field>\r\n        <mat-nav-list>\r\n            <mat-list-item *ngFor=\"let element of lstEgresosPaged\" (click)=\"getEgreso(element)\">\r\n                <mat-icon mat-list-icon>trending_down</mat-icon>\r\n                <h5 mat-line>No. {{element.egreso}}</h5><br/>\r\n                <p mat-line>\r\n                    Fecha: {{element.fecha | date: 'dd/MM/yyyy'}}<br/>\r\n                    Bodega: {{element.bodega.descripcion}}<br/>\r\n                </p>\r\n                <span mat-line *ngIf=\"!!element.idcomandafox\">Comanda: #{{element.idcomandafox}}</span>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\r\n        </mat-paginator>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\n// import { ListaProductoComponent } from '../lista-producto/lista-producto.component';\r\nimport { FormProductoComponent } from '../form-producto/form-producto.component';\r\nimport { SubCategoriaProductoComponent } from '../sub-categoria-producto/sub-categoria-producto.component';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL, MultiFiltro } from '../../../../shared/global';\r\nimport { Articulo, ArticuloResponse } from '../../../interfaces/articulo';\r\nimport { Categoria } from '../../../interfaces/categoria';\r\nimport { CategoriaGrupo } from '../../../interfaces/categoria-grupo';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-producto',\r\n  templateUrl: './producto.component.html',\r\n  styleUrls: ['./producto.component.css']\r\n})\r\nexport class ProductoComponent implements OnInit, OnDestroy {\r\n\r\n  public categoria: Categoria;\r\n  public categorias: Categoria[] = [];\r\n  public categoriaGrupo: CategoriaGrupo;\r\n  public categoriasGrupos: CategoriaGrupo[] = [];\r\n  public listasCategoriasGrupo: any[] = [];\r\n\r\n  public articulo: Articulo;\r\n  public articulos: Articulo[] = [];\r\n  public articulosFull: Articulo[] = [];\r\n  public txtFiltro = '';\r\n  public cargando = false;\r\n  // @ViewChild('lstProducto') lstProductoComponent: ListaProductoComponent;\r\n  @ViewChild('frmProducto') frmProductoComponent: FormProductoComponent;\r\n  @ViewChild('frmSubcategoria') frmSubcategoria: SubCategoriaProductoComponent;\r\n\r\n  private endSubs = new Subscription();\r\n\r\n  constructor(\r\n    private articuloSrvc: ArticuloService,\r\n    private ls: LocalstorageService\r\n  ) {\r\n    this.articulo = {\r\n      articulo: null, categoria_grupo: null, presentacion: null, descripcion: null, precio: null, bien_servicio: 'B',\r\n      produccion: 0, presentacion_reporte: null, mostrar_pos: 0, impuesto_especial: null, rendimiento: 1, mostrar_inventario: 0\r\n    };\r\n  }\r\n  ngOnInit() {\r\n    this.loadCategorias();\r\n    this.loadArticulos();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.endSubs.unsubscribe();\r\n  }\r\n\r\n  applyFilter() {\r\n    if (this.txtFiltro.length > 0) {\r\n      this.articulos = MultiFiltro(this.articulosFull, this.txtFiltro);\r\n    } else {\r\n      this.articulos = JSON.parse(JSON.stringify(this.articulosFull));\r\n    }\r\n  }\r\n\r\n  setArticulo = (art: Articulo) => {\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getArticulo({ articulo: art.articulo }).subscribe(res => {\r\n        if (!!res && res.length > 0) {\r\n          const obj: ArticuloResponse = res[0];\r\n          this.articulo = {\r\n            articulo: +obj.articulo,\r\n            categoria_grupo: +obj.categoria_grupo.categoria_grupo,\r\n            presentacion: obj.presentacion.presentacion,\r\n            descripcion: obj.descripcion,\r\n            precio: +obj.precio,\r\n            codigo: obj.codigo,\r\n            produccion: obj.produccion,\r\n            presentacion_reporte: obj.presentacion_reporte.presentacion,\r\n            mostrar_pos: obj.mostrar_pos,\r\n            impuesto_especial: obj.impuesto_especial,\r\n            shopify_id: obj.shopify_id,\r\n            multiple: obj.multiple,\r\n            cantidad_minima: obj.cantidad_minima,\r\n            cantidad_maxima: obj.cantidad_maxima,\r\n            combo: obj.combo,\r\n            rendimiento: obj.rendimiento,\r\n            mostrar_inventario: obj.mostrar_inventario,\r\n            esreceta: obj.esreceta\r\n          };\r\n  \r\n          this.categoria = this.categorias.find(c => +c.categoria === +obj.categoria_grupo.categoria);\r\n          this.categoriaGrupo = {\r\n            categoria_grupo: +obj.categoria_grupo.categoria_grupo,\r\n            categoria: +obj.categoria_grupo.categoria,\r\n            categoria_grupo_grupo: +obj.categoria_grupo.categoria_grupo_grupo,\r\n            descripcion: obj.categoria_grupo.descripcion,\r\n            receta: +obj.categoria_grupo.receta,\r\n            impresora: +obj.categoria_grupo.impresora,\r\n            descuento: +obj.categoria_grupo.descuento\r\n          };\r\n          this.frmProductoComponent.loadRecetas(+this.articulo.articulo);\r\n          this.frmProductoComponent.resetReceta();\r\n          this.frmProductoComponent.filtrarPresentaciones(this.articulo);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  setArticuloCategoriaGrupo = (idcategoriagrupo: number) => {\r\n    this.articulo.categoria_grupo = +idcategoriagrupo;\r\n    this.frmProductoComponent.setArticuloCategoriaGrupo(+idcategoriagrupo);\r\n  }\r\n\r\n  refreshArticuloList = (obj: any) => {\r\n    this.loadArticulos();\r\n  }\r\n\r\n  loadCategorias = () => {\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getCategorias({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((res: Categoria[]) => {\r\n        if (res) {\r\n          this.categorias = res;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadSubCategorias = (idcategoria: number, idsubcat: number = null) => {\r\n\r\n    // console.log(this.articulo);\r\n    this.cargando = true;\r\n\r\n    const fltr: any = {\r\n      categoria: +idcategoria,\r\n      categoria_grupo_grupo: null\r\n    };\r\n\r\n    if (idsubcat) {\r\n      this.frmProductoComponent.articulo.categoria_grupo = idsubcat;\r\n      fltr.categoria_grupo_grupo = idsubcat;\r\n    } else {      \r\n      delete fltr.categoria_grupo_grupo;      \r\n    }\r\n\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getCategoriasGrupos(fltr).subscribe((res: any[]) => {\r\n        if (res && res.length > 0) {\r\n          if (!idsubcat) {\r\n            this.frmProductoComponent.articulo.categoria_grupo = null;\r\n            this.listasCategoriasGrupo = [];\r\n          }\r\n          this.listasCategoriasGrupo.push(this.articuloSrvc.adaptCategoriaGrupoResponse(res));\r\n        } else {\r\n          if (idsubcat) {\r\n            this.loadArticulos(idsubcat);\r\n          }\r\n        }\r\n        this.cargando = false;\r\n      })\r\n    );\r\n  }\r\n\r\n  loadArticulos = (idsubcat: number = null) => {\r\n\r\n    const fltr: any = { categoria_grupo: null };\r\n\r\n    if (idsubcat) {\r\n      fltr.categoria_grupo = idsubcat;\r\n    } else {\r\n      delete fltr.categoria_grupo;\r\n    }\r\n\r\n    this.endSubs.add(      \r\n      this.articuloSrvc.getArticulos(fltr).subscribe((res: Articulo[]) => {\r\n        if (res) {\r\n          this.articulosFull = res;\r\n          this.articulos = JSON.parse(JSON.stringify(this.articulosFull));\r\n          this.applyFilter();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  reloadCategoriasInSubcategoriasArticulos = () => {\r\n    this.loadCategorias();\r\n    this.frmSubcategoria.loadCategorias();\r\n  }\r\n\r\n  verTodos = () => {\r\n    this.categoria = null;\r\n    this.categoriaGrupo = null;\r\n    this.frmProductoComponent.resetArticulo();\r\n    this.categoriasGrupos = [];\r\n    this.listasCategoriasGrupo = [];\r\n    this.loadArticulos();\r\n  }\r\n\r\n  selectCategoria = (cat: Categoria) => {\r\n    this.categoria = cat;\r\n    this.categoriaGrupo = null;\r\n    this.frmProductoComponent.resetArticulo();\r\n    this.articulos = [];\r\n    this.loadSubCategorias(cat.categoria)    \r\n  }\r\n\r\n  selectSubcat = (subcat: CategoriaGrupo) => {\r\n    this.categoriaGrupo = subcat;\r\n    this.loadSubCategorias(this.categoria.categoria, subcat.categoria_grupo)\r\n  }\r\n}\r\n","<mat-tab-group>\r\n    <mat-tab label=\"Categorías\">\r\n        <app-categoria-producto (categoriaGrupoSvd)=\"reloadCategoriasInSubcategoriasArticulos()\" (onChangeSubCategoriaEv)=\"setArticuloCategoriaGrupo($event)\"></app-categoria-producto>\r\n    </mat-tab>\r\n    <mat-tab label=\"Sub-categorías\">\r\n        <app-sub-categoria-producto #frmSubcategoria></app-sub-categoria-producto>\r\n    </mat-tab>\r\n    <mat-tab label=\"Artículos\">\r\n        <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start start\">            \r\n            <div fxFlex=\"100%\">\r\n                <mat-chip-list>\r\n                    <mat-chip color=\"primary\" (click)=\"verTodos()\" selected>\r\n                        Ver todos\r\n                    </mat-chip>\r\n                    <mat-chip color=\"accent\" *ngFor=\"let cat of categorias\" (click)=\"!cargando && selectCategoria(cat)\" selected>\r\n                        {{cat.descripcion}}\r\n                    </mat-chip>\r\n                </mat-chip-list>\r\n                <mat-chip-list *ngFor=\"let lcg of listasCategoriasGrupo\" class=\"divSubCategorias\">\r\n                    <mat-chip color=\"warn\" *ngFor=\"let subcat of lcg\" (click)=\"!cargando && selectSubcat(subcat)\" selected>\r\n                        {{subcat.descripcion}}\r\n                    </mat-chip>\r\n                </mat-chip-list>                \r\n            </div>\r\n            <div class=\"divArticulos\" fxFlex=\"40%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\" fxLayoutAlign=\"start start\">                \r\n                <mat-form-field class=\"fullWidth\">\r\n                    <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\r\n                </mat-form-field>\r\n                <mat-action-list>\r\n                    <button mat-list-item class=\"accion-comanda mat-elevation-z4\" *ngFor=\"let producto of articulos\" (click)=\"setArticulo(producto)\">{{producto.descripcion | truncar:35}}</button>\r\n                </mat-action-list>\r\n            </div>\r\n            <div class=\"divArticulos\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                <app-form-producto #frmProducto [categoria]=\"categoria\" [subcategoria]=\"categoriaGrupo\" [articulo]=\"articulo\" (articuloSvd)=\"refreshArticuloList($event)\">\r\n                </app-form-producto>\r\n            </div>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Ingreso } from '../interfaces/ingreso';\nimport { DetalleIngreso } from '../interfaces/detalle-ingreso';\nimport { Documento } from '../interfaces/documento';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private ingresoUrl = 'ingreso';\n  private documentoUrl = 'documento';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Ingreso[]> {\n    return this.http.get<Ingreso[]>(\n      `${GLOBAL.urlWms}/${this.ingresoUrl}/buscar_ingreso?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Ingreso) {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ingresoUrl}/guardar${+entidad.ingreso > 0 ? ('/' + entidad.ingreso) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idingreso: number, fltr: any = {}): Observable<DetalleIngreso[]> {\n    return this.http.get<DetalleIngreso[]>(\n      `${GLOBAL.urlWms}/${this.ingresoUrl}/buscar_detalle/${idingreso}?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleIngreso) {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ingresoUrl}/guardar_detalle/${entidad.ingreso}${+entidad.ingreso_detalle > 0 ? ('/' + entidad.ingreso_detalle) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDocumento(fltr: any = {}): Observable<Documento[]> {\n    return this.http.get<Documento[]>(\n      `${GLOBAL.urlWms}/${this.documentoUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDocumento(entidad: Documento) {\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.documentoUrl}/guardar${+entidad.documento > 0 ? ('/' + entidad.documento) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  enviarDocumentoAConta(idDocumento: number) {\n    return this.http.get<any>(\n      `${GLOBAL.urlWms}/${this.documentoUrl}/enviar/${idDocumento}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\nimport { FormEgresoComponent } from '../egreso/form-egreso/form-egreso.component';\r\nimport { FormIngresoComponent } from '../ingreso/form-ingreso/form-ingreso.component';\r\n\r\nimport { Transformacion, TransformacionDetalleMovimiento } from '../../interfaces/transformacion';\r\nimport { TransformacionService } from '../../services/transformacion.service';\r\nimport { Ingreso } from '../../interfaces/ingreso';\r\nimport { Egreso } from '../../interfaces/egreso';\r\n\r\n@Component({\r\n  selector: 'app-transformacion',\r\n  templateUrl: './transformacion.component.html',\r\n  styleUrls: ['./transformacion.component.css']\r\n})\r\nexport class TransformacionComponent implements OnInit {\r\n\r\n  @ViewChild('frmEgreso') frmEgreso: FormEgresoComponent;\r\n  @ViewChild('frmIngreso') frmIngreso: FormIngresoComponent;\r\n\r\n  public transformacion: Transformacion;\r\n  public mermaDetalle: TransformacionDetalleMovimiento[] = [];\r\n  public merma: TransformacionDetalleMovimiento;\r\n  public ingreso: Ingreso;\r\n  public egreso: Egreso;\r\n  public showMerma: boolean = true;\r\n  public bloqueoBotones = false;\r\n\r\n  constructor(\r\n    private ls: LocalstorageService,\r\n    private _snackBar: MatSnackBar,\r\n    private transformacionSrvc: TransformacionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.egreso = {\r\n      egreso: null, tipo_movimiento: null, bodega: null, fecha: moment().format(GLOBAL.dbDateFormat), usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), estatus_movimiento: 1, traslado: 0\r\n    };\r\n\r\n    this.ingreso = {\r\n      ingreso: null, tipo_movimiento: null, fecha: moment().format(GLOBAL.dbDateFormat), bodega: null, usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), comentario: null, proveedor: null\r\n    };\r\n  }\r\n\r\n  doSomething() { }\r\n\r\n  transformar = () => {\r\n    this.bloqueoBotones = true;\r\n    this.egreso = this.frmEgreso.egreso;\r\n    this.ingreso = this.frmIngreso.ingreso;\r\n\r\n    this.transformacion = {\r\n      egreso: {\r\n        tipo_movimiento: this.egreso.tipo_movimiento,\r\n        fecha: this.egreso.fecha,\r\n        proveedor: this.ingreso.proveedor,\r\n        bodega: this.egreso.bodega,\r\n        usuario: this.egreso.usuario,\r\n        estatus_movimiento: this.egreso.estatus_movimiento,\r\n        bodega_destino: this.egreso.bodega_destino,\r\n        tipo_movimiento_destino: this.egreso.tipo_movimiento_destino,\r\n        detalle: []\r\n      },\r\n      ingreso: {\r\n        tipo_movimiento: this.ingreso.tipo_movimiento,\r\n        fecha: this.ingreso.fecha,\r\n        proveedor: this.ingreso.proveedor,\r\n        bodega: this.ingreso.bodega,\r\n        usuario: this.ingreso.usuario,\r\n        bodega_origen: this.ingreso.bodega_origen,\r\n        comentario: this.ingreso.comentario,\r\n        detalle: []\r\n      },\r\n      merma: []\r\n    }\r\n\r\n    this.frmEgreso.detallesMerma.forEach(dm => this.transformacion.merma.push({\r\n      articulo: dm.articulo,\r\n      cantidad: dm.cantidad,\r\n      precio_unitario: dm.precio_unitario,\r\n      precio_total: dm.precio_total,\r\n      presentacion: dm.presentacion,\r\n      cantidad_utilizada: dm.cantidad_utilizada\r\n    }));\r\n\r\n    this.frmEgreso.detallesEgreso.forEach(de => this.transformacion.egreso.detalle.push({\r\n      articulo: de.articulo,\r\n      cantidad: de.cantidad,\r\n      precio_unitario: de.precio_unitario,\r\n      precio_total: de.precio_total,\r\n      presentacion: de.presentacion\r\n    }));\r\n\r\n    this.frmIngreso.detallesIngreso.forEach(di => this.transformacion.ingreso.detalle.push({\r\n      articulo: di.articulo,\r\n      cantidad: di.cantidad,\r\n      precio_unitario: di.precio_unitario,\r\n      precio_total: di.precio_total,\r\n      presentacion: di.presentacion,\r\n      cantidad_utilizada: di.cantidad_utilizada\r\n    }));\r\n\r\n    if (\r\n      !!this.transformacion.egreso && !!this.transformacion.egreso.detalle && this.transformacion.egreso.detalle.length > 0 &&\r\n      !!this.transformacion.ingreso && !!this.transformacion.ingreso.detalle && this.transformacion.ingreso.detalle.length > 0\r\n    ) {\r\n      this.transformacionSrvc.transformar(this.transformacion).subscribe(res => {\r\n        this.bloqueoBotones = false;\r\n        if (res.exito) {\r\n          this.frmEgreso.resetEgreso();\r\n          this.frmEgreso.detallesEgreso = [];\r\n          this.frmEgreso.resetDetalleMerma();\r\n          this.frmEgreso.detallesMerma = [];\r\n          this.frmIngreso.resetIngreso();\r\n          this.frmIngreso.detallesIngreso = [];\r\n          this._snackBar.open('Transformación generada con éxito...', 'Transformación', { duration: 5000 });\r\n        } else {\r\n          this._snackBar.open(`ERROR: ${res.mensaje}`, 'Transformación', { duration: 3000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.bloqueoBotones = false;\r\n      this._snackBar.open(`Faltan datos necesario. Favor complete los datos e intente de nuevo.`, 'Transformación', { duration: 3000 });      \r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col m12 s12\" style=\"padding-bottom: 5px !important;\">\r\n        <div align=\"end\">\r\n            <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"transformar()\" [disabled]=\"bloqueoBotones\">\r\n                <mat-icon style=\"font-size: 18pt;\">transform</mat-icon>&nbsp;Transformar\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col m6 s12\">\r\n        <app-form-egreso #frmEgreso [(egreso)]=\"egreso\" [saveToDB]=\"false\" (egresoSavedEv)=\"doSomething()\">\r\n        </app-form-egreso>\r\n    </div>\r\n    <div class=\"col m6 s12\">\r\n        <app-form-ingreso #frmIngreso [bodega] = \"false\" [(ingreso)]=\"ingreso\" [saveToDB]=\"false\" (ingresoSavedEv)=\"doSomething()\">\r\n        </app-form-ingreso>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\nimport { ListaIngresoComponent } from '../lista-ingreso/lista-ingreso.component';\nimport { FormIngresoComponent } from '../form-ingreso/form-ingreso.component';\nimport { Ingreso } from '../../../interfaces/ingreso';\n\n@Component({\n  selector: 'app-ingreso',\n  templateUrl: './ingreso.component.html',\n  styleUrls: ['./ingreso.component.css']\n})\nexport class IngresoComponent implements OnInit {\n\n  public ingreso: Ingreso;\n  @ViewChild('lstIngreso') lstIngresoComponent: ListaIngresoComponent;\n  @ViewChild('frmIngreso') frmIngreso: FormIngresoComponent;\n  public breakpoint = 2;\n  // public tamFila: number;\n\n  constructor(\n    private ls: LocalstorageService\n  ) {\n    this.ingreso = {\n      ingreso: null, tipo_movimiento: null, fecha: moment().format(GLOBAL.dbDateFormat), bodega: null,\n      usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), comentario: null, proveedor: null\n    };\n  }\n\n  ngOnInit() {\n    this.breakpoint = (window.innerWidth <= 360) ? 1 : 2;\n    // this.tamFila = window.innerHeight - 64;\n    // console.log(this.tamFila);\n  }\n\n  onWindowResize = (ev: any) => {\n    this.breakpoint = (ev.target.innerWidth <= 360) ? 1 : 2;\n    // this.tamFila = ev.target.innerHeight - 64;\n    // console.log(this.tamFila);\n  }\n\n  setIngreso = (ing: Ingreso) => {\n    this.ingreso = ing;\n    this.frmIngreso.setProveedor(+this.ingreso.proveedor);\n    this.frmIngreso.loadDetalleIngreso(+this.ingreso.ingreso);\n    this.frmIngreso.resetDetalleIngreso();\n    this.frmIngreso.loadDocumento(this.ingreso.ingreso);\n  }\n\n  refreshIngresoList = () => {\n    this.lstIngresoComponent.loadIngresos();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-ingreso #lstIngreso (getIngresoEv)=\"setIngreso($event)\"></app-lista-ingreso>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-ingreso #frmIngreso [ingreso]=\"ingreso\" (ingresoSavedEv)=\"refreshIngresoList()\"></app-form-ingreso>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\n\nimport { WmsRoutingModule } from './wms-routing.module';\nimport { ListaProductoComponent } from './components/producto/lista-producto/lista-producto.component';\nimport { ListaIngresoComponent } from './components/ingreso/lista-ingreso/lista-ingreso.component';\nimport { FormIngresoComponent } from './components/ingreso/form-ingreso/form-ingreso.component';\nimport { IngresoComponent } from './components/ingreso/ingreso/ingreso.component';\nimport { ProductoComponent } from './components/producto/producto/producto.component';\nimport { FormProductoComponent } from './components/producto/form-producto/form-producto.component';\nimport { CategoriaProductoComponent } from './components/producto/categoria-producto/categoria-producto.component';\nimport { EgresoComponent } from './components/egreso/egreso/egreso.component';\nimport { ListaEgresoComponent } from './components/egreso/lista-egreso/lista-egreso.component';\nimport { FormEgresoComponent } from './components/egreso/form-egreso/form-egreso.component';\nimport { TransformacionComponent } from './components/transformacion/transformacion.component';\n\n// import { TransformacionService } from './services/transformacion.service';\nimport { ExistenciasComponent } from './components/reporte/existencias/existencias.component';\nimport { KardexComponent } from './components/reporte/kardex/kardex.component';\nimport { ListaProductoAltComponent } from './components/producto/lista-producto-alt/lista-producto-alt.component';\nimport { ProduccionComponent } from './components/produccion/produccion.component';\nimport { ReporteComponent } from './components/fisico/reporte/reporte.component';\nimport { ValorizadoComponent } from './components/reporte/valorizado/valorizado.component';\nimport { FisicoComponent } from './components/fisico/fisico/fisico.component';\nimport { FormInventarioFisicoComponent } from './components/fisico/form-inventario-fisico/form-inventario-fisico.component';\nimport { ReplicarASedesComponent } from './components/producto/replicar-a-sedes/replicar-a-sedes.component';\nimport { ReplicarASedesDialogComponent } from './components/producto/replicar-a-sedes-dialog/replicar-a-sedes-dialog.component';\nimport { SubCategoriaProductoComponent } from './components/producto/sub-categoria-producto/sub-categoria-producto.component';\n\n@NgModule({\n  declarations: [\n    ListaProductoComponent, ListaIngresoComponent, FormIngresoComponent, IngresoComponent, ProductoComponent, FormProductoComponent,\n    CategoriaProductoComponent, EgresoComponent, ListaEgresoComponent, FormEgresoComponent, TransformacionComponent, ExistenciasComponent,\n    KardexComponent, ListaProductoAltComponent, ProduccionComponent, ReporteComponent, ValorizadoComponent, FisicoComponent,\n    FormInventarioFisicoComponent, ReplicarASedesComponent, ReplicarASedesDialogComponent, SubCategoriaProductoComponent\n  ],\n  imports: [\n    CommonModule,\n    WmsRoutingModule,\n    FlexLayoutModule,\n    SharedModule,\n    HttpClientModule,\n    FormsModule,\n    MatKeyboardModule,\n    MatListModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatTreeModule,\n    MatAutocompleteModule,\n    MatChipsModule\n  ],\n  providers: [ ],\n  exports: [\n    ListaProductoComponent, ListaProductoAltComponent\n  ]\n})\nexport class WmsModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport * as moment from 'moment';\r\n\r\nimport { Egreso } from '../../../interfaces/egreso';\r\nimport { DetalleEgreso } from '../../../interfaces/detalle-egreso';\r\nimport { EgresoService } from '../../../services/egreso.service';\r\nimport { TipoMovimiento } from '../../../interfaces/tipo-movimiento';\r\nimport { TipoMovimientoService } from '../../../services/tipo-movimiento.service';\r\nimport { Bodega } from '../../../interfaces/bodega';\r\nimport { BodegaService } from '../../../services/bodega.service';\r\nimport { Proveedor } from '../../../interfaces/proveedor';\r\nimport { ProveedorService } from '../../../services/proveedor.service';\r\nimport { Articulo } from '../../../interfaces/articulo';\r\nimport { ArticuloService } from '../../../services/articulo.service';\r\nimport { TransformacionService } from '../../../services/transformacion.service';\r\nimport { Presentacion } from '../../../../admin/interfaces/presentacion';\r\nimport { PresentacionService } from '../../../../admin/services/presentacion.service';\r\n// import { PageEvent } from '@angular/material/paginator';\r\n// import { PaginarArray, MultiFiltro } from '../../../../shared/global';\r\n\r\n@Component({\r\n  selector: 'app-form-egreso',\r\n  templateUrl: './form-egreso.component.html',\r\n  styleUrls: ['./form-egreso.component.css']\r\n})\r\nexport class FormEgresoComponent implements OnInit {\r\n\r\n  @Input() egreso: Egreso;\r\n  @Input() saveToDB = true;\r\n  @Output() egresoSavedEv = new EventEmitter();\r\n\r\n  public showEgresoForm = true;\r\n  public showDetalleEgresoForm = true;\r\n\r\n  public detallesEgreso: DetalleEgreso[] = [];\r\n  public detallesEgresoPaged: DetalleEgreso[];\r\n  public detalleEgreso: DetalleEgreso;\r\n  public detallesMerma: DetalleEgreso[] = [];\r\n  public detalleMerma: DetalleEgreso;\r\n  public displayedColumns: string[] = ['articulo', 'presentacion', 'cantidad', 'precio_unitario', 'precio_total', 'editItem'];\r\n  public displayedColumnsM: string[] = ['cantidad_utilizada', 'articulo', 'presentacion', 'cantidad', 'editItem'];\r\n  public dataSource: MatTableDataSource<DetalleEgreso>;\r\n  public dataSourceM: MatTableDataSource<DetalleEgreso>;\r\n  public tiposMovimiento: TipoMovimiento[] = [];\r\n  public tiposMovimientoIngreso: TipoMovimiento[] = [];\r\n  public bodegas: Bodega[] = [];\r\n  public articulos: Articulo[] = [];\r\n  public filteredArticulos: Articulo[] = [];\r\n  public proveedores: Proveedor[] = [];\r\n  public filteredProveedores: Proveedor[] = [];\r\n  public presentaciones: Presentacion[] = [];\r\n  public fltrPresentaciones: Presentacion[] = [];\r\n  public fltrPresentacionesMerma: Presentacion[] = [];\r\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\r\n  public esMovil = false;\r\n  public bloqueoBotones = false;\r\n  public txtArticuloSelected: (Articulo | string) = undefined;\r\n  public txtArticuloSelectedM: (Articulo | string) = undefined;\r\n  public txtProveedorSelected: (Proveedor | string) = undefined;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private ls: LocalstorageService,\r\n    private egresoSrvc: EgresoService,\r\n    private tipoMovimientoSrvc: TipoMovimientoService,\r\n    private bodegaSrvc: BodegaService,\r\n    private articuloSrvc: ArticuloService,\r\n    private proveedorSrvc: ProveedorService,\r\n    private transformacionSrvc: TransformacionService,\r\n    private presentacionSrvc: PresentacionService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.resetEgreso();\r\n    this.loadTiposMovimiento();\r\n    this.loadTiposMovimiento(false);\r\n    this.loadBodegas();\r\n    this.loadArticulos();\r\n    this.loadProveedores();\r\n    this.loadPresentaciones();\r\n    if(!this.saveToDB) {\r\n      this.displayedColumns = ['articulo', 'presentacion', 'cantidad', 'editItem'];\r\n    }\r\n  }\r\n\r\n  loadTiposMovimiento = (paraEgreso = true) => {\r\n    const fltr = paraEgreso ? { egreso: 1 } : { ingreso: 1 };\r\n    this.tipoMovimientoSrvc.get(fltr).subscribe(res => {\r\n      if (res) {\r\n        if (paraEgreso) {\r\n          this.tiposMovimiento = res;\r\n        } else {\r\n          this.tiposMovimientoIngreso = res;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBodegas = () => {\r\n    this.bodegaSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\r\n      if (res) {\r\n        this.bodegas = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadProveedores = () => {\r\n    this.proveedorSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.proveedores = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadPresentaciones = () => {\r\n    this.presentacionSrvc.get().subscribe(res => {\r\n      if (res) {\r\n        this.presentaciones = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetEgreso = () => {\r\n    this.egreso = {\r\n      egreso: null, tipo_movimiento: null, bodega: null, fecha: moment().format(GLOBAL.dbDateFormat),\r\n      usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), estatus_movimiento: 1, traslado: 0\r\n    };\r\n    this.resetDetalleEgreso();\r\n    this.updateTableDataSource();\r\n    this.resetDetalleMerma();\r\n    this.updateTableDataSourceM();\r\n  }\r\n\r\n  onSubmit = () => {\r\n    this.bloqueoBotones = true;\r\n    this.egresoSrvc.save(this.egreso).subscribe(res => {\r\n      if (res.exito) {\r\n        this.egresoSavedEv.emit();\r\n        this.resetEgreso();\r\n        this.egreso = {\r\n          egreso: res.egreso.egreso,\r\n          tipo_movimiento: res.egreso.tipo_movimiento,\r\n          fecha: res.egreso.fecha,\r\n          bodega: res.egreso.bodega,\r\n          creacion: res.egreso.creacion,\r\n          usuario: res.egreso.usuario,\r\n          estatus_movimiento: res.egreso.estatus_movimiento,\r\n          traslado: res.egreso.traslado\r\n        };\r\n        this.loadDetalleEgreso(this.egreso.egreso);\r\n      }\r\n      this.bloqueoBotones = false;\r\n    });\r\n  }\r\n\r\n  confirmarEgreso = () => {\r\n    this.egreso.estatus_movimiento = 2;\r\n    this.onSubmit();\r\n  }\r\n\r\n  loadArticulos = () => {\r\n    this.articuloSrvc.getArticulosIngreso().subscribe(res => {\r\n      if (res) {\r\n        this.articulos = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  resetDetalleEgreso = () => {\r\n    this.detalleEgreso = {\r\n      egreso_detalle: null, egreso: (!!this.egreso.egreso ? this.egreso.egreso : null), articulo: null, cantidad: null,\r\n      precio_unitario: null, precio_total: null, presentacion: 0\r\n    };\r\n    this.txtArticuloSelected = undefined;\r\n  }\r\n\r\n  resetDetalleMerma = () => {\r\n      this.detalleMerma = {\r\n        egreso_detalle: null, egreso: (!!this.egreso.egreso ? this.egreso.egreso : null), articulo: null, cantidad: null,\r\n        precio_unitario: null, precio_total: null, presentacion: 0\r\n      }\r\n\r\n      this.txtArticuloSelectedM = undefined;\r\n  }\r\n\r\n  loadDetalleEgreso = (idegreso: number = +this.egreso.egreso) => {\r\n    this.egresoSrvc.getDetalle(idegreso, { egreso: idegreso }).subscribe(res => {\r\n      // console.log(res);\r\n      if (res) {\r\n        this.detallesEgreso = res;\r\n        this.updateTableDataSource();\r\n      }\r\n    });\r\n  }\r\n\r\n  getDetalleEgreso = (idegreso: number = +this.egreso.egreso, iddetalle: number) => {\r\n    this.egresoSrvc.getDetalle(idegreso, { egreso_detalle: iddetalle }).subscribe((res: any[]) => {\r\n      // console.log(res);\r\n      if (res) {\r\n        this.detalleEgreso = {\r\n          egreso_detalle: res[0].egreso_detalle,\r\n          egreso: res[0].egreso,\r\n          articulo: res[0].articulo.articulo,\r\n          cantidad: +res[0].cantidad,\r\n          precio_unitario: +res[0].precio_unitario,\r\n          precio_total: +res[0].precio_total,\r\n          presentacion: res[0].presentacion.presentacion\r\n        };\r\n        this.setPresentaciones();\r\n        if (!this.saveToDB) {\r\n          this.setPresentacionesMerma();\r\n        }\r\n        this.txtArticuloSelected = res[0].articulo;\r\n        this.showDetalleEgresoForm = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmitDetail = () => {\r\n    this.bloqueoBotones = true;\r\n    this.detalleEgreso.egreso = this.egreso.egreso;\r\n    // console.log(this.detalleEgreso);\r\n    this.egresoSrvc.saveDetalle(this.detalleEgreso).subscribe(res => {\r\n      // console.log(res);\r\n      if (res.exito) {\r\n        this.loadDetalleEgreso();\r\n        this.resetDetalleEgreso();\r\n        this.snackBar.open('Egreso guardado con éxito...', 'Egreso', { duration: 3000 });\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Egreso', { duration: 3000 });\r\n      }\r\n      this.bloqueoBotones = false;\r\n    });\r\n  }\r\n\r\n  addToDetail = () => {\r\n    if (this.detalleEgreso.cantidad > 0){\r\n      this.detallesEgreso.splice(this.detallesEgreso.findIndex(de => +de.articulo === +this.detalleEgreso.articulo), 1);\r\n      this.detallesEgreso.push(this.detalleEgreso);\r\n      \r\n      this.resetDetalleEgreso();\r\n      this.updateTableDataSource();\r\n    } else {\r\n      this.snackBar.open(`ERROR: La cantidad debe ser mayor a 0`, 'Egreso', { duration: 3000 });\r\n    }\r\n    \r\n  }\r\n\r\n  addToDetailMerma = () => {\r\n    if (this.detalleMerma.cantidad > 0 && this.detalleMerma.cantidad_utilizada > 0) {\r\n      var index = this.detallesMerma.findIndex(de => +de.articulo === +this.detalleMerma.articulo);\r\n      if (index > -1) {\r\n        this.detallesMerma.splice(index, 1);\r\n      }\r\n      var art:any;\r\n      art = this.articulos.filter(p => +p.articulo == this.detalleMerma.articulo);\r\n      this.detalleMerma.presentacion = art[0].presentacion_reporte;\r\n\r\n      this.detallesMerma.push(this.detalleMerma);\r\n      this.txtArticuloSelectedM = undefined;\r\n      this.resetDetalleMerma();\r\n      this.updateTableDataSourceM();\r\n    } else if(this.detalleMerma.cantidad <= 0){\r\n      this.snackBar.open(`ERROR: La cantidad debe ser mayor a 0`, 'Egreso', { duration: 3000 });\r\n    } else if(this.detalleMerma.cantidad_utilizada <= 0){\r\n      this.snackBar.open(`ERROR: La cantidad a utilizar debe ser mayor a 0`, 'Egreso', { duration: 3000 });\r\n    }\r\n    \r\n  }\r\n\r\n  editFromDetail = (idarticulo: number) => {\r\n    var tmp = this.detallesEgreso.filter(de => +de.articulo === +idarticulo)[0];\r\n    this.detalleEgreso = {\r\n      egreso_detalle: tmp.egreso_detalle, egreso: tmp.egreso_detalle, articulo: tmp.articulo, cantidad: tmp.cantidad,\r\n      precio_unitario: tmp.precio_unitario, precio_total: tmp.precio_unitario, presentacion: tmp.presentacion\r\n    };\r\n    this.setPresentaciones(true);\r\n    this.txtArticuloSelected = this.articulos.filter(p => +p.articulo == this.detalleEgreso.articulo)[0];\r\n    //this.showDetalleIngresoForm = true;\r\n    //\r\n  }\r\n\r\n  editFromDetailMerma = (idarticulo: number) => {\r\n    var tmp = this.detallesMerma.filter(de => +de.articulo === +idarticulo)[0];\r\n    this.detalleMerma = {\r\n      egreso_detalle: tmp.egreso_detalle, egreso: tmp.egreso_detalle, articulo: tmp.articulo, cantidad: tmp.cantidad,\r\n      precio_unitario: tmp.precio_unitario, precio_total: tmp.precio_unitario, presentacion: tmp.presentacion, \r\n      cantidad_utilizada: tmp.cantidad_utilizada\r\n    };\r\n    this.setPresentacionesMerma();\r\n    this.txtArticuloSelectedM = this.articulos.filter(p => +p.articulo == this.detalleMerma.articulo)[0];\r\n    //this.showDetalleIngresoForm = true;\r\n    //\r\n  }\r\n\r\n  removeFromDetailMerma = (idarticulo: number) =>\r\n    this.detallesMerma.splice(this.detallesMerma.findIndex(de => +de.articulo === +idarticulo), 1)\r\n\r\n  removeFromDetail = (idarticulo: number) =>\r\n    this.detallesEgreso.splice(this.detallesEgreso.findIndex(de => +de.articulo === +idarticulo), 1)\r\n\r\n  getDescripcionArticulo = (idarticulo: number) => this.articulos.find(art => +art.articulo === +idarticulo).descripcion || '';\r\n\r\n  getDescripcionPresentacion = (idpresentacion: number) =>\r\n    (this.presentaciones.find(p => +p.presentacion === +idpresentacion).descripcion || '')\r\n\r\n  updateTableDataSource = () => {\r\n    this.dataSource = new MatTableDataSource(this.detallesEgreso);\r\n    this.dataSource.filterPredicate = (data: DetalleEgreso, filter: string) => {\r\n      return data.articulo.descripcion.toLowerCase().includes(filter);\r\n    };\r\n  }\r\n  updateTableDataSourceM = () => {\r\n    this.dataSourceM = new MatTableDataSource(this.detallesMerma);\r\n  }\r\n\r\n  filtrarArticulos = (value: (Articulo | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredArticulos =\r\n        this.articulos.filter(a => a.descripcion.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredArticulos = this.articulos;\r\n    }\r\n  }\r\n\r\n  setPresentaciones = (update: boolean = false) => {\r\n    this.fltrPresentaciones = [];\r\n    const idx = this.articulos.findIndex(p => +p.articulo === +this.detalleEgreso.articulo);\r\n    const articulo = this.articulos[idx];\r\n    this.fltrPresentaciones = this.presentaciones.filter(p => +p.medida.medida === +articulo.presentacion.medida);\r\n    if (!update) {\r\n      this.detalleEgreso.presentacion = null;\r\n    }\r\n  }\r\n\r\n  setPresentacionesMerma = () => {\r\n    this.fltrPresentacionesMerma = [];\r\n    const idx = this.articulos.findIndex(p => +p.articulo === +this.detalleMerma.articulo);\r\n    const articulo = this.articulos[idx];\r\n    this.fltrPresentacionesMerma = this.presentaciones.filter(p => +p.medida.medida === +articulo.presentacion.medida);\r\n  }\r\n\r\n  displayArticulo = (art: Articulo) => {\r\n    if (art) {\r\n      this.detalleEgreso.articulo = art.articulo;\r\n      return art.descripcion;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  displayArticuloMerma = (art: Articulo) => {\r\n    if (art) {\r\n      this.detalleMerma.articulo = art.articulo;\r\n      return art.descripcion;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  filtrarProveedores = (value: (Proveedor | string)) => {\r\n    if (value && (typeof value === 'string')) {\r\n      const filterValue = value.toLowerCase();\r\n      this.filteredProveedores =\r\n        this.proveedores.filter(a => a.razon_social.toLowerCase().includes(filterValue) || a.nit.toLowerCase().includes(filterValue));\r\n    } else {\r\n      this.filteredProveedores = this.proveedores;\r\n    }\r\n  }\r\n\r\n  displayProveedor = (p: Proveedor) => {\r\n    if (p) {\r\n      this.egreso.proveedor = p.proveedor;\r\n      return `(${p.nit}) ${p.razon_social}`;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  applyFilter = (filter: string) => {\r\n    this.dataSource.filter = filter;\r\n  }\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Egreso{{!!egreso.egreso ? (' No. ' + egreso.egreso) : ''}}\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showEgresoForm = true;\"\r\n                *ngIf=\"!showEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showEgresoForm = false;\"\r\n                *ngIf=\"showEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n            </button>\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmEgreso=\"ngForm\" *ngIf=\"showEgresoForm\" (ngSubmit)=\"frmEgreso.form.valid && onSubmit()\" novalidate>\r\n            <mat-form-field class=\"fullWidth\" *ngIf = \"saveToDB\">\r\n                <mat-label>Tipo de movimiento</mat-label>\r\n                <mat-select name=\"tipo_movimiento\" [(ngModel)]=\"egreso.tipo_movimiento\" required>\r\n                    <mat-option *ngFor=\"let tm of tiposMovimiento\" [value]=\"tm.tipo_movimiento\">\r\n                        {{tm.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput type=\"date\" placeholder=\"Fecha\" name=\"fecha\" [(ngModel)]=\"egreso.fecha\" required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Bodega</mat-label>\r\n                <mat-select name=\"bodega\" [(ngModel)]=\"egreso.bodega\" required>\r\n                    <mat-option *ngFor=\"let bode of bodegas\" [value]=\"bode.bodega\">\r\n                        {{bode.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-checkbox name=\"traslado\" class=\"fullWidth\" *ngIf=\"saveToDB\" [(ngModel)]=\"+egreso.traslado\">¿Es traslado entre bodegas de la misma sede?\r\n            </mat-checkbox>\r\n            <mat-form-field class=\"fullWidth\" *ngIf=\"+egreso.traslado == 1 && ([2, 3].indexOf(+egreso.estatus_movimiento) < 0)\">\r\n                <mat-label>Bodega destino</mat-label>\r\n                <mat-select name=\"bodega_destino\" [(ngModel)]=\"egreso.bodega_destino\"\r\n                    [required]=\"+egreso.traslado == 1\">\r\n                    <mat-option *ngFor=\"let bodeDest of bodegas\" [value]=\"bodeDest.bodega\">\r\n                        {{bodeDest.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\" *ngIf=\"+egreso.traslado == 1 && ([2, 3].indexOf(+egreso.estatus_movimiento) < 0)\">\r\n                <mat-label>Tipo de movimiento destino</mat-label>\r\n                <mat-select name=\"tipo_movimiento_destino\" [(ngModel)]=\"egreso.tipo_movimiento_destino\"\r\n                    [required]=\"+egreso.traslado == 1\">\r\n                    <mat-option *ngFor=\"let tmD of tiposMovimientoIngreso\" [value]=\"tmD.tipo_movimiento\">\r\n                        {{tmD.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <span *ngIf=\"!!egreso.idcomandafox\"><br/><strong>Comanda: #{{egreso.idcomandafox}}</strong></span>\r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\r\n                    [disabled]=\"!frmEgreso.form.valid || ([2, 3].indexOf(+egreso.estatus_movimiento) >= 0) || bloqueoBotones\"\r\n                    *ngIf=\"saveToDB\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"confirmarEgreso()\"\r\n                    *ngIf=\"egreso.egreso && detallesEgreso.length > 0\"\r\n                    [disabled]=\"!frmEgreso.form.valid || [2, 3].indexOf(+egreso.estatus_movimiento) >= 0\">\r\n                    Confirmar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetEgreso()\" *ngIf=\"egreso.egreso\">\r\n                    Nuevo\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n<hr *ngIf=\"egreso.egreso || !saveToDB\" />\r\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"egreso.egreso || !saveToDB\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Detalle del egreso {{saveToDB ? 'No.' : ''}} {{egreso.egreso}}\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleEgresoForm = true;\"\r\n                *ngIf=\"!showDetalleEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleEgresoForm = false;\"\r\n                *ngIf=\"showDetalleEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n            </button>\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmDetalleEgreso=\"ngForm\" *ngIf=\"showDetalleEgresoForm\"\r\n            (ngSubmit)=\"frmDetalleEgreso.form.valid && onSubmitDetail()\" novalidate>            \r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Artículo</mat-label>                    \r\n                <input type=\"text\" [(ngModel)]=\"txtArticuloSelected\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Artículo\" matInput [matAutocomplete]=\"autoArticulos\" (keyup)=\"filtrarArticulos(txtArticuloSelected)\" required>\r\n                <mat-autocomplete #autoArticulos=\"matAutocomplete\" [displayWith]=\"displayArticulo\" (optionSelected)=\"setPresentaciones()\">\r\n                    <mat-option *ngFor=\"let a of filteredArticulos\" [value]=\"a\">\r\n                        {{a.descripcion}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Presentación</mat-label>\r\n                <mat-select name=\"presentacion\" [(ngModel)]=\"detalleEgreso.presentacion\" required>\r\n                    <mat-option *ngFor=\"let p of fltrPresentaciones\" [value]=\"p.presentacion\">\r\n                        {{p.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput placeholder=\"Cantidad\" name=\"cantidad\" type=\"number\" step=\"0.01\" [(ngModel)]=\"detalleEgreso.cantidad\"\r\n                    (change)=\"detalleEgreso.precio_total = +detalleEgreso.precio_unitario * +detalleEgreso.cantidad\"\r\n                    required>\r\n            </mat-form-field>            \r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\r\n                    [disabled]=\"!frmDetalleEgreso.form.valid || [2, 3].indexOf(+egreso.estatus_movimiento) >= 0 || bloqueoBotones\"\r\n                    *ngIf=\"saveToDB\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"addToDetail()\"\r\n                    [disabled]=\"!egreso.bodega || !frmDetalleEgreso.form.valid || [2, 3].indexOf(+egreso.estatus_movimiento) >= 0\"\r\n                    *ngIf=\"!saveToDB\">\r\n                    Guardar\r\n                </button>\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetDetalleEgreso()\"\r\n                    *ngIf=\"detalleEgreso.egreso_detalle\">\r\n                    Nuevo\r\n                </button>\r\n            </div>\r\n        </form>\r\n        <hr *ngIf=\"detallesEgreso.length > 0\" />\r\n        \r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter($event.target.value)\" placeholder=\"Buscar\">\r\n                <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar\">\r\n            </mat-form-field>\r\n        \r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\"\r\n            *ngIf=\"detallesEgreso.length > 0\">\r\n            <ng-container matColumnDef=\"articulo\">\r\n                <th mat-header-cell *matHeaderCellDef>Artículo</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    {{saveToDB ? element.articulo.descripcion : getDescripcionArticulo(element.articulo)}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"presentacion\">\r\n                <th mat-header-cell *matHeaderCellDef>Presentación</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    {{saveToDB ? element.presentacion.descripcion : getDescripcionPresentacion(element.presentacion)}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"cantidad\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"precio_unitario\" >\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Costo Unitario</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.precio_unitario | number:'1.2-2'}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"precio_total\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Costo Total</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.precio_total | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"editItem\">\r\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\"\r\n                        (click)=\"getDetalleEgreso(element.egreso, element.egreso_detalle)\"\r\n                        [disabled]=\"[2, 3].indexOf(+egreso.estatus_movimiento) >= 0 || bloqueoBotones\" *ngIf=\"saveToDB\">\r\n                        Editar\r\n                    </button>\r\n                    <button mat-raised-button type=\"button\" color=\"accent\"\r\n                        (click)=\"editFromDetail(element.articulo)\"\r\n                        [disabled]=\"([2, 3].indexOf(+egreso.estatus_movimiento) >= 0) || bloqueoBotones\"\r\n                        *ngIf=\"!saveToDB\">\r\n                        Editar\r\n                    </button>\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"removeFromDetail(element.articulo)\"\r\n                        [disabled]=\"[2, 3].indexOf(+egreso.estatus_movimiento) >= 0 || bloqueoBotones\"\r\n                        *ngIf=\"!saveToDB\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n            </tr>\r\n        </table>\r\n    </mat-card-content>\r\n</mat-card>\r\n<hr *ngIf=\"egreso.egreso || !saveToDB\" />\r\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"!saveToDB\">\r\n    <mat-card-title>\r\n        <h4>\r\n            Merma {{saveToDB ? 'No.' : ''}} {{egreso.egreso}}\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleEgresoForm = true;\"\r\n                *ngIf=\"!showDetalleEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\r\n            </button>\r\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleEgresoForm = false;\"\r\n                *ngIf=\"showDetalleEgresoForm\">\r\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\r\n            </button>\r\n        </h4>\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n        <form #frmMerma=\"ngForm\" *ngIf=\"showDetalleEgresoForm\" (ngSubmit)=\"frmMerma.form.valid && onSubmitDetail()\"\r\n            novalidate>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <mat-label>Artículo</mat-label>                    \r\n                <input type=\"text\" [(ngModel)]=\"txtArticuloSelectedM\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Artículo\" matInput [matAutocomplete]=\"autoArticulos\" (keyup)=\"filtrarArticulos(txtArticuloSelectedM)\" required>\r\n                <mat-autocomplete #autoArticulos=\"matAutocomplete\" [displayWith]=\"displayArticuloMerma\" (optionSelected)=\"setPresentacionesMerma()\">\r\n                    <mat-option *ngFor=\"let a of filteredArticulos\" [value]=\"a\">\r\n                        {{a.descripcion}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input type=\"number\" step=\"0.01\" matInput placeholder=\"Cantidad a Utilizar\" name=\"cantidad_utilizar\" [(ngModel)]=\"detalleMerma.cantidad_utilizada\"\r\n                    required>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"fullWidth\">\r\n                <input matInput placeholder=\"Cantidad\" name=\"cantidad\" type=\"number\" step=\"0.01\" [(ngModel)]=\"detalleMerma.cantidad\"\r\n                    required>\r\n            </mat-form-field>            \r\n            \r\n            <div align=\"end\">\r\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"addToDetailMerma()\"\r\n                    [disabled]=\"!detalleMerma.articulo || !frmMerma.form.valid || [2, 3].indexOf(+egreso.estatus_movimiento) >= 0\"\r\n                    *ngIf=\"!saveToDB\">\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </form>\r\n        <hr *ngIf=\"detallesMerma.length > 0\" />\r\n        <table mat-table [dataSource]=\"dataSourceM\" class=\"mat-elevation-z4 full-width\" *ngIf=\"detallesMerma.length > 0\">\r\n            <ng-container matColumnDef=\"articulo\">\r\n                <th mat-header-cell *matHeaderCellDef>Artículo</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    {{saveToDB ? element.articulo.descripcion : getDescripcionArticulo(element.articulo)}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"presentacion\">\r\n                <th mat-header-cell *matHeaderCellDef>Presentación</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    {{saveToDB ? element.presentacion.descripcion : getDescripcionPresentacion(element.presentacion)}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"cantidad_utilizada\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad a Utilizar</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad_utilizada | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"cantidad\">\r\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"editItem\">\r\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\r\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\"\r\n                        (click)=\"getDetalleEgreso(element.egreso, element.egreso_detalle)\"\r\n                        [disabled]=\"[2, 3].indexOf(+egreso.estatus_movimiento) >= 0 || bloqueoBotones\" *ngIf=\"saveToDB\">\r\n                        Editar\r\n                    </button>\r\n                    <button mat-raised-button type=\"button\" color=\"accent\"\r\n                        (click)=\"editFromDetailMerma(element.articulo)\"\r\n                        [disabled]=\"([2, 3].indexOf(+egreso.estatus_movimiento) >= 0) || bloqueoBotones\"\r\n                        *ngIf=\"!saveToDB\">\r\n                        Editar\r\n                    </button>\r\n                    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"removeFromDetailMerma(element.articulo)\"\r\n                        [disabled]=\"[2, 3].indexOf(+egreso.estatus_movimiento) >= 0 || bloqueoBotones\"\r\n                        *ngIf=\"!saveToDB\">\r\n                        Eliminar\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumnsM\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumnsM;\">\r\n            </tr>\r\n        </table>\r\n    </mat-card-content>\r\n</mat-card>"]}