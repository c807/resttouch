{"version":3,"sources":["./src/app/restaurante/services/tipo-turno.service.ts","./src/app/restaurante/services/autoconsulta.service.ts","./src/app/restaurante/components/propina/lista-propina/lista-propina.component.ts","./src/app/restaurante/components/propina/lista-propina/lista-propina.component.html","./src/app/restaurante/components/reportes/factura/factura.component.ts","./src/app/restaurante/components/reportes/factura/factura.component.html","./src/app/restaurante/components/caja-corte/cajacorte-lista/cajacorte-lista.component.ts","./src/app/restaurante/components/caja-corte/cajacorte-lista/cajacorte-lista.component.html","./src/app/restaurante/components/turno/turno/turno.component.ts","./src/app/restaurante/components/turno/turno/turno.component.html","./src/app/restaurante/components/abrir-mesa/abrir-mesa.component.ts","./src/app/restaurante/components/abrir-mesa/abrir-mesa.component.html","./src/app/admin/services/usuario-tipo.service.ts","./src/app/restaurante/components/lista-productos-comanda/lista-productos-comanda.component.ts","./src/app/restaurante/components/lista-productos-comanda/lista-productos-comanda.component.html","./src/app/restaurante/components/propina/propina/propina.component.ts","./src/app/restaurante/components/propina/propina/propina.component.html","./src/app/restaurante/components/area/area-designer/area-designer.component.ts","./src/app/restaurante/components/area/area-designer/area-designer.component.html","./src/app/restaurante/services/area.service.ts","./src/app/restaurante/components/area/form-area/form-area.component.ts","./src/app/restaurante/components/area/form-area/form-area.component.html","./src/app/restaurante/components/turno/selecciona-turno-previo/selecciona-turno-previo.component.ts","./src/app/restaurante/components/turno/selecciona-turno-previo/selecciona-turno-previo.component.html","./src/app/restaurante/components/reportes/rpt-ventas/por-articulo/por-articulo.component.html","./src/app/restaurante/components/reportes/rpt-ventas/por-articulo/por-articulo.component.ts","./src/app/restaurante/components/notas-generales-comanda/notas-generales-comanda.component.ts","./src/app/restaurante/components/notas-generales-comanda/notas-generales-comanda.component.html","./src/app/restaurante/components/traslado-mesa/traslado-mesa.component.ts","./src/app/restaurante/components/traslado-mesa/traslado-mesa.component.html","./src/app/restaurante/services/reporte-ventas.service.ts","./src/app/restaurante/services/cajacorte.service.ts","./src/app/restaurante/components/propina/form-propina/form-propina.component.ts","./src/app/restaurante/components/propina/form-propina/form-propina.component.html","./src/app/restaurante/components/distribuir-productos-cuentas/distribuir-productos-cuentas.component.ts","./src/app/restaurante/components/distribuir-productos-cuentas/distribuir-productos-cuentas.component.html","./src/app/restaurante/components/tran-comanda-alt/tran-comanda-alt.component.ts","./src/app/restaurante/components/tran-comanda-alt/tran-comanda-alt.component.html","./src/app/restaurante/components/turno-tipo/lista-turno/lista-turno.component.ts","./src/app/restaurante/components/turno-tipo/lista-turno/lista-turno.component.html","./src/app/restaurante/components/mesa/mesa.component.ts","./src/app/restaurante/components/mesa/mesa.component.html","./src/app/restaurante/components/pide-datos-cuentas/pide-datos-cuentas.component.ts","./src/app/restaurante/components/pide-datos-cuentas/pide-datos-cuentas.component.html","./src/app/restaurante/components/area/configura-mesa/configura-mesa.component.ts","./src/app/restaurante/components/area/configura-mesa/configura-mesa.component.html","./src/app/restaurante/components/reportes/caja/caja.component.ts","./src/app/restaurante/components/reportes/caja/caja.component.html","./src/app/restaurante/components/reportes/autoconsulta/autoconsulta.component.ts","./src/app/restaurante/components/reportes/autoconsulta/autoconsulta.component.html","./src/app/restaurante/components/turno-tipo/form-turno/form-turno.component.ts","./src/app/restaurante/components/turno-tipo/form-turno/form-turno.component.html","./src/app/restaurante/components/reportes/rpt-ventas/rpt-ventas.component.ts","./src/app/restaurante/components/reportes/rpt-ventas/rpt-ventas.component.html","./src/app/restaurante/components/acciones-comanda/acciones-comanda.component.ts","./src/app/restaurante/components/acciones-comanda/acciones-comanda.component.html","./src/app/restaurante/components/area/lista-area/lista-area.component.ts","./src/app/restaurante/components/area/lista-area/lista-area.component.html","./src/app/restaurante/components/reportes/propinas/propinas.component.ts","./src/app/restaurante/components/reportes/propinas/propinas.component.html","./src/app/restaurante/services/propina.service.ts","./src/app/restaurante/services/mesa.service.ts","./src/app/restaurante/components/tran-areas/tran-areas.component.ts","./src/app/restaurante/components/tran-areas/tran-areas.component.html","./src/app/restaurante/restaurante-routing.module.ts","./src/app/restaurante/components/caja-corte/cajacorte/cajacorte.component.ts","./src/app/restaurante/components/caja-corte/cajacorte/cajacorte.component.html","./src/app/restaurante/components/nueva-cuenta/nueva-cuenta.component.ts","./src/app/restaurante/components/nueva-cuenta/nueva-cuenta.component.html","./src/app/restaurante/components/unir-cuenta/unir-cuenta.component.ts","./src/app/restaurante/components/unir-cuenta/unir-cuenta.component.html","./src/app/restaurante/services/turno.service.ts","./src/app/restaurante/restaurante.module.ts","./src/app/restaurante/components/turno-tipo/turno/turno.component.ts","./src/app/restaurante/components/turno-tipo/turno/turno.component.html","./src/app/restaurante/components/tran-comanda/tran-comanda.component.ts","./src/app/restaurante/components/tran-comanda/tran-comanda.component.html","./node_modules/ngx-barcodeput/__ivy_ngcc__/fesm2015/ngx-barcodeput.js","./src/app/restaurante/components/reportes/rpt-ventas/por-categoria/por-categoria.component.html","./src/app/restaurante/components/reportes/rpt-ventas/por-categoria/por-categoria.component.ts","./src/app/restaurante/components/caja-corte/cajacorte-form/cajacorte-form.component.ts","./src/app/restaurante/components/caja-corte/cajacorte-form/cajacorte-form.component.html","./src/app/restaurante/components/comanda-en-linea/comanda-en-linea.component.ts","./src/app/restaurante/components/comanda-en-linea/comanda-en-linea.component.html","./src/app/restaurante/components/reportes/turnos/turnos.component.ts","./src/app/restaurante/components/reportes/turnos/turnos.component.html","./src/app/restaurante/components/turno/lista-turno/lista-turno.component.ts","./src/app/restaurante/components/turno/lista-turno/lista-turno.component.html","./src/app/restaurante/classes/tran-comanda.ts","./src/app/restaurante/components/turno/form-turno/form-turno.component.ts","./src/app/restaurante/components/turno/form-turno/form-turno.component.html","./src/app/restaurante/components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component.ts","./src/app/restaurante/components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component.html","./src/app/restaurante/components/tran-cocina/tran-cocina.component.ts","./src/app/restaurante/components/tran-cocina/tran-cocina.component.html","./src/app/restaurante/components/area/area/area.component.ts","./src/app/restaurante/components/area/area/area.component.html"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAId;AAC1B;;;AAKlB,MAAM,gBAAgB;IAI3B,mCAAmC;IAEnC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJlB,cAAS,GAAG,OAAO,CAAC;QAO1B,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;QAC7C,kGAAkG;IACpG,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,mBAAmB,4CAAY,CAAC,IAAI,CAAC,EAAE;QACpF,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,CAAC,OAAkB;QACrB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,sBAAsB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EACzH,OAAO;QACP,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;gFArCU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAClB;AACoB;AAId;AAC1B;;;AAMlB,MAAM,mBAAmB;IAE9B,mCAAmC;IAEnC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGxB,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;QAC7C,kGAAkG;IACpG,CAAC;IAED,SAAS,CAAC,OAAY,EAAE;QACtB;;;;YAII;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,YAAY,eAAe,4CAAY,CAAC,IAAI,CAAC,EAAE;QACzD,cAAc;SACf,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU,CAAC,OAAY,EAAE;QACvB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,kCAAkC;gBAClC,MAAM,EAAE,0BAA0B;aACnC,CAAC;YACF,YAAY,EAAE,MAAgB;SAC/B,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,uBAAuB,EAClD,IAAI,EACJ,WAAW,CACZ,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;sFArCU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAHlB,MAAM;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACxB;AACE;;;;;;;;;;;;;;ICM7C,wEACI;IADmC,iWAA6B;IAChE,2EACI;IAAA,gFACI;IAAA,8EAAwB;IAAA,sEAAW;IAAA,4DAAW;IAC9C,wEAAa;IAAA,uDAAuB;IAAA,4DAAK;IACzC,0EAAe;IAAA,uDAAoC;IAAA,4DAAO;IAC1D,6EACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACxC,4DAAS;IACb,4DAAgB;IACpB,4DAAW;IACf,4DAAK;;;IAPoB,0DAAuB;IAAvB,gGAAuB;IACrB,0DAAoC;IAApC,oGAAoC;;;IASnE,oEAAkE;;;ADVvE,MAAM,qBAAqB;IAQhC,YAAoB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;QANxC,qBAAgB,GAAa,CAAC,SAAS,CAAC,CAAC;QAGtC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAa5C,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;wBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;qBAC5C;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,GAAY,EAAE,EAAE;YAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9B,CAAC;IAxBkD,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;;0FAhBU,qBAAqB;qGAArB,qBAAqB;kEAMrB,wEAAY;;;;;QClBzB,8EACI;QAAA,mFACI;QAAA,iFACI;QAAA,2EACJ;QADoB,kJAAS,oCAAgC,IAAC;QAA1D,4DACJ;QAAA,4DAAiB;QACjB,2EACI;QAAA,2EACI;QACA,gHAWK;QACT,qEAAe;QAEf,+GAAkE;QACtE,4DAAQ;QACR,8EAAoF;QACxF,4DAAmB;QACvB,4DAAW;;QArBc,0DAAyB;QAAzB,sFAAyB;QAiBL,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;ACrBtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AAEe;AAClB;;;;;;;;;;;;;ICkBzB,0EAA8C;;ADX/C,MAAM,gBAAgB;IAQ3B,YACU,QAAqB,EACrB,WAA8B;QAD9B,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAmB;QATjC,WAAM,GAAQ,EAAE,CAAC;QACjB,WAAM,GAAG,UAAU,CAAC;QACpB,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAyB;YAC3C,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK;SAC9F,CAAC;QAWF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG;gBACZ,IAAI,EAAE,mCAAM,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;gBAC3D,GAAG,EAAE,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;aAC1C,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QA8BD,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3E,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/E,CAAC;IA7CG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAUD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;gBAC1D,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gFAnDU,gBAAgB;gGAAhB,gBAAgB;QCb7B,yEACE;QAAA,yEACE;QAAA,8EACE;QAAA,iFACE;QAAA,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC9B,4DAAiB;QACjB,mFACE;QAAA,6EACE;QAAA,oFACE;QAAA,4EACF;QAD4D,0LAAyB,kFAAW,cAAU,IAArB;QAAnF,4DACF;QAAA,4DAAiB;QACjB,qFACE;QAAA,4EACF;QAD0D,yLAAwB,kFAAW,cAAU,IAArB;QAAhF,4DACF;QAAA,4DAAiB;QACjB,0EACE;QAAA,0EACE;QAAA,mFAA8E;QAA/B,wMAA8B;QAAC,2EAAe;QAAA,4DAAe;QAC9G,4DAAM;QACN,0EACE;QAAA,oFAAgF;QAAhC,yMAA+B;QAAC,4FAA2B;QAAA,4DAAe;QAC5H,4DAAM;QACR,4DAAM;QACN,uFAA0I;QAAzF,4JAAgB,gBAAY,IAAC,gGAAa,cAAU,IAAvB,gHAA6C,iBAAa,IAA1D;QAA4D,4DAAkB;QAC9J,4DAAO;QACP,iIAA8C;QAChD,4DAAmB;QACrB,4DAAW;QACb,4DAAM;QACR,4DAAM;;QAnBgE,2DAAyB;QAAzB,oFAAyB;QAG3B,0DAAwB;QAAxB,mFAAwB;QAI/B,0DAA8B;QAA9B,yFAA8B;QAG7B,0DAA+B;QAA/B,0FAA+B;QAGlE,0DAA+B;QAA/B,4FAA+B;QAEnC,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACxBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACxB;AACE;;;;;;;;;;;;;;;ICKjD,wEACI;IAAA,2EACI;IAAA,gFACI;IAAA,8EAAwE;IAA5C,yWAA6B;IAAe,gEAAK;IAAA,4DAAW;IACxF,wEAAa;IAAA,uDAAyB;IAAA,4DAAK;IAC3C,0EAAe;IAAA,uDAAsB;IAAA,4DAAO;IAC5C,0EAAe;IAAA,wDAA0B;IAAA,4DAAO;IAChD,8EACI;IADiD,0WAA+B;IAChF,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACxC,4DAAS;IACb,4DAAgB;IACpB,4DAAW;IACf,4DAAK;;;IARoB,0DAAyB;IAAzB,uFAAyB;IACvB,0DAAsB;IAAtB,oFAAsB;IACtB,0DAA0B;IAA1B,iGAA0B;;;IAQzD,oEAAkE;;;ADRnE,MAAM,uBAAuB;IAQlC,YACU,UAA4B,EAC5B,SAAsB;QADtB,eAAU,GAAV,UAAU,CAAkB;QAC5B,cAAS,GAAT,SAAS,CAAa;QARzB,qBAAgB,GAAa,CAAC,WAAW,CAAC,CAAC;QAGxC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAgB9C,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,GAAc,EAAE,EAAE;YAC9B,IAAI,OAAO,CAAC,6DAA6D,CAAC,EAAE;gBAC1E,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAC/C,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,cAAc,EAAE,CAAC;qBACvB;oBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAED,iBAAY,GAAG,CAAC,GAAc,EAAE,EAAE;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC;IA/BI,CAAC;IAEN,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,OAAO,CAAE,MAAc;QACrB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC;IAAA,CAAC;;8FAnBS,uBAAuB;uGAAvB,uBAAuB;kEAMvB,wEAAY;;;;;QCnBzB,8EACE;QAAA,mFACE;QAAA,iFACC;QAAA,2EACJ;QADoB,oJAAS,gCAA4B,IAAC;QAAtD,4DACJ;QAAA,4DAAiB;QACjB,2EACO;QAAA,2EACI;QAAA,kHAYK;QACT,qEAAe;QACf,iHAAkE;QACtE,4DAAQ;QACR,8EAAoF;QACtF,4DAAmB;QACrB,4DAAW;;QApBO,0DAAyB;QAAzB,sFAAyB;QAgBF,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAA+B;QAA/B,kJAA+B;;;;;;;;;;;;;;ACtBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAAwF;AACrC;AAClB;;;;;;AAW1B,MAAM,cAAc;IAMzB;QAWA,aAAQ,GAAG,CAAC,GAAU,EAAE,EAAE;YACxB,oBAAoB;YACpB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,EAAE;QAC7B,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QAjB3D,IAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI;SAC3F,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;;4EAfU,cAAc;8FAAd,cAAc;;;;;;;;QCd3B,yEACI;QAAA,yEACI;QAAA,wFAA2D;QAAhC,+JAAc,oBAAgB,IAAC;QAAC,4DAAkB;QACjF,4DAAM;QACN,yEACI;QAAA,uFAA8E;QAApC,4JAAgB,sBAAkB,IAAC;QAAC,4DAAiB;QACnG,4DAAM;QACV,4DAAM;;QAF4B,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;ACJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AACW;AAO/C;;;;;;;;;;;;;;;ICHhC,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8B,yFAA6B;IACpE,0DACJ;IADI,iIACJ;;;;IAIJ,4EACA;IADyH,2VAA6B;IAAtJ,4DACA;;;IADoC,8FAA8B;;;;IAClE,4EACJ;IAD6F,2VAA6B;IAAtH,4DACJ;;;IAD6F,2FAA6B;;ADG3H,MAAM,kBAAkB;IAM7B,YACS,SAA2C,EAClB,IAAa,EACtC,kBAA6B,EAC7B,WAA2B,EAC1B,EAAuB;QAJxB,cAAS,GAAT,SAAS,CAAkC;QAClB,SAAI,GAAJ,IAAI,CAAS;QACtC,uBAAkB,GAAlB,kBAAkB,CAAW;QAC7B,gBAAW,GAAX,WAAW,CAAgB;QAC1B,OAAE,GAAF,EAAE,CAAqB;QAT1B,eAAU,GAAc,EAAE,CAAC;QAC3B,YAAO,GAAG,KAAK,CAAC;QAiBvB,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjD,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QA6BD,aAAQ,GAAG,CAAC,KAAU,EAAU,EAAE,CAAC,CAAC,KAAK,CAAC;IA3CtC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;QAChE,IAAI,CAAC,cAAc,GAAG,qDAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAUD,mBAAmB,CAAC,GAAY;QAE9B,MAAM,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,0GAAyB,EAAE;YAClF,KAAK,EAAE,KAAK;YACZ,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;SACjE,CAAC,CAAC;QAEH,mBAAmB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAC/D,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,QAAQ,CAAC,MAAe,IAAI;QAC1B,IAAI,CAAC,GAAG,EAAE;YACR,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,uBAAuB,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;aAC/B;SACF;IACH,CAAC;;oFArDU,kBAAkB,0MAQnB,wEAAe;kGARd,kBAAkB;;QChB/B,wEAAqB;QAAA,qEAAU;QAAA,4DAAK;QACpC,qFACI;QAAA,6EACI;QADyB,4SAAoC;QAC7D,oFACI;QAAA,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC7B,gFACI;QADsB,gMAAyB;QAC/C,4HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,oHACA;QAAA,oHACJ;QAAA,4DAAiB;QACjB,mFAAmF;QAA7B,wMAA4B;QAAC,4EAAW;QAAA,4DAAe;QAC7G,mFACuC;QAD8B,uNAA2C;QACzE,kFAAiB;QAAA,4DAAe;QAC3E,4DAAO;QACX,4DAAqB;QACrB,0FACI;QAAA,8EACI;QADsB,2IAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,8EACI;QADsB,2IAAS,sBAAc,IAAC;QAC9C,wEACJ;QAAA,4DAAS;QACb,4DAAqB;;;QAtBiB,0DAAyB;QAAzB,oFAAyB;QACnB,0DAAa;QAAb,mFAAa;QAMzB,0DAAc;QAAd,8EAAc;QACd,0DAAa;QAAb,6EAAa;QAEiB,0DAA4B;QAA5B,uFAA4B;QACb,0DAA2C;QAA3C,sGAA2C;QAQjE,0DAAqC;QAArC,qFAAqC;;;;;;;;;;;;;;ACtB5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAId;AAC1B;;;AAKlB,MAAM,kBAAkB;IAG7B,uCAAuC;IACvC,mCAAmC;IAEnC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAGxB,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;QAC7C,kGAAkG;IACpG,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,YAAY,qBAAqB,4CAAY,CAAC,IAAI,CAAC,EAAE;QAC/D,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;oFAxBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyG;AAGzD;AAGgE;AAO2C;;;;;;;;;;;;;;;;;;;ICZvJ,gFACI;IAAA,yEACI;IAAA,0EACI;IAAA,uDACJ;;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAgB;;;IAHJ,0DACJ;IADI,4RACJ;;;IAQY,uEAAgC;IAAA,uDAAc;IAAA,4DAAO;;;IAArB,0DAAc;IAAd,8EAAc;;;IAG9C,yEACI;IAAA,2EAAwB;IAAA,uDAAO;IAAA,4DAAO;IAC1C,4DAAM;;;IADsB,0DAAO;IAAP,wEAAO;;;IAFvC,wEACI;IAAA,gKAEM;IACV,qEAAe;;;IAHkB,0DAAY;IAAZ,iFAAY;;;;IAkBrC,6EACI;IADiB,+gBAA8B;IAC/C,+EAA8C;IAAA,wEAAa;IAAA,4DAAW;IAC1E,4DAAS;;;IAFwD,4FAA2B;;;;IAVpG,yFACI;IAAA,6FACI;IAAA,6EACI;IAAA,+EAA8C;IAAA,8EAAmB;IAAA,4DAAW;IAChF,4DAAS;IACb,4DAA6B;IAC7B,6FACI;IAAA,6EACI;IADiB,8gBAAsC;IACvD,+EAA8C;IAAA,yEAAc;IAAA,4DAAW;IAC3E,4DAAS;IACT,6KAES;IACT,8EACI;IADiB,kdAAiC;IAClD,gFAA8C;IAAA,iEAAK;IAAA,4DAAW;IAClE,4DAAS;IACb,4DAA6B;IACjC,4DAAqB;;;;IAV4D,0DAA2B;IAA3B,2FAA2B;IAGN,0DAA2B;IAA3B,0FAA2B;IAGnD,0DAA2B;IAA3B,2FAA2B;;;;IAKzG,yFACI;IAAA,6FACI;IAAA,6EACI;IAAA,+EAA8C;IAAA,8EAAmB;IAAA,4DAAW;IAChF,4DAAS;IACb,4DAA6B;IAC7B,6FACI;IAAA,6EACI;IADiB,0hBAAkD;IACnE,+EAA8C;IAAA,yEAAc;IAAA,4DAAW;IAC3E,4DAAS;IACb,4DAA6B;IACjC,4DAAqB;;;IAJwE,0DAA2B;IAA3B,2FAA2B;;;IAxCpI,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,0EACI;IAAA,kJAAqD;IAAA,uDACzD;IAAA,4DAAO;IACP,kKAIe;IACnB,4DAAM;IACN,0EACI;IACA,uEAAM;IAAA,uDAAiE;;IAAA,4DAAO;IAAA,mEAC9E;IAAA,kLAiBqB;IACrB,iLAWqB;IACzB,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3CiB,0DAAuB;IAAvB,sFAAuB;IAAuB,0DACzD;IADyD,4FACzD;IACe,0DAAoB;IAApB,mFAAoB;IAQ7B,0DAAiE;IAAjE,0LAAiE;IACjC,0DAAsB;IAAtB,qFAAsB;IAkBtB,0DAAsB;IAAtB,qFAAsB;;;;IAiBhE,4EACA;IADgG,2YAAqB;IAArH,4DACA;;;;IADiC,+FAA8B;;;;IAC/D,4EACJ;IADoE,2YAAqB;IAArF,4DACJ;;;IADoE,+EAAqB;;;IAFzF,oFACI;IAAA,sKACA;IAAA,sKACJ;IAAA,4DAAiB;;;IAFI,0DAAc;IAAd,kFAAc;IACd,0DAAa;IAAb,iFAAa;;;IAHtC,yEACI;IAAA,uKAGiB;IACrB,4DAAM;;;IAJiC,0DAAsB;IAAtB,qFAAsB;;;;IAlDjE,mFACI;IAAA,2IA+CM;IACN,0IAKM;IACV,4DAAgB;;;IAvDgD,+JAA2C;IACvE,0DAAqB;IAArB,oFAAqB;IAgDrB,0DAAqB;IAArB,oFAAqB;;ADpCtD,MAAM,8BAA8B;IAgBzC,YACU,QAAqB,EACrB,EAAuB,EACvB,WAA2B,EAC3B,MAAc,EACf,MAAiB;QAJhB,aAAQ,GAAR,QAAQ,CAAa;QACrB,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAW;QAnBjB,mBAAc,GAAuB,EAAE,CAAC;QACxC,aAAQ,GAAW,IAAI,CAAC;QACxB,eAAU,GAAG,OAAO,CAAC;QACrB,cAAS,GAAG,CAAC,CAAC;QACd,aAAQ,GAAG,CAAC,CAAC;QACb,mBAAc,GAAG,KAAK,CAAC;QACvB,cAAS,GAAQ,EAAE,CAAC;QACnB,sBAAiB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC1C,YAAO,GAAG,KAAK,CAAC;QAChB,mBAAc,GAAG,qDAAM,CAAC,cAAc,CAAC;QAEvC,qBAAgB,GAAG,IAAI,CAAC;QACxB,wBAAmB,GAAG,CAAC,CAAC;QAoB/B,mBAAc,GAAG,CAAC,CAAmB,EAAE,GAAW,EAAE,cAAc,GAAG,KAAK,EAAE,QAAiB,EAAE,EAAE;YAC/F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG;gBACpB,cAAc,EAAE,CAAC,CAAC,cAAc;gBAChC,eAAe,EAAE,CAAC,CAAC,eAAe;gBAClC,QAAQ,EAAE,CAAC,CAAC,EAAE;gBACd,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM;gBACjB,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,UAAU,EAAE,cAAc;aAC3B,CAAC;YAEF,IAAI,QAAQ,EAAC;gBACX,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACxC,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;aACpE;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC/F,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBAC1C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;oBAC3F,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;wBACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;wBAClE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;qBAC1E;iBACF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC5E;gBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;QAED,2BAAsB,GAAG,CAAC,CAAmB,EAAE,GAAW,EAAE,cAAc,GAAG,KAAK,EAAE,EAAE;YACpF,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACb,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;QAC9C,CAAC;QAED,uCAAkC,GAAG,CAAC,CAAmB,EAAE,GAAW,EAAE,EAAE;YACxE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2HAA8B,EAAE;gBAClE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI;aACjC,CAAC,CAAC;YAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,oBAAoB;gBACpB,IAAI,GAAG,EAAE;oBACP,yBAAyB;oBACzB,4CAA4C;oBAC5C,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kJAA8B,EAAE;wBACpE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,wIAAoB,CAAC,CAAC,CAAC;qBACpE,CAAC,CAAC;oBAEH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACzC,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,EAAC;4BACvB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;4BACnE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wCAAwC,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBAC7F;oBACH,CAAC,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnF;gBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;QAaD,sBAAiB,GAAG,CAAC,CAAmB,EAAE,EAAE;YAC1C,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,eAAe,EAAE,CAAC,CAAC,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACzG,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0CAA0C,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAChG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAMD,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACnC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC;gBACnE,IAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,QAAQ,CAAC;aACxC;QACH,CAAC;IA7GG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;IAClE,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YACzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAqED,oBAAoB,CAAC,CAAmB;QACtC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC;QACrC,IAAI,CAAC,CAAC,cAAc,EAAE;YACpB,CAAC,CAAC,cAAc,GAAG,OAAO,CAAC;SAC5B;aAAM;YACL,CAAC,CAAC,cAAc,GAAG,MAAM,CAAC;YAC1B,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SAC3B;IACH,CAAC;IAUD,QAAQ,CAAC,EAAU;QACjB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC;;4GA1HU,8BAA8B;8GAA9B,8BAA8B;QCrB3C,8EACI;QAAA,8IAMgB;QAChB,8IAuDgB;QACpB,4DAAW;;QAhEiB,mFAA2B;QACnC,0DAA+B;QAA/B,+FAA+B;QAOlB,0DAAmB;QAAnB,uFAAmB;;;;;;;;;;;;;;;;;;;;;;;ACE7C,MAAM,gBAAgB;IAG3B;QASA,eAAU,GAAG,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG;YACzC,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY;YAC5C,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB;QAED,uBAAkB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;QAjBjE,IAAI,CAAC,OAAO,GAAG;YACb,oBAAoB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI;SAC1G,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;;gFAVU,gBAAgB;gGAAhB,gBAAgB;;;;;;QCV7B,yEACI;QAAA,yEACI;QAAA,0FAAmE;QAApC,uKAAgB,sBAAkB,IAAC;QAAC,4DAAoB;QAC3F,4DAAM;QACN,yEACI;QAAA,yFAA0F;QAAxC,oKAAkB,wBAAoB,IAAC;QAAC,4DAAmB;QACjH,4DAAM;QACV,4DAAM;;QAFgC,0DAAmB;QAAnB,gFAAmB;;;;;;;;;;;;;;ACJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAE5B;AAC4B;AAC+C;;;;;;;;;;;;;ICe3H,+EACA;IADsD,+WAAgD;IACtG,4DAAW;;;;IADuB,+EAAmB;;;;IASjD,6EACI;IADkB,8aAA8B;IAChD,8EAA8B;IAAA,mEAAQ;IAAA,4DAAW;IAAA,yEACrD;IAAA,4DAAS;;;;IACT,6EACI;IADkB,4aAA4B;IAC9C,8EAA8B;IAAA,qEAAU;IAAA,4DAAW;IAAA,uEACvD;IAAA,4DAAS;;;IAFuF,4FAAgC;;;;IAGhI,6EACI;IADkB,yaAA4B,CAAC,KAAE;IACjD,8EAA8B;IAAA,mEAAQ;IAAA,4DAAW;IAAA,qEACrD;IAAA,4DAAS;;;IAF4F,4FAAgC;;;IARrI,2EAA2D;IAAA,uDAAqC;IAAA,4DAAO;IACvG,yEAA2B;IAC3B,uIAES;IACT,uIAES;IACT,uIAES;;;IAVkD,0DAAqC;IAArC,mHAAqC;IAE1C,0DAAwB;IAAxB,uFAAwB;IAG1B,0DAAwB;IAAxB,uFAAwB;IAGrB,0DAAwB;IAAxB,uFAAwB;;ADxB3F,mFAAmF;AAO5E,MAAM,qBAAqB;IAShC,YACU,QAAqB,EACrB,QAAqB,EACtB,SAA8C,EAC9C,MAAiB;IACxB,0CAA0C;IACV,IAAS;QALjC,aAAQ,GAAR,QAAQ,CAAa;QACrB,aAAQ,GAAR,QAAQ,CAAa;QACtB,cAAS,GAAT,SAAS,CAAqC;QAC9C,WAAM,GAAN,MAAM,CAAW;QAEQ,SAAI,GAAJ,IAAI,CAAK;QAXpC,UAAK,GAAW,EAAE,CAAC;QACnB,wBAAmB,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QACpD,uCAAuC;QAChC,aAAQ,GAAG,KAAK,CAAC;QAkBxB,2FAA2F;QAE3F,uBAAkB,GAAG,GAAG,EAAE,CACxB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACrB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9H,CAAC;QAEL,aAAQ,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,WAAW,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,EAAE,EAAE;YAC7E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,IAAI,CAAC,kBAAkB,EAAE;gBACjC,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,CAAC;gBACP,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC;gBACV,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,CAAC;gBACP,WAAW;gBACX,QAAQ;gBACR,YAAY;aACb,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,iBAAY,GAAG,CAAC,UAAU,GAAG,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhI,kBAAa,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAErD,gBAAW,GAAG,CAAC,IAAU,EAAE,GAAW,EAAE,EAAE;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;wBACd,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;qBAC5B;iBACF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzE;gBACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAW,GAAG,CAAC,GAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;QAEhC,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAWlD,mBAAc,GAAG,CAAC,IAAU,EAAE,EAAE;YAC9B,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAsB,EAAE;gBAC7D,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;aACrB,CAAC,CAAC;YAEH,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAE5C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAY,GAAG,CAAC,IAAU,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE;YACxC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;gBAC5D,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,IAAI,6GAAkB,CAC1B,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,EAC9C,qBACA,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,WAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,KAAK,IAAI,CAAC,MAAM,GAAG,EAC3E,IAAI,EAAE,IAAI,CACX;aACF,CAAC,CAAC;YAEH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAa,EAAE,EAAE;gBACrD,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACvC,IAAI,GAAG,CAAC,KAAK,EAAE;4BACb,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;gCACd,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gCAClE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE;oCACZ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;iCAC5B;gCACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAC7D;yBACF;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACzE;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IA1GG,CAAC;IAEL,QAAQ;QACN,0BAA0B;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,2BAA2B;QAC3B,yBAAyB;IAC3B,CAAC;IAiDD,aAAa,CAAC,KAAiB,EAAE,IAAU;QACzC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;;0FA/EU,qBAAqB,8lBAetB,wEAAe;qGAfd,qBAAqB;kEAErB,qEAAc;;;;;QCpB3B,yEACI;QAAA,yEACI;QAAA,4EACI;QADqE,6IAAS,cAAU,IAAC;QACzF,8EAA8B;QAAA,8DAAG;QAAA,4DAAW;QAAA,sEAChD;QAAA,4DAAS;QACT,4EACI;QADqE,6IAAS,kBAAc,IAAC;QAC7F,8EAA8B;QAAA,8DAAG;QAAA,4DAAW;QAAA,2EAChD;QAAA,4DAAS;QACT,6EACI;QADqE,8IAAS,iBAAa,IAAI,CAAC,IAAC;QACjG,+EAA8B;QAAA,+DAAG;QAAA,4DAAW;QAAA,qFAChD;QAAA,4DAAS;QACT,6EACI;QADqE,8IAAS,mBAAe,IAAC;QAC9F,+EAA8B;QAAA,+DAAG;QAAA,4DAAW;QAAA,8EAChD;QAAA,4DAAS;QACT,6EACI;QADmD,8IAAS,cAAU,IAAC;QACvE,sEACJ;QAAA,4DAAS;QACb,4DAAM;QACN,qEAA6C;QAC7C,0EACI;QAAA,6HACW;QACf,4DAAM;QAEN,qEAAmK;QACnK,qFACI;QAAA,oIAYc;QAClB,4DAAW;QAEf,4DAAM;;;QAvCgG,0DAAqB;QAArB,kFAAqB;QAGjB,0DAAqB;QAArB,kFAAqB;QAGjB,0DAAqB;QAArB,kFAAqB;QAGxB,0DAAqB;QAArB,kFAAqB;QAG5C,0DAAqB;QAArB,kFAAqB;QAMzE,0DAAQ;QAAR,8EAAQ;QAIc,0DAAoC;QAApC,4FAAoC;QAAqC,kFAAiC;;;;;;;;;;;;;;ACtBhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAGd;AAC1B;;;AAKlB,MAAM,WAAW;IAItB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,cAAS,GAAG,MAAM,CAAC;QAMzB,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;IAC/C,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,cAAc,4CAAY,CAAC,IAAI,CAAC,EAAE,CAChF,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,CAAC,OAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAClG,OAAO,CACR,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;sEAtBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAI5B;AAC8B;;;;;;;;;;;;;;;;;ICCrE,oFACI;IAAA,4EACJ;IADmE,iWAA4B;IAA3F,4DACJ;IAAA,4DAAiB;;;IADkD,0DAA4B;IAA5B,0FAA4B;;;IAKvF,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF2B,6EAAiB;IACrD,0DACJ;IADI,wFACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8B,oFAAuB;IAC9D,0DACJ;IADI,0FACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8B,oFAAuB;IAC9D,0DACJ;IADI,0FACJ;;;;IASJ,6EAEI;IAFqE,+TAAwB;IAE7F,yEACJ;IAAA,4DAAS;;;;IACT,6EACI;IADmD,+TAAwB;IAC3E,kEACJ;IAAA,4DAAS;;AD5BlB,MAAM,iBAAiB;IAS5B,YACU,QAAqB,EACtB,MAAiB,EAChB,WAAwB,EACxB,aAA+B,EAC/B,EAAuB;QAJvB,aAAQ,GAAR,QAAQ,CAAa;QACtB,WAAM,GAAN,MAAM,CAAW;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAkB;QAC/B,OAAE,GAAF,EAAE,CAAqB;QAXvB,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QACvC,YAAO,GAAG,CAAC,CAAC;QACZ,aAAQ,GAAW,EAAE,CAAC;QACtB,YAAO,GAAG,KAAK,CAAC;QAChB,eAAU,GAAgB,EAAE,CAAC;QAkBpC,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;QAEhH,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;QAExF,iBAAY,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QAE1I,aAAQ,GAAG,GAAG,EAAE;YACd,qCAAqC;YACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBACjE,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzE;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;gBAC9D,KAAK,EAAE,OAAO;gBACd,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE;aACpE,CAAC,CAAC;YAEH,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;gBACtD,IAAI,MAAM,EAAE;oBACV,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;oBAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAC5E,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;4BACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;yBACvB;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAhDG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;QAChE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;kFAvBU,iBAAiB;iGAAjB,iBAAiB;;QCjB9B,8EACI;QAAA,iFACI;QAAA,qEAAI;QAAA,oEAAI;QAAA,4DAAK;QACjB,4DAAiB;QACjB,mFACI;QAAA,6EACI;QADuB,4SAAqC,cAAU,IAAC;QACvE,mIAEiB;QACjB,oFACI;QAAA,4EAAW;QAAA,2EAAU;QAAA,4DAAY;QACjC,iFACI;QAD0B,uMAAgC;QAC1D,6HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,iFACI;QADyB,sMAA+B;QACxD,6HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,gFAAoB;QAAA,4DAAY;QAC3C,iFACI;QADiC,8MAAuC;QACxE,6HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,sEAAI;QAAA,wDAA0C;QAAA,4DAAK;QACnD,0EACI;QAAA,8EAEI;QAAA,qEACJ;QAAA,4DAAS;QACT,sHAGS;QACT,sHAES;QACb,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;;;QA3CoC,0DAAa;QAAb,6EAAa;QAKd,0DAAgC;QAAhC,2FAAgC;QAC/B,0DAAW;QAAX,iFAAW;QAOb,0DAA+B;QAA/B,0FAA+B;QAC5B,0DAAa;QAAb,mFAAa;QAOR,0DAAuC;QAAvC,kGAAuC;QAC5C,0DAAa;QAAb,mFAAa;QAK7C,0DAA0C;QAA1C,yHAA0C;QAGtC,0DAAmC;QAAnC,qFAAmC;QAIlC,0DAAkB;QAAlB,kFAAkB;QAG0D,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;AC1CnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAEjC;AAEgF;;;;;;;;;;;;;ICDvH,mFACI;IADW,6cAAiC;IAC5C,8EAAwB;IAAA,mEAAQ;IAAA,4DAAW;IAC3C,yEAAa;IAAA,uDAAwD;;IAAA,4DAAK;IAAA,gEAC1E;IAAA,wEAAY;IAAA,uDAAkD;;IAAA,4DAAI;IACtE,4DAAgB;;;IAFC,0DAAwD;IAAxD,2LAAwD;IACzD,0DAAkD;IAAlD,qLAAkD;;;IAJtE,wEACI;IAAA,8JAIgB;IACpB,qEAAe;;;;IALuC,0DAA+C;IAA/C,qHAA+C;;;IAOzG,wEACI;IAAA,sEACI;IAAA,yEAAQ;IAAA,uDACkD;;;IAAA,4DAAS;IACvE,4DAAM;IACV,4DAAQ;;;IAHQ,0DACkD;IADlD,yWACkD;;ADK/D,MAAM,8BAA8B;IAKzC,YACS,SAAuD,EAC9B,IAAsB,EAC/C,EAAuB,EACtB,QAAqB,EACrB,SAAuB,EACxB,MAAiB;QALjB,cAAS,GAAT,SAAS,CAA8C;QAC9B,SAAI,GAAJ,IAAI,CAAkB;QAC/C,OAAE,GAAF,EAAE,CAAqB;QACtB,aAAQ,GAAR,QAAQ,CAAa;QACrB,cAAS,GAAT,SAAS,CAAc;QACxB,WAAM,GAAN,MAAM,CAAW;QATnB,cAAS,GAAY,EAAE,CAAC;QAgB/B,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE;gBACpG,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzB,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;wBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC7B;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAExC,WAAM,GAAG,GAAG,EAAE;YACZ,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;oBAC1D,QAAQ,EAAE,OAAO;oBACjB,IAAI,EAAE,IAAI,6GAAkB,CAAC,kBAAkB,EAAE,qEAAqE,EAAE,IAAI,EAAE,IAAI,CAAC;iBACpI,CAAC,CAAC;gBAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;oBAC3C,IAAI,OAAO,EAAE;wBACX,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BACvG,IAAI,GAAG,CAAC,KAAK,EAAE;gCACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BACpF;iCAAM;gCACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAClF;4BACD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;wBACzB,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;IAxCG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;;4GAhBU,8BAA8B,0MAO/B,wEAAe;8GAPd,8BAA8B;QCnB3C,wEAAqB;QAAA,4GAAuC;QAAA,4DAAK;QACjE,yEACI;QAAA,+EACI;QAAA,4IAMe;QACnB,4DAAe;QACf,8HAKQ;QACZ,4DAAM;QACN,yEACI;QAAA,4EACI;QADoC,sJAAS,cAAU,IAAC;QACxD,qEACJ;QAAA,4DAAS;QACT,4EACI;QADmD,sJAAS,YAAQ,IAAC;QACrE,oEACJ;QAAA,4DAAS;QACb,4DAAM;;QAtBoC,0DAAY;QAAZ,kFAAY;QAQ1C,0DAAmB;QAAnB,mFAAmB;QAW+C,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;;;;;;;;;;ICJzF,wEACI;IAAA,qEACI;IAAA,wEAAiC;IAAA,uDAA4B;IAAA,4DAAK;IAClE,wEAAqC;IAAA,uDAAiC;;IAAA,4DAAK;IAC3E,wEAAqC;IAAA,uDAA8B;;IAAA,4DAAK;IAC5E,4DAAK;IACT,qEAAe;;;IAJ0B,0DAA4B;IAA5B,4FAA4B;IACxB,0DAAiC;IAAjC,0JAAiC;IACjC,0DAA8B;IAA9B,uJAA8B;;;IAdvF,mFACI;IAAA,2EACI;IAAA,wEACI;IAAA,qEACI;IAAA,wEAA8B;IAAA,2EAAW;IAAA,4DAAK;IAC9C,wEAA4C;IAAA,mEAAQ;IAAA,4DAAK;IACzD,wEAA4C;IAAA,gEAAK;IAAA,4DAAK;IAC1D,4DAAK;IACT,4DAAQ;IACR,yEACI;IAAA,yJAMe;IACnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAmB;;;IATuB,2DAAa;IAAb,sFAAa;;;IAwBvC,qEACI;IAAA,wEAAiC;IAAA,uDAA4B;IAAA,4DAAK;IAClE,wEAAqC;IAAA,uDAAiC;;IAAA,4DAAK;IAC3E,wEAAqC;IAAA,uDAA8B;;IAAA,4DAAK;IAC5E,4DAAK;;;IAHgC,0DAA4B;IAA5B,4FAA4B;IACxB,0DAAiC;IAAjC,0JAAiC;IACjC,0DAA8B;IAA9B,uJAA8B;;;IAP3E,wEACI;IAAA,qEACI;IAAA,wEAA0C;IAAA,uDAAe;IAAA,4DAAK;IAClE,4DAAK;IACL,kJAIK;IACT,qEAAe;;;IAPmC,0DAAe;IAAf,6EAAe;IAEzC,0DAAiB;IAAjB,sFAAiB;;;IAdrD,mFACI;IAAA,2EACI;IAAA,wEACI;IAAA,qEACI;IAAA,wEAA8B;IAAA,2EAAW;IAAA,4DAAK;IAC9C,wEAA4C;IAAA,mEAAQ;IAAA,4DAAK;IACzD,wEAA4C;IAAA,gEAAK;IAAA,4DAAK;IAC1D,4DAAK;IACT,4DAAQ;IACR,yEACI;IAAA,wJASe;IACnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAmB;;;IAZwB,2DAAa;IAAb,sFAAa;;ACpC5D,uEAAuE;AAOhE,MAAM,oBAAoB;IAK/B;QAHS,WAAM,GAAQ,EAAE,CAAC;QACjB,SAAI,GAAQ,EAAE,CAAC;IAER,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFARU,oBAAoB;oGAApB,oBAAoB;QDTjC,8EACI;QAAA,kFACI;QAAA,iFAAgB;QAAA,4EAAiB;QAAA,4DAAiB;QAClD,oFACI;QAAA,6EAAY;QAAA,gEACZ;QAAA,uDACJ;;;QAAA,4DAAoB;QACxB,4DAAkB;QAClB,6IAmBmB;QACnB,6IAsBmB;QAMvB,4DAAW;;QAnDC,0DACJ;QADI,qRACJ;QAEe,0DAAqB;QAArB,qFAAqB;QAoBrB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;AE3B5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACzB;;;;;;;;;;;;ICEpC,8EAA0K;IAAnD,gXAAiC;IAAkB,4DAAW;;;IAAjJ,8FAA8B;;;;IAClE,+EAA0I;IAAnD,gXAAiC;IAAkB,4DAAW;;;IAA9D,+FAAiC;;ADK7H,MAAM,8BAA8B;IAKzC,YACS,SAAuD,EAC9B,IAAS,EACjC,EAAuB;QAFxB,cAAS,GAAT,SAAS,CAA8C;QAC9B,SAAI,GAAJ,IAAI,CAAK;QACjC,OAAE,GAAF,EAAE,CAAqB;QAN1B,mBAAc,GAAG,qDAAM,CAAC,cAAc,CAAC;QACvC,YAAO,GAAG,KAAK,CAAC;QAYvB,aAAQ,GAAG,CAAC,MAAc,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IANzD,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;IAClE,CAAC;;4GAbU,8BAA8B,0MAO/B,wEAAe;8GAPd,8BAA8B;QCV3C,wEAAqB;QAAA,qFAA0B;QAAA,4DAAK;QACpD,qFACI;QAAA,6EACI;QAAA,oFACI;QAAA,oIAAqL;QACrL,oIAAqJ;QACzJ,4DAAiB;QACrB,4DAAO;QACX,4DAAqB;QACrB,wFACI;QAAA,4EACI;QADsB,sJAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADsB,uJAAS,qCAA6B,IAAC;QAC7D,qEACJ;QAAA,4DAAS;QACb,4DAAqB;;QAZW,0DAAc;QAAd,8EAAc;QACd,0DAAa;QAAb,6EAAa;;;;;;;;;;;;;;ACJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;;;;ICKzD,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAFwC,6EAAiB;IAClE,0DACJ;IADI,mJACJ;;ADMT,MAAM,qBAAqB;IAKhC,YACS,SAA8C,EAC7C,QAAqB,EACrB,QAAqB,EACrB,WAA2B,EACH,IAAS;QAJlC,cAAS,GAAT,SAAS,CAAqC;QAC7C,aAAQ,GAAR,QAAQ,CAAa;QACrB,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAgB;QACH,SAAI,GAAJ,IAAI,CAAK;QARpC,qBAAgB,GAAqB,EAAE,CAAC;QAe/C,yBAAoB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,GAAqB,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,CAAC;QAE9H,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC/H,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBACxE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC5B;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACpF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAnBG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;;0FAfU,qBAAqB,omBAUtB,wEAAe;qGAVd,qBAAqB;QCdlC,wEAAqB;QAAA,gFAAqB;QAAA,4DAAK;QAC/C,yEACI;QAAA,6EACI;QAAA,oFACI;QAAA,4EAAW;QAAA,4EAAiB;QAAA,4DAAY;QACxC,gFACI;QADuB,+LAAqB;QAC5C,+HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACrB,4DAAO;QACX,4DAAM;QACN,0EACI;QAAA,6EACI;QADsB,8IAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADmD,8IAAS,eAAW,IAAC;QACxE,uEACJ;QAAA,4DAAS;QACb,4DAAM;;;QAfiC,0DAAqB;QAArB,gFAAqB;QACZ,0DAAmB;QAAnB,yFAAmB;QAWc,0DAAyC;QAAzC,qFAAyC;;;;;;;;;;;;;;AChB1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAClB;AACoB;AAGd;AAC1B;;;AAKlB,MAAM,oBAAoB;IAK/B,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,cAAS,GAAG,eAAe,CAAC;QAKlC,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;IAC/C,CAAC;IAED,YAAY,CAAC,MAAW;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,cAAc,4CAAY,CAAC,MAAM,CAAC,EAAE,CAE/E,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,WAAW,CAAC,MAAW;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,aAAa,4CAAY,CAAC,MAAM,CAAC,EAAE,CAC9E,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,eAAe,CAAC,MAAc;QAC5B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,MAAM,EAAE,iBAAiB;aAC1B,CAAC;YACF,YAAY,EAAE,MAAgB;SAC/B,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,mBAAmB,4CAAY,CAAC,MAAM,CAAC,EAAE,EACnF,WAAW,CACZ,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,MAAM,EAAE,iBAAiB;aAC1B,CAAC;YACF,YAAY,EAAE,MAAgB;SAC/B,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,cAAc,IAAI,IAAI,CAAC,SAAS,kBAAkB,4CAAY,CAAC,MAAM,CAAC,EAAE,EAClF,WAAW,CACZ,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;wFAlDU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;;;;;;;;;;;;;ACRpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAId;AAC1B;;;AAKlB,MAAM,gBAAgB;IAI3B,mCAAmC;IAEnC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJlB,cAAS,GAAG,WAAW,CAAC;QAO9B,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;QAC7C,kGAAkG;IACpG,CAAC;IAED,MAAM,CAAC,OAAY,EAAE;QACnB;;;;YAII;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,4CAAY,CAAC,IAAI,CAAC,EAAE;QAC5E,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,gBAAgB,CAAC,OAAY,EAAE;QAC7B;;;;YAII;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,YAAY,wBAAwB,4CAAY,CAAC,IAAI,CAAC,EAAE;QAClE,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,sBAAsB,CAAC,OAAY,EAAE;QACnC;;;;YAII;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,YAAY,8BAA8B,4CAAY,CAAC,IAAI,CAAC,EAAE;QACxE,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,OAAO,CAAC,OAAkB;QACxB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,UAAU,EACvD,OAAO;QACP,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,WAAW,CAAC,OAAkB;QAC5B;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,cAAc,EAC3D,OAAO;QACP,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,aAAa,CAAC,OAAkB;QAC9B;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,sBAAsB,EACnE,OAAO;QACP,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;gFAvFU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;;;;;;;;;ICS3D,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,oFAAwB;IAC3D,0DACJ;IADI,4FACJ;;;;IAmBJ,6EACI;IADiD,+TAAwB;IACzE,2EAAU;IAAA,8DAAG;IAAA,4DAAW;IAC5B,4DAAS;;ADjBlB,MAAM,oBAAoB;IAM/B,YACU,QAAqB,EACrB,WAA2B,EAC3B,WAA+B;QAF/B,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,gBAAW,GAAX,WAAW,CAAoB;QAN/B,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QACvC,aAAQ,GAAkB,EAAE,CAAC;QAapC,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACrC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG;YAClC,oBAAoB,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;SACpG;QAED,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClD,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;oBAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC3F;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC7F;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IA5BG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;;wFAfU,oBAAoB;oGAApB,oBAAoB;;QCfjC,8EACI;QAAA,4EAEiB;QACjB,mFACI;QAAA,6EACI;QADuB,8SAAqC,cAAU,IAAC;QACvE,oFACI;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,gFACI;QADuB,2MAAkC;QACzD,8HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,4EACJ;QADyF,qMAAgC;QAArH,4DACJ;QAAA,4DAAiB;QACjB,0EACI;QAAA,0EACI;QAAA,mFAA4E;QAA9B,2MAA6B;QAAC,0EAAc;QAAA,4DAAe;QAC7G,4DAAM;QACN,0EACI;QAAA,oFAA8E;QAA/B,4MAA8B;QAAC,mEAAO;QAAA,4DAAe;QACxG,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,8EACI;QAAA,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC7B,4DAAS;QACT,yHAES;QACb,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;;;QA5BgC,0DAAkC;QAAlC,6FAAkC;QAC/B,0DAAW;QAAX,iFAAW;QAM4C,0DAAgC;QAAhC,2FAAgC;QAInE,0DAA6B;QAA7B,wFAA6B;QAG5B,0DAA8B;QAA9B,yFAA8B;QAK5B,0DAAmC;QAAnC,qFAAmC;QAGT,0DAAkC;QAAlC,kGAAkC;;;;;;;;;;;;;;AC7BjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;;;;ICgBrD,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;;IAFmC,iFAAqB;IACjE,0DACJ;IADI,yFACJ;;;IAXZ,qEACI;IAAA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,wEACI;IAAA,oFACI;IAAA,2EACJ;IADsF,kPAA2B;IAA7G,4DACJ;IAAA,4DAAiB;IACrB,4DAAK;IACL,qEACI;IAAA,iFACI;IADsB,uPAA2B;IACjD,oJAEa;IACjB,4DAAa;IACjB,4DAAK;IACT,4DAAK;;;;;IAbG,0DAAe;IAAf,+EAAe;IAG2C,0DAA2B;IAA3B,8FAA2B;IAI3D,0DAA2B;IAA3B,qFAA2B;IACrB,0DAAkB;IAAlB,2FAAkB;;ADE3D,MAAM,mCAAmC;IAO9C,YACS,SAA4D,EAC3D,QAAqB,EACrB,WAA2B,EACH,IAAoB;QAH7C,cAAS,GAAT,SAAS,CAAmD;QAC3D,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAgB;QACH,SAAI,GAAJ,IAAI,CAAgB;QAR/C,qBAAgB,GAAa,EAAE,CAAC;QAChC,mBAAc,GAAuB,EAAE,CAAC;QACxC,qBAAgB,GAAuB,EAAE,CAAC;QAyCjD,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,YAAO,GAAG,GAAG,EAAE;YACb,MAAM,MAAM,GAAU,EAAE,CAAC;YACzB,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACnC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;oBACxD,MAAM,CAAC,IAAI,CAAC;wBACV,eAAe,EAAE,CAAC,CAAC,CAAC,eAAe;wBACnC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ;wBACnB,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ;qBACtB,CAAC,CAAC;iBACJ;gBACD,GAAG,EAAE,CAAC;aACP;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACzD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBAC9E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;qBAC5B;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;qBACjB;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6BAA6B,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACjF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;QACH,CAAC;IA/DG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG;gBACb,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBACzB,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO;gBAC3B,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;gBAClC,uBAAuB,EAAE,CAAC;gBAC1B,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO;gBACrB,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,YAAY,EAAE,KAAK;aACpB,CAAC;SACH;QAED,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,uCAAuC;YACvC,4CAA4C;YAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClF,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC5C;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;SACzE;IACH,CAAC;;sHA5CU,mCAAmC,+dAWpC,wEAAe;mHAXd,mCAAmC;QCnBhD,wEAAqB;QAAA,uDAA+D;QAAA,4DAAK;QACzF,yEACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,wEAAQ;QAAA,4DAAK;QACjB,wEAA+B;QAAA,mEAAQ;QAAA,4DAAK;QAC5C,qEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACL,+HAcK;QACT,4DAAQ;QACZ,4DAAM;QACN,0EACI;QAAA,6EACI;QADsB,4JAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADmD,4JAAS,aAAS,IAAC;QACtE,qEACJ;QAAA,4DAAS;QACb,4DAAM;;QAhCe,0DAA+D;QAA/D,8IAA+D;QAQvD,2DAAmB;QAAnB,uFAAmB;;;;;;;;;;;;;;ACPhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoF;AAIpC;AACS;;;;;;;;;;;;;;;;;;;;;;;;ICgB7C,+EAEI;IADkD,+VAA0B,CAAC,+CAAkC;IAC/G,uDACJ;IAAA,4DAAW;;;;IAFP,oHAAiD;IACjD,0DACJ;IADI,yFACJ;;;;IACA,+EACI;IADM,yVAAgC;IACtC,kEACJ;IAAA,4DAAW;;;;;IAMnB,qFACI;IAAA,gFACJ;IADmI,yWAA0B;IAAzJ,4DACJ;IAAA,4DAAiB;;;IADkH,0DAA0B;IAA1B,wFAA0B;;;IAC5I,gEACjB;;;;IAIQ,+EACI;IAD6D,oXAAgC;IAC7F,uDACJ;IAAA,4DAAW;;;;IAFuF,2FAA2B;IACzH,0DACJ;IADI,+FACJ;;;;IAQA,+EAEI;IADA,+fAAuE;IACvE,uDACJ;IAAA,4DAAW;;;;IAFiE,4FAA2B;IACnG,0DACJ;IADI,kGACJ;;;IALR,0EACI;IAAA,gFACI;IAAA,qIAGW;IACf,4DAAgB;IACpB,4DAAM;;;IALuE,0DAAY;IAAZ,kFAAY;;;;IAUjF,0EACI;IAAA,+EACI;IAD+B,8YAAkD;IAOjF,mFACI;IAAA,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IACnC,4DAAmB;IAKvB,4DAAW;IACf,4DAAM;;;IAPS,0DAAwB;IAAxB,yFAAwB;;ADpC5C,MAAM,uBAAwB,SAAQ,iEAAW;IActD,YACS,SAAgD,EACvB,IAAuB,EAChD,MAAiB,EACd,QAAqB,EACxB,WAA2B,EACxB,MAAc,EACd,EAAuB,EACvB,WAA8B,EAC9B,UAAgC,EAChC,YAA6B,EAC7B,aAA6B;QAEvC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAZhG,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAmB;QAChD,WAAM,GAAN,MAAM,CAAW;QACd,aAAQ,GAAR,QAAQ,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,eAAU,GAAV,UAAU,CAAsB;QAChC,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,kBAAa,GAAb,aAAa,CAAgB;QAjBlC,eAAU,GAAU,EAAE,CAAC;QACvB,kBAAa,GAAU,EAAE,CAAC;QAC1B,uBAAkB,GAAU,EAAE,CAAC;QAC/B,cAAS,GAAe,EAAE,CAAC;QAC3B,sBAAiB,GAAe,EAAE,CAAC;QA4B1C,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;oBAChC,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBACzD,4CAA4C;oBAC5C,+BAA+B;iBAChC;aACF;QACH,CAAC;QAED,WAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEtC,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAC3C,4BAAuB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAE7D,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC3D,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;oBACvC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;oBAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACrE;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,sBAAiB,GAAG,CAAC,GAAQ,EAAE,SAAc,IAAI,EAAE,MAAc,CAAC,EAAE,EAAE;YACpE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,wEAAwE;gBACxE,IAAI,CAAC,MAAM,EAAE;oBACX,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;iBACjG;qBAAM;oBACL,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;wBACtC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC3C;oBAED,IAAI,MAAM,CAAC,aAAa,EAAE;wBACxB,IAAI,MAAM,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;4BACrC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;yBAC/C;6BAAM;4BACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;yBACpD;qBACF;iBACF;aACF;QACH,CAAC;QAED,oBAAe,GAAG,CAAC,WAAmB,IAAI,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,QAAQ,EAAE;oBACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,eAAe,KAAK,CAAC,QAAQ,CAAC,CAAC;iBACvF;qBAAM;oBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;iBACzC;aACF;QACH,CAAC;QAED,gBAAW,GAAG,CAAC,GAAa,EAAE,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,MAAM,GAAG,GAAiB;oBACxB,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;oBACjB,MAAM,EAAE,GAAG,CAAC,WAAW;oBACvB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM;oBACnB,SAAS,EAAE,GAAG,CAAC,SAAS;oBACxB,YAAY,EAAE,GAAG,CAAC,YAAY;oBAC9B,MAAM,EAAE,GAAG,CAAC,MAAM;oBAClB,KAAK,EAAE,GAAG,CAAC,KAAK;oBAChB,QAAQ,EAAE,GAAG,CAAC,QAAQ;iBACvB,CAAC;gBACF,4BAA4B;gBAC5B,0CAA0C;gBAC1C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aAC5B;QACH,CAAC;IA3FD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;QACzF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;;8FAtCU,uBAAuB,0MAgBxB,wEAAe;uGAhBd,uBAAuB;;;;;;QClCpC,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,uDACJ;QAAA,4DAAO;QACX,4DAAM;QACN,yEACI;QAAA,4EAEI;QAFiD,+IAAS,uCAA+B,IAAC;QAE1F,qEACJ;QAAA,4DAAS;QACT,4EAEI;QAF6E,+IAAS,YAAQ,IAAC;QAE/F,mEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAEN,yEACI;QACA,0EACI;QAAA,iFACI;QAAA,+HAGW;QACX,+HAEW;QACf,4DAAgB;QACpB,4DAAM;QAIN,4IAEiB;QAAA,oHACjB;QAEA,2EACI;QAAA,iFACI;QAAA,gIAEW;QACf,4DAAgB;QACpB,4DAAM;QAIN,sHAOM;QAEN,2EACI;QACA,2EACI;QAAA,sHAgBM;QACV,4DAAM;QAEN,2EACI;QAAA,mGAE6E;QAAjD,mMAAqB,8BAA0B,IAAC;QAAC,4DAA8B;QAC/G,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnFM,0DACJ;QADI,sLACJ;QAII,0DAA2B;QAA3B,wFAA2B;QAI3B,0DAA2B;QAA3B,wFAA2B;QAUc,0DAAoB;QAApB,0FAAoB;QAIjB,0DAA6E;QAA7E,iJAA6E;QAQ5F,0DAAqB;QAArB,qFAAqB;QAEpC,0DAAqB;QAArB,qFAAqB;QAKe,0DAAa;QAAb,mFAAa;QAQ0B,0DAAuB;QAAvB,2FAAuB;QAYxB,0DAAY;QAAZ,kFAAY;QAoBvE,0DAAuC;QAAvC,oGAAuC;;;;;;;;;;;;;;ACjFhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AAEb;;;;;;;;;;;;;;ICI1D,mFACI;IADkD,uXAA2B;IAC7E,8EAAwB;IAAA,sEAAW;IAAA,4DAAW;IAC9C,wEAAa;IAAA,uDAAuB;IAAA,4DAAK;IAC7C,4DAAgB;;;IADC,0DAAuB;IAAvB,uFAAuB;;;ADI7C,MAAM,uBAAuB;IAalC,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QATrC,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEnC,WAAM,GAAG,CAAC,CAAC;QACX,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxC,cAAS,GAAG,CAAC,CAAC;QAEd,cAAS,GAAG,EAAE,CAAC;QAmBtB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnC,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;wBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;qBACpB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,CAAC,GAAc,EAAE,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;QAED,eAAU,GAAG,CAAC,CAAY,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IApCkD,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,kEAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,mEAAY,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SAChF;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,mEAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACvF;IACH,CAAC;;8FA5BU,uBAAuB;uGAAvB,uBAAuB;QCZpC,8EACI;QAAA,mFACI;QAAA,oFACI;QAAA,2EACJ;QADoB,8IAAS,iBAAa,IAAC;QAAvC,4DACJ;QAAA,4DAAiB;QACjB,+EACI;QAAA,uIAGgB;QACpB,4DAAe;QACf,mFACA;QAD2F,0JAAQ,sBAAkB,IAAC;QACtH,4DAAgB;QACpB,4DAAmB;QACvB,4DAAW;;QAXkE,0DAAuB;QAAvB,kFAAuB;QAGrD,0DAAiB;QAAjB,uFAAiB;QAKzC,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;ACXxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;;;;;;;;;AAW9G,MAAM,aAAa;IA2BxB,YACU,QAAqB,EACrB,QAAqB;QADrB,aAAQ,GAAR,QAAQ,CAAa;QACrB,aAAQ,GAAR,QAAQ,CAAa;QA3BtB,kBAAa,GAAQ;YAC5B,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,CAAC;YACP,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,CAAC;SAChB,CAAC;QACO,kBAAa,GAAG,IAAI,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QAC5B,gDAAgD;QACtC,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;QACjC,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAIrC,aAAQ,GAAG,oBAAoB,CAAC;QAwBvC,oBAAe,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QAElE,cAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAE9E,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,EAAE;gBAC7D,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;aACjC;YACD,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACpC,CAAC;QAED,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,CAAC,EAAE;gBAC3D,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;aAChC;YACD,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACpC,CAAC;QAED,cAAS,GAAG,CAAC,GAAQ,EAAE,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,qCAAqC;YACrC,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;YAC9C,oCAAoC;YACpC,MAAM,UAAU,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YAC3F,6CAA6C;YAC7C,MAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;YAC/B,0CAA0C;YAC1C,MAAM,OAAO,GAAS;gBACpB,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;gBAC7B,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;gBAC7B,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;gBACjC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC;gBACpE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC;gBACnE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;gBACnC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;aACpC,CAAC;YACF,wBAAwB;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC1C,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;wBACd,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;wBACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,iBAAiB,EAAE,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACrG;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,aAAa,CAAC,MAAM,iBAAiB,EAAE,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC/G;iBACF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,EAAE,gBAAgB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnF;gBACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAW,GAAG,CAAC,GAAQ,EAAE,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;IA3EG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,KAAK,CAAC,EAAE;YACzC,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,KAAK,CAAC,EAAE;gBAC1C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,CAAC,EAAE;oBACtC,IAAI,CAAC,QAAQ,IAAI,0BAA0B,CAAC;iBAC7C;qBAAM;oBACL,IAAI,CAAC,QAAQ,IAAI,wBAAwB,CAAC;iBAC3C;aACF;iBAAM;gBACL,IAAI,CAAC,QAAQ,IAAI,gBAAgB,CAAC;aACnC;SACF;QACD,kDAAkD;IACpD,CAAC;;0EA/CU,aAAa;6FAAb,aAAa;;;;;;QCX1B,4EASI;QATkB,sJAAgB,qBAAiB,IAAC,kGAAmB,uBAAmB,IAAtC,0EAE3C,eAAW,IAFgC;QASpD,uEAAM;QAAA,uDAAkD;QAAA,4DAAO;QACnE,4DAAM;;QAPF,wFAA6B;QAHsG,8FAAiC;QAOpK,mGAA0C;QAEpC,0DAAkD;QAAlD,uHAAkD;;;;;;;;;;;;;;ACR5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACZ;AAGb;;;;;;;;;;;;;;ICDpC,yEAAsC;IAAA,8DAAG;IAAA,4DAAK;;;IAC9C,yEACI;IAAA,uEAAM;IAAA,uDAAkB;IAAA,4DAAO;IACnC,4DAAK;;;IADK,0DAAkB;IAAlB,kFAAkB;;;IAI5B,yEAAsC;IAAA,iEAAM;IAAA,4DAAK;;;;IAGzC,4EACA;IAD0D,iXAA4B;IAAtF,4DACA;;;IAD0D,sFAA4B;;;;IACtF,4EACA;IAD0F,iXAA4B;IAAtH,4DACA;;;;IAD6C,+FAA8B;;;;IAHnF,yEACI;IAAA,qFACI;IAAA,gIACA;IAAA,gIACA;IAAA,6EACI;IADuD,+WAA+B;IACtF,+EAA+B;IAAA,gEAAK;IAAA,4DAAW;IACnD,4DAAS;IACb,4DAAiB;IACrB,4DAAK;;;IANgC,0DAAa;IAAb,gFAAa;IACb,0DAAc;IAAd,iFAAc;;;IAOvD,oEAA4D;;;IAC5D,oEAAkE;;ADHnE,MAAM,yBAAyB;IAOpC,YACS,SAAkD,EACzB,IAAiB,EACzC,QAAqB,EACrB,EAAuB;QAHxB,cAAS,GAAT,SAAS,CAAyC;QACzB,SAAI,GAAJ,IAAI,CAAa;QACzC,aAAQ,GAAR,QAAQ,CAAa;QACrB,OAAE,GAAF,EAAE,CAAqB;QAT1B,qBAAgB,GAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAElD,YAAO,GAAG,KAAK,CAAC;QA6BvB,aAAQ,GAAG,GAAG,EAAE;YACd,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnD,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sCAAsC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC7H;QACH,CAAC;QAED,uBAAkB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAcvF,iBAAY,GAAG,CAAC,GAAW,EAAE,EAAE;YAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5E,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;aAC1C;iBAAM;gBACL,mCAAmC;gBACnC,gDAAgD;gBAChD,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;aAC/C;QACH,CAAC;IAvDG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;QAChE,IAAI,CAAC,cAAc,GAAG,qDAAM,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACpD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,0BAA0B;IAC5B,CAAC;IAED,cAAc,CAAC,IAAc;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBACnB,OAAO,CAAC,CAAC;aACV;SACF;QACD,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC;IAaD,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CACpB;YACE,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;YACpC,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,EAAE;SACd,CACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IAC3C,CAAC;;kGAtDU,yBAAyB,0MAS1B,wEAAe;yGATd,yBAAyB;QCnBtC,wEAAqB;QAAA,sFAA2B;QAAA,4DAAK;QACrD,yEACI;QAAA,8EACI;QAAA,2EACI;QAAA,mHAA8C;QAC9C,mHAEK;QACT,qEAAe;QACf,2EACI;QAAA,mHAAiD;QACjD,qHAQK;QACT,qEAAe;QACf,qHAA4D;QAC5D,qHAAkE;QACtE,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,8EACI;QADsB,kJAAS,iBAAa,IAAC;QAC7C,qEACJ;QAAA,4DAAS;QACT,8EACI;QADsB,kJAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACb,4DAAM;;QA9B2B,0DAAyB;QAAzB,sFAAyB;QAmB9B,0DAAiC;QAAjC,iGAAiC;QACpB,0DAA0B;QAA1B,kGAA0B;QAIE,0DAA+D;QAA/D,sHAA+D;QAGlE,0DAA+D;QAA/D,sHAA+D;;;;;;;;;;;;;;AC5BjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;;;;;ICQzD,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF8B,mFAAuB;IAC9D,0DACJ;IADI,yFACJ;;;;IALR,oFACI;IAAA,4EAAW;IAAA,oEAAS;IAAA,4DAAY;IAChC,iFACI;IADyB,2WAA4B;IACrD,kJAEa;IACjB,4DAAa;IACjB,4DAAiB;;;IALgB,0DAA4B;IAA5B,0FAA4B;IACzB,0DAAa;IAAb,sFAAa;;ADUlD,MAAM,sBAAsB;IAKjC,YACU,QAAqB,EACrB,aAA+B,EAC/B,QAAqB,EACtB,SAA+C,EACtB,IAAW;QAJnC,aAAQ,GAAR,QAAQ,CAAa;QACrB,kBAAa,GAAb,aAAa,CAAkB;QAC/B,aAAQ,GAAR,QAAQ,CAAa;QACtB,cAAS,GAAT,SAAS,CAAsC;QACtB,SAAI,GAAJ,IAAI,CAAO;QARtC,eAAU,GAAgB,EAAE,CAAC;QAC7B,SAAI,GAAQ,EAAE,CAAC;QAetB,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;QAExF,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,yBAAoB,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5C,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;wBACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,iBAAiB,EAAE,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC5G;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,iBAAiB,EAAE,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC7G;iBACF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,GAAG,EAAE,uBAAuB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1F;gBACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACL,CAAC;IAxBG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;4FAhBU,sBAAsB,8mBAUvB,wEAAe;sGAVd,sBAAsB;QCnBnC,wEAAqB;QAAA,uDAAqC;QAAA,4DAAK;QAC/D,yEACI;QAAA,6EACI;QAAA,oFACI;QAAA,2EACJ;QADuE,iMAA2B;QAA9F,4DACJ;QAAA,4DAAiB;QACjB,wIAOiB;QACrB,4DAAO;QACX,4DAAM;QACN,yEACI;QAAA,4EACI;QADsB,8IAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADsB,+IAAS,0BAAsB,IAAC;QACtD,qEACJ;QAAA,4DAAS;QACb,4DAAM;;;QAvBe,0DAAqC;QAArC,oHAAqC;QAIqB,0DAA2B;QAA3B,sFAA2B;QAE/D,0DAA6B;QAA7B,6FAA6B;QAcM,0DAAsC;QAAtC,qFAAsC;;;;;;;;;;;;;;ACbpH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACe;;;;;;;;;;;;;;;;;;ICGjC,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF6B,mFAAuB;IAC7D,0DACJ;IADI,6FACJ;;;IAYF,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,oFAAwB;IAC3D,0DACJ;IADI,+FACJ;;;IAME,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,6EAAgB;IACnD,0DACJ;IADI,+FACJ;;;;IALR,oFACI;IAAA,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,iFACI;IADsB,qWAA2B;IACjD,yIAEa;IACjB,4DAAa;IACjB,4DAAiB;;;IALa,0DAA2B;IAA3B,yFAA2B;IACrB,0DAAS;IAAT,kFAAS;;;IAa7C,gEACA;;;;IACE,sEACE;IAAA,oFACE;IAAA,4EACF;IAD6E,+NAAsB;IAAjG,4DACF;IAAA,4DAAiB;IACnB,4DAAM;;;IAFwC,0DAAgC;IAAhC,sGAAgC;IAAC,iFAAsB;;;IAHvG,uEACE;IAAA,kHAIM;IACR,4DAAO;;;IALe,0DAAS;IAAT,kFAAS;;;IAQjC,0EAA8C;;ADrC/C,MAAM,aAAa;IAgBxB,YACU,QAAqB,EACrB,WAA8B,EAC9B,aAA+B,EAC/B,SAAuB,EACvB,QAA8B;QAJ9B,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,kBAAa,GAAb,aAAa,CAAkB;QAC/B,cAAS,GAAT,SAAS,CAAc;QACvB,aAAQ,GAAR,QAAQ,CAAsB;QApBjC,WAAM,GAAQ;YACnB,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,EAAE;SACT,CAAC;QACK,WAAM,GAAG,iBAAiB,CAAC;QAC3B,eAAU,GAAgB,EAAE,CAAC;QAC7B,aAAQ,GAAG,KAAK,CAAC;QACjB,WAAM,GAAgB,EAAE,CAAC;QACzB,UAAK,GAAkB,EAAE,CAAC;QAC1B,WAAM,GAAG,qDAAM,CAAC,MAAM,CAAC;QAEvB,kBAAa,GAAyB;YAC3C,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI;SAChD,CAAC;QAgBF,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;iBACnB;YACH,CAAC,CAAC;QACJ,CAAC;QAED,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtD,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,KAAK,GAAG,GAAG;iBACjB;YACH,CAAC,CAAC;QACJ,CAAC;QAED,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAEvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC3D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;oBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;iBACpC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAnDG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IA+CD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;gBAC1D,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;0EAzFU,aAAa;6FAAb,aAAa;QCnB1B,yEACE;QAAA,yEACE;QAAA,8EACE;QAAA,iFACE;QAAA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QAC1B,4DAAiB;QACjB,mFACE;QAAA,6EACE;QAAA,oFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,iFACI;QAD0B,kMAA+B;QACzD,yHAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACE;QAAA,4EACF;QADgD,uLAAyB;QAAvE,4DACF;QAAA,4DAAiB;QACjB,qFACE;QAAA,4EACF;QAD+C,sLAAwB;QAArE,4DACF;QAAA,4DAAiB;QACjB,qFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,kFACI;QAD6B,4LAAyB;QACtD,yHAEa;QACjB,4DAAa;QACf,4DAAiB;QACjB,kIAOiB;QACjB,0EACE;QAAA,2EACE;QAAA,oFAAsF;QAA/B,qMAA8B;QAAC,2EAAe;QAAA,4DAAe;QACtH,4DAAM;QACN,2EACE;QAAA,oFAA8E;QAA/B,qMAA8B;QAAC,0EAAc;QAAA,4DAAe;QAC7G,4DAAM;QACR,4DAAM;QACN,0GACA;QAAA,8GAMO;QACP,uFAA0I;QAAzF,yJAAgB,gBAAY,IAAC,6FAAa,cAAU,IAAvB,6GAA6C,iBAAa,IAA1D;QAA4D,4DAAkB;QAC9J,4DAAO;QACP,8HAA8C;QAChD,4DAAmB;QACrB,4DAAW;QACb,4DAAM;QACR,4DAAM;;QAlDsC,2DAA+B;QAA/B,0FAA+B;QAC9B,0DAAa;QAAb,mFAAa;QAMA,0DAAyB;QAAzB,oFAAyB;QAG1B,0DAAwB;QAAxB,mFAAwB;QAIpC,0DAAyB;QAAzB,oFAAyB;QACzB,0DAAQ;QAAR,8EAAQ;QAKR,0DAA2C;QAA3C,+GAA2C;QAUnB,0DAA8B;QAA9B,yFAA8B;QAGtC,0DAA8B;QAA9B,yFAA8B;QAG5E,0DAAqB;QAArB,qFAAqB;QACnB,0DAAqB;QAArB,qFAAqB;QAOX,0DAA+B;QAA/B,4FAA+B;QAEnC,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACnDrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;;;;;;;;;;ICMR,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF4B,uFAA2B;IAChE,0DACJ;IADI,gGACJ;;;IAYA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF4B,uFAA2B;IAChE,0DACJ;IADI,gGACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF2B,uFAA2B;IAC/D,0DACJ;IADI,gGACJ;;;IAKZ,0EAA8C;;AD3BvD,MAAM,qBAAqB;IAWhC,YACU,QAAqB;IAC7B,0CAA0C;IAClC,gBAAqC;QAFrC,aAAQ,GAAR,QAAQ,CAAa;QAErB,qBAAgB,GAAhB,gBAAgB,CAAqB;QAbxC,WAAM,GAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACxC,WAAM,GAAG,cAAc,CAAC;QACxB,WAAM,GAAY,EAAE,CAAC;QACrB,WAAM,GAAY,EAAE,CAAC;QACrB,UAAK,GAAY,EAAE,CAAC;QACpB,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAyB;YAC3C,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI;SACjD,CAAC;QAcF,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,kCAAkC;YAClC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aACjD;YACD,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;oBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;iBACpC;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,cAAS,GAAG,CAAC,SAAc,EAAE,EAAE,OAAe,CAAC,EAAE,EAAE;YACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,QAAQ,IAAI,EAAE;oBACZ,KAAK,CAAC;wBAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;wBAAC,MAAM;oBACjC,KAAK,CAAC;wBAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;wBAAC,MAAM;oBACjC,KAAK,CAAC;wBAAE,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;wBAAC,MAAM;iBACjC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAxCG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;;0FArBU,qBAAqB;qGAArB,qBAAqB;QCblC,yEACI;QAAA,yEACI;QAAA,8EACI;QAAA,iFACI;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACzB,4DAAiB;QACjB,mFACI;QAAA,6EACI;QAAA,oFACI;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFACI;QADsB,sMAA2B;QACjD,iIAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,4EACJ;QAD8D,+LAAyB;QAAnF,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,4EACJ;QAD4D,8LAAwB;QAAhF,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,kFACI;QADsB,qMAA0B;QAChD,iIAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,kFACI;QADsB,qMAA0B;QAChD,iIAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,uFAAgH;QAA/D,iKAAc,gBAAY,IAAC,qHAAqB,iBAAa,IAAlC;QAAoC,4DAAkB;QACtI,4DAAO;QACP,sIAA8C;QAClD,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QACV,4DAAM;;QAlC4C,2DAA2B;QAA3B,sFAA2B;QACnB,0DAAS;QAAT,+EAAS;QAMe,0DAAyB;QAAzB,oFAAyB;QAG3B,0DAAwB;QAAxB,mFAAwB;QAItD,0DAA0B;QAA1B,qFAA0B;QAClB,0DAAS;QAAT,+EAAS;QAOjB,0DAA0B;QAA1B,qFAA0B;QAClB,0DAAQ;QAAR,8EAAQ;QAK7B,0DAA+B;QAA/B,4FAA+B;QAErC,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACxC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;;;;;;ICgB/D,4EACI;IADmD,+TAAsB;IACzE,kEACJ;IAAA,4DAAS;;ADNlB,MAAM,sBAAsB;IAKjC,YACS,SAAsB,EACrB,SAA2B;QAD5B,cAAS,GAAT,SAAS,CAAa;QACrB,cAAS,GAAT,SAAS,CAAkB;QAJ3B,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAU5C,eAAU,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG;YAC9B,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC;SAC9C,CAAC;QAEF,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC9C,mBAAmB;gBACnB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;oBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC/E;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC3E;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IApBG,CAAC;IAEL,QAAQ;IACR,CAAC;;4FAXU,sBAAsB;sGAAtB,sBAAsB;;QCZnC,8EACI;QAAA,iFACI;QAAA,qEACI;QAAA,uDACJ;QAAA,4DAAK;QACT,4DAAiB;QACjB,mFACI;QAAA,6EACI;QADqB,gTAAmC,cAAU,IAAC;QACnE,oFACI;QAAA,2EACJ;QAD6E,qMAA+B;QAAxG,4DACJ;QAAA,4DAAiB;QACjB,kFAA0E;QAA5B,0MAA2B;QAAC,kEAAM;QAAA,4DAAe;QAC/F,0EACI;QAAA,6EACI;QAAA,qEACJ;QAAA,4DAAS;QACT,0HAES;QACb,4DAAM;QACV,4DAAO;QACX,4DAAmB;QACvB,4DAAW;;;QAnBC,0DACJ;QADI,6IACJ;QAKiF,0DAA+B;QAA/B,0FAA+B;QAE9D,0DAA2B;QAA3B,sFAA2B;QAEI,0DAAiC;QAAjC,qFAAiC;QAG3B,0DAAsB;QAAtB,sFAAsB;;;;;;;;;;;;;;ACdrH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAClB;AAQG;;;;;;;;;;;;;;;;;;ICAR,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+B,qFAAyB;IACjE,0DACJ;IADI,6FACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF6B,mFAAuB;IAC7D,0DACJ;IADI,6FACJ;;;IAYA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,qFAAwB;IAC3D,0DACJ;IADI,gGACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,6EAAgB;IACnD,0DACJ;IADI,+FACJ;;;;IALR,oFACI;IAAA,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,iFACI;IADsB,0WAA2B;IACjD,8IAEa;IACjB,4DAAa;IACjB,4DAAiB;;;IALa,0DAA2B;IAA3B,yFAA2B;IACrB,0DAAS;IAAT,kFAAS;;;IAOjD,0EAA8C;;;IAK9D,yEACI;IAAA,yEACI;IAAA,mFAA+E;IACnF,4DAAM;IACV,4DAAM;;;IAFqB,0DAAiB;IAAjB,iFAAiB;;;IAG5C,yEACI;IAAA,yEACI;IAAA,kFAA4E;IAChF,4DAAM;IACV,4DAAM;;;IAFoB,0DAAiB;IAAjB,iFAAiB;;ADzCpC,MAAM,kBAAkB;IAkB7B,YACU,QAAqB,EACrB,aAAmC,EACnC,aAA+B,EAC/B,QAA8B;QAH9B,aAAQ,GAAR,QAAQ,CAAa;QACrB,kBAAa,GAAb,aAAa,CAAsB;QACnC,kBAAa,GAAb,aAAa,CAAkB;QAC/B,aAAQ,GAAR,QAAQ,CAAsB;QApBjC,iBAAY,GAAU,EAAE,CAAC;QACzB,WAAM,GAAQ,EAAE,CAAC;QACjB,iBAAY,GAAQ,EAAE,CAAC;QACvB,wBAAmB,GAAW,IAAI,CAAC;QACnC,iBAAY,GAAmB,EAAE,CAAC;QAClC,gBAAW,GAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACjC,eAAU,GAAgB,EAAE,CAAC;QAC7B,UAAK,GAAkB,EAAE,CAAC;QAC1B,WAAM,GAAG,qDAAM,CAAC,MAAM,CAAC;QACvB,oBAAe,GAAG,sBAAsB,CAAC;QACzC,mBAAc,GAAG,qBAAqB,CAAC;QACvC,aAAQ,GAAG,KAAK,CAAC;QACjB,kBAAa,GAAyB;YAC3C,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI;SAC/C,CAAC;QAgBF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtD,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,KAAK,GAAG,GAAG;iBACjB;YACH,CAAC,CAAC;QACJ,CAAC;QAED,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG;gBAClB,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,eAAe,EAAE;gBACjD,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,cAAc,EAAE;aACjD,CAAC;QACJ,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG;gBACZ,YAAY,EAAE,SAAS;gBACvB,IAAI,EAAE,mCAAM,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;gBAC1D,GAAG,EAAE,mCAAM,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;aACxD,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;QAED,eAAU,GAAG,CAAC,OAAe,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,mBAAmB,GAAG,uBAAuB,CAAC;YACnD,QAAQ,IAAI,EAAE;gBACZ,KAAK,CAAC;oBAAG,IAAI,CAAC,aAAa,EAAE,CAAC;oBAAC,MAAM;gBACrC,KAAK,CAAC;oBAAG,IAAI,CAAC,MAAM,EAAE,CAAC;oBAAC,MAAM;gBAC9B,KAAK,CAAC;oBAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAAC,MAAM;aACjC;QACH,CAAC;QAED,WAAM,GAAG,GAAG,EAAE;YACZ,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;gBAChC,KAAK,CAAC;oBAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAAC,MAAM;gBACzC,KAAK,CAAC;oBAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBAAC,MAAM;aACzC;QACH,CAAC;QAED,aAAQ,GAAG,GAAG,EAAE;YACd,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;gBAChC,KAAK,CAAC;oBAAE,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAAC,MAAM;gBAC3C,KAAK,CAAC;oBAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAAC,MAAM;aAC3C;QACH,CAAC;QAED,yBAAoB,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;oBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,MAAM,CAAC,CAAC;iBAC7C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,uBAAkB,GAAG,GAAG,EAAE;YACxB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;oBAC1D,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,MAAM,CAAC,CAAC;iBAC7C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,sBAAiB,GAAG,GAAG,EAAE;YACvB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;oBAC1D,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,MAAM,CAAC,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;oBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,MAAM,CAAC,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,kBAAa,GAAG,GAAG,EAAE;YACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;gBAChC,KAAK,CAAC;oBAAE,IAAI,CAAC,yBAAyB,EAAE,CAAC;oBAAC,MAAM;gBAChD,KAAK,CAAC;oBAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAAC,MAAM;aAChD;QACH,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE,CAAC,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QAE1D,8BAAyB,GAAG,GAAG,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;iBACzB;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,sBAAsB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACpG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,6BAAwB,GAAG,GAAG,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAChE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;iBACxB;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,qBAAqB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnG;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAjKG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;;oFA9BU,kBAAkB;kGAAlB,kBAAkB;QCnB/B,yEACI;QAAA,yEACI;QAAA,8EACI;QAAA,iFACI;QAAA,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC9B,4DAAiB;QACjB,mFACI;QAAA,6EACI;QAAA,oFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,iFACI;QAD4B,yMAAiC;QAC7D,8HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,iFACI;QAD0B,uMAA+B;QACzD,8HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,qFACI;QAAA,4EACJ;QAD8D,4LAAyB;QAAnF,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,6EACJ;QAD4D,2LAAwB;QAAhF,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,kFACI;QAD6B,iMAAyB;QACtD,8HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,uIAOiB;QACjB,uFAA0K;QAAzH,8JAAgB,eAAW,CAAC,CAAC,IAAC,oGAAc,eAAW,CAAC,CAAC,IAA3B,kGAAyC,eAAW,CAAC,CAAC,IAAtD,kHAA4E,iBAAa,IAAzF;QAA2F,4DAAkB;QAChM,4DAAO;QACP,mIAA8C;QAClD,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QACV,4DAAM;QACN,iHAIM;QACN,iHAIM;;QApDkD,2DAAiC;QAAjC,4FAAiC;QAClC,0DAAe;QAAf,qFAAe;QAOhB,0DAA+B;QAA/B,0FAA+B;QAC9B,0DAAa;QAAb,mFAAa;QAMc,0DAAyB;QAAzB,oFAAyB;QAG3B,0DAAwB;QAAxB,mFAAwB;QAI/C,0DAAyB;QAAzB,oFAAyB;QACzB,0DAAQ;QAAR,8EAAQ;QAKV,0DAA2C;QAA3C,+GAA2C;QAQ7D,0DAA+B;QAA/B,4FAA+B;QAErC,0DAAc;QAAd,8EAAc;QAK3B,0DAA0D;QAA1D,8HAA0D;QAK1D,0DAA+B;QAA/B,+FAA+B;;;;;;;;;;;;;;ACzDjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;;;;;;;ICEtF,4EAEgE;IAFF,8TAAoB;IAElB,kEAAO;IAAA,4DAAS;;;IAD5E,4JAAqF;;;;IAEzF,4EAE+D;IAFD,uUAA0B;IAEzB,iEAAM;IAAA,4DAAS;;;IAD1E,4JAAqF;;;;IAEzF,4EAE+D;IAFD,4UAA+B;IAE9B,qEAAU;IAAA,4DAAS;;;IAD9E,oKAA6F;;;;IAEjG,4EAE+D;IAFD,oUAAuB;IAEtB,uEAAY;IAAA,4DAAS;;;IADhF,oKAA6F;;;;IAEjG,4EAEgE;IAFF,qUAAwB;IAEtB,wEAAa;IAAA,4DAAS;;;IADlF,kMAAoH;;;;IAExH,4EAEgE;IAFF,qUAAwB;IAEtB,wEAAa;IAAA,4DAAS;;;IADlF,kMAAoH;;;;IAExH,4EAC+D;IADD,sUAAyB;IACxB,oEAAS;IAAA,4DAAS;;;IADO,4GAA4C;;;;IAEpI,4EACmE;IADL,oUAAsB;IACjB,uDAGpD;IAAA,4DAAS;;;IAH2C,0DAGpD;IAHoD,yOAGpD;;ADVZ,MAAM,wBAAwB;IAEnC,YACU,iBAA8D,EAChC,IAAkB;QADhD,sBAAiB,GAAjB,iBAAiB,CAA6C;QAChC,SAAI,GAAJ,IAAI,CAAc;QAM1D,WAAM,GAAG,CAAC,MAAW,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE/E,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;YAC1C,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnE,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/D,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YACnC,IAAI,CAAC,MAAM,CAAC;gBACV,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS;aAC3C,CAAC,CAAC;QACL,CAAC;IArDG,CAAC;IAEL,QAAQ;IACR,CAAC;;gGARU,wBAAwB,qNAIzB,oFAAqB;wGAJpB,wBAAwB;QCjBrC,kFACI;QAAA,4EACiD;QADa,gJAAS,oBAAgB,IAAC;QACvC,gEAAK;QAAA,4DAAS;QAC/D,0HAEgF;QAChF,0HAE8E;QAC9E,0HAEkF;QAClF,0HAEoF;QACpF,0HAEsF;QACtF,0HAEsF;QACtF,0HACiF;QACjF,4HAIwB;QAC5B,4DAAkB;;QA1BV,0DAA4C;QAA5C,yGAA4C;QAG3C,0DAAyD;QAAzD,yHAAyD;QAGzD,0DAAwD;QAAxD,wHAAwD;QAGxD,0DAAwD;QAAxD,wHAAwD;QAGxD,0DAAwD;QAAxD,wHAAwD;QAGxD,0DAAyD;QAAzD,yHAAyD;QAGzD,0DAAyD;QAAzD,yHAAyD;QAEzD,0DAAwD;QAAxD,wHAAwD;QAExD,0DAA4D;QAA5D,4HAA4D;;;;;;;;;;;;;;ACxBrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAGM;;;;;;;;;;;;;;;ICGlE,mFACI;IAD+D,yXAAkC;IACjG,8EAAwB;IAAA,mEAAQ;IAAA,4DAAW;IAC3C,wEAAa;IAAA,uDAAkB;IAAA,4DAAK;IACxC,4DAAgB;;;IADC,0DAAkB;IAAlB,kFAAkB;;;ADKxC,MAAM,kBAAkB;IAa7B,YACS,QAAqB,EACpB,EAAuB;QADxB,aAAQ,GAAR,QAAQ,CAAa;QACpB,OAAE,GAAF,EAAE,CAAqB;QAXvB,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAErC,WAAM,GAAG,CAAC,CAAC;QACX,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxC,cAAS,GAAG,CAAC,CAAC;QAEd,cAAS,GAAG,EAAE,CAAC;QAsBtB,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBACpG,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;wBACxB,IAAI,CAAC,WAAW,EAAE,CAAC;qBACpB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,EAAU,EAAE,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC3D,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;qBAChC;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,CAAY,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IA1CG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,kEAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/D,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,iBAAiB,GAAG,mEAAY,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACnF;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,iBAAiB,GAAG,mEAAY,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SAC7F;IACH,CAAC;;oFA/BU,kBAAkB;kGAAlB,kBAAkB;QCb/B,8EACI;QAAA,mFACI;QAAA,oFACI;QAAA,2EACJ;QADoB,yIAAS,iBAAa,IAAC;QAAvC,4DACJ;QAAA,4DAAiB;QACjB,+EACI;QAAA,kIAGgB;QACpB,4DAAe;QACf,mFACA;QAD2F,qJAAQ,sBAAkB,IAAC;QACtH,4DAAgB;QACpB,4DAAmB;QACvB,4DAAW;;QAXiE,0DAAuB;QAAvB,kFAAuB;QAG1C,0DAAoB;QAApB,0FAAoB;QAKtD,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;ACRxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;;;;;;;;;;;;;ICc5B,0EAA8C;;;ADL/C,MAAM,iBAAiB;IAQ5B,YACU,QAAqB,EACrB,WAA8B;QAD9B,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAmB;QATjC,WAAM,GAAQ,EAAE,CAAC;QACjB,WAAM,GAAG,UAAU,CAAC;QACpB,kBAAa,GAAyB;YAC3C,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;SACpH,CAAC;QACK,aAAQ,GAAG,KAAK,CAAC;QAUxB,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;IARG,CAAC;IAEL,QAAQ;IACR,CAAC;IAOD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;gBAC1D,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,yDAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFA/CU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACE;QAAA,yEACE;QAAA,8EACE;QAAA,iFACE;QAAA,qEAAI;QAAA,8EAAmB;QAAA,4DAAK;QAC9B,4DAAiB;QACjB,mFACE;QAAA,6EACE;QAAA,oFACE;QAAA,4EACF;QADgD,2LAAyB;QAAvE,4DACF;QAAA,4DAAiB;QACjB,qFACE;QAAA,4EACF;QAD+C,0LAAwB;QAArE,4DACF;QAAA,4DAAiB;QACjB,mFAAsF;QAA/B,yMAA8B;QAAC,2EAAe;QAAA,4DAAe;QACpH,sFAAwI;QAAvF,yJAAY,cAAU,IAAC,iHAAqB,iBAAa,IAAlC,qGAAkD,gBAAY,IAA9D;QAAgE,4DAAkB;QAC5J,4DAAO;QACP,kIAA8C;QAChD,4DAAmB;QACrB,4DAAW;QACb,4DAAM;QACR,4DAAM;;QAZoD,2DAAyB;QAAzB,oFAAyB;QAG1B,0DAAwB;QAAxB,mFAAwB;QAEhB,0DAA8B;QAA9B,yFAA8B;QACpE,0DAA+B;QAA/B,4FAA+B;QAEnC,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACfrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAId;AAC1B;;;AAKlB,MAAM,cAAc;IAIzB,mCAAmC;IAEnC,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJlB,cAAS,GAAG,SAAS,CAAC;QAO5B,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;QAC7C,kGAAkG;IACpG,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,4CAAY,CAAC,IAAI,CAAC,EAAE;QAC5E,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,CAAC,OAAgB;QACnB;;;;aAIK;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EACpI,OAAO;QACP,gBAAgB;SACjB,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;4EArCU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAGd;AAC1B;;;AAKlB,MAAM,WAAW;IAKtB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,cAAS,GAAG,MAAM,CAAC;QAKzB,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;IAC/C,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,4CAAY,CAAC,IAAI,CAAC,EAAE,CAC7E,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,CAAC,OAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EACrF,OAAO,CACR,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,8BAA8B,CAC1D,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;sEA5BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAGiF;AAEzD;AAEiB;AAOrD;;;;;;;;;;;;;;;;;;;;ICVhB,+EAAoI;IAAzE,sXAAgD;IAAyB,4DAAW;;;;IAAxG,+EAAmB;;;;IAFlE,gFACI;IAAA,6EACI;IADiC,6YAAkC;IACnE,mIAA+I;IACnJ,4DAAM;IACV,4DAAU;;;IAJ0C,4FAAuB;IAE3C,0DAAa;IAAb,kFAAa;;ADWzD,oCAAoC;AAO7B,MAAM,kBAAkB;IAmB7B,YACS,MAAiB,EAChB,QAAqB,EACrB,EAAuB,EACxB,QAAqB,EACrB,WAA2B,EAC1B,UAAgC,EAChC,MAAc;QANf,WAAM,GAAN,MAAM,CAAW;QAChB,aAAQ,GAAR,QAAQ,CAAa;QACrB,OAAE,GAAF,EAAE,CAAqB;QACxB,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAgB;QAC1B,eAAU,GAAV,UAAU,CAAsB;QAChC,WAAM,GAAN,MAAM,CAAQ;QAxBjB,YAAO,GAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAE9B,aAAQ,GAAG,KAAK,CAAC;QAMjB,iBAAY,GAAW,EAAE,CAAC;QAC1B,0BAAqB,GAAW,EAAE,CAAC;QAGnC,uBAAkB,GAAG,CAAC,CAAC;QACvB,kBAAa,GAAY,IAAI,CAAC;QAE7B,YAAO,GAAG,IAAI,iDAAY,EAAE,CAAC;QAuCrC,eAAU,GAAG,GAAG,EAAE;YAChB,8DAA8D;YAC9D,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpG,gCAAgC;YAChC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9G,yCAAyC;YACzC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1F,yCAAyC;YACzC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;YAC1D,yEAAyE;YACzE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B;;;;eAIG;QACL,CAAC;QAED,0BAAqB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG;YACpD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;YACvD,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;gBAChE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;aACnE;YACD,OAAO,EAAE,EAAE;SACZ;QAED,cAAS,GAAG,CAAC,UAAU,GAAG,KAAK,EAAE,eAAoB,EAAE,EAAE,EAAE;YACzD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1F,IAAI,CAAC,UAAU,EAAE;oBACf,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;oBACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;qBAAM;oBACL,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;oBACjC,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAChD;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,sBAAiB,GAAG,CAAC,eAAoB,EAAE,EAAE,EAAE;YAC7C,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,qBAAqB,EAAE;gBAC1C,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE;oBACvB,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;iBACnE;aACF;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE;oBAC5D,IAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC3B;aACF;QACH,CAAC;QAOD,aAAQ,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAoC7C,sBAAiB,GAAG,CAAC,CAAM,EAAE,EAAE;YAC7B,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE;gBAC/B,KAAK,CAAC;oBAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAAC,MAAM;gBACxD,KAAK,CAAC;oBAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;oBAAC,MAAM;aACrD;QACH,CAAC;QAED,mBAAc,GAAG,CAAC,CAAM,EAAE,OAAe,EAAE,EAAE;YAC3C,6BAA6B;YAC7B,iDAAiD;YACjD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACtE,oCAAoC;YACpC,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE;gBAChB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACrF,oCAAoC;gBACpC,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE;oBAChB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,GAAG,OAAO,CAAC;iBAC7D;aACF;QACH,CAAC;QAED,gBAAW,GAAG,CAAC,CAAM,EAAE,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjE,oBAAoB;gBACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;oBACvC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,OAAO,CAAC;oBACpC,uBAAuB;oBACvB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClD,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBACtE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBAC9E,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;oBAClE,6BAA6B;oBAC7B,QAAQ,IAAI,CAAC,kBAAkB,EAAE;wBAC/B,KAAK,CAAC;4BAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAAC,MAAM;wBACzC,KAAK,CAAC;4BAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;4BAAC,MAAM;wBACzC,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBACpC;iBACF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnE;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAmDD,uBAAkB,GAAG,CAAC,MAAW,IAAI,EAAE,EAAE;YACvC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,GAA0B,EAAE,EAAE;gBAC7D,IAAI,GAAG,KAAK,OAAO,EAAE;oBACnB,2BAA2B;oBAC3B,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;qBAC1C;yBAAM;wBACL,2DAA2D;wBAC3D,iFAAiF;wBACjF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACvB;iBACF;qBAAM,IAAI,GAAG,KAAK,MAAM,EAAE;oBACzB,yDAAyD;oBACzD,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC9C,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;qBAC/E;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,yBAAoB,GAAG,GAAG,EAAE;YAC1B,4CAA4C;YAC5C,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACpC,uDAAuD;YACvD,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;YAC/C,4DAA4D;YAC5D,IAAI,CAAC,aAAa,CAAC,8BAA8B,EAAE,CAAC;YACpD,+CAA+C;YAC/C,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YACvC,6CAA6C;YAC7C,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAC3C,+FAA+F;YAC/F,8EAA8E;YAC9E,mCAAmC;YACnC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,yBAAyB;QAC3B,CAAC;QAED,oBAAe,GAAG,CAAC,OAAgB,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE;YACtB,uEAAuE;YACvE,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1G,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;gBAC7F,wCAAwC;gBACxC,IAAI,QAAQ,KAAK,CAAC,EAAE;oBAClB,IAAI,CAAC,cAAc,CAAC;wBAClB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;wBAC1C,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI;qBACtC,EAAE,CAAC,CAAC,CAAC;iBACP;aACF;QACH,CAAC;QAED,wBAAmB,GAAG,CAAC,YAAqB,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACnF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YACjE,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,uBAAkB,GAAG,GAAG,EAAE;YACxB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAuB,EAAE;gBAC/D,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;gBACnE,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE;aACtC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAClD,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;iBAC1C;qBAAM;oBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAED,oBAAe,GAAG,CAAC,GAAQ,EAAE,YAAY,GAAG,IAAI,EAAE,EAAE;YAClD,iCAAiC;YACjC,IAAG,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+EAA+E,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACjI,OAAO;aACR;YAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,GAAuB,EAAE,EAAE;gBAChF,mDAAmD;gBACnD,yBAAyB;gBACzB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACvB,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;wBAC5B,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;qBACnE;yBAAM;wBACL,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;4BACpB,IAAI,CAAC,gBAAgB,GAAG;gCACtB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI;gCAChC,OAAO,EAAE;oCACP,EAAE,OAAO,EAAE,CAAC,EAAE;iCACf;6BACF,CAAC;yBACH;wBACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBACzB;oBACD,0DAA0D;oBAC1D,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,YAAY,EAAE;wBAChB,iDAAiD;wBACjD,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;wBACtE,QAAQ,IAAI,CAAC,kBAAkB,EAAE;4BAC/B,KAAK,CAAC;gCAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAAC,MAAM;4BACzC,KAAK,CAAC;gCAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC;gCAAC,MAAM;4BACzC,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;yBACpC;qBACF;yBAAM;wBACL,mFAAmF;wBACnF,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACvB;iBACF;qBAAM;oBACL,IAAI,GAAG,CAAC,OAAO,EAAE;wBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBACnE;oBACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACtB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;4BACpB,IAAI,CAAC,gBAAgB,GAAG;gCACtB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI;gCAChC,OAAO,EAAE;oCACP,EAAE,OAAO,EAAE,CAAC,EAAE;iCACf;6BACF,CAAC;yBACH;qBACF;oBACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;gBACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;IAnXG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;YAE9E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAEjH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,GAAQ,EAAE,EAAE;gBAC5C,oBAAoB;gBACpB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;IAClG,CAAC;IAED,eAAe;QACb,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QACtC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IA2DD,UAAU;QACR,4DAA4D;QAC5D,6DAA6D;IAC/D,CAAC;IAID,WAAW,CAAC,CAAM;QAChB,uCAAuC;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,KAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;aAC3B;iBAAM;gBACL,MAAM,YAAY,GAAG,GAAG,qDAAM,CAAC,eAAe,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;gBACxE,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,KAAK,CAAC,EAAE;oBACjC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;oBAC5B,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sIAA2B,EAAE;wBACpE,KAAK,EAAE,KAAK;wBACZ,YAAY,EAAE,IAAI;wBAClB,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE;qBAC/B,CAAC,CAAC;oBAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAY,EAAE,EAAE;wBACvD,IAAI,GAAG,EAAE;4BACP,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;4BACzB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;4BAC9C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC,CACH,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC/C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;iBAC3B;aACF;SACF;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+EAA+E,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAClI;IACH,CAAC;IAiDD,mBAAmB,CAAC,CAAM;;QACxB,kBAAkB;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,sBAAsB,GAAG;YAC5B,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;YAClC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;YACb,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI;YACb,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM;YACjB,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,GAAG;YACf,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,KAAK;YACf,uBAAuB,EAAE,KAAK;YAC9B,OAAO,EAAE,CAAC;YACV,aAAa,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI;YACzC,OAAO,EAAE;gBACP;oBACE,MAAM,EAAE,CAAC;oBACT,MAAM,EAAE,WAAI,CAAC,aAAa,0CAAE,MAAM,KAAI,OAAO;oBAC7C,SAAS,EAAE,EAAE;iBACd;aACF;SACF,CAAC;QAEF,IAAI,CAAC,CAAC,CAAC,WAAW,KAAK,CAAC,EAAE;YACxB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE;gBACxD,KAAK,EAAE,KAAK;gBACZ,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE,IAAI,CAAC,sBAAsB;aAClC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACd,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;gBACvD,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;oBACrC,sDAAsD;oBACtD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;iBACrB;qBAAM;oBACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;YACH,CAAC,CAAC,CACH,CAAC;SACH;aAAM;YACL,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;YAC3E,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACrB;IACH,CAAC;;oFAxPU,kBAAkB;kGAAlB,kBAAkB;;;;;;;;;;;;QC3B/B,2FACI;QACA,oFACI;QADmC,oMAA6B,2GAAiB,2BAAuB,IAAxC;QAChE,yFAA2K;QAA3E,gKAAe,gBAAY,IAAC,oHAAmB,8BAA0B,IAA7C;QAA+C,4DAAmB;QAClM,4DAAc;QACd,sFACI;QAAA,mFACI;QAAA,sHAIU;QACd,4DAAgB;QACpB,4DAAsB;QAC1B,4DAAwB;;QAZmB,0DAA6B;QAA7B,wFAA6B;QAC/B,0DAA8B;QAA9B,2FAA8B;QAIxB,0DAAe;QAAf,qFAAe;;;;;;;;;;;;;;ACN9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC6B;AAEd;AACY;AACR;AACiB;AACX;AACM;AACa;AACzB;AACS;AACA;AACD;AAClF,mGAAmG;AACnG,sGAAsG;AACJ;AACP;AACN;;;AAErF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAa,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IACzE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8FAAkB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sFAAc,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IACtE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uGAAkB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,4FAAe,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC3E,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAiB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC/E,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAa,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAC;IACtE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,gGAAgB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAC;IAC5E,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,+GAAuB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gGAAkB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+GAAqB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IACpF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wGAAkB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kGAAmB,EAAE,WAAW,EAAE,CAAC,kFAAS,CAAC,EAAE;IAChF,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,kBAAkB,EAAE,SAAS,EAAE,MAAM,EAAE;CAClE,CAAC;AAMK,MAAM,wBAAwB;;wGAAxB,wBAAwB;2KAAxB,wBAAwB,kBAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;oIAEX,wBAAwB,uFAFzB,4DAAY;;;;;;;;;;;;;;;;;;;;;;AC/BjB,MAAM,kBAAkB;IAI7B;QAiBA,oBAAe,GAAG,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEpD,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QAlBjE,IAAI,CAAC,MAAM,GAAG;YACZ,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,CAAC;YACV,eAAe,EAAE,CAAC;YAClB,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;;oFAnBU,kBAAkB;kGAAlB,kBAAkB;;;;;;QCV/B,yEACE;QAAA,yEACE;QAAA,4FAA+E;QAA3C,+KAAkB,2BAAuB,IAAC;QAAC,4DAAsB;QACvG,4DAAM;QACN,yEACE;QAAA,2FAA0F;QAAtC,4KAAoB,oBAAgB,IAAC;QAAC,4DAAqB;QACjH,4DAAM;QACR,4DAAM;;QAFgC,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;ACJvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;AAiBlE,MAAM,oBAAoB;IAK/B,YACS,SAA6C,EAC5C,QAAqB,EACrB,WAA2B,EACH,IAAkB;QAH3C,cAAS,GAAT,SAAS,CAAoC;QAC5C,aAAQ,GAAR,QAAQ,CAAa;QACrB,gBAAW,GAAX,WAAW,CAAgB;QACH,SAAI,GAAJ,IAAI,CAAc;QAyBpD,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;gBAChI,IAAI,GAAG,GAAG,CAAC,EAAE;oBACX,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAClD,IAAI,GAAG,CAAC,KAAK,EAAE;4BACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,2BAA2B,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;4BAC/E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;yBAC5B;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBAC5E;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qEAAqE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1H;aACF;QACH,CAAC;IA3CG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG;gBACb,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;gBACzB,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;gBACpB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO;gBAC3B,UAAU,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;gBAClC,uBAAuB,EAAE,CAAC;gBAC1B,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO;gBACrB,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,YAAY,EAAE,KAAK;aACpB,CAAC;YACF,IAAI,CAAC,WAAW,GAAG;gBACjB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;gBACvC,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,EAAE;aACd,CAAC;SACH;IACH,CAAC;;wFAhCU,oBAAoB,+dASrB,wEAAe;oGATd,oBAAoB;QClBjC,wEAAqB;QAAA,uDAAkD;QAAA,4DAAK;QAC5E,yEACI;QAAA,6EACI;QAAA,oFACI;QAAA,2EACJ;QADmE,oMAAgC;QAA/F,4DACJ;QAAA,4DAAiB;QACrB,4DAAO;QACX,4DAAM;QACN,yEACI;QAAA,4EACI;QADsB,4IAAS,cAAU,IAAC;QAC1C,qEACJ;QAAA,4DAAS;QACT,6EACI;QADmD,6IAAS,aAAS,IAAC;QACtE,qEACJ;QAAA,4DAAS;QACb,4DAAM;;;QAfe,0DAAkD;QAAlD,4HAAkD;QAII,0DAAgC;QAAhC,2FAAgC;QAQ5B,0DAAuC;QAAvC,qFAAuC;;;;;;;;;;;;;;ACXtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;;;ICKzD,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF4C,2EAAe;IACpE,0DACJ;IADI,2FACJ;;;IAMA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF2C,0EAAc;IAClE,0DACJ;IADI,0FACJ;;ADwBT,MAAM,mBAAmB;IAK9B,YACS,SAA4C,EAC3C,WAA2B,EAC3B,QAAqB,EACG,IAAmB;QAH5C,cAAS,GAAT,SAAS,CAAmC;QAC3C,gBAAW,GAAX,WAAW,CAAgB;QAC3B,aAAQ,GAAR,QAAQ,CAAa;QACG,SAAI,GAAJ,IAAI,CAAe;IACjD,CAAC;IAEL,QAAQ;QACN,6EAA6E;IAC/E,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,WAAW,CAAC,QAAgB,EAAE,OAAe;QAC3C,mCAAmC;QACnC,mCAAmC;QACnC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChF,oBAAoB;YACpB,IAAI,GAAG,CAAC,KAAK,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC/D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3E;QACH,CAAC,CAAC,CAAC;QACH;;;;;;;;;;;;UAYE;IACJ,CAAC;IAED,SAAS;QACP,sBAAsB;IACxB,CAAC;;sFAjDU,mBAAmB,+dASpB,wEAAe;mGATd,mBAAmB;QCxChC,wEAAqB;QAAA,uEAAY;QAAA,4DAAK;QACtC,yEACI;QAAA,6EACI;QAAA,iFACI;QAAA,4EAAW;QAAA,yEAAc;QAAA,4DAAY;QACrC,gFACI;QADwB,8LAAsB;QAC9C,6HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACjB,kFACI;QAAA,6EAAW;QAAA,4EAAgB;QAAA,4DAAY;QACvC,iFACI;QADuB,8LAAqB;QAC5C,+HAEa;QACjB,4DAAa;QACjB,4DAAiB;QACrB,4DAAO;QACX,4DAAM;QACN,0EACI;QAAA,6EACI;QADsB,4IAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADmD,4IAAS,0CAA8B,IAAC;QAC3F,0EACJ;QAAA,4DAAS;QAMb,4DAAM;;;QA5BkC,0DAAsB;QAAtB,iFAAsB;QAChB,0DAAyB;QAAzB,+FAAyB;QAOhC,0DAAqB;QAArB,gFAAqB;QACf,0DAAyB;QAAzB,+FAAyB;QAW8B,0DAAuG;QAAvG,sKAAuG;;;;;;;;;;;;;;ACvB3M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACoB;AAId;AAC1B;;;AAKlB,MAAM,YAAY;IAKvB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,cAAS,GAAG,OAAO,CAAC;QAK1B,IAAI,CAAC,WAAW,GAAG,IAAI,yEAAmB,EAAE,CAAC;IAC/C,CAAC;IAED,GAAG,CAAC,OAAY,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,4CAAY,CAAC,IAAI,CAAC,EAAE,CAC7E,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,IAAI,CAAC,OAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,WAAW,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EACpG,OAAO,CACR,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU,CAAC,OAAe,EAAE,OAAY,EAAE;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,mBAAmB,OAAO,IAAI,4CAAY,CAAC,IAAI,CAAC,EAAE,CAChG,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,WAAW,CAAC,OAAqB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,oBAAoB,OAAO,CAAC,KAAK,EAAE,EAChF,OAAO,CACR,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,aAAa,CAAC,OAAqB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,mBAAmB,OAAO,CAAC,KAAK,EAAE,EAC/E,OAAO,CACR,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,mBAAmB,CAAC,eAAuB,EAAE,YAAoB;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB,GAAG,qDAAM,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,0BAA0B,eAAe,IAAI,YAAY,EAAE,CACzG,CAAC,IAAI,CAAC,4DAAK,CAAC,qDAAM,CAAC,UAAU,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC;IAC9E,CAAC;;wEAhDU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACS;AACX;AACU;AACT;AACA;AACqB;AACX;AAED;AACA;AACW;AACT;AACF;AACM;AACN;AACE;AACE;AACI;AACJ;AACK;AACH;AACN;AACS;AACC;AACN;AACE;AACM;AACN;AACL;AACC;AACA;AACa;AAEC;AACR;AAEV;AAEmB;AACU;AACjB;AACiB;AACM;AACgC;AACnC;AACE;AACH;AACd;AACmC;AAC/B;AACiB;AACH;AACQ;AACL;AACoB;AACH;AAC5B;AACM;AACa;AACzB;AACS;AACiB;AACH;AACd;AACD;AACc;AACG;AACD;AACP;AACiB;AACH;AACiB;AAC/B;AACQ;AACd;AACc;AACqB;AAChC;AAC+C;AACnC;AAC0B;;AA0DvH,MAAM,iBAAiB;;iGAAjB,iBAAiB;6JAAjB,iBAAiB,mBAJjB;QACT,2EAAmB;KACpB,YAxCQ;YACP,4DAAY;YACZ,qFAAwB;YACxB,qEAAgB;YAChB,0DAAW;YACX,mEAAmB;YACnB,kEAAY;YACZ,yDAAS;YACT,yDAAS;YACT,8EAAgB;YAChB,qEAAgB;YAChB,oEAAa;YACb,oEAAa;YACb,gFAAkB;YAClB,uEAAc;YACd,qEAAa;YACb,2EAAgB;YAChB,qEAAa;YACb,uEAAc;YACd,yEAAe;YACf,6EAAiB;YACjB,yEAAe;YACf,8EAAiB;YACjB,2EAAgB;YAChB,qEAAa;YACb,8EAAiB;YACjB,+EAAkB;YAClB,yEAAe;YACf,2EAAgB;YAChB,iFAAmB;YACnB,2EAAmB;YACnB,6EAAqB;YACrB,sEAAc;YACd,uEAAc;YACd,uEAAc;YACd,oFAAoB;YACpB,qFAAiB;SAClB;oIAKU,iBAAiB,mBArD1B,+FAAkB,EAAE,8EAAa,EAAE,+FAAkB,EAAE,qGAAoB,EAAE,qIAA8B,EAAE,kGAAmB;QAChI,oGAAkB,EAAE,iGAAiB,EAAE,mFAAa,EAAE,sHAAyB,EAAE,uFAAc,EAAE,wGAAmB;QACpH,qGAAkB,EAAE,6GAAqB,EAAE,wGAAkB,EAAE,4HAAqB,EAAE,yHAAoB,EAAE,6FAAe;QAC3H,mGAAiB,EAAE,gHAAuB,EAAE,uFAAa,EAAE,gGAAgB,EAAE,iHAAuB,EAAE,8GAAsB;QAC5H,gGAAkB,EAAE,+FAAgB,EAAE,6GAAoB,EAAE,gHAAqB,EAAE,+GAAqB;QACxG,wGAAkB,EAAE,yHAAuB,EAAE,sHAAsB,EAAE,uIAA8B,EAAE,wGAAqB;QAC1H,gHAAsB,EAAE,kGAAmB,EAAE,gHAAuB,EAAE,qIAA8B,EAAE,qGAAoB;QAC1H,oJAAmC;QACnC,iHAAwB;QACxB,2IAA8B,aAG9B,4DAAY;QACZ,qFAAwB;QACxB,qEAAgB;QAChB,0DAAW;QACX,mEAAmB;QACnB,kEAAY;QACZ,yDAAS;QACT,yDAAS;QACT,8EAAgB;QAChB,qEAAgB;QAChB,oEAAa;QACb,oEAAa;QACb,gFAAkB;QAClB,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,qEAAa;QACb,uEAAc;QACd,yEAAe;QACf,6EAAiB;QACjB,yEAAe;QACf,8EAAiB;QACjB,2EAAgB;QAChB,qEAAa;QACb,8EAAiB;QACjB,+EAAkB;QAClB,yEAAe;QACf,2EAAgB;QAChB,iFAAmB;QACnB,2EAAmB;QACnB,6EAAqB;QACrB,sEAAc;QACd,uEAAc;QACd,uEAAc;QACd,oFAAoB;QACpB,qFAAiB;;;;;;;;;;;;;;;;;;;;;;AC5Hd,MAAM,kBAAkB;IAK7B;QASA,aAAQ,GAAG,CAAC,GAAc,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QAEhD,qBAAgB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,CAAC;QAV3D,IAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,QAAQ;IACR,CAAC;;oFAZU,kBAAkB;kGAAlB,kBAAkB;;;;;;QCV/B,yEACI;QAAA,yEACI;QAAA,6FAAgE;QAAhC,wKAAc,oBAAgB,IAAC;QAAC,4DAAuB;QAC3F,4DAAM;QACN,yEACI;QAAA,4FAAmF;QAApC,qKAAgB,sBAAkB,IAAC;QAAC,4DAAsB;QAC7G,4DAAM;QACV,4DAAM;;QAFiC,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;ACLtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0F;AAO1C;AAG2B;AACM;AACqB;AAEuB;AACE;AACjB;AAChC;AAC+C;AAa7H,uCAAuC;AACJ;;;;;;;;;;;;;;;;;;;;;;;;IC9B3B,2EACI;IAAA,uDACJ;IAAA,4DAAO;;;IADH,0DACJ;IADI,kOACJ;;;;IAqBI,6EAEI;IADA,0XAAuC;IACvC,uDACJ;IAAA,4DAAS;;;IAHsG,2FAA8B;IAEzI,0DACJ;IADI,0FACJ;;;;IACA,6EACI;IADsD,uUAAuB;IAC7E,kEACJ;IAAA,4DAAS;;;IAPb,0EACI;IAAA,6HAGS;IACT,6HAES;IACb,4DAAM;;;IAPuF,0DAAoB;IAApB,6FAAoB;IAI1B,0DAA0F;IAA1F,2KAA0F;;;;;IAQ7K,qFACI;IAAA,gFACJ;IADmI,sWAA0B;IAAzJ,4DACJ;IAAA,4DAAiB;;;IADkH,0DAA0B;IAA1B,wFAA0B;;;IAC5I,gEACjB;;;;IACI,6EAEI;IAFuD,ibAA6B;IAEpF,uDACJ;IAAA,4DAAS;;;;IAFL,qJAAoE;IACpE,0DACJ;IADI,6FACJ;;;IAJJ,wEACI;IAAA,uIAGS;IACb,qEAAe;;;IAH+D,0DAAoB;IAApB,oFAAoB;;;IAMlG,0EAA8D;IAAA,uDAAiC;IAAA,4DAAO;;;IAAxC,0DAAiC;IAAjC,8GAAiC;;;IAC/F,0EAAgE;IAAA,oGAAyC;IAAA,4DAAO;;;;IAapG,6EAEI;IADA,sUAA4B;IAC5B,oEACJ;IAAA,4DAAS;;;IAFwB,0HAAmD;;;;IAGpF,6EAGI;IAFA,iUAAuB;IAEvB,mEACJ;IAAA,4DAAS;;;IAHmB,0HAAmD;;;;IAI/E,6EAGI;IAFA,yUAA+B;IAE/B,uEACJ;IAAA,4DAAS;;;IAH2B,kIAA2D;;;;IAI/F,6EAGI;IAFA,iUAAuB;IAEvB,yEACJ;IAAA,4DAAS;;;IAHmB,oIAA2D;;;;IAIvF,6EAEI;IADA,kUAAwB;IACxB,0EACJ;IAAA,4DAAS;;;IAFoB,kJAAiE;;;;IAG9F,6EAEI;IADA,kUAAwB;IACxB,0EACJ;IAAA,4DAAS;;;IAFoB,kJAAiE;;;;IAG9F,6EAGI;IAFA,kUAAwB;IAExB,sEACJ;IAAA,4DAAS;;;IAHoB,4FAA2B;;;;IAIxD,6EAEI;IAFqE,gUAAsB;IAE3F,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,2MACJ;;;;IAcZ,kGAE6E;IAAjD,sZAAgD;IAAC,4DAA8B;;;IAF5C,wGAAuC;;ADxE3G,MAAM,oBAAoB;IA2B/B;IACE,0BAA0B;IACnB,MAAiB,EAChB,QAAqB,EACtB,WAA2B,EAC1B,MAAc,EACd,EAAuB,EACvB,WAA8B,EAC9B,UAAgC,EAChC,YAA6B;QAP9B,WAAM,GAAN,MAAM,CAAW;QAChB,aAAQ,GAAR,QAAQ,CAAa;QACtB,gBAAW,GAAX,WAAW,CAAgB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,eAAU,GAAV,UAAU,CAAsB;QAChC,iBAAY,GAAZ,YAAY,CAAiB;QAjC9B,kBAAa,GAAY,IAAI,CAAC;QAC7B,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEpC,gBAAW,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAMvD,sBAAiB,GAAG,KAAK,CAAC;QAC1B,qBAAgB,GAAG,KAAK,CAAC;QAEzB,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QAGd,eAAU,GAAqB,EAAE,CAAC;QAClC,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAa,EAAE,CAAC;QAC5B,YAAO,GAAG,CAAC,CAAC;QACZ,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAW,IAAI,CAAC;QAC5B,2BAAsB,GAAG,IAAI,CAAC;QA+BrC,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG;YACtC,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;YACvD,IAAI,EAAE;gBACJ,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;gBAChE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;aACnE;YACD,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,EAAE;SACZ;QACD,mCAA8B,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QAC3E,8BAAyB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACjE,sBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;QAC1G,0BAAqB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QAEtE,uBAAkB,GAAG,CAAC,OAAyB,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEjG,kBAAa,GAAG,CAAC,IAAsB,EAAE,EAAE;YACzC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACtB,gBAAgB,EAChB,KAAK,MAAM,MAAM,IAAI,GAAG,CAAC,eAAe,EAAE;oBACxC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE;wBACjC,IAAI,CAAC,GAAG,CAAC,WAAW,KAAK,CAAC,EAAE;4BAC1B,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;4BAC3B,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;4BACxB,SAAS,gBAAgB,CAAC;yBAC3B;qBACF;iBACF;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,qBAAgB,GAAG,CAAC,CAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;QAElG,mBAAc,GAAG,GAAG,EAAE;YACpB,uDAAuD;YACvD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAgB,EAAE,EAAE;oBAClG,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBACpB,MAAM,GAAG,GAAiB;4BACxB,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;4BACjB,MAAM,EAAE,GAAG,CAAC,WAAW;4BACvB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM;4BACnB,SAAS,EAAE,GAAG,CAAC,SAAS;4BACxB,YAAY,EAAE,GAAG,CAAC,YAAY;4BAC9B,MAAM,EAAE,GAAG,CAAC,MAAM;4BAClB,KAAK,EAAE,GAAG,CAAC,KAAK;4BAChB,QAAQ,EAAE,GAAG,CAAC,QAAQ;yBACvB,CAAC;wBACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;qBAC5B;oBACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC/B,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAED,gCAA2B,GAAG,CAAC,aAAiC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChF,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,EAAE;gBAClC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;aAC7B;YACD,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YAEpC,KAAK,MAAM,IAAI,IAAI,UAAU,CAAC,OAAO,EAAE;gBACrC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC9B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;wBAClC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;wBACxB,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW;wBAC9B,MAAM,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC;wBAC7B,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM;wBACtB,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ;wBACrB,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO;wBACnB,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK;wBACrC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBAC7E,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;wBACpB,cAAc,EAAE,KAAK;wBACrB,cAAc,EAAE,MAAM;wBACtB,eAAe,EAAE,CAAC,CAAC,CAAC,eAAe;wBACnC,cAAc,EAAE,CAAC,CAAC,CAAC,cAAc;wBACjC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS;wBAC/B,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,WAAW,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI;wBACnC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;wBAC9B,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK;wBACxB,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC;qBACpC,CAAC,CAAC;iBACJ;aACF;YACD,mEAAmE;QACrE,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,8DAA8D;YAC9D,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpE,mDAAmD;gBACnD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,oDAAoD;oBACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBACnE;qBAAM;oBACL,oDAAoD;oBACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC5E;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAwUD,cAAS,GAAG,CAAC,aAAqB,EAAE,EAAE,EAAE;YACtC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YACpF,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,iDAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YACtE,wDAAwD;YACxD,MAAM,OAAO,GAAG,qDAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAEzE,IAAI;gBACF,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oDAAoD,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACzG;YAED,yCAAyC;YACzC,gCAAgC;YAChC,oBAAoB;YACpB,aAAa;YACb,gCAAgC;YAEhC,wCAAwC;YACxC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;QAED,oBAAe,GAAG,GAAG,EAAE;YACrB,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpD,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;oBAC1D,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,QAAQ,EAAE,EAAE,kFAAkF,CAAC,CAAC;iBAC5H;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAW,GAAG,CAAC,OAA2B,EAAE,EAAE;YAC5C,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,kFAAkF;YAClF,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;gBAC1B,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;gBAC7B,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;aACpC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QAgGD,iBAAY,GAAG,GAAG,EAAE;YAClB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7F,MAAM,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACjH,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YAC9E,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC9F,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;gBACf,MAAM,MAAM,GAAY;oBACtB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBACnC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;oBAC9B,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC9B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC/B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC/B,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;iBAC5C,CAAC;gBAEF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC9C,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;wBACzD,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;4BACpE,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;4BACtC,IAAI,CAAC,YAAY,EAAE,CAAC;wBACtB,CAAC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAED,yBAAoB,GAAG,CAAC,GAAQ,EAAE,EAAE;YAClC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;QACxD,CAAC;QAED,iHAAiH;QACjH,aAAQ,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC;QAEvB,iBAAY,GAAG,GAAG,EAAE;YAClB,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;gBAC1D,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aACpC,CAAC,CAAC;YAEH,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC3C,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAClE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC1C;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,sBAAiB,GAAG,GAAG,EAAE;YACvB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yHAA8B,EAAE;gBAClE,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,cAAc,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,IAAI,EAAE,CAAC,EAAE;aACjE,CAAC,CAAC;YACH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAgB,EAAE,EAAE;gBACtD,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC9B,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAClH,IAAI,GAAG,CAAC,KAAK,EAAE;gCACb,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,QAAQ,CAAC;gCAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAChE;iCAAM;gCACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAC5E;wBACH,CAAC,CAAC,CAAC;qBACJ;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;gBAC5D,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aACpC,CAAC,CAAC;YAEH,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC9C,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,wBAAmB,GAAG,GAAG,EAAE;YACzB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wIAAmC,EAAE;gBAC3E,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,CAAC,IAAI,CAAC,yBAAyB,IAAI,EAAE,CAAC,EAAE;aAC1F,CAAC,CAAC;YAEH,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC9C,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iBAC5B;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IArrBG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;SAClH;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;QACzF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;QACxG,iDAAiD;IACnD,CAAC;IAiHD,iBAAiB,CAAC,QAAgB;QAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxF,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,aAAa,CAAC,KAAyB;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,4FAA4F;QAC5F,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,uBAAuB;;QACrB,MAAM,KAAK,GAAG,WAAI,CAAC,YAAY,0CAAE,MAAM,KAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7F,0CAA0C;IAC5C,CAAC;IAED,gBAAgB,CAAC,QAAa;QAC5B,yBAAyB;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,CAAC,EAAE;YACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAoB,EAAE;gBACxD,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,8GAAuB,CAC/B,QAAQ,EACR,IAAI,EAAE,IAAI,CACX;aACF,CAAC,CAAC;YAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC9C,oBAAoB;gBACpB,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3D,sEAAsE;oBACtE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;wBAC3H,gDAAgD;wBAChD,IAAI,aAAa,CAAC,KAAK,EAAE;4BACvB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC;4BACvC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;yBACnD;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,aAAa,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACrF;wBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC9B,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iDAAiD,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACtG;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SACpC;IACH,CAAC;IAED,mBAAmB,CAAC,QAAa;QAC/B,wCAAwC;QACxC,UAAU;QACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,yBAAyB;iBACvC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;YAEzG,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,cAAc,GAAG;oBACpB,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;iBACrG,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAClH,gDAAgD;oBAChD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACnD;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC3E;oBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,GAAG,GAAqB,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;gBAClE,IAAI,CAAC,cAAc,GAAG;oBACpB,cAAc,EAAE,GAAG,CAAC,cAAc,EAAE,eAAe,EAAE,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;oBACzH,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK;iBACpF,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAClH,iDAAiD;oBACjD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACnD;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC3E;oBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;IACH,CAAC;IAED,kBAAkB,CAAC,GAAQ;QACzB,MAAM,QAAQ,GAAuB,GAAG,CAAC,cAAc,IAAI,EAAE,CAAC;QAC9D,MAAM,OAAO,GAAuB,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxH,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC3D;aAAM;YACL,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC;SAC1C;QACD,IAAI,GAAG,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACnD;IACH,CAAC;IAED,oBAAoB,CAAC,KAAyB;QAC5C,sBAAsB;QACtB,MAAM,GAAG,GAAU,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,GAAG,CAAC,IAAI,CAAC;gBACP,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrB,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ;gBAC3B,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;gBACvB,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;gBACrB,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK;gBACrB,OAAO,EAAE,CAAC;gBACV,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe;gBACzC,cAAc,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc;aAExC,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,gBAAgB,CAAC,KAAK,GAAG,KAAK;QAC5B,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC7F,mCAAmC;QACnC,+BAA+B;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,cAAc,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC7F,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;YACnF,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,EAAE;gBAC5B,OAAO,GAAG,EAAE,CAAC;aACd;YACD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8GAAqB,EAAE;gBACzD,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,2GAAkB,CAC1B,kBAAkB,EAClB,OAAO,EACP,IAAI,EAAE,IAAI,CACX;aACF,CAAC,CAAC;YAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC/C,qBAAqB;gBACrB,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;oBACzC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC1B;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6CAA6C,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClG;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC1B;IACH,CAAC;IAED,YAAY,CAAC,KAAK,GAAG,KAAK;QACxB,6BAA6B;QAE7B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEvD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,uBAAuB;YACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAElF,MAAM,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAEjH,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YACpG,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC7B,yCAAyC;gBACzC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;gBAC9E,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACnF,2BAA2B;gBAC3B,sBAAsB;gBACtB,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;oBACf,2CAA2C;oBAC3C,MAAM,MAAM,GAAY;wBACtB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;wBACxB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;wBACnB,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO;wBAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,aAAa,EAAE,GAAG,CAAC,aAAa;qBACjC,CAAC;oBACF,+CAA+C;oBAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBAC9C,6CAA6C;wBAC7C,IAAI,GAAG,CAAC,KAAK,EAAE;4BACb,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;4BAC9C,kCAAkC;4BAClC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gCACpE,wDAAwD;gCACxD,IAAI,MAAM,CAAC,KAAK,EAAE;oCAChB,IAAI,CAAC,OAAO,EAAE,CAAC;iCAChB;gCAED,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gCACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gCACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gCAEzF,iCAAiC;gCACjC,IAAI,gBAAgB,GAAuB,EAAE,CAAC;gCAC9C,IAAI,YAAY,GAAuB,EAAE,CAAC;gCAE1C,IAAI;oCACF,gBAAgB,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;oCACnF,YAAY,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;oCAC/E,iEAAiE;iCAClE;gCAAC,OAAO,KAAK,EAAE;oCACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;oCAC9D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;oCAC3C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;oCACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iCACpB;gCAED,IAAI,CAAC,KAAK,EAAE;oCACV,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC/B,IAAI,WAAW,KAAK,CAAC,EAAE;4CAErB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gDAChC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oDACvB,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;wDACvC,CAAC,CAAC,OAAO,GAAG,EAAE;qDACf;oDACD,OAAO,CAAC,CAAC;gDACX,CAAC,CAAC,CAAC;6CACJ;4CAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;gDAClD,IAAI,EAAE,SAAS;gDACf,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gDAChC,MAAM,EAAE,IAAI,CAAC,SAAS;gDACtB,aAAa,EAAE,gBAAgB;gDAC/B,SAAS,EACP,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gDAC1E,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;gDACvD,KAAK,EAAE,IAAI;gDACX,YAAY,EAAE,GAAG,CAAC,aAAa;gDAC/B,cAAc,EAAE,CAAC,GAAG,CAAC,eAAe,IAAI,EAAE,CAAC;6CAC5C,CAAC,EAAE,CAAC,CAAC;4CACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yCAC7F;6CAAM;4CACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,SAAS,mBAAmB,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yCAClG;wCACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wCAC5B,6BAA6B;qCAC9B;oCAED,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC3B,IAAI,WAAW,KAAK,CAAC,EAAE;4CACrB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gDAChC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oDACnB,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;wDACvC,CAAC,CAAC,OAAO,GAAG,EAAE;qDACf;oDACD,OAAO,CAAC,CAAC;gDACX,CAAC,CAAC,CAAC;6CACJ;4CAED,IAAI,CAAC,SAAS,CACZ,IAAI,CAAC,SAAS,CAAC;gDACb,IAAI,EAAE,SAAS;gDACf,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gDAChC,MAAM,EAAE,IAAI,CAAC,SAAS;gDACtB,aAAa,EAAE,YAAY;gDAC3B,SAAS,EACP,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gDAC1E,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;gDACvD,KAAK,EAAE,IAAI;gDACX,YAAY,EAAE,GAAG,CAAC,aAAa;6CAChC,CAAC,CACH,CAAC;yCACH;qCACF;iCACF;qCAAM;oCACL,IAAI,CAAC,eAAe,EAAE,CAAC;iCACxB;gCAED,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;oCACxC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oCACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;oCACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;oCAC9D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;wCAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qCAC5B;yCAAM;wCACL,IAAI,CAAC,YAAY,EAAE,CAAC;qCACrB;iCACF;gCACD,8BAA8B;4BAChC,CAAC,CAAC,CAAC;yBACJ;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACxG;wBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC9B,CAAC,CAAC,CAAC;iBACJ;aACF;iBAAM;gBACL,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,wGAAwG;gBACxG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;SACF;QACD,sEAAsE;IAExE,CAAC;IA+CD,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;QACrF,2CAA2C;QAE3C,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC/C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACjE,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACzF,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;YAErG,MAAM,UAAU,GAAG;gBACjB,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBAChC,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI,CAAC,qBAAqB;gBACzC,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO;gBAChD,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,WAAW;gBACxD,eAAe,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC7E,SAAS,EAAE,YAAY;gBACvB,SAAS,EACP,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MACjG,cAAc,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACxC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;aAC9E,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,CAAC,EAAE;gBACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACnE;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;aAC5C;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACtG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,4BAA4B,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SACxH;QACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED,WAAW;QACT,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YAC1D,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,EAAE,yBAAyB,EAAE,IAAI,CAAC,yBAAyB,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;SAC/F,CAAC,CAAC;QAEH,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC7C,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,8BAA8B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACjF;iBAAM;gBACL,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;gBACjF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAqB,EAAE;wBAC3D,KAAK,EAAE,KAAK;wBACZ,IAAI,EAAE;4BACJ,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;4BAChC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;4BAClC,gBAAgB;4BAChB,iBAAiB,EAAE,IAAI;4BACvB,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;gCACjD,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC;gCACtD,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;4BACvE,aAAa,EAAE,IAAI,CAAC,aAAa;yBAClC;qBACF,CAAC,CAAC;oBAEH,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBAC3C,sBAAsB;wBACtB,IAAI,KAAK,IAAI,KAAK,KAAK,YAAY,EAAE;4BACnC,oBAAoB;4BACpB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;4BACjC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBAC1C;6BAAM;4BACL,IAAI,KAAK,KAAK,YAAY,EAAE;gCAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;6BAC5B;yBACF;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC5E;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;wFAtnBU,oBAAoB;oGAApB,oBAAoB;;;;;;;;QCvCjC,yEACI;QAAA,yEACI;QAAA,kHAEO;QACX,4DAAM;QACN,yEACI;QAAA,4EAEI;QADA,4IAAS,yBAAqB,IAAC;QAC/B,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QAUN,yEACI;QAAA,yEACI;QAAA,gHAQM;QACV,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,2EAAkB;QAAA,qEAAS;QAAA,4DAAO;QAAA,iEAClC;QAAA,yIAEiB;QAAA,iHACjB;QAAA,qIAKe;QACnB,4DAAM;QACN,0EACI;QAAA,qHAAsG;QACtG,qHAAgH;QAChH,2EACI;QAAA,0FACI;QAAA,8FACI;QAAA,8EACI;QAAA,gFAA8C;QAAA,+EAAmB;QAAA,4DAAW;QAChF,4DAAS;QACb,4DAA6B;QAC7B,8FACI;QAAA,8EAEI;QADA,6IAAS,uBAAmB,IAAC;QAC7B,mEACJ;QAAA,4DAAS;QACT,yHAGS;QACT,yHAIS;QACT,yHAIS;QACT,yHAIS;QACT,yHAGS;QACT,yHAGS;QACT,yHAIS;QACT,yHAGS;QACb,4DAA6B;QACjC,4DAAqB;QACzB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QACA,kGAEA;QAFuC,2LAAqB,4BAAwB,IAAC,qIAC3D,8BAA0B,IADiC;QAErF,4DAAyB;QAC7B,4DAAM;QACN,2EACI;QAAA,mKAE2G;QAC/G,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAlHiE,0DAAe;QAAf,+EAAe;QAM1C,0DAA2B;QAA3B,wFAA2B;QAgBS,0DAAe;QAAf,+EAAe;QAaD,0DAAqB;QAArB,qFAAqB;QAEjF,0DAAqB;QAArB,qFAAqB;QACf,0DAAa;QAAb,mFAAa;QAQtB,0DAAyC;QAAzC,6GAAyC;QACzC,0DAA2C;QAA3C,+GAA2C;QAUhB,0DAA2B;QAA3B,wFAA2B;QAIyB,0DAAqE;QAArE,6IAAqE;QAKtJ,0DAAoE;QAApE,4IAAoE;QAKpE,0DAAoD;QAApD,wHAAoD;QAKpD,0DAAoD;QAApD,wHAAoD;QAIuC,0DAAqE;QAArE,6IAAqE;QAIrE,0DAAqE;QAArE,6IAAqE;QAKhK,0DAAoD;QAApD,wHAAoD;QAIpD,0DAAwD;QAAxD,4HAAwD;QAYnB,0DAAiC;QAAjC,8FAAiC;QAIzD,0DAA+B;QAA/B,mGAA+B;;;;;;;;;;;;;;AC/GzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACsD;AACT;;AAErD;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,QAAQ,iDAAI;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA,QAAQ,+DAAQ,YAAY,sDAAS;AACrC;AACA;AACA;AACA,QAAQ,0DAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4DAA4D;AACtG;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS,GAAG,6DAAM;AAClB;AACA;AACA;AACA;AACA,oCAAoC,mDAAmD;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,mEAAY;AACpB;AACA;AACA,YAAY;AACZ;AACA,QAAQ,2EAAoB;AAC5B;AACA;AACA;AACA,kBAAkB,gEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,2EAA2E;AACjH;AACA;AACA;AACA;AACA;AACA,sCAAsC,0EAA0E;AAChH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAA0C,+DAAwB,CAAC,wDAAiB,GAAG;AACjK,8BAA8B,+DAAwB,EAAE,gFAAgF,+CAA+C,YAAY,iDAAiD,EAAE;AACtP;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE,EAAE;AACpJ,cAAc,oDAAoD,gEAAyB,uBAAuB,4EAA4E,EAAE,EAAE;AAClM,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEuD;;AAEvD,0C;;;;;;;;;;;;;;;;;;;;;IC7IgC,wEACI;IAAA,qEACI;IAAA,yEAAiC;IAAA,uDAAmB;IAAA,4DAAK;IACzD,yEAAqC;IAAA,uDAAiC;;IAAA,4DAAK;IAC3E,yEAAqC;IAAA,uDAAmC;;IAAA,4DAAK;IAC7E,0EAAqC;IAAA,wDAAwC;;IAAA,4DAAK;IAClF,0EAAqC;IAAA,wDAA8B;;IAAA,4DAAK;IAC5E,4DAAK;IACT,qEAAe;;;IAN0B,0DAAmB;IAAnB,mFAAmB;IACf,0DAAiC;IAAjC,0JAAiC;IACjC,0DAAmC;IAAnC,4JAAmC;IACnC,0DAAwC;IAAxC,mKAAwC;IACxC,0DAA8B;IAA9B,yJAA8B;;;IAX/E,wEACI;IAAA,qEACI;IAAA,wEAA4B;IAAA,uDAAsB;IAAA,4DAAK;IAC3D,4DAAK;IAEL,kMAQe;IAEf,qEACI;IAAA,wEAA6B;IAAA,sFAAsB;IAAA,4DAAK;IACxD,wEAA4C;IAAA,uDAAiC;;IAAA,4DAAK;IACtF,4DAAK;IACT,qEAAe;;;IAjBqB,0DAAsB;IAAtB,sFAAsB;IAGxB,0DAAmB;IAAnB,wFAAmB;IAYD,0DAAiC;IAAjC,2JAAiC;;;IAlBzF,wEACI;IAAA,kLAmBe;IACnB,qEAAe;;;IApBI,0DAAiC;IAAjC,gGAAiC;;;IANxD,wEACI;IAAA,qEACI;IAAA,wEAAgB;IAAA,uDAAmB;IAAA,4DAAK;IAC5C,4DAAK;IAEL,kKAqBe;IAEnB,qEAAe;;;IA1BS,0DAAmB;IAAnB,mFAAmB;IAGN,0DAAmB;IAAnB,wFAAmB;;;IAN5D,wEACI;IAAA,mJA4Be;IACnB,qEAAe;;;IA7BI,0DAAiC;IAAjC,gGAAiC;;ACZ7D,MAAM,qBAAqB;IAKhC;QAHS,WAAM,GAAQ,EAAE,CAAC;QACjB,SAAI,GAAmB,EAAE,CAAC;IAEnB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FARU,qBAAqB;qGAArB,qBAAqB;QDTlC,8EACI;QAAA,kFACI;QAAA,iFAAgB;QAAA,4EAAiB;QAAA,4DAAiB;QAClD,oFACI;QAAA,8EAAa;QAAA,gEACb;QAAA,uDACJ;;;QAAA,4DAAoB;QACxB,4DAAkB;QAClB,oFACI;QAAA,4EACI;QAAA,yEACI;QAAA,sEACI;QAAA,yEAA8B;QAAA,4EAAW;QAAA,4DAAK;QAC9C,yEAA4C;QAAA,oEAAQ;QAAA,4DAAK;QACzD,yEAA4C;QAAA,sEAAU;QAAA,4DAAK;QAC3D,yEAA4C;QAAA,2EAAe;QAAA,4DAAK;QAChE,yEAA4C;QAAA,iEAAK;QAAA,4DAAK;QAC1D,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,qIA8Be;QACnB,4DAAQ;QACZ,4DAAQ;QACZ,4DAAmB;QAKvB,4DAAW;;QArDC,0DACJ;QADI,qRACJ;QAcsC,2DAAO;QAAP,6EAAO;;;;;;;;;;;;;;AEpBrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;;;;;;;;;;;;;;;;ICSrE,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF4B,uFAA2B;IAClE,0DACF;IADE,4FACF;;;IAQE,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF4B,6FAAiC;IACxE,0DACF;IADE,uFACF;;;;IAsBN,oFACE;IAAA,gFAAe;IAAA,uDAAc;IAAA,4DAAgB;IAC7C,gFAAe;IAAA,uDAAgB;IAAA,4DAAgB;IAC/C,gFAAe;IAAA,uDAAa;IAAA,4DAAgB;IAC5C,gFACE;IAAA,+EAAyE;IAA7C,+WAA8B;IAAe,gEAAK;IAAA,4DAAW;IAC3F,4DAAgB;IAClB,4DAAgB;;;IANC,0DAAc;IAAd,4EAAc;IACd,0DAAgB;IAAhB,8EAAgB;IAChB,0DAAa;IAAb,2EAAa;;;;IAO5B,6EACE;IADmD,qUAAyB;IAC5E,2EAAU;IAAA,8DAAG;IAAA,4DAAW;IAC1B,4DAAS;;AD7CV,MAAM,sBAAsB;IAiBjC,YACU,SAAsB,EACtB,aAA+B;QAD/B,cAAS,GAAT,SAAS,CAAa;QACtB,kBAAa,GAAb,aAAa,CAAkB;QAhB/B,qBAAgB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACzC,eAAU,GAAa,EAAE,CAAC;QAC1B,eAAU,GAAmB,EAAE,CAAC;QAEhC,YAAO,GAAG;YACf,kBAAkB,EAAE,CAAC;YACrB,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;YACV,qBAAqB,EAAE,CAAC;YACxB,MAAM,EAAE,IAAI;SACb,CAAC;QAYF,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpD,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,2BAAsB,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC1D,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;gBACtC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACnC,OAAO,CAAC,CAAC,qBAAqB,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;gBACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEN,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAC,GAAG,CAAC,KAAK,CAAC;iBACtD;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC5C;aACF;QACH,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBACnC,OAAO,CAAC,CAAC,qBAAqB,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC;YACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,EAAG,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACnC,CAAC;QAED,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;gBACnC,OAAO,CAAC,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;YAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAE9C,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;QAC5C,CAAC;QAED,kBAAa,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG;YAClC,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,CAAC;YACV,eAAe,EAAE,CAAC;YAClB,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,EAAE;SACZ;QAED,iBAAY,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG;YAClC,kBAAkB,EAAE,CAAC;YACrB,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,CAAC;YACV,qBAAqB,EAAE,CAAC;YACxB,MAAM,EAAE,IAAI;SACb;QAED,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,IAAI,CAAC,OAAO,CAAC,qBAAqB;gBACpC,IAAI,CAAC,OAAO,CAAC,QAAQ;gBACrB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAEpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAoC,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAChG;QACH,CAAC;QAED,YAAO,GAAG,GAAG,EAAE;YACb,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;gBAE5B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;oBACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oCAAoC,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC/F,OAAO,KAAK,CAAC;iBACd;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;oBAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sCAAsC,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBACjG,OAAO,KAAK,CAAC;iBACd;gBAED,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACtD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;wBAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtB;oBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC;aACJ;QACH,CAAC;QAED,sBAAiB,GAAG,CAAC,GAAc,EAAE,EAAE;YACrC,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE;gBAC7B,IAAI,GAAG,CAAC,kBAAkB,EAAE;oBAC1B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACpD,IAAI,GAAG,CAAC,KAAK,EAAE;4BACb,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;4BAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;yBACnC;wBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,EAAE,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC7E,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC3C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;iBACnC;aACF;QACH,CAAC;IA1HE,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;;4FAzBU,sBAAsB;sGAAtB,sBAAsB;;QCVnC,8EACE;QAAA,iFACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACxB,4DAAiB;QACjB,mFACE;QAAA,6EACE;QADoB,iTAAgC,aAAS,IAAC;QAC9D,oFACE;QAAA,4EAAW;QAAA,wEAAa;QAAA,4DAAY;QACpC,iFACE;QADsB,gNAAoC,+GAAoB,iBAAa,IAAjC;QAC1D,kIAEa;QACf,4DAAa;QACf,4DAAiB;QACjB,qEAAG;QAAA,gFAAoB;QAAA,4DAAI;QAC3B,0EACE;QAAA,kFACE;QAAA,6EAAW;QAAA,4EAAW;QAAA,4DAAY;QAClC,iFACE;QAD4B,uNAA2C,+GAAoB,iBAAa,IAAjC;QACvE,kIAEa;QACf,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,4EACF;QAD4D,qMAA8B,oFAAS,cAAU,IAAnB;QAAxF,4DACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,4EACF;QADyD,kMAA2B;QAAlF,4DACF;QAAA,4DAAiB;QACjB,8EACE;QADmD,+IAAS,oBAAgB,IAAC;QAC7E,4EAAU;QAAA,+DAAG;QAAA,4DAAW;QAC1B,4DAAS;QACX,4DAAM;QACN,qFACE;QAAA,iFAAe;QAAA,qEAAG;QAAA,2EAAU;QAAA,4DAAI;QAAA,4DAAgB;QAChD,iFAAe;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAgB;QAC9C,iFAAe;QAAA,qEAAG;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAgB;QAC3C,4EAA+B;QACjC,4DAAgB;QAEhB,0IAOgB;QAChB,iEACA;QAAA,2EACE;QAAA,2HAES;QACT,8EACE;QAAA,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QAC3B,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAmB;QACrB,4DAAW;;;QAtDqB,2DAAoC;QAApC,+FAAoC;QAChC,0DAAa;QAAb,mFAAa;QAST,0DAA2C;QAA3C,sGAA2C;QAC7C,0DAAa;QAAb,mFAAa;QAOiB,0DAA8B;QAA9B,yFAA8B;QAIjC,0DAA2B;QAA3B,sFAA2B;QAazD,2DAAiB;QAAjB,uFAAiB;QAUoC,0DAAuB;QAAvB,uFAAuB;QAGlD,0DAA8B;QAA9B,qFAA8B;;;;;;;;;;;;;;ACvD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAKjC;AACf;AAC+F;;;;;;;;;;;;;;;;ICWhH,yEAAsC;IAAA,8DAAG;IAAA,4DAAK;;;IAC9C,yEAAuC;IAAA,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,8FAAoB;;;IAG3D,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAuC;IAAA,uDAA2C;IAAA,4DAAK;;;IAAhD,0DAA2C;IAA3C,4GAA2C;;;IAGlF,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEAAuC;IAAA,uDAA2D;;IAAA,4DAAK;;;IAAhE,0DAA2D;IAA3D,qLAA2D;;;IAGlG,yEAAsC;IAAA,kEAAO;IAAA,4DAAK;;;IAClD,yEAAuC;IAAA,uDAA6B;IAAA,4DAAK;;;IAAlC,0DAA6B;IAA7B,8FAA6B;;;IAGpE,yEAAsC;IAAA,gEAAK;IAAA,4DAAK;;;IAChD,yEAAuC;IAAA,uDAAmC;;IAAA,4DAAK;;;IAAxC,0DAAmC;IAAnC,4JAAmC;;;IAa1E,yEAA0D;IAAA,mEAAQ;IAAA,4DAAK;;;;IACvE,yEACI;IAAA,6EACI;IADoE,2WAA2B;IAC/F,qEACJ;IAAA,4DAAS;IACb,4DAAK;;;IAGL,yEAA0D;IAAA,mEAAQ;IAAA,4DAAK;;;;IACvE,yEACI;IAAA,6EAEI;IADA,iXAAiC;IACjC,qEACJ;IAAA,4DAAS;IACb,4DAAK;;;IAGL,yEAA0D;IAAA,mEAAQ;IAAA,4DAAK;;;;IACvE,yEACI;IAAA,6EACI;IADoE,yWAAyB;IAC7F,qEACJ;IAAA,4DAAS;IACb,4DAAK;;;IAWW,qEAA8C;IAAA,uDAA4C;IAAA,4DAAK;;;IAAjD,0DAA4C;IAA5C,sHAA4C;;;IAQ1F,qEACI;IAAA,yEACI;IAAA,wEAAsB;IAAA,uDAA2B;IAAA,4DAAI;IACzD,4DAAK;IACT,4DAAK;;;IAFyB,0DAA2B;IAA3B,4FAA2B;;;IAMA,gEAC7C;;;IAAA,uEAAmC;IAAA,uDAA+B;IAAA,4DAAO;;;IAAtC,0DAA+B;IAA/B,yGAA+B;;;IAMtE,qEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAK;IACT,4DAAK;;;IAFG,0DACJ;IADI,kFACJ;;;IAJR,wEACI;IAAA,uJAIK;IACT,qEAAe;;;IALN,0DAAmB;IAAnB,mFAAmB;;;IAVhC,wEACI;IAAA,qEACI;IAAA,qEACI;IAAA,uDAA6C;IAAA,wIAC7C;IAAA,4IAAyE;IAC7E,4DAAK;IAEL,yEAAiB;IAAA,uDAAyE;;IAAA,4DAAK;IACnG,4DAAK;IACL,4JAMe;IACnB,qEAAe;;;IAbH,0DAA6C;IAA7C,8HAA6C;IAAK,0DAA0B;IAA1B,0FAA0B;IACrE,0DAA0B;IAA1B,0FAA0B;IAGpB,0DAAyE;IAAzE,qMAAyE;IAEjE,0DAAc;IAAd,oFAAc;;;IA5B/D,yEACI;IAAA,0EAEI;IAAA,4EACI;IAAA,0EACI;IAAA,qEAAI;IAAA,uDAAuC;IAAA,4DAAK;IAChD,wHAA+F;IACnG,4DAAU;IACV,wEACI;IAAA,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IAEjB,0EAAiB;IAAA,iEAAK;IAAA,4DAAK;IAC/B,4DAAQ;IACR,yEACI;IAAA,0HAIK;IACL,+IAgBe;IACnB,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACV,4DAAK;;;;IAvCkC,qGAAwC;IAEvE,0DAAuE;IAAvE,4IAAuE;IAG3D,0DAAuC;IAAvC,iHAAuC;IACtC,0DAAuC;IAAvC,uGAAuC;IAQvC,0DAA6B;IAA7B,6FAA6B;IAKJ,0DAA+B;IAA/B,qGAA+B;;;IAuBjF,oEAA4D;;;;IAC5D,yEAGA;IADI,0YAAyD,IAAI,kBAAW;IAC5E,4DAAK;;;;IAFD,0HAA0D;;;IAG9D,oEAA8F;;;AD7FnG,MAAM,uBAAuB;IASlC,YACS,MAAiB,EAChB,QAAqB,EACrB,MAAc,EACd,EAAuB,EACvB,WAA2B,EAC3B,WAA2B,EAC3B,GAA+B,EAC/B,WAA8B,EAC9B,UAAgC,EAChC,WAA2B;QAT5B,WAAM,GAAN,MAAM,CAAW;QAChB,aAAQ,GAAR,QAAQ,CAAa;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,gBAAW,GAAX,WAAW,CAAgB;QAC3B,QAAG,GAAH,GAAG,CAA4B;QAC/B,gBAAW,GAAX,WAAW,CAAmB;QAC9B,eAAU,GAAV,UAAU,CAAsB;QAChC,gBAAW,GAAX,WAAW,CAAgB;QAjB9B,eAAU,GAAU,EAAE,CAAC;QACvB,qBAAgB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAE5G,oBAAe,GAAU,EAAE,CAAC;QACnC,0BAA0B;QACnB,WAAM,GAAQ,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAwDtC,uBAAkB,GAAG,CAAC,QAAgB,EAAE,EAAE,EAAE;YAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;gBAC1D,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,IAAI,6GAAkB,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC;aACxE,CAAC,CAAC;YAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE;YACtB,MAAM,QAAQ,GAAwB;gBACpC,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,oCAAoC,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,cAAc,CAAC,GAAG;gBACnF,GAAG,EAAE,MAAM;aACZ,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,CAAC;QAID,wBAAmB,GAAG,GAAG,EAAE;YACzB,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,CAAC,GAAU,EAAE,EAAE;gBAC5D;;;qBAGK;gBACL,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC;YACzC,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,SAAgB,EAAE,EAAE;YAChC,MAAM,YAAY,GAAU,EAAE,CAAC;YAC/B,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,YAAY,CAAC,IAAI,CAAC;oBAChB,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;oBAC3B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;oBACjC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ;oBACxB,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK;oBAClB,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE;oBACvB,SAAS,EAAE;wBACT,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;wBAC7C,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,IAAI,EAAE;wBACxD,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;wBAC7C,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE;wBAC5C,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI;wBACnC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,IAAI,EAAE;qBACnD;oBACD,OAAO,EAAE,IAAI,CAAC,OAAO;iBACtB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,OAAO,YAAY,CAAC;QACtB,CAAC;QAED,WAAM,GAAG,CAAC,GAAQ,EAAE,EAAE;YACpB,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpD,IAAI,GAAG,EAAE;oBACP,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;oBAC1D,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,QAAQ,EAAE,EAAE,kFAAkF,CAAC,CAAC;iBAC5H;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,CAAC,GAAQ,EAAE,MAAc,CAAC,EAAE,EAAE;YACvC,+BAA+B;YAC/B,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;YACjE,MAAM,gBAAgB,GAAuB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;YACtG,MAAM,YAAY,GAAuB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;YAElG,IAAI,UAAU,GAAG,EAAE,CAAC;YAEpB,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC/B,iCAAiC;gBACjC,UAAU,GAAG;oBACX,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;oBACjB,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;oBAC7B,MAAM,EAAE,GAAG,CAAC,OAAO;oBACnB,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC,YAAY;oBAC7C,gBAAgB,EAAE,GAAG,CAAC,YAAY,CAAC,iBAAiB;oBACpD,aAAa,EAAE,gBAAgB;oBAC/B,KAAK,EAAE,IAAI;oBACX,cAAc,EAAE,GAAG,CAAC,eAAe,IAAI,EAAE;iBAC1C,CAAC;gBACF,6DAA6D;gBAC7D,6CAA6C;gBAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACpE;YAED,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,UAAU,GAAG;oBACX,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM;oBAC7B,MAAM,EAAE,GAAG,CAAC,OAAO;oBACnB,cAAc,EAAE,GAAG,CAAC,YAAY,CAAC,YAAY;oBAC7C,gBAAgB,EAAE,GAAG,CAAC,YAAY,CAAC,iBAAiB;oBACpD,aAAa,EAAE,YAAY;oBAC3B,KAAK,EAAE,IAAI;iBACZ,CAAC;gBACF,6DAA6D;gBAC7D,6CAA6C;gBAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,MAAM,MAAM,GAAG;oBACb,QAAQ,EAAE,CAAC,GAAG,CAAC,QAAQ;oBACvB,gBAAgB,EAAE,CAAC;oBACnB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI;oBAC1C,UAAU,EAAE,mCAAmC,GAAG,CAAC,OAAO,iBAAiB,GAAG,CAAC,QAAQ,oBAAoB;iBAC5G,CAAC;gBACF,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC;QAED,cAAS,GAAG,CAAC,aAAqB,EAAE,EAAE,EAAE;YACtC,MAAM,OAAO,GAAG,sCAAsC,UAAU,EAAE,CAAC;YACnE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,kFAAkF,CAAC,CAAC;YAChI,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,CAAC;QAED,WAAM,GAAG,CAAC,GAAQ,EAAE,EAAE;YACpB,oBAAoB;YACpB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACnE,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAE3B,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE;wBACrB,MAAM,MAAM,GAAG;4BACb,QAAQ,EAAE,CAAC,GAAG,CAAC,QAAQ;4BACvB,gBAAgB,EAAE,CAAC;4BACnB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI;4BAC1C,UAAU,EAAE,sCAAsC,GAAG,CAAC,OAAO,iBAAiB,GAAG,CAAC,QAAQ,oBAAoB;yBAC/G,CAAC;wBACF,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;qBACpC;oBAED,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;wBAC1D,QAAQ,EAAE,OAAO;wBACjB,IAAI,EAAE,IAAI,6GAAkB,CAAC,kBAAkB,EAAE,6BAA6B,EAAE,IAAI,EAAE,IAAI,CAAC;qBAC5F,CAAC,CAAC;oBAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAiB,EAAE,EAAE;wBACvD,IAAI,QAAQ,EAAE;4BACZ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;4BACtF,gDAAgD;4BAChD,IAAI,WAAW,KAAK,CAAC,EAAE;gCACrB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;6BAClD;iCAAM;gCACL,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;6BAClD;yBACF;oBACH,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAY,GAAG,CAAC,IAAS,EAAE,cAAmB,EAAE,EAAE,EAAE;YAClD,MAAM,WAAW,GAAG;gBAClB,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBAC5C,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;gBAC5B,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;gBACpC,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;gBACxC,KAAK,EAAE,mCAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,UAAU,CAAC;gBAC3D,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG;gBACtB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAC5B,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAClC,KAAK,EAAE,IAAI,CAAC,aAAa;gBACzB,MAAM,EAAE,IAAI,CAAC,cAAc;gBAC3B,KAAK,EAAE,IAAI;gBACX,cAAc,EAAE,IAAI,CAAC,QAAQ;gBAC7B,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM;gBAChD,eAAe,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG;gBAC1C,mBAAmB,EAAE,IAAI,CAAC,kBAAkB;gBAC5C,cAAc,EAAE,WAAW,CAAC,YAAY;gBACxC,WAAW,EAAE,CAAC,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBACtH,cAAc,EAAE,EAAE;aACnB,CAAC;YAEF,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC9B,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC;oBAC9B,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC;oBAChC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,WAAW;oBACrC,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;oBAC5B,cAAc,EAAE,CAAC,GAAG,CAAC,eAAe;iBACrC,CAAC,CAAC;gBACH,WAAW,CAAC,KAAK,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,0BAAqB,GAAG,CAAC,SAAiB,EAAE,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACnD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,QAAQ,GAAG,CAAC,IAAI,EAAE;wBAChB,KAAK,MAAM;4BAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;4BAAC,MAAM;wBACvD,KAAK,KAAK;4BAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;4BAAC,MAAM;qBACxD;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mBAAc,GAAG,CAAC,GAAW,EAAE,EAAE,CAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,kFAAkF,CAAC;QAEpH,oBAAe,GAAG,CAAC,GAAW,EAAE,EAAE;YAChC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,YAAY,EAAE,kFAAkF,CAAC,CAAC;YACpI,SAAS,CAAC,QAAQ,CAAC,KAAK,CACtB,0GAA0G;gBAC1G,SAAS,CAAC,GAAG,CAAC;gBACd,aAAa,CAAC,CAAC;QACnB,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC3C;QACH,CAAC;QAED,mBAAc,GAAG,CAAC,GAAQ,EAAE,EAAE;YAC5B,oBAAoB;YAEpB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;gBACzD,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,IAAI,6GAAkB,CAC1B,iBAAiB,EACjB,6EAA6E,EAC7E,IAAI,EACJ,IAAI,EACJ;oBACE,KAAK,EAAE;wBACL;4BACE,MAAM,EAAE,KAAK;4BACb,KAAK,EAAE,YAAY;4BACnB,KAAK,EAAE,IAAI;4BACX,EAAE,EAAE,YAAY;4BAChB,SAAS,EAAE,KAAK;yBACjB;qBACF;iBACF,CACF;aACF,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtC,IAAI,GAAG,CAAC,SAAS,EAAE;oBACjB,MAAM,MAAM,GAAG,EAAE,CAAC;oBAElB,KAAK,MAAM,KAAK,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;wBACpC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;qBAChC;oBAED,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;wBACxE,IAAI,QAAQ,CAAC,KAAK,EAAE;4BAElB,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,EAAE;gCACrB,MAAM,MAAM,GAAG;oCACb,QAAQ,EAAE,CAAC,GAAG,CAAC,QAAQ;oCACvB,gBAAgB,EAAE,CAAC;oCACnB,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI;oCAC1C,UAAU,EAAE,0BAA0B,GAAG,CAAC,OAAO,iBAAiB,GAAG,CAAC,QAAQ,oBAAoB;iCACnG,CAAC;gCACF,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;6BACpC;4BAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACnF;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBAChF;wBACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC7B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QAEL,CAAC;QAED,0BAAqB,GAAG,CAAC,MAAW,EAAE,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACtD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,gBAAgB,EAAE,GAAG,CAAC,gBAAgB,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;iBAC1L;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,wBAAwB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1F;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IA7UG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;YAE9E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,MAAW,IAAI,EAAE,EAAE;gBACpD,IAAI,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE;oBAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;oBACxD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;wBACvC,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBACzB;iBACF;qBAAM;oBACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;oBAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAEjH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;gBACrC,MAAM,GAAG,GAAG,qCAAqC,CAAC;gBAClD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gBACrD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,2GAA2G;YAE3G,IAAI,CAAC,MAAM,CAAC,EAAE,CACZ,mBAAmB,EACnB,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,0BAA0B,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAC3G,CAAC;YAEF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,OAAe,EAAE,EAAE;gBAClD,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAoBD,WAAW,KAAK,CAAC;;8FAjFN,uBAAuB;uGAAvB,uBAAuB;QCfpC,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,2EACI;QAAA,iHAA8C;QAC9C,iHAAgE;QACpE,qEAAe;QACf,2EACI;QAAA,iHAAgD;QAChD,iHAAuF;QAC3F,qEAAe;QACf,2EACI;QAAA,mHAAqD;QACrD,mHAAuG;QAC3G,qEAAe;QACf,4EACI;QAAA,mHAAkD;QAClD,mHAAyE;QAC7E,qEAAe;QACf,4EACI;QAAA,mHAAgD;QAChD,mHAA+E;QACnF,qEAAe;QAWf,6EACI;QAAA,oHAAuE;QACvE,oHAIK;QACT,qEAAe;QACf,6EACI;QAAA,oHAAuE;QACvE,oHAKK;QACT,qEAAe;QACf,6EACI;QAAA,oHAAuE;QACvE,oHAIK;QACT,qEAAe;QAGf,6EACI;QAAA,oHAuCK;QACT,qEAAe;QAEf,oHAA4D;QAC5D,oHAGK;QACL,oHAA8F;QAClG,4DAAQ;QACZ,4DAAM;QACV,4DAAM;;QA7GmB,0DAAyB;QAAzB,sFAAyB;QAqGlB,2DAAiC;QAAjC,iGAAiC;QAChB,0DAA0B;QAA1B,kGAA0B;QAI9B,0DAA2B;QAA3B,mJAA2B;wxJDrG1D;YACV,mEAAO,CAAC,cAAc,EAAE;gBACtB,iEAAK,CAAC,WAAW,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC5D,iEAAK,CAAC,UAAU,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBACzC,sEAAU,CAAC,wBAAwB,EAAE,mEAAO,CAAC,sCAAsC,CAAC,CAAC;aACtF,CAAC;SACH;;;;;;;;;;;;;AE3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAClB;;;;;;;;;ICejB,0EAA8C;;ADNvD,MAAM,eAAe;IAW1B;QATO,WAAM,GAAQ,EAAE,CAAC;QACjB,iBAAY,GAAwB;YACzC,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI;SAC1C,CAAC;QACK,kBAAa,GAAyB;YAC3C,cAAc,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK;SACpE,CAAC;QACK,aAAQ,GAAG,KAAK,CAAC;QAQxB,gBAAW,GAAG,GAAG,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG;gBACZ,IAAI,EAAE,mCAAM,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;gBAC1D,GAAG,EAAE,mCAAM,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,qDAAM,CAAC,YAAY,CAAC;aACxD,CAAC;YACF,4BAA4B;QAC9B,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1D,CAAC;IAhBe,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;;8EAfU,eAAe;+FAAf,eAAe;QCX5B,yEACI;QAAA,yEACI;QAAA,8EACI;QAAA,iFACI;QAAA,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC9B,4DAAiB;QACjB,mFACI;QAAA,6EACI;QAAA,oFAA2F;QAA3E,2LAAsB;QAAqD,4DAAiB;QAC5G,sFAMA;QAJI,yJAAa,gBAAY,IAAC,+FACd,gBAAY,IADE,mGAEZ,gBAAY,IAFA,+GAGN,iBAAa,IAHP;QAI9B,4DAAkB;QACtB,4DAAO;QACP,+HAA8C;QAClD,4DAAmB;QACvB,4DAAW;QACf,4DAAM;QACV,4DAAM;;QAb8B,0DAAsB;QAAtB,iFAAsB;QAElC,0DAA+B;QAA/B,4FAA+B;QAOxB,0DAAc;QAAd,8EAAc;;;;;;;;;;;;;;ACjB7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAEM;;;;;;;;;;;;;;;ICIlE,mFACI;IADkD,mXAA2B;IAC7E,8EAAwB;IAAA,mEAAQ;IAAA,4DAAW;IAC3C,wEAAa;IAAA,uDAAwD;;IAAA,4DAAK;IAAA,gEAC1E;IAAA,uEACI;IAAA,uDACJ;;IAAA,4DAAI;IACR,4DAAgB;;;IAJC,0DAAwD;IAAxD,2LAAwD;IAEjE,0DACJ;IADI,uLACJ;;;ADET,MAAM,mBAAmB;IAa9B,YACU,EAAuB,EACvB,SAAuB;QADvB,OAAE,GAAF,EAAE,CAAqB;QACvB,cAAS,GAAT,SAAS,CAAc;QAXvB,eAAU,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEnC,WAAM,GAAG,CAAC,CAAC;QACX,aAAQ,GAAG,CAAC,CAAC;QACb,oBAAe,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxC,cAAS,GAAG,CAAC,CAAC;QAEd,cAAS,GAAG,EAAE,CAAC;QAsBtB,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvF,IAAI,GAAG,EAAE;oBACP,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;wBAClB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;wBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;qBACpB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBACnB,KAAK,EAAE,GAAG,CAAC,KAAK;gBAChB,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC,UAAU;gBACrC,KAAK,EAAE,GAAG,CAAC,KAAK;gBAChB,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,GAAG,EAAE,GAAG,CAAC,GAAG;aACb,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,CAAC,CAAY,EAAE,EAAE;YAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IA1CG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,OAAO,GAAG,kEAAW,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,mEAAY,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SAChF;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACpC,IAAI,CAAC,cAAc,GAAG,mEAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACvF;IACH,CAAC;;sFA/BU,mBAAmB;mGAAnB,mBAAmB;QCbhC,8EACI;QAAA,mFACI;QAAA,oFACI;QAAA,2EACJ;QADoB,0IAAS,iBAAa,IAAC;QAAvC,4DACJ;QAAA,4DAAiB;QACjB,+EACI;QAAA,oIAMgB;QACpB,4DAAe;QACf,mFACA;QAD2F,sJAAQ,sBAAkB,IAAC;QACtH,4DAAgB;QACpB,4DAAmB;QACvB,4DAAW;;QAdiE,0DAAuB;QAAvB,kFAAuB;QAGpD,0DAAiB;QAAjB,uFAAiB;QAQzC,0DAAiB;QAAjB,8EAAiB;;;;;;;;;;;;;;ACdxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAMA;AAIyC;AACM;AACO;AAEuB;AACE;AACH;AAChC;AAC+C;AAenC;AAClE;AACC;AAE7B,MAAM,WAAW;IA4BpB,YACW,MAAiB,EACd,QAAqB,EACxB,WAA2B,EACxB,MAAc,EACd,EAAuB,EACvB,WAA8B,EAC9B,UAAgC,EAChC,YAA6B,EAC7B,aAA6B;QARhC,WAAM,GAAN,MAAM,CAAW;QACd,aAAQ,GAAR,QAAQ,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,eAAU,GAAV,UAAU,CAAsB;QAChC,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,kBAAa,GAAb,aAAa,CAAgB;QAnCpC,kBAAa,GAAY,IAAI,CAAC;QAC9B,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAEpC,gBAAW,GAAG,IAAI,0DAAY,EAAE,CAAC;QAMjC,sBAAiB,GAAG,KAAK,CAAC;QAC1B,qBAAgB,GAAG,KAAK,CAAC;QAEzB,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QAGd,eAAU,GAAqC,EAAE,CAAC;QAClD,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAa,EAAE,CAAC;QAC5B,YAAO,GAAG,CAAC,CAAC;QACZ,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAAW,IAAI,CAAC;QAC5B,2BAAsB,GAAG,IAAI,CAAC;QAE3B,YAAO,GAAG,IAAI,kDAAY,EAAE,CAAC;QAcvC,cAAS,GAAG,GAAG,EAAE;YACb,yBAAyB;YACzB,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACtC,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACnC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;gBAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC9E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;aACpH;YACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YACzF,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,4BAA4B,CAAC,CAAC;YACxG,iDAAiD;QACrD,CAAC;QAED,mBAAc,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG;YACpC,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;YACvD,IAAI,EAAE;gBACF,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;gBAChE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;aACrE;YACD,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,EAAE;SACd;QACD,mCAA8B,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;QAC3E,8BAAyB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACjE,sBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;QAC1G,0BAAqB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;QAEtE,uBAAkB,GAAG,CAAC,OAAyB,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEjG,kBAAa,GAAG,CAAC,IAAsB,EAAE,EAAE;YACvC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACpB,gBAAgB,EAChB,KAAK,MAAM,MAAM,IAAI,GAAG,CAAC,eAAe,EAAE;oBACtC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE;wBAC/B,IAAI,CAAC,GAAG,CAAC,WAAW,KAAK,CAAC,EAAE;4BACxB,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;4BAC3B,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;4BACxB,SAAS,gBAAgB,CAAC;yBAC7B;qBACJ;iBACJ;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,qBAAgB,GAAG,CAAC,CAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;QAElG,mBAAc,GAAG,GAAG,EAAE;YAClB,uDAAuD;YACvD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1D,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAgB,EAAE,EAAE;oBAChG,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACzB,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;wBACpB,MAAM,GAAG,GAAiB;4BACtB,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;4BACjB,MAAM,EAAE,GAAG,CAAC,WAAW;4BACvB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM;4BACnB,SAAS,EAAE,GAAG,CAAC,SAAS;4BACxB,YAAY,EAAE,GAAG,CAAC,YAAY;4BAC9B,MAAM,EAAE,GAAG,CAAC,MAAM;4BAClB,KAAK,EAAE,GAAG,CAAC,KAAK;4BAChB,QAAQ,EAAE,GAAG,CAAC,QAAQ;yBACzB,CAAC;wBACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;qBAC9B;oBACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBACjC,CAAC,CAAC,CACL,CAAC;aACL;QACL,CAAC;QAED,gCAA2B,GAAG,CAAC,aAAiC,IAAI,CAAC,SAAS,EAAE,EAAE;YAC9E,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,EAAE;gBAChC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;aAC/B;YACD,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YAEpC,KAAK,MAAM,IAAI,IAAI,UAAU,CAAC,OAAO,EAAE;gBACnC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAC5B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC;wBAChC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;wBACxB,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW;wBAC9B,MAAM,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC;wBAC7B,QAAQ,EAAE,CAAC,IAAI,CAAC,MAAM;wBACtB,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ;wBACrB,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO;wBACnB,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK;wBACrC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;wBAC7E,KAAK,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;wBACpB,cAAc,EAAE,KAAK;wBACrB,cAAc,EAAE,MAAM;wBACtB,eAAe,EAAE,CAAC,CAAC,CAAC,eAAe;wBACnC,cAAc,EAAE,CAAC,CAAC,CAAC,cAAc;wBACjC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS;wBAC/B,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,WAAW,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI;wBACnC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ;wBAC9B,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK;qBAC3B,CAAC,CAAC;iBACN;aACJ;YACD,mEAAmE;QACvE,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YACd,8DAA8D;YAC9D,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClE,mDAAmD;gBACnD,IAAI,GAAG,CAAC,KAAK,EAAE;oBACX,oDAAoD;oBACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBAChC,8BAA8B;oBAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBACrE;qBAAM;oBACH,oDAAoD;oBACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC9E;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QA2VD,cAAS,GAAG,CAAC,aAAqB,EAAE,EAAE,EAAE;YACpC,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YACpF,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,iDAAM,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YACtE,wDAAwD;YACxD,MAAM,OAAO,GAAG,qDAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YACzE,IAAI;gBACA,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC;aAClC;YAAC,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oDAAoD,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3G;YACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAChC,CAAC;QAED,oBAAe,GAAG,GAAG,EAAE;YACnB,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAClD,IAAI,GAAG,EAAE;oBACL,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;oBAC1D,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,QAAQ,EAAE,EAAE,kFAAkF,CAAC,CAAC;oBAC3H,8BAA8B;iBACjC;qBAAM;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzF;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QAED,gBAAW,GAAG,CAAC,OAA2B,EAAE,EAAE;YAC1C,IAAI,KAAK,GAAG,IAAI,CAAC;YACjB,kFAAkF;YAClF,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;gBACxB,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;gBAC7B,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;aACtC;YACD,OAAO,KAAK,CAAC;QACjB,CAAC;QAsHD,iBAAY,GAAG,CAAC,YAAmD,IAAI,EAAE,EAAE;YACvE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7F,MAAM,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACjH,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;YAC9E,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC9F,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;gBACb,MAAM,MAAM,GAAY;oBACpB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBACnC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;oBAC9B,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC9B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC/B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;oBAC/B,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa;iBAC9C,CAAC;gBAEF,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;oBAC5C,IAAI,GAAG,CAAC,KAAK,EAAE;wBACX,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;wBACzD,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;4BAClE,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;4BACtC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;wBACjC,CAAC,CAAC,CACL,CAAC;qBACL;gBACL,CAAC,CAAC,CACL,CAAC;aACL;QACL,CAAC;QAED,yBAAoB,GAAG,CAAC,GAAQ,EAAE,EAAE;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC;QAC1D,CAAC;QAED,iHAAiH;QACjH,aAAQ,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC;QAEvB,iBAAY,GAAG,CAAC,YAAmD,IAAI,EAAE,EAAE;YACvE,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAqB,EAAE;gBACxD,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aACtC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;oBAClE,IAAI,SAAS,EAAE;wBACX,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACnC;yBAAM;wBACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAC5C;iBACJ;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QAED,sBAAiB,GAAG,GAAG,EAAE;YACrB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oIAA8B,EAAE;gBAChE,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,cAAc,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,IAAI,EAAE,CAAC,EAAE;aACnE,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,QAAgB,EAAE,EAAE;gBACpD,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACnB,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAChH,IAAI,GAAG,CAAC,KAAK,EAAE;gCACX,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,QAAQ,CAAC;gCAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAClE;iCAAM;gCACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;6BAC9E;wBACL,CAAC,CAAC,CACL,CAAC;qBACL;iBACJ;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QAED,gBAAW,GAAG,CAAC,YAAmD,IAAI,EAAE,EAAE;YACtE,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oGAAoB,EAAE;gBAC1D,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;aACtC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5C,IAAI,MAAM,EAAE;oBACR,IAAI,SAAS,EAAE;wBACX,SAAS,CAAC,KAAK,EAAE,CAAC;qBACrB;yBAAM;wBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC9B;iBACJ;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QAED,wBAAmB,GAAG,CAAC,YAAmD,IAAI,EAAE,EAAE;YAC9E,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mJAAmC,EAAE;gBACzE,KAAK,EAAE,KAAK;gBACZ,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,CAAC,IAAI,CAAC,yBAAyB,IAAI,EAAE,CAAC,EAAE;aAC5F,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5C,IAAI,MAAM,EAAE;oBACR,IAAI,SAAS,EAAE;wBACX,SAAS,CAAC,KAAK,EAAE,CAAC;qBACrB;yBAAM;wBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;qBAC9B;iBACJ;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;QAED,yBAAoB,GAAG,CAAC,SAAgD,EAAE,EAAE;YACxE,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iHAAwB,EAAE;gBACzD,SAAS,EAAE,KAAK;gBAChB,IAAI,EAAE;oBACF,WAAW,EAAE,IAAI;oBACjB,SAAS;iBACZ;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,EAAE,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;gBAC1C,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE;oBAChB,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC;iBAC7C;YACL,CAAC,CAAC,CACL,CAAC;QACN,CAAC;IAvwBG,CAAC;IAsIL,iBAAiB,CAAC,QAAgB;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxF,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,aAAa,CAAC,KAAyB;QACnC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,4FAA4F;QAC5F,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,uBAAuB;QACnB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAChH,0CAA0C;IAC9C,CAAC;IAED,gBAAgB,CAAC,QAAa;QAC1B,yBAAyB;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,KAAK,CAAC,EAAE;YACnD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAoB,EAAE;gBACtD,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,8GAAuB,CAC7B,QAAQ,EACR,IAAI,EAAE,IAAI,CACb;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC5C,oBAAoB;gBACpB,IAAI,GAAG,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzD,sEAAsE;oBACtE,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAC7B,IAAI,CAAC,SAAS,CAAC,OAAO,EACtB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,CAC1C,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;wBACxB,gDAAgD;wBAChD,IAAI,aAAa,CAAC,KAAK,EAAE;4BACrB,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,OAAO,CAAC;4BACvC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;yBACrD;6BAAM;4BACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,aAAa,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACvF;wBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAChC,CAAC,CAAC,CACL,CAAC;iBACL;qBAAM;oBACH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iDAAiD,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACxG;YACL,CAAC,CAAC,CACL,CAAC;SACL;aAAM;YACH,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;SACtC;IACL,CAAC;IAED,mBAAmB,CAAC,QAAa;QAC7B,wCAAwC;QACxC,UAAU;QACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,yBAAyB;iBACrC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;YAE3G,IAAI,GAAG,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,cAAc,GAAG;oBAClB,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;iBACvG,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAChH,gDAAgD;oBAChD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACX,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACrD;yBAAM;wBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC7E;oBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAChC,CAAC,CAAC,CACL,CAAC;aACL;iBAAM;gBACH,MAAM,GAAG,GAAqB,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;gBAClE,IAAI,CAAC,cAAc,GAAG;oBAClB,cAAc,EAAE,GAAG,CAAC,cAAc,EAAE,eAAe,EAAE,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE;oBAC1F,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;oBAChG,KAAK,EAAE,GAAG,CAAC,KAAK;iBACnB,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBAChH,iDAAiD;oBACjD,IAAI,GAAG,CAAC,KAAK,EAAE;wBACX,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;wBAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBACrD;yBAAM;wBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC7E;oBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAChC,CAAC,CAAC,CACL,CAAC;aACL;YACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAClC;IACL,CAAC;IAED,kBAAkB,CAAC,GAAQ;QACvB,MAAM,QAAQ,GAAuB,GAAG,CAAC,cAAc,IAAI,EAAE,CAAC;QAC9D,MAAM,OAAO,GAAuB,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxH,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC7D;aAAM;YACH,IAAI,CAAC,yBAAyB,GAAG,OAAO,CAAC;SAC5C;QACD,IAAI,GAAG,CAAC,OAAO,EAAE;YACb,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjD,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;SACrD;IACL,CAAC;IAED,oBAAoB,CAAC,KAAyB;QAC1C,sBAAsB;QACtB,MAAM,GAAG,GAAU,EAAE,CAAC;QACtB,KAAK,MAAM,CAAC,IAAI,KAAK,EAAE;YACnB,GAAG,CAAC,IAAI,CAAC;gBACL,QAAQ,EAAE,CAAC,CAAC,EAAE;gBACd,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,MAAM,EAAE,CAAC,CAAC,MAAM;gBAChB,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,KAAK,EAAE,CAAC,CAAC,KAAK;gBACd,OAAO,EAAE,CAAC;gBACV,eAAe,EAAE,CAAC,CAAC,eAAe;gBAClC,cAAc,EAAE,CAAC,CAAC,cAAc;aACnC,CAAC,CAAC;SACN;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAED,gBAAgB,CAAC,KAAK,GAAG,KAAK,EAAE,YAAmD,IAAI;QACnF,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC7F,mCAAmC;QACnC,+BAA+B;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,cAAc,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC3F,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;YACnF,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,EAAE;gBAC1B,OAAO,GAAG,EAAE,CAAC;aAChB;YACD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8GAAqB,EAAE;gBACvD,QAAQ,EAAE,KAAK;gBACf,IAAI,EAAE,IAAI,2GAAkB,CACxB,kBAAkB,EAClB,OAAO,EACP,IAAI,EAAE,IAAI,CACb;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC7C,qBAAqB;gBACrB,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;oBACvC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;oBAC3C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;iBACvC;qBAAM;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,6CAA6C,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACpG;YACL,CAAC,CAAC,CACL,CAAC;SACL;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACvC;IACL,CAAC;IAED,YAAY,CAAC,KAAK,GAAG,KAAK,EAAE,YAAmD,IAAI;QAC/E,6BAA6B;QAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEvD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9B,uBAAuB;YACvB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAElF,MAAM,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAEjH,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YACpG,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC7B,yCAAyC;gBACzC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;gBAC9E,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACnF,2BAA2B;gBAC3B,sBAAsB;gBACtB,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE;oBACb,2CAA2C;oBAC3C,MAAM,MAAM,GAAY;wBACpB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;wBACxB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;wBACnB,MAAM,EAAE,GAAG,CAAC,OAAO;wBACnB,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,aAAa,EAAE,GAAG,CAAC,aAAa;qBACnC,CAAC;oBACF,+CAA+C;oBAC/C,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;wBAC5C,6CAA6C;wBAC7C,IAAI,GAAG,CAAC,KAAK,EAAE;4BACX,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;4BAC9C,kCAAkC;4BAClC,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gCAClE,wDAAwD;gCACxD,IAAI,MAAM,CAAC,KAAK,EAAE;oCACd,IAAI,CAAC,OAAO,EAAE,CAAC;iCAClB;gCAED,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gCACjD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gCACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;gCAEzF,iCAAiC;gCACjC,IAAI,gBAAgB,GAAuB,EAAE,CAAC;gCAC9C,IAAI,YAAY,GAAuB,EAAE,CAAC;gCAE1C,IAAI;oCACA,gBAAgB,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;oCACnF,YAAY,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC;oCAC/E,iEAAiE;iCACpE;gCAAC,OAAO,KAAK,EAAE;oCACZ,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;oCAC9D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;oCAC3C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;oCACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iCACtB;gCAED,IAAI,CAAC,KAAK,EAAE;oCACR,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;wCAC7B,IAAI,WAAW,KAAK,CAAC,EAAE;4CACnB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gDAC9B,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oDACrB,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;wDACrC,CAAC,CAAC,OAAO,GAAG,EAAE;qDACjB;oDACD,OAAO,CAAC,CAAC;gDACb,CAAC,CAAC,CAAC;6CACN;4CACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;gDAChD,IAAI,EAAE,SAAS;gDACf,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gDAChC,MAAM,EAAE,IAAI,CAAC,SAAS;gDACtB,aAAa,EAAE,gBAAgB;gDAC/B,SAAS,EACL,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gDAC5E,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;gDACvD,KAAK,EAAE,IAAI;gDACX,YAAY,EAAE,GAAG,CAAC,aAAa;gDAC/B,cAAc,EAAE,CAAC,GAAG,CAAC,eAAe,IAAI,EAAE,CAAC;6CAC9C,CAAC,EAAE,CAAC,CAAC;4CACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,IAAI,CAAC,SAAS,EAAE,EAAE,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yCAC/F;6CAAM;4CACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,YAAY,IAAI,CAAC,SAAS,mBAAmB,EAC7C,SAAS,EACT,EAAE,QAAQ,EAAE,IAAI,EAAE,CACrB,CAAC;yCACL;wCACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;wCAC5B,6BAA6B;qCAChC;oCAED,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;wCACzB,IAAI,WAAW,KAAK,CAAC,EAAE;4CACnB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE;gDAC9B,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;oDACrB,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;wDACrC,CAAC,CAAC,OAAO,GAAG,EAAE;qDACjB;oDACD,OAAO,CAAC,CAAC;gDACb,CAAC,CAAC,CAAC;6CACN;4CACD,IAAI,CAAC,SAAS,CACV,IAAI,CAAC,SAAS,CAAC;gDACX,IAAI,EAAE,SAAS;gDACf,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gDAChC,MAAM,EAAE,IAAI,CAAC,SAAS;gDACtB,aAAa,EAAE,YAAY;gDAC3B,SAAS,EACL,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;gDAC5E,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;gDACvD,KAAK,EAAE,IAAI;gDACX,YAAY,EAAE,GAAG,CAAC,aAAa;6CAClC,CAAC,CACL,CAAC;yCACL;qCACJ;iCACJ;qCAAM;oCACH,IAAI,CAAC,eAAe,EAAE,CAAC;iCAC1B;gCACD,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;oCACtC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oCACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;oCACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;oCAC9D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;wCAC7B,IAAI,SAAS,EAAE;4CACX,SAAS,CAAC,KAAK,EAAE,CAAC;yCACrB;6CAAM;4CACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;yCAC9B;qCACJ;yCAAM;wCACH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;qCAChC;iCACJ;gCACD,8BAA8B;4BAClC,CAAC,CAAC,CACL,CAAC;yBACL;6BAAM;4BACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBAC1G;wBACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAChC,CAAC,CAAC,CACL,CAAC;iBACL;aACJ;iBAAM;gBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,wGAAwG;gBACxG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;SACJ;QACD,sEAAsE;IAE1E,CAAC;IAyCD,WAAW,CAAC,YAAmD,IAAI;QAC/D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;QACrF,2CAA2C;QAE3C,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAC/C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACjE,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACzF,MAAM,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,qDAAM,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;YAErG,MAAM,UAAU,GAAG;gBACf,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;gBAChC,MAAM,EAAE,IAAI;gBACZ,aAAa,EAAE,IAAI,CAAC,qBAAqB;gBACzC,KAAK,EAAE,WAAW;gBAClB,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO;gBAChD,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,WAAW;gBACxD,eAAe,EAAE,mBAAmB,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC7E,SAAS,EAAE,YAAY;gBACvB,SAAS,EACL,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MACjG,cAAc,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;aAChF,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,SAAS,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;aACrE;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;aAC9C;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YACtG,IAAI,SAAS,EAAE;gBACX,SAAS,CAAC,KAAK,EAAE,CAAC;aACrB;iBAAM;gBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;aAC9B;SACJ;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,YAAY,CAAC,MAAM,4BAA4B,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAC1H;QACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,YAAmD,IAAI;QAC/D,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAmB,EAAE;YACxD,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,EAAE,yBAAyB,EAAE,IAAI,CAAC,yBAAyB,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;SACjG,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,aAAa,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC3C,IAAI,MAAM,EAAE;gBACR,IAAI,SAAS,EAAE;oBACX,SAAS,CAAC,KAAK,EAAE,CAAC;iBACrB;qBAAM;oBACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iBAC9B;aACJ;QACL,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAED,YAAY,CAAC,YAAmD,IAAI;QAChE,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjE,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,8BAA8B,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACnF;iBAAM;gBACH,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC;gBACjF,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAqB,EAAE;wBACzD,KAAK,EAAE,KAAK;wBACZ,IAAI,EAAE;4BACF,SAAS,EAAE,IAAI,CAAC,SAAS;4BACzB,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;4BAChC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM;4BAClC,gBAAgB;4BAChB,iBAAiB,EAAE,IAAI;4BACvB,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC;gCAC/C,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC;gCACtD,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;4BACzE,aAAa,EAAE,IAAI,CAAC,aAAa;yBACpC;qBACJ,CAAC,CAAC;oBAEH,IAAI,CAAC,OAAO,CAAC,GAAG,CACZ,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;wBACzC,sBAAsB;wBACtB,IAAI,KAAK,IAAI,KAAK,KAAK,YAAY,EAAE;4BACjC,oBAAoB;4BACpB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;4BACjC,IAAI,SAAS,EAAE;gCACX,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;6BACnC;iCAAM;gCACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;6BAC5C;yBACJ;6BAAM;4BACH,IAAI,KAAK,KAAK,YAAY,EAAE;gCACxB,IAAI,SAAS,EAAE;oCACX,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iCACnC;qCAAM;oCACH,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;iCAC9B;6BACJ;yBACJ;oBACL,CAAC,CAAC,CACL,CAAC;iBACL;qBAAM;oBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC9E;aACJ;QACL,CAAC,CAAC,CACL,CAAC;IACN,CAAC;CAiJJ;;;;;;;;;;;;;ACp1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAElB;AAEV;AACgF;AACrB;AAE7E;;;;;;;;;;;;;;;;;;;;;ICJrB,4EACI;IADiD,0TAAyB,IAAI,IAAE;IAChF,8EAA+B;IAAA,sEAAW;IAAA,4DAAW;IACzD,4DAAS;;;;IACT,4EACI;IADiD,0TAAyB,KAAK,IAAE;IACjF,8EAA+B;IAAA,sEAAW;IAAA,4DAAW;IACzD,4DAAS;;;IASG,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF6B,oFAAuB;IAC7D,0DACJ;IADI,8FACJ;;;;IAOJ,6EACI;IAD6E,yVAA+B;IAC5G,8EAA+B;IAAA,wEAAa;IAAA,4DAAW;IAC3D,4DAAS;;;;IACT,6EACI;IAD+F,qUAAsB,IAAI,IAAC;IAC1H,8EAA+B;IAAA,gEAAK;IAAA,4DAAW;IACnD,4DAAS;;;;IAMT,6EACI;IAD0E,sVAA4B;IACtG,8EAA+B;IAAA,wEAAa;IAAA,4DAAW;IAC3D,4DAAS;;;;IACT,6EACI;IAD4F,kUAAmB,IAAI,IAAC;IACpH,8EAA+B;IAAA,gEAAK;IAAA,4DAAW;IACnD,4DAAS;;;;IAOb,6EACI;IADmD,sUAAsB;IACzE,kEACJ;IAAA,4DAAS;;;IAUO,qEAAkC;IAAA,uDAAO;IAAA,4DAAK;;;IAAZ,0DAAO;IAAP,wEAAO;;;IAMzC,qEAAkC;IAAA,uDAAO;IAAA,4DAAK;;;IAAZ,0DAAO;IAAP,wEAAO;;;IAd7D,sEAEQ;IAAA,qEAAI;IAAA,gFAAqB;IAAA,4DAAK;IAE9B,0EACI;IAAA,0EACI;IAAA,wEAAO;IAAA,oEAAG;IAAA,gFAAqB;IAAA,4DAAI;IAAA,4DAAQ;IAC3C,qEACI;IAAA,2HAA8C;IAClD,4DAAK;IACT,4DAAM;IACN,2EACI;IAAA,yEAAO;IAAA,qEAAG;IAAA,+EAAmB;IAAA,4DAAI;IAAA,4DAAQ;IACzC,sEACI;IAAA,6HAA8C;IAClD,4DAAK;IACT,4DAAM;IACV,4DAAM;IAEd,4DAAM;;;IAXkC,0DAAW;IAAX,qFAAW;IAMX,0DAAW;IAAX,qFAAW;;;;IAvDvD,6EACI;IAD2C,yZAA8C;IACzF,yEACI;IAAA,qFACI;IAAA,4EAAW;IAAA,wEAAa;IAAA,4DAAY;IACpC,iFACI;IAD0B,kWAA8B;IACxD,oIAEa;IACjB,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IACN,yEACI;IAAA,qFACI;IAAA,6EACA;IAD0E,0VAA0B;IAApG,4DACA;IAAA,8HAES;IACT,8HAES;IACb,4DAAiB;IACrB,4DAAM;IACN,0EACI;IAAA,sFACI;IAAA,6EACA;IADoE,uVAAuB;IAA3F,4DACA;IAAA,8HAES;IACT,8HAES;IACb,4DAAiB;IACrB,4DAAM;IACN,2EACI;IAAA,8EACI;IAAA,qEACJ;IAAA,4DAAS;IACT,8HAES;IACb,4DAAM;IACN,wHAmBM;IACV,4DAAO;;;;IAzDmC,0DAA8B;IAA9B,4FAA8B;IAC7B,0DAAa;IAAb,sFAAa;IAQ8B,0DAA0B;IAA1B,wFAA0B;IAC7E,0DAAmB;IAAnB,sFAAmB;IAGR,0DAAkB;IAAlB,qFAAkB;IAOgB,0DAAuB;IAAvB,qFAAuB;IACpE,0DAAgB;IAAhB,mFAAgB;IAGL,0DAAe;IAAf,kFAAe;IAMoB,0DAAiC;IAAjC,qFAAiC;IAG3B,0DAAiB;IAAjB,oFAAiB;IAI9F,0DAAgB;IAAhB,mFAAgB;;;IAuBlC,gEACA;;;;IAIY,4EACI;IADiD,iVAAgC,IAAI,IAAE;IACvF,8EAA+B;IAAA,sEAAW;IAAA,4DAAW;IACzD,4DAAS;;;;IACT,4EACI;IADiD,iVAAgC,KAAK,IAAE;IACxF,8EAA+B;IAAA,sEAAW;IAAA,4DAAW;IACzD,4DAAS;;;IASG,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF+B,sFAAyB;IACjE,0DACJ;IADI,8FACJ;;;IAQA,iFACI;IAAA,uDACJ;IAAA,4DAAa;;;IAF0B,gFAAmB;IACtD,0DACJ;IADI,+GACJ;;;;IAjBhB,8EACI;IADyD,8aAA2D;IACpH,yEACI;IAAA,qFACI;IAAA,4EAAW;IAAA,+DAAI;IAAA,4DAAY;IAC3B,iFACI;IAD4B,wXAAuC;IACnE,gJAEa;IACjB,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IACN,yEACI;IAAA,qFACI;IAAA,6EAAW;IAAA,mEAAO;IAAA,4DAAY;IAC9B,kFACI;IADuB,oXAAkC;IACzD,kJAEa;IACjB,4DAAa;IACjB,4DAAiB;IACrB,4DAAM;IACN,2EACI;IAAA,8EACI;IADqE,gVAA6B;IAClG,sFACJ;IAAA,4DAAS;IACT,8EACI;IAAA,qEACJ;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAO;;;;IAzBqC,0DAAuC;IAAvC,sGAAuC;IACxC,0DAAe;IAAf,yFAAe;IASnB,0DAAkC;IAAlC,iGAAkC;IAC/B,0DAAW;IAAX,qFAAW;IAO0D,0DAAwB;IAAxB,yFAAwB;IAGtD,0DAAuD;IAAvD,6GAAuD;;;IAKxI,gEACA;;;IAEQ,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;IAC/C,yEAAyD;IAAA,uDAAoC;IAAA,4DAAK;;;IAAzC,0DAAoC;IAApC,qGAAoC;;;IAG7F,yEAAyD;IAAA,kEAAO;IAAA,4DAAK;;;IACrE,yEAA0D;IAAA,uDAAyD;IAAA,4DAAK;;;IAA9D,0DAAyD;IAAzD,yIAAyD;;;IAGnH,yEAAsC;IAAA,iEAAM;IAAA,4DAAK;;;;IACjD,yEACI;IAAA,6EACI;IADmD,qYAAqC;IACxF,mEACJ;IAAA,4DAAS;IACb,4DAAK;;;IAH4F,0DAAwB;IAAxB,yFAAwB;;;IAK7H,oEAA4D;;;IAC5D,oEACK;;;IAnBT,4EACI;IAAA,4EACI;IAAA,kIAA+C;IAC/C,kIAAkG;IACtG,qEAAe;IACf,4EACI;IAAA,kIAAqE;IACrE,kIAAwH;IAC5H,qEAAe;IACf,4EACI;IAAA,kIAAiD;IACjD,kIAIK;IACT,qEAAe;IACf,oIAA4D;IAC5D,oIACK;IACT,4DAAQ;;;IApBS,0FAAyB;IAiBlB,2DAAiC;IAAjC,qGAAiC;IACpB,0DAA0B;IAA1B,sGAA0B;;;IA9DvE,8EACI;IAAA,iFACI;IAAA,qEACI;IAAA,uDACA;;IAAA,gIAES;IACT,gIAES;IACb,4DAAK;IACT,4DAAiB;IACjB,mFACI;IAAA,6HA6BO;IACP,wHACA;IAAA,kIAoBQ;IACZ,4DAAmB;IACvB,4DAAW;;;IA/DC,0DACA;IADA,yMACA;IAA6F,0DAA2B;IAA3B,8FAA2B;IAG1B,0DAA0B;IAA1B,6FAA0B;IAM3F,0DAA0B;IAA1B,6FAA0B;IA8BtD,0DAA8B;IAA9B,iGAA8B;IAC6C,0DAA8B;IAA9B,iGAA8B;;ADjG/G,MAAM,kBAAkB;IAoB7B,YACU,QAAqB,EACrB,EAAuB,EACvB,aAA+B,EAC/B,SAAuB,EACvB,eAAmC,EACnC,WAA2B,EAC5B,MAAiB;QANhB,aAAQ,GAAR,QAAQ,CAAa;QACrB,OAAE,GAAF,EAAE,CAAqB;QACvB,kBAAa,GAAb,aAAa,CAAkB;QAC/B,cAAS,GAAT,SAAS,CAAc;QACvB,oBAAe,GAAf,eAAe,CAAoB;QACnC,gBAAW,GAAX,WAAW,CAAgB;QAC5B,WAAM,GAAN,MAAM,CAAW;QAxBhB,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAErC,kBAAa,GAAG,IAAI,CAAC;QACrB,yBAAoB,GAAG,IAAI,CAAC;QAE5B,kBAAa,GAAmB,EAAE,CAAC;QAEnC,qBAAgB,GAAa,CAAC,cAAc,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAErE,eAAU,GAAgB,EAAE,CAAC;QAC7B,iBAAY,GAAkB,EAAE,CAAC;QACjC,aAAQ,GAAc,EAAE,CAAC;QACzB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAU,EAAE,CAAC;QACrB,aAAQ,GAAU,EAAE,CAAC;QACrB,eAAU,GAAG,KAAK,CAAC;QAoB1B,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,qBAAgB,GAAG,GAAG,EAAE;YACtB,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC1F,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,IAAI;aAC3F,CAAC;YACF,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;QAED,kBAAa,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC9C,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;oBACzB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,+BAA+B,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClF;qBAAM;oBACL,4BAA4B;oBAC5B,IAAI,GAAG,CAAC,UAAU,EAAE;wBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iCAAiC,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;wBACnF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;wBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;qBAC9B;oBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAE1E;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,mCAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;gBACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iHAAsB,EAAE;oBACzD,QAAQ,EAAE,OAAO;oBACjB,IAAI,EAAE,IAAI,6GAAkB,CAAC,cAAc,EAAE,8DAA8D,EAAE,IAAI,EAAE,IAAI,CAAC;iBACzH,CAAC,CAAC;gBAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACtC,IAAI,GAAG,EAAE;wBACP,IAAI,CAAC,aAAa,EAAE,CAAC;qBACtB;gBACH,CAAC,CAAC,CAAC;aAEJ;iBAAM;gBACL,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC;QAED,sBAAiB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;QAEzI,qBAAgB,GAAG,CAAC,UAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACrE,oBAAoB;gBACpB,IAAI,GAAG,EAAE;oBACP,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;oBACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;iBAC9B;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,mBAAc,GAAG,GAAG,EAAE;YACpB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC3C,0CAA0C;YAC1C,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5D,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACjF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1E;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,uBAAkB,GAAG,CAAC,GAAQ,EAAE,EAAE;YAChC,oBAAoB;YACpB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;gBAC3B,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,YAAY;aAC5F,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjB,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kCAAkC,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBACrF;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;iBAC1E;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,0BAAqB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3F,WAAM,GAAG,GAAG,EAAE,CAAC,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,gBAAgB,CAAC,CAAC;QAExD,sBAAiB,GAAG,GAAG,EAAE;YACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yHAA8B,EAAE;gBACjE,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE;aACjC,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACrF,CAAC;IA7IG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;;oFApCU,kBAAkB;kGAAlB,kBAAkB;QCzB/B,8EACI;QAAA,iFACI;QAAA,qEACI;QAAA,uDACA;;QAAA,oHAES;QACT,oHAES;QACb,4DAAK;QACT,4DAAiB;QACjB,mFACI;QAAA,kHA6DO;QACX,4DAAmB;QACvB,4DAAW;QACX,4GACA;QAAA,2HAkEW;;QA7IC,0DACA;QADA,mNACA;QAAsF,0DAAoB;QAApB,oFAAoB;QAGnB,0DAAmB;QAAnB,mFAAmB;QAMpF,0DAAmB;QAAnB,mFAAmB;QAgEhD,0DAAiB;QAAjB,iFAAiB;QACwB,0DAAiB;QAAjB,iFAAiB;;;;;;;;;;;;;;AC5E/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;;;;;;;;;;;;ICEpC,2EACA;IADyI,+VAAsB;IAA/J,4DACA;;;IADiD,8FAA8B;;;;IAC/E,4EACJ;IAD6G,+VAAsB;IAA/H,4DACJ;;;IAD6G,oFAAsB;;ADOpI,MAAM,8BAA8B;IAMzC,YACS,SAAuD,EACtD,WAA2B,EAC3B,EAAuB;QAFxB,cAAS,GAAT,SAAS,CAA8C;QACtD,gBAAW,GAAX,WAAW,CAAgB;QAC3B,OAAE,GAAF,EAAE,CAAqB;QAP1B,SAAI,GAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;QAC/B,mBAAc,GAAG,qDAAM,CAAC,cAAc,CAAC;QACvC,YAAO,GAAG,KAAK,CAAC;QAYvB,aAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAExC,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACpE,oBAAoB;gBACpB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;iBACrC;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC7B;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IAjBG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC;IAClE,CAAC;;4GAdU,8BAA8B;8GAA9B,8BAA8B;;QCZ3C,wEAAqB;QAAA,+FAA+B;QAAA,4DAAK;QACzD,qFACI;QAAA,6EACI;QADsC,wTAAiD;QACvF,oFACI;QAAA,8HACA;QAAA,8HACJ;QAAA,4DAAiB;QACrB,4DAAO;QACX,4DAAqB;QACrB,wFACI;QAAA,4EACI;QADsB,sJAAS,cAAU,IAAC;QAC1C,sEACJ;QAAA,4DAAS;QACT,6EACI;QADsB,uJAAS,cAAU,IAAC;QAC1C,+EACJ;QAAA,4DAAS;QACb,4DAAqB;;;QAZwB,0DAAc;QAAd,8EAAc;QACd,0DAAa;QAAb,6EAAa;QAQP,0DAAkD;QAAlD,qFAAkD;;;;;;;;;;;;;;ACRrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAG6E;AAC5F;;;;;;;;;;;;;;ICYO,gEACA;;;IAAA,wEACI;IAAA,uEAAM;IAAA,uDAAgB;IAAA,4DAAO;IAAA,gEACjC;IAAA,qEAAe;;;IADL,0DAAgB;IAAhB,iFAAgB;;;IAE1B,gEACA;;;IAAA,uEACI;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAC,uDAC5B;IAAA,4DAAO;;;IADqB,0DAC5B;IAD4B,yFAC5B;;;IAVR,qEACI;IAAA,qEACI;IAAA,uDACA;IAAA,iJACA;IAAA,oKAEe;IACf,iJACA;IAAA,qJAEO;IACX,4DAAK;IACT,4DAAK;;;IAVG,0DACA;IADA,+HACA;IAAK,0DAA6B;IAA7B,4FAA6B;IACF,0DAAe;IAAf,oFAAe;IAG1C,0DAA4D;IAA5D,iIAA4D;IAC1D,0DAA2C;IAA3C,6GAA2C;;;IAT9D,wEACI;IAAA,2IAYK;IACT,4DAAQ;;;IAbiB,0DAAgB;IAAhB,qFAAgB;;;IAF7C,wEACI;IAAA,0IAcQ;IACZ,qEAAe;;;IAfH,0DAA8B;IAA9B,6FAA8B;;;;IAXtD,yEACI;IAAA,8EACI;IAAA,kFACI;IAAA,iFAAgB;IAAA,uDAAyC;IAAA,4DAAiB;IAC1E,oFACI;IAAA,uDAA8E;IAAA,gEAC9E;IAAA,uDACJ;IAAA,4DAAoB;IACxB,4DAAkB;IAClB,mFACI;IAAA,yIAgBe;IACnB,4DAAmB;IACnB,uFACI;IAAA,8EACkC;IAA9B,8VAA0B,CAAC,KAAE;IAAC,iEAAK;IAAA,4DAAS;IACpD,4DAAmB;IACvB,4DAAW;IACf,4DAAM;;;IA9BsB,0DAAyC;IAAzC,uHAAyC;IAErD,0DAA8E;IAA9E,gKAA8E;IAC9E,0DACJ;IADI,wIACJ;IAG8B,0DAAc;IAAd,mFAAc;;;IAoD5B,gEACA;;;IAAA,wEACI;IAAA,uEAAM;IAAA,uDAAgB;IAAA,4DAAO;IAAA,gEACjC;IAAA,qEAAe;;;IADL,0DAAgB;IAAhB,iFAAgB;;;IAE1B,gEACA;;;IAAA,uEACI;IAAA,yEAAQ;IAAA,iEAAM;IAAA,4DAAS;IAAC,uDAC5B;IAAA,4DAAO;;;IADqB,0DAC5B;IAD4B,0FAC5B;;;IAVR,qEACI;IAAA,qEACI;IAAA,uDACA;IAAA,kJACA;IAAA,qKAEe;IACf,kJACA;IAAA,sJAEO;IACX,4DAAK;IACT,4DAAK;;;IAVG,0DACA;IADA,iIACA;IAAK,0DAA6B;IAA7B,6FAA6B;IACF,0DAAe;IAAf,qFAAe;IAG1C,0DAA4D;IAA5D,oIAA4D;IAC1D,0DAA2C;IAA3C,+GAA2C;;;IAT9D,wEACI;IAAA,4IAYK;IACT,4DAAQ;;;IAbiB,0DAAgB;IAAhB,sFAAgB;;;IAF7C,wEACI;IAAA,2IAcQ;IACZ,qEAAe;;;IAfH,0DAA8B;IAA9B,8FAA8B;;;;;IAjBtD,yEAEI;IAAA,8EACI;IAAA,kFACI;IAAA,iFAAgB;IAAA,uDAA2D;IAAA,4DAAiB;IAC5F,oFACI;IAAA,uDAAyG;IAAA,gEACzG;IAAA,uDACJ;IAAA,4DAAoB;IACxB,4DAAkB;IAClB,mFACI;IAAA,2EACI;IAAA,0EACI;IAAA,wDACJ;;IAAA,4DAAK;IACT,4DAAM;IACN,0IAgBe;IACnB,4DAAmB;IACnB,uFACI;IAAA,8EACwC;IAApC,sXAAmC;IAAC,oEAAQ;IAAA,4DAAS;IAC7D,4DAAmB;IACvB,4DAAW;IACf,4DAAM;;;;IAnCsB,0DAA2D;IAA3D,2IAA2D;IAEvE,0DAAyG;IAAzG,8LAAyG;IACzG,0DACJ;IADI,4JACJ;IAIQ,0DAAuD;IAAvD,kLAAuD;IACvD,0DACJ;IADI,8LACJ;IAE0B,0DAAuB;IAAvB,6FAAuB;;AD7CtE,MAAM,mBAAmB;IAK9B,YACU,EAAuB,EACvB,WAA2B,EAC3B,MAAc,EACd,GAA+B,EAC/B,QAAqB,EACtB,MAAiB;QALhB,OAAE,GAAF,EAAE,CAAqB;QACvB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAA4B;QAC/B,aAAQ,GAAR,QAAQ,CAAa;QACtB,WAAM,GAAN,MAAM,CAAW;QATnB,sBAAiB,GAAU,EAAE,CAAC;QAC9B,+BAA0B,GAAU,EAAE,CAAC;QA4B9C,qBAAgB,GAAG,GAAG,EAAE;YACtB,MAAM,QAAQ,GAAwB;gBACpC,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,oCAAoC,mCAAM,EAAE,CAAC,MAAM,CAAC,qDAAM,CAAC,cAAc,CAAC,GAAG;gBACnF,GAAG,EAAE,MAAM;aACZ,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACjE,CAAC;QAED,uBAAkB,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9E,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,UAAU,CAAC;YACxC,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,IAAI,CAAC,0BAA0B,EAAE;gBACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;oBACnD,MAAM,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;oBAChC,MAAM,WAAW,GAAG,aAAa,GAAG,EAAE,CAAC;oBACvC,MAAM,UAAU,GAAG,WAAW,GAAG,EAAE,CAAC;oBAEpC,mCAAmC;oBACnC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;oBAC3C,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC;oBACzD,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAEhC,sDAAsD;oBACtD,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;oBAElB,wCAAwC;oBACxC,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC;oBAEzC,sEAAsE;oBACtE,iDAAiD;oBACjD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC;oBAC/C,QAAQ,GAAG,QAAQ,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;oBAE1C,0CAA0C;oBAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC;oBACjD,QAAQ,GAAG,QAAQ,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;oBAE5C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;oBACrD,QAAQ,GAAG,QAAQ,GAAG,CAAC,OAAO,GAAG,aAAa,CAAC,CAAC;oBAEhD,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;oBAC5C,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;oBAE1B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACvB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBAC3B,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBAE3B,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,MAAM,CAAC;oBAChE,IAAI,OAAO,CAAC,kBAAkB,EAAE;wBAC9B,0CAA0C;wBAC1C,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACjE,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9E,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClF,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC;qBACjE;yBAAM;wBACL,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;qBACvD;iBACF;aACF;QAEH,CAAC;QAED,iBAAY,GAAG,CAAC,GAAQ,EAAE,EAAE;YAC1B,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACxB,OAAO,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC;QAChC,CAAC;QAED,gBAAW,GAAG,CAAC,GAAQ,EAAE,OAAO,GAAG,CAAC,EAAE,EAAE;YACtC,MAAM,GAAG,GAAiB,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;YAC3D,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8GAAqB,EAAE;gBACzD,QAAQ,EAAE,OAAO;gBACjB,IAAI,EAAE,IAAI,2GAAkB,CAC1B,QAAQ,EACR,2BAA2B,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU,iBAAiB,GAAG,CAAC,OAAO,GAAG,EAC/F,IAAI,EAAE,IAAI,EACV,GAAG,EACH,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAC9B;aACF,CAAC,CAAC;YAEH,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAkB,EAAE,EAAE;gBAExD,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE;oBACzC,qBAAqB;oBACrB,MAAM,KAAK,GAAQ;wBACjB,MAAM,EAAE,CAAC,GAAG,CAAC,MAAM;wBACnB,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,IAAI,CAAC,MAAM;qBACpB,CAAC;oBAEF,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAc,EAAE,EAAE;wBACpF,IAAI,SAAS,CAAC,KAAK,EAAE;4BACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACrE;6BAAM;4BACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,SAAS,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;yBACjF;wBACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC5B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IA9HG,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,qDAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,CAAC;YAE9E,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;gBAC3C,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,WAAW,CAAC,GAAG,EAAE;gBACf,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;SAEV;QACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;;sFA7BU,mBAAmB;mGAAnB,mBAAmB;QClBhC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACvB,4DAAM;QACN,gHAiCM;QACV,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACvB,4DAAM;QACN,mHAuCM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnF0F,0DAAoB;QAApB,0FAAoB;QA0C3E,0DAA6B;QAA7B,mGAA6B;;;;;;;;;;;;;;;;;;;;;;;ACtC/D,MAAM,aAAa;IAKxB;QAOA,YAAO,GAAG,CAAC,GAAS,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAEzC,oBAAe,GAAG,GAAG,EAAE;YACrB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACzC,CAAC;QAVC,IAAI,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,CAAC;IAChG,CAAC;IAED,QAAQ;IACR,CAAC;;0EAVU,aAAa;6FAAb,aAAa;;;;;;QCV1B,yEACI;QAAA,yEACI;QAAA,uFAA6D;QAAjC,iKAAgB,mBAAe,IAAC;QAAC,4DAAiB;QAClF,4DAAM;QACN,yEACI;QAAA,mFAAqE;QAArC,8JAAkB,qBAAiB,IAAC;QAAC,4DAAgB;QACzF,4DAAM;QACV,4DAAM;;QAFiB,0DAAgB;QAAhB,6EAAgB","file":"restaurante-restaurante-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoTurno } from '../interfaces/tipo-turno';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoTurnoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'turno';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<TipoTurno[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<TipoTurno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_turno_tipo?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: TipoTurno) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_turno_tipo${entidad.turno_tipo ? ('/' + entidad.turno_tipo) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Campo } from '../interfaces/autoconsulta';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AutoconsultaService {\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  getCampos(fltr: any = {}): Observable<Campo[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    };*/\n    return this.http.get<Campo[]>(\n      `${GLOBAL.urlCatalogos}/get_campos?${qs.stringify(fltr)}`\n      // httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getReporte(fltr: any = {}) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // 'Authorization': this.usrToken,\n        Accept: 'application/vnd.ms-excel'\n      }),\n      responseType: 'blob' as 'json'\n    };\n    return this.http.post<string>(\n      `${GLOBAL.urlAppRestaurante}/reporte/autoconsulta`,\n      fltr,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { Propina } from '../../../interfaces/propina';\nimport { PropinaService } from '../../../services/propina.service';\n\n@Component({\n  selector: 'app-lista-propina',\n  templateUrl: './lista-propina.component.html',\n  styleUrls: ['./lista-propina.component.css']\n})\nexport class ListaPropinaComponent implements OnInit {\n\n  public displayedColumns: string[] = ['propina'];\n  public dataSource: MatTableDataSource<Propina>;\n  public lstPropinas: Propina[];\n  @Output() getPropinaEv = new EventEmitter();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(private propinaSrvc: PropinaService) { }\n\n  ngOnInit() {\n    this.loadPropinas();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loadPropinas = () => {\n    this.propinaSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstPropinas = lst;\n          this.dataSource = new MatTableDataSource(this.lstPropinas);\n          this.dataSource.paginator = this.paginator;\n        }\n      }\n    });\n  }\n\n  getPropina = (obj: Propina) => {\n    this.getPropinaEv.emit(obj);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field>\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar...\">\n        </mat-form-field>\n        <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"propina\">\n                <!--<th mat-header-cell *matHeaderCellDef> No. </th>-->\n                <td mat-cell *matCellDef=\"let element\" (click)=\"getPropina(element)\">\n                    <mat-list>\n                        <mat-list-item>\n                            <mat-icon mat-list-icon>line_weight</mat-icon>\n                            <h5 mat-line>{{element.porcentaje}}%</h5>\n                            <span mat-line>{{element.usuario_tipo.descripcion}}</span>\n                            <button mat-icon-button type=\"button\" color=\"accent\">\n                                <mat-icon>arrow_right_alt</mat-icon>\n                            </button>\n                        </mat-list-item>\n                    </mat-list>\n                </td>\n            </ng-container>\n            <!--<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>-->\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-factura',\n  templateUrl: './factura.component.html',\n  styleUrls: ['./factura.component.css']\n})\nexport class FacturaComponent implements OnInit {\n  public params: any = {};\n  public titulo = 'Facturas';\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: false, showExcel: true, isPdfDisabled: false, isExcelDisabled: false\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService\n  ) { }\n\n  ngOnInit() {\n    this.resetParams();\n  }\n\n  resetParams = () => {\n    this.params = {\n      fdel: moment().startOf('month').format(GLOBAL.dbDateFormat),\n      fal: moment().format(GLOBAL.dbDateFormat)\n    };\n    this.cargando = false;\n  }\n\n  onSubmit() {\n    this.cargando = true;\n    this.params._excel = 0;\n    this.pdfServicio.getReporteFactura(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  excelClick() {\n    this.cargando = true;\n    this.params._excel = 1;\n    this.pdfServicio.getReporteFactura(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  chkDates = () => {\n    this.configBotones.isPdfDisabled = (!this.params.fdel || !this.params.fal);\n    this.configBotones.isExcelDisabled = (!this.params.fdel || !this.params.fal);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de facturas</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptFactura=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" (change)=\"chkDates()\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" (change)=\"chkDates()\" required>\n          </mat-form-field>\n          <div class=\"row\">\n            <div class=\"col\">\n              <mat-checkbox name=\"detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n            </div>\n            <div class=\"col\">\n              <mat-checkbox name=\"anuladas\" class=\"fullWidth\" [(ngModel)]=\"+params._anuladas\">Mostrar Únicamente Anuladas</mat-checkbox>\n            </div>\n          </div>          \n          <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ccGeneral } from '../../../interfaces/cajacorte';\nimport { CajacorteService } from '../../../services/cajacorte.service';\n\n@Component({\n  selector: 'app-cajacorte-lista',\n  templateUrl: './cajacorte-lista.component.html',\n  styleUrls: ['./cajacorte-lista.component.css']\n})\nexport class CajacorteListaComponent implements OnInit {\n\n  public displayedColumns: string[] = ['ccGeneral'];\n  public dataSource: MatTableDataSource<ccGeneral>;\n  public listacc: ccGeneral[];\n  @Output() getCajacorteEv = new EventEmitter();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private ccorteSrvc: CajacorteService,\n    private _snackBar: MatSnackBar\n   ) { }\n\n  ngOnInit() {\n    this.getCajascortes();\n  }\n\n  filtrar (filtro: string) {\n    this.dataSource.filter = filtro.trim().toLowerCase();\n  };\n\n  getCajascortes = () => {\n    this.ccorteSrvc.buscar().subscribe(lst => {\n      this.listacc = lst;\n      this.dataSource = new MatTableDataSource(this.listacc);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  anularCaja = (obj: ccGeneral) => {\n    if (confirm('¿Si anula este corte, se anulará también las nominaciones.?')) {\n      this.ccorteSrvc.anularCorte(obj).subscribe(res => {\n        if (res.exito) {\n          this.getCajascortes();\n        }\n        this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n      });\n    }\n  }\n\n  getCajacorte = (obj: ccGeneral) => {\n    this.getCajacorteEv.emit(obj);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n  <mat-card-content>\n    <mat-form-field>\n\t    <input matInput (keyup)=\"filtrar($event.target.value)\" placeholder=\"Buscar...\">\n\t</mat-form-field>\n\t<table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"ccGeneral\">\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-list>\n                    <mat-list-item>\n                        <mat-icon class=\"anulaicon\" (click)=\"anularCaja(element)\" mat-list-icon>close</mat-icon>\n                        <h5 mat-line>{{ element.descripcion }}</h5>\n                        <span mat-line>{{ element.creacion }}</span>\n                        <span mat-line>Total: {{ element.total }}</span>\n                        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"getCajacorte(element)\">\n                            <mat-icon>arrow_right_alt</mat-icon>\n                        </button>\n                    </mat-list-item>\n                </mat-list>\n            </td>\n        </ng-container>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n//import { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { ListaTurnoComponent } from '../lista-turno/lista-turno.component';\nimport { FormTurnoComponent } from '../form-turno/form-turno.component';\nimport { Turno } from '../../../interfaces/turno';\n\n@Component({\n  selector: 'app-turno',\n  templateUrl: './turno.component.html',\n  styleUrls: ['./turno.component.css']\n})\nexport class TurnoComponent implements OnInit {\n\n  public turno: Turno;\n  @ViewChild('lstTurno') lstTurnoComponent: ListaTurnoComponent;\n  @ViewChild('frmTurno') frmTurno: FormTurnoComponent;\n\n  constructor(\n    //private ls: LocalstorageService\n  ) {\n    this.turno = {\n      turno: null, turno_tipo: null, inicio: moment().format(GLOBAL.dbDateTimeFormat), fin: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setTurno = (trn: Turno) => {\n    //console.log(trn); \n    this.turno = trn;\n    this.frmTurno.loadDetalleTurno(+this.turno.turno);\n    this.frmTurno.pendientes = false;\n    this.frmTurno.comandas = []\n    this.frmTurno.facturas = []\n  }\n\n  refreshTurnoList = () => this.lstTurnoComponent.loadTurnos();\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-turno #lstTurno (getTurnoEv)=\"setTurno($event)\"></app-lista-turno>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-turno #frmTurno [turno]=\"turno\" (turnoSavedEv)=\"refreshTurnoList()\"></app-form-turno>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PideDatosCuentasComponent } from '../pide-datos-cuentas/pide-datos-cuentas.component';\n\nimport { Cuenta } from '../../interfaces/cuenta';\nimport { Comanda } from '../../interfaces/comanda';\nimport { Usuario } from '../../../admin/models/usuario';\nimport { UsuarioService } from '../../../admin/services/usuario.service';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\n@Component({\n  selector: 'app-abrir-mesa',\n  templateUrl: './abrir-mesa.component.html',\n  styleUrls: ['./abrir-mesa.component.css']\n})\nexport class AbrirMesaComponent implements OnInit {\n\n  public lstMeseros: Usuario[] = [];\n  public esMovil = false;\n  public keyboardLayout: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AbrirMesaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Comanda,\n    public dialogDatosCuentas: MatDialog,\n    public usuarioSrvc: UsuarioService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n    this.loadMeseros();\n  }\n\n  loadMeseros = () => {\n    this.usuarioSrvc.getMeserosTurno().subscribe(res => {\n      if (res) {\n        this.lstMeseros = res;\n      }\n    });\n  }\n\n  pedirDatosDeCuentas(obj: Comanda) {\n\n    const pideDatosCuentasRef = this.dialogDatosCuentas.open(PideDatosCuentasComponent, {\n      width: '50%',\n      disableClose: true,\n      data: { cuentas: obj.cuentas, comensales: this.data.comensales }\n    });\n\n    pideDatosCuentasRef.afterClosed().subscribe((result: Cuenta[]) => {\n      obj.cuentas = result;\n      this.dialogRef.close(obj);\n    });\n\n  }\n\n  terminar(obj: Comanda = null) {\n    if (!obj) {\n      this.dialogRef.close();\n    } else {\n      if (!obj.dividirCuentasPorSillas) {\n        this.dialogRef.close(obj);\n      } else {\n        this.pedirDatosDeCuentas(obj);\n      }\n    }\n  }\n\n  toNumber = (valor: any): number => +valor;\n\n}\n","<h1 mat-dialog-title>Abrir mesa</h1>\n<mat-dialog-content>\n    <form #frmAbrirMesa=\"ngForm\" (ngSubmit)=\"frmAbrirMesa.form.valid\" novalidate>\n        <mat-form-field class=\"separatorMargin\">\n            <mat-label>Mesero</mat-label>\n            <mat-select name=\"mesero\" [(ngModel)]=\"data.mesero\">\n                <mat-option *ngFor=\"let usr of lstMeseros\" [value]=\"usr.usuario.usuario\">\n                    {{usr.usuario.nombres}} {{usr.usuario.apellidos}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"separatorMargin\">\n            <input type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" matInput placeholder=\"# Comensales\" name=\"comensales\" [(ngModel)]=\"data.comensales\" required>\n            <input type=\"text\" *ngIf=\"esMovil\" matInput placeholder=\"# Comensales\" name=\"comensales\" [(ngModel)]=\"data.comensales\" required>\n        </mat-form-field>\n        <mat-checkbox name=\"esEvento\" class=\"separatorMargin\" [(ngModel)]=\"+data.esEvento\">¿Es evento?</mat-checkbox>\n        <mat-checkbox name=\"dividirCuentasPorSillas\" class=\"separatorMargin\" [(ngModel)]=\"+data.dividirCuentasPorSillas\"\n            [disabled]=\"+data.comensales <= 1\">¿Dividir cuentas?</mat-checkbox>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"terminar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar(data)\" [disabled]=\"!frmAbrirMesa.form.valid\" color=\"accent\">\n        Abrir mesa\n    </button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { UsuarioTipo } from '../interfaces/usuario-tipo';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioTipoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private moduleUrl: string = 'turno';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<UsuarioTipo[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<UsuarioTipo[]>(\n      `${GLOBAL.urlCatalogos}/get_tipo_usuario?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  /*\n  save(entidad: UsuarioTipo) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    };\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_turno_tipo${entidad.turno_tipo ? ('/' + entidad.turno_tipo) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n  */\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ValidaPwdGerenteTurnoComponent } from '../valida-pwd-gerente-turno/valida-pwd-gerente-turno.component';\nimport { Socket } from 'ngx-socket-io';\n\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\n\nimport { DetalleComanda } from '../../interfaces/detalle-comanda';\nimport { ComandaService } from '../../services/comanda.service';\nimport { DialogElminarProductoComponent, ElminarProductoModel } from 'src/app/shared/components/dialog-elminar-producto/dialog-elminar-producto.component';\n\n\n@Component({\n  selector: 'app-lista-productos-comanda',\n  templateUrl: './lista-productos-comanda.component.html',\n  styleUrls: ['./lista-productos-comanda.component.css']\n})\nexport class ListaProductosComandaComponent implements OnInit, OnChanges {\n\n  @Input() listaProductos: ProductoSelected[] = [];\n  @Input() noCuenta: number = null;\n  @Input() listHeight = '450px';\n  @Input() IdComanda = 0;\n  @Input() IdCuenta = 0;\n  @Input() bloqueoBotones = false;\n  @Input() mesaEnUso: any = {};\n  @Output() productoRemovedEv = new EventEmitter();\n  public esMovil = false;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public detalleComanda: DetalleComanda;\n  public totalDeProductos = 0.00;\n  public cantidadDeProductos = 0;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private comandaSrvc: ComandaService,\n    private socket: Socket,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.listaProductos && this.listaProductos.length > 0) {\n      this.getTotalProductos();\n    }\n  }\n\n  removeProducto = (p: ProductoSelected, idx: number, estaAutorizado = false, cantidad?: number) => {\n    this.bloqueoBotones = true;\n    this.detalleComanda = {\n      detalle_cuenta: p.detalle_cuenta,\n      detalle_comanda: p.detalle_comanda,\n      articulo: p.id,\n      cantidad: +p.cantidad > 1 ? (+p.cantidad) - 1 : 0,\n      precio: +p.precio,\n      total: +p.cantidad > 1 ? ((+p.cantidad) - 1) * (+p.precio) : 0,\n      notas: p.notas,\n      autorizado: estaAutorizado\n    };\n\n    if (cantidad){\n      this.detalleComanda.cantidad = cantidad;\n      this.detalleComanda.total = (cantidad * this.detalleComanda.precio)\n    }\n\n    this.comandaSrvc.saveDetalle(this.IdComanda, this.IdCuenta, this.detalleComanda).subscribe(res => {\n      if (res.exito) {\n        p.cantidad = this.detalleComanda.cantidad;\n        this.productoRemovedEv.emit({ listaProductos: this.listaProductos, comanda: res.comanda });\n        if (+p.cantidad === 0) {\n          this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\n          this.socket.emit('refrescar:listaCocina', { mesaenuso: this.mesaEnUso });\n        }\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 3000 });\n      }\n      this.bloqueoBotones = false;\n    });\n  }\n\n  deleteProductoFromList = (p: ProductoSelected, idx: number, estaAutorizado = false) => {\n    p.cantidad = 0;\n    p.notas = '';\n    this.removeProducto(p, idx, estaAutorizado);\n  }\n\n  deleteProductoFromListAfterPrinted = (p: ProductoSelected, idx: number) => {\n    this.bloqueoBotones = true;\n    const dialogoRef = this.dialog.open(ValidaPwdGerenteTurnoComponent, {\n      width: '40%', disableClose: true\n    });\n\n    dialogoRef.afterClosed().subscribe(res => {\n      // console.log(res);\n      if (res) {\n        // this.autorizar = true;\n        //this.deleteProductoFromList(p, idx, true);\n        const dialogDelete = this.dialog.open(DialogElminarProductoComponent, {\n          width: '40%', disableClose: true, data: new ElminarProductoModel(p)\n        });\n\n        dialogDelete.afterClosed().subscribe(res => {\n          if (res && res.respuesta){\n            this.removeProducto(res.producto, idx, true, res.producto.cantidad)\n            this.snackBar.open('Se eliminará el producto seleccionado.', 'Comanda', { duration: 5000 });\n          }\n        })        \n      } else {\n        this.snackBar.open('La contraseña no es correcta', 'Comanda', { duration: 5000 });\n      }\n      this.bloqueoBotones = false;\n    });\n  }\n\n  toggleShowInputNotas(p: ProductoSelected) {\n    console.log('ARTICULO = ', p);\n    p.showInputNotas = !p.showInputNotas;\n    if (p.showInputNotas) {\n      p.itemListHeight = '140px';\n    } else {\n      p.itemListHeight = '70px';\n      this.saveNotasProducto(p);\n    }\n  }\n\n  saveNotasProducto = (p: ProductoSelected) => {\n    this.comandaSrvc.saveNotasProducto({ detalle_comanda: p.detalle_comanda, notas: p.notas }).subscribe(res => {\n      if (res.exito) {\n        this.snackBar.open('Notas de producto guardadas con éxito...', 'Producto', { duration: 3000 });\n      }\n    });\n  }\n\n  doAction(ev: string) {\n    console.log(ev);\n  }\n\n  getTotalProductos = () => {\n    this.totalDeProductos = 0.00;\n    this.cantidadDeProductos = 0;\n    for (const p of this.listaProductos) {\n      this.totalDeProductos += ((p.cantidad * p.precio) + p.monto_extra);\n      this.cantidadDeProductos += p.cantidad;\n    }\n  }\n\n}\n","<mat-list class=\"fullWidth\" [style.height]=\"listHeight\">\n    <mat-list-item *ngIf=\"listaProductos.length > 0\">\n        <div matLine>\n            <span class=\"lineaDeTotal\">\n                {{cantidadDeProductos}} {{cantidadDeProductos > 1 ? 'artículos' : 'artículo'}} por {{totalDeProductos | number: '1.2-2'}}\n            </span>            \n        </div>\n    </mat-list-item>\n    <mat-list-item *ngFor=\"let p of listaProductos; let i = index;\" [ngClass]=\"{'noImpreso': +p.impreso === 0}\" >\n        <div matLine class=\"fullWidth\" *ngIf=\"+p.cantidad > 0\">\n            <div class=\"row\">\n                <div class=\"col m6 s12\">\n                    <span matLine>\n                        <span *ngIf=\"+p.multiple === 0\">{{p.cantidad}}</span>&nbsp;{{p.nombre}}\n                    </span>\n                    <ng-container *ngIf=\"+p.combo === 1\">\n                        <div matLine *ngFor=\"let det of p.detalle\">\n                            <span class=\"tabulador\">{{det}}</span>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"col m6 s12\" align=\"end\">\n                    <!--<span>{{p.detalle | json}}</span>-->\n                    <span>{{ ((p.cantidad * p.precio) + p.monto_extra) | number: '1.2-2' }}</span>&nbsp;\n                    <eco-fab-speed-dial direction=\"left\" *ngIf=\"+p.impreso === 0\">\n                        <eco-fab-speed-dial-trigger>\n                            <button mat-fab>\n                                <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_left</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-trigger>\n                        <eco-fab-speed-dial-actions>\n                            <button mat-mini-fab (click)=\"deleteProductoFromList(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">delete_forever</mat-icon>\n                            </button>\n                            <button mat-mini-fab (click)=\"removeProducto(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\" *ngIf=\"p.detalle.length <= 1\">\n                                <mat-icon style=\"font-size: 16pt !important;\">remove_circle</mat-icon>\n                            </button>\n                            <button mat-mini-fab (click)=\"toggleShowInputNotas(p)\" color=\"accent\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">notes</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-actions>\n                    </eco-fab-speed-dial>\n                    <eco-fab-speed-dial direction=\"left\" *ngIf=\"+p.impreso === 1\">\n                        <eco-fab-speed-dial-trigger>\n                            <button mat-fab>\n                                <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_left</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-trigger>\n                        <eco-fab-speed-dial-actions>\n                            <button mat-mini-fab (click)=\"deleteProductoFromListAfterPrinted(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">delete_forever</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-actions>\n                    </eco-fab-speed-dial>\n                </div>\n            </div>\n        </div>\n        <div matLine class=\"fullWidth\" *ngIf=\"+p.cantidad > 0\">\n            <mat-form-field class=\"fullWidth\" *ngIf=\"p.showInputNotas\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas de producto\" [(ngModel)]=\"p.notas\" (keyup.enter)=\"toggleShowInputNotas(p)\" (blur)=\"saveNotasProducto(p)\" maxlength=\"1000\">\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Notas de producto\" [(ngModel)]=\"p.notas\" (keyup.enter)=\"toggleShowInputNotas(p)\" (blur)=\"saveNotasProducto(p)\" maxlength=\"1000\">\n            </mat-form-field>\n        </div>\n    </mat-list-item>\n</mat-list>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaPropinaComponent } from '../lista-propina/lista-propina.component';\nimport { Propina } from '../../../interfaces/propina';\n\n@Component({\n  selector: 'app-propina',\n  templateUrl: './propina.component.html',\n  styleUrls: ['./propina.component.css']\n})\nexport class PropinaComponent implements OnInit {\n  public propina: Propina;\n  @ViewChild('lstPropina') lstPropinaComponent: ListaPropinaComponent;\n  constructor() {\n    this.propina = {\n      propina_distribucion: null, usuario_tipo: null, porcentaje: null, anulado: null, sede: null, grupal: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setPropina = (pres: any) => this.propina = {\n    propina_distribucion: pres.propina_distribucion,\n    usuario_tipo: pres.usuario_tipo.usuario_tipo,\n    porcentaje: pres.porcentaje,\n    anulado: pres.anulado,\n    sede: pres.sede,\n    grupal: pres.grupal\n  }\n\n  refreshPropinaList = () => this.lstPropinaComponent.loadPropinas();\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-propina #lstPropina (getPropinaEv)=\"setPropina($event)\"></app-lista-propina>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-propina #frmPropina [propina]=\"propina\" (propinaSavedEv)=\"refreshPropinaList()\"></app-form-propina>\n    </div>\n</div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ConfiguraMesaComponent } from '../configura-mesa/configura-mesa.component';\r\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { Mesa } from '../../../interfaces/mesa';\r\n// import { Impresora } from '../../../../admin/interfaces/impresora';\r\n\r\nimport { MesaService } from '../../../services/mesa.service';\r\n// import { ImpresoraService } from '../../../../admin/services/impresora.service';\r\n\r\n@Component({\r\n  selector: 'app-area-designer',\r\n  templateUrl: './area-designer.component.html',\r\n  styleUrls: ['./area-designer.component.css']\r\n})\r\nexport class AreaDesignerComponent implements OnInit {\r\n\r\n  @ViewChild(MatMenuTrigger) contextMenu: MatMenuTrigger;\r\n\r\n  public mesas: Mesa[] = [];\r\n  public contextMenuPosition = { x: '0px', y: '0px' };\r\n  // public impresoras: Impresora[] = [];\r\n  public cargando = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private mesaSrvc: MesaService,\r\n    public dialogRef: MatDialogRef<AreaDesignerComponent>,\r\n    public dialog: MatDialog,\r\n    // public impresoraSrvc: ImpresoraService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // console.log(this.data);\r\n    this.mesas = this.data.mesas;\r\n    // console.log(this.mesas);\r\n    // this.loadImpresoras();\r\n  }\r\n\r\n  // loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\r\n\r\n  getNextTableNumber = () =>\r\n    this.mesas.length > 0 ?\r\n      (this.mesas.reduce((max, p) => +p.numero > max ? +p.numero : max, (!!this.mesas[0].numero ? +this.mesas[0].numero : 0)) + 1) :\r\n      1\r\n\r\n  addTable = (w = 72, h = 72, esmostrador = 0, vertical = 0, escallcenter = 0) => {\r\n    this.cargando = true;\r\n    this.mesas.push({\r\n      mesa: null,\r\n      area: this.data.area,\r\n      numero: this.getNextTableNumber(),\r\n      posx: 1,\r\n      posy: 1,\r\n      tamanio: 72,\r\n      estatus: 1,\r\n      ancho: w,\r\n      alto: h,\r\n      esmostrador,\r\n      vertical,\r\n      escallcenter\r\n    });\r\n    this.saveNewMesa(this.mesas[this.mesas.length - 1], this.mesas.length - 1);\r\n  }\r\n\r\n  addMostrador = (esVertical = false) => this.addTable((esVertical ? 72 : 144), (esVertical ? 144 : 72), 1, (esVertical ? 1 : 0));\r\n\r\n  addCallCenter = () => this.addTable(72, 72, 1, 0, 1);\r\n\r\n  saveNewMesa = (mesa: Mesa, pos: number) => {\r\n    this.mesaSrvc.save(mesa).subscribe(res => {\r\n      if (res.exito) {\r\n        if (!!res.mesa) {\r\n          this.mesas[pos] = res.mesa;\r\n        }\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Mesa', { duration: 7000 });\r\n      }\r\n      this.cargando = false;\r\n    });\r\n  }\r\n\r\n  onClickMesa = (obj: any) => { };\r\n\r\n  terminar = () => this.dialogRef.close(this.mesas);\r\n\r\n  onContextMenu(event: MouseEvent, item: Mesa) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  configurarMesa = (item: Mesa) => {\r\n    const configMesaRef = this.dialog.open(ConfiguraMesaComponent, {\r\n      width: '50%',\r\n      data: { mesa: item }\r\n    });\r\n\r\n    configMesaRef.afterClosed().subscribe(res => {\r\n\r\n    });\r\n  }\r\n\r\n  toggleDeBaja = (item: Mesa, deBaja = 1) => {\r\n    const confBajaMesa = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel(\r\n        +item.esmostrador === 0 ? 'Mesa' : 'Mostrador',\r\n        `¿Seguro que desea ${\r\n        deBaja === 1 ? 'dar de baja' : 'habilitar'\r\n        } ${+item.esmostrador === 0 ? 'la mesa' : 'el mostrador'} #${item.numero}?`,\r\n        'Sí', 'No'\r\n      )\r\n    });\r\n\r\n    confBajaMesa.afterClosed().subscribe((conf: boolean) => {\r\n      if (conf) {\r\n        item.debaja = deBaja;\r\n        this.mesaSrvc.save(item).subscribe(res => {\r\n          if (res.exito) {\r\n            if (!!res.mesa) {\r\n              const idx = this.mesas.findIndex(m => +m.mesa === +res.mesa.mesa);\r\n              if (idx > -1) {\r\n                this.mesas[idx] = res.mesa;\r\n              }\r\n              this.snackBar.open(res.mensaje, 'Mesa', { duration: 3000 });\r\n            }\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Mesa', { duration: 7000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"diseniador\">\r\n    <div style=\"height: 55px;\" align=\"center\">\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addTable()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mesa\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addMostrador()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mostrador\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addMostrador(true)\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mostrador vertical\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addCallCenter()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Call center\r\n        </button>        \r\n        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"terminar()\" [disabled]=\"cargando\">\r\n            Terminar\r\n        </button>\r\n    </div>\r\n    <div style=\"height: 5px; width: 100%;\"></div>\r\n    <div id=\"divAreaPosicionamiento\" class=\"areaPosicionamiento\">\r\n        <app-mesa *ngFor=\"let m of mesas\" [configuracion]=\"m\" (onClickMesa)=\"!cargando && onClickMesa($event)\" (moviendoMesa)=\"cargando = $event\" [dontAllowDrag]=\"cargando\" (contextmenu)=\"!cargando && onContextMenu($event, m)\">            \r\n        </app-mesa>\r\n    </div>\r\n    <!-- Inicio del menu contextual -->\r\n    <div style=\"visibility: hidden; position: fixed;\" [style.left]=\"contextMenuPosition.x\" [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\"></div>\r\n    <mat-menu #contextMenu=\"matMenu\">\r\n        <ng-template matMenuContent let-item=\"item\">\r\n            <span mat-menu-item class=\"mesaTitle\" disableRipple=\"true\">Mesa #{{item.numero}} ({{item.mesa}})</span>\r\n            <mat-divider></mat-divider>\r\n            <button mat-menu-item (click)=\"configurarMesa(item)\" *ngIf=\"+item.debaja === 0\">\r\n                <mat-icon class=\"btnIconSize\">settings</mat-icon>Configuracion\r\n            </button>\r\n            <button mat-menu-item (click)=\"toggleDeBaja(item)\" *ngIf=\"+item.debaja === 0\" class=\"customize\" [disabled]=\"+item.estatus === 2\">\r\n                <mat-icon class=\"btnIconSize\">thumb_down</mat-icon>Dar de baja\r\n            </button>\r\n            <button mat-menu-item (click)=\"toggleDeBaja(item, 0)\" *ngIf=\"+item.debaja === 1\" class=\"customizeUp\" [disabled]=\"+item.estatus === 2\">\r\n                <mat-icon class=\"btnIconSize\">thumb_up</mat-icon>Habilitar\r\n            </button>\r\n        </ng-template>\r\n    </mat-menu>\r\n    <!-- Fin del menu contextual -->\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Area } from '../interfaces/area';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'area';\n\n  constructor(\n    private http: HttpClient,\n    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<Area[]> {   \n    return this.http.get<Area[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_areas?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Area) {   \n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${entidad.area ? ('/' + entidad.area) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { AreaDesignerComponent } from '../area-designer/area-designer.component';\r\n\r\nimport { Area } from '../../../interfaces/area';\r\nimport { Impresora } from '../../../../admin/interfaces/impresora';\r\nimport { AreaService } from '../../../services/area.service';\r\nimport { ImpresoraService } from '../../../../admin/services/impresora.service';\r\n\r\n@Component({\r\n  selector: 'app-form-area',\r\n  templateUrl: './form-area.component.html',\r\n  styleUrls: ['./form-area.component.css']\r\n})\r\nexport class FormAreaComponent implements OnInit {\r\n\r\n  @Input() entidad: Area;\r\n  @Output() entidadSavedEv = new EventEmitter();\r\n  public sedeUsr = 0;\r\n  public lstAreas: Area[] = [];\r\n  public esMovil = false;\r\n  public impresoras: Impresora[] = [];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private entidadSrvc: AreaService,\r\n    private impresoraSrvc: ImpresoraService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sedeUsr = this.ls.get(GLOBAL.usrTokenVar).sede || 0;\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.resetEntidad();\r\n    this.loadAreas();\r\n    this.loadImpresoras();\r\n  }\r\n\r\n  loadAreas = () => this.entidadSrvc.get({ sede: this.sedeUsr, debaja: 1 }).subscribe(res => this.lstAreas = res);\r\n\r\n  loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\r\n\r\n  resetEntidad = () => this.entidad = { area: null, sede: this.sedeUsr, nombre: null, mesas: [], impresora_factura: null, impresora: null };\r\n\r\n  onSubmit = () => {\r\n    // console.log(this.entidad); return;\r\n    this.entidadSrvc.save(this.entidad).subscribe(res => {\r\n      if (res.exito) {\r\n        this.snackBar.open(`${res.mensaje}`, 'Área', { duration: 3000 });\r\n        this.resetEntidad();\r\n        this.loadAreas();\r\n        this.entidadSavedEv.emit();\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Área', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDesigner = () => {\r\n    const areaDesignerRef = this.dialog.open(AreaDesignerComponent, {\r\n      width: '800px',\r\n      disableClose: true,\r\n      data: { area: +this.entidad.area, mesas: this.entidad.mesas || [] }\r\n    });\r\n\r\n    areaDesignerRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        // console.log(result);\r\n        this.entidadSavedEv.emit();\r\n        this.entidadSrvc.get({ area: +this.entidad.area, debaja: 1 }).subscribe(res => {\r\n          if (res && res.length > 0) {\r\n            this.entidad = res[0];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Área</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmEntidad=\"ngForm\" (ngSubmit)=\"frmEntidad.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input type=\"text\" matInput placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"entidad.nombre\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Área padre</mat-label>\n                <mat-select name=\"area_padre\" [(ngModel)]=\"entidad.area_padre\">\n                    <mat-option *ngFor=\"let ar of lstAreas\" [value]=\"ar.area\">\n                        {{ar.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Impresora</mat-label>\n                <mat-select name=\"impresora\" [(ngModel)]=\"entidad.impresora\" required>\n                    <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                        {{imp.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Impresora de factura</mat-label>\n                <mat-select name=\"impresora_factura\" [(ngModel)]=\"entidad.impresora_factura\">\n                    <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                        {{imp.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <h5>Mesas en el área: {{entidad.mesas.length}}</h5>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmEntidad.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"openDesigner()\"\n                    *ngIf=\"entidad.area\">\n                    Diseñar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetEntidad()\" *ngIf=\"entidad.area\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\n\nimport { Turno } from '../../../interfaces/turno';\nimport { TurnoService } from '../../../services/turno.service';\n\ninterface IDataCopiarTurno {\n  turnoCopia: Turno;\n}\n\n@Component({\n  selector: 'app-selecciona-turno-previo',\n  templateUrl: './selecciona-turno-previo.component.html',\n  styleUrls: ['./selecciona-turno-previo.component.css']\n})\nexport class SeleccionaTurnoPrevioComponent implements OnInit {\n\n  public lstTurnos: Turno[] = [];\n  public turnoSelected: Turno;\n\n  constructor(\n    public dialogRef: MatDialogRef<SeleccionaTurnoPrevioComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDataCopiarTurno,\n    public ls: LocalstorageService,\n    private snackBar: MatSnackBar,\n    private turnoSrvc: TurnoService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTurnos();\n  }\n\n  loadTurnos = () => {\n    this.lstTurnos = [];\n    this.turnoSrvc.get({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((lst: Turno[]) => {\n      if (lst && lst.length > 0) {\n        const limite = lst.length >= 11 ? 11 : lst.length;\n        for (let i = 0; i < limite; i++) {\n          this.lstTurnos.push(lst[i]);\n        }\n      }\n    });\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n  copiar = () => {\n    if (this.turnoSelected) {\n      const confDialog = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel('Detalle de turno', 'Esto copiará el detalle del turno que seleccionó. ¿Desea continuar?', 'Sí', 'No')\n      });\n\n      confDialog.afterClosed().subscribe(resConf => {\n        if (resConf) {\n          this.turnoSrvc.replicaDetalleTurno(this.turnoSelected.turno, this.data.turnoCopia.turno).subscribe(res => {\n            if (res.exito) {\n              this.snackBar.open('Turno copiado con éxito', 'Detalle turno', { duration: 3000 });\n            } else {\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Detalle turno', { duration: 7000 });\n            }\n            this.dialogRef.close();\n          });\n        }\n      });\n    }\n  }\n}\n","<h1 mat-dialog-title>¿De qué turno quiere copiar el detalle?</h1>\n<div mat-dialog-content>\n    <mat-nav-list>\n        <ng-container *ngFor=\"let element of lstTurnos\">\n            <mat-list-item (click)=\"turnoSelected = element\" *ngIf=\"+element.turno !== +data.turnoCopia.turno\">\n                <mat-icon mat-list-icon>schedule</mat-icon>\n                <h5 mat-line>Inicio: {{element.inicio | date: 'dd/MM/yyyy HH:mm:ss'}}</h5><br />\n                <p mat-line>Fin: {{element.fin | date: 'dd/MM/yyyy HH:mm:ss'}}</p>\n            </mat-list-item>\n        </ng-container>\n    </mat-nav-list>\n    <small *ngIf=\"turnoSelected\">\n        <div>\n            <strong>Seleccionó el turno que inicia el {{turnoSelected.inicio | date: 'dd/MM/yyyy HH:mm:ss'}} y finaliza\n                el {{turnoSelected.fin | date: 'dd/MM/yyyy HH:mm:ss'}}</strong>\n        </div>\n    </small>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button type=\"button\" (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"copiar()\" [disabled]=\"!turnoSelected\">\n        Copiar\n    </button>\n</div>","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-header>\n        <mat-card-title>Reporte de ventas</mat-card-title>\n        <mat-card-subtitle>\n            Por artículo<br />\n            Del {{params.fdel | date:'dd/MM/yyyy'}} al {{params.fal | date:'dd/MM/yyyy'}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content *ngIf=\"data.grupo == 1\">\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let art of data.datos\">\n                    <tr>\n                        <td class=\"doubleTab brdBSingle\">{{art.articulo.descripcion}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"data.grupo == 2\">\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let sede of data.datos\">\n                    <tr>\n                        <th class=\"brdTSingleBSingle\" colspan=\"3\">{{ sede.sede }}</th>\n                    </tr>\n                    <tr *ngFor=\"let art of sede.articulos\">\n                        <td class=\"doubleTab brdBSingle\">{{art.articulo.descripcion}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n\n    <!--\n    <mat-card-footer>\n    </mat-card-footer>\n    -->\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\n\n// import { PorArticulo } from '../../../../interfaces/reporte-ventas';\n\n@Component({\n  selector: 'app-por-articulo',\n  templateUrl: './por-articulo.component.html',\n  styleUrls: ['./por-articulo.component.css']\n})\nexport class PorArticuloComponent implements OnInit {\n\n  @Input() params: any = {};\n  @Input() data: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../shared/global';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\n\n@Component({\n  selector: 'app-notas-generales-comanda',\n  templateUrl: './notas-generales-comanda.component.html',\n  styleUrls: ['./notas-generales-comanda.component.css']\n})\nexport class NotasGeneralesComandaComponent implements OnInit {\n\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NotasGeneralesComandaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  terminar = (obj: string = null) => this.dialogRef.close(obj);\n\n}\n","<h1 mat-dialog-title>Notas generales de comanda</h1>\n<mat-dialog-content>\n    <form #frmNotasGenCom=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <textarea matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas generales\" name=\"notasGenerales\" [(ngModel)]=\"data.notasGenerales\" maxlength=\"1000\"></textarea>\n            <textarea matInput *ngIf=\"esMovil\" placeholder=\"Notas generales\" name=\"notasGenerales\" [(ngModel)]=\"data.notasGenerales\" maxlength=\"1000\"></textarea>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"terminar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar(data.notasGenerales)\" color=\"accent\">\n        Guardar\n    </button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { MesaDisponible } from '../../interfaces/mesa';\n\nimport { MesaService } from '../../services/mesa.service';\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-traslado-mesa',\n  templateUrl: './traslado-mesa.component.html',\n  styleUrls: ['./traslado-mesa.component.css']\n})\nexport class TrasladoMesaComponent implements OnInit {\n\n  public mesasDisponibles: MesaDisponible[] = [];\n  public destino: MesaDisponible;\n\n  constructor(\n    public dialogRef: MatDialogRef<TrasladoMesaComponent>,\n    private snackBar: MatSnackBar,\n    private mesaSrvc: MesaService,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.loadMesasDisponibles();\n  }\n\n  loadMesasDisponibles = () => this.mesaSrvc.getDisponibles().subscribe((res: MesaDisponible[]) => this.mesasDisponibles = res);\n\n  cancelar = () => this.dialogRef.close(false);\n\n  trasladar = () => {\n    this.comandaSrvc.trasladarMesa(+this.data.mesaEnUso.comanda, +this.data.mesaEnUso.mesa.mesa, +this.destino.mesa).subscribe(res => {\n      if (res.exito) {\n        this.snackBar.open(res.mensaje, 'Traslado de mesa', { duration: 3000 });\n        this.dialogRef.close(true);\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Traslado de mesa', { duration: 7000 });\n      }\n    });\n  }\n\n}\n","<h1 mat-dialog-title>Trasladar a otra mesa</h1>\n<div mat-dialog-content>\n    <form #frmTrasladarMesa=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <mat-label>Trasladar a mesa:</mat-label>\n            <mat-select name=\"destino\" [(ngModel)]=\"destino\" required>\n                <mat-option *ngFor=\"let mDispon of mesasDisponibles\" [value]=\"mDispon\">\n                    {{mDispon.area.nombre}} - {{mDispon.etiqueta || mDispon.numero}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"trasladar()\" [disabled]=\"!frmTrasladarMesa.form.valid\">\n        Trasladar\n    </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { PorCategoria, PorArticulo } from '../interfaces/reporte-ventas';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReporteVentasService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'reporte/venta'; \n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  porCategoria(params: any): Observable<PorCategoria[]> {\n    return this.http.get<PorCategoria[]>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/categoria?${qs.stringify(params)}`\n      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porArticulo(params: any): Observable<PorArticulo[]> {\n    return this.http.get<PorArticulo[]>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/articulo?${qs.stringify(params)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porCategoriaPdf(params: Object) {\n    const httpOptions = {\n      headers: new HttpHeaders({        \n        Accept: 'application/pdf'\n      }),\n      responseType: 'blob' as 'json'\n    };\n\n    return this.http.get<string>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/categoriapdf/1?${qs.stringify(params)}`,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porArticuloPdf(params: Object) {\n    const httpOptions = {\n      headers: new HttpHeaders({        \n        Accept: 'application/pdf'\n      }),\n      responseType: 'blob' as 'json'\n    };\n\n    return this.http.get<string>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/articulopdf/1?${qs.stringify(params)}`,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { ccGeneral, ccDetalle, ccTipo, ccNominacion } from '../interfaces/cajacorte';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CajacorteService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'cajacorte';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  buscar(fltr: any = {}): Observable<ccGeneral[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccGeneral[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCajaCorteTipo(fltr: any = {}): Observable<ccTipo[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccTipo[]>(\n      `${GLOBAL.urlCatalogos}/get_caja_corte_tipo?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCajaCorteNominacion(fltr: any = {}): Observable<ccNominacion[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccNominacion[]>(\n      `${GLOBAL.urlCatalogos}/get_caja_corte_nominacion?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  guardar(entidad: ccGeneral): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularCorte(entidad: ccGeneral): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/anular_caja`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularDetalle(entidad: ccDetalle): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/anular_caja_detalle`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Propina } from '../../../interfaces/propina';\nimport { PropinaService } from '../../../services/propina.service';\n\nimport { UsuarioTipo } from '../../../../admin/interfaces/usuario-tipo';\nimport { UsuarioTipoService } from '../../../../admin/services/usuario-tipo.service';\n\n@Component({\n  selector: 'app-form-propina',\n  templateUrl: './form-propina.component.html',\n  styleUrls: ['./form-propina.component.css']\n})\nexport class FormPropinaComponent implements OnInit {\n\n  @Input() propina: Propina;\n  @Output() propinaSavedEv = new EventEmitter();\n  public usuarios: UsuarioTipo[] = [];\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private propinaSrvc: PropinaService,\n    private usuarioSrvc: UsuarioTipoService\n  ) { }\n\n  ngOnInit() {\n    this.resetPropina();\n    this.loadUsuario();\n  }\n\n  loadUsuario = () => {\n    this.usuarioSrvc.get().subscribe(res => {\n      this.usuarios = res;\n    });\n  }\n\n  resetPropina = () => this.propina = {\n    propina_distribucion: null, usuario_tipo: null, porcentaje: null, anulado: 0, sede: null, grupal: 0\n  }\n\n  onSubmit = () => {\n    this.propinaSrvc.save(this.propina).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.propinaSavedEv.emit();\n        this.resetPropina();\n        this.snackBar.open('Propina agregada...', 'Distribucion de propinas', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Distribucion de propinas', { duration: 3000 });\n      }\n    });\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmPropina=\"ngForm\" (ngSubmit)=\"frmPropina.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Tipo Usuario</mat-label>\n                <mat-select name=\"usuario\" [(ngModel)]=\"propina.usuario_tipo\" required>\n                    <mat-option *ngFor=\"let m of usuarios\" [value]=\"m.usuario_tipo\">\n                        {{m.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" step=\"0.01\" placeholder=\"Porcentaje\" name=\"porcentaje\" [(ngModel)]=\"propina.porcentaje\" required>\n            </mat-form-field>\n            <div class=\"row\">\n                <div class=\"col m6 s6\">\n                    <mat-checkbox name=\"grupal\" class=\"fullWidth\" [(ngModel)]=\"+propina.grupal\">Propina Grupal</mat-checkbox>\n                </div>\n                <div class=\"col m6 s6\">\n                    <mat-checkbox name=\"anulado\" class=\"fullWidth\" [(ngModel)]=\"+propina.anulado\">Anulado</mat-checkbox>\n                </div>\n            </div>\n            \n            <div align=\"end\">\n                <button mat-icon-button type=\"submit\" color=\"accent\" [disabled]=\"!frmPropina.form.valid\">\n                    <mat-icon>save</mat-icon>\n                </button>\n                <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"resetPropina()\" *ngIf=\"propina.propina_distribucion\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface IDialogComanda {\n  mesaEnUso: ComandaGetResponse;\n  lstProductos: ProductoSelected[];\n}\n\n@Component({\n  selector: 'app-distribuir-productos-cuentas',\n  templateUrl: './distribuir-productos-cuentas.component.html',\n  styleUrls: ['./distribuir-productos-cuentas.component.css']\n})\nexport class DistribuirProductosCuentasComponent implements OnInit {\n\n  public comanda: Comanda;\n  public cantidadProducto: number[] = [];\n  public cpLstProductos: ProductoSelected[] = [];\n  public compLstProductos: ProductoSelected[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<DistribuirProductosCuentasComponent>,\n    private snackBar: MatSnackBar,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: IDialogComanda\n  ) { }\n\n  ngOnInit() {\n    if (+this.data.mesaEnUso.comanda > 0) {\n      const meu = this.data.mesaEnUso;\n      this.comanda = {\n        area: +meu.mesa.area.area,\n        mesa: +meu.mesa.mesa,\n        mesero: +meu.mesero.usuario,\n        comensales: meu.cuentas.length + 1,\n        dividirCuentasPorSillas: 1,\n        comanda: +meu.comanda,\n        cuentas: meu.cuentas,\n        replaceUnica: false\n      };\n    }\n\n    this.cpLstProductos = [];\n\n    if (this.data.lstProductos.length > 0) {\n      // console.log(this.data.lstProductos);\n      // console.log(this.data.mesaEnUso.cuentas);\n      this.data.lstProductos.forEach(item => {\n        const laCta = this.data.mesaEnUso.cuentas.find(c => +c.cuenta === +item.idcuenta);\n        if (+laCta.cerrada === 0) {\n          this.cpLstProductos.push(item);\n          this.cantidadProducto.push(+item.cantidad);\n        }\n      });\n      this.cpLstProductos = JSON.parse(JSON.stringify(this.cpLstProductos));\n      this.compLstProductos = JSON.parse(JSON.stringify(this.cpLstProductos));\n    }\n  }\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardar = () => {\n    const lstObj: any[] = [];\n    let idx = 0;\n    for (const p of this.cpLstProductos) {\n      if (+p.idcuenta !== +this.compLstProductos[idx].idcuenta) {\n        lstObj.push({\n          detalle_comanda: +p.detalle_comanda,\n          cuenta: +p.idcuenta,\n          cantidad: +p.cantidad\n        });\n      }\n      idx++;\n    }\n    if (lstObj.length > 0) {\n      this.comandaSrvc.distribuirCuentas(lstObj).subscribe(res => {\n        if (res.exito) {\n          this.snackBar.open('Productos redistribuidos', 'Cuentas', { duration: 3000 });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cuentas', { duration: 7000 });\n          this.cancelar();\n        }\n      });\n    } else {\n      this.snackBar.open('Sin cambios en las cuentas.', 'Cuentas', { duration: 7000 });\n      this.dialogRef.close(true);\n    }\n  }\n}\n","<h1 mat-dialog-title>Distribución de productos - Comanda #{{data.mesaEnUso.comanda}}</h1>\n<div mat-dialog-content>\n    <table>\n        <tr>\n            <th>Artículo</th>\n            <th class=\"rtxt size-cantidad\">Cantidad</th>\n            <th>Cuenta</th>\n        </tr>\n        <tr *ngFor=\"let prod of cpLstProductos; index as i\">\n            <td>{{prod.nombre}}</td>\n            <td class=\"rtxt\">\n                <mat-form-field class=\"size-cantidad\">\n                    <input type=\"number\" matInput name=\"cantidad\" min=\"1\" [max]=\"cantidadProducto[i]\" [(ngModel)]=\"prod.cantidad\" required [disabled]=\"+prod.combo === 1\">\n                </mat-form-field>                \n            </td>\n            <td>\n                <mat-select name=\"cuenta\" [(ngModel)]=\"prod.idcuenta\" required>\n                    <mat-option *ngFor=\"let cta of comanda.cuentas\" [value]=\"+cta.cuenta\" [disabled]=\"+cta.cerrada === 1 || +prod.idcuenta === +cta.cuenta\">\n                        {{cta.nombre}}\n                    </mat-option>\n                </mat-select>\n            </td>\n        </tr>\n    </table>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"guardar()\">\n        Guardar\n    </button>\n</div>","import { Component, OnInit, Inject, ViewChild, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatInput } from '@angular/material/input';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { GLOBAL } from '../../../shared/global';\nimport { TranComanda } from '../../classes/tran-comanda';\n\nimport { Socket } from 'ngx-socket-io';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\n\n// import { Cuenta } from '../../interfaces/cuenta';\nimport { ComandaGetResponse } from '../../interfaces/comanda';\n// import { DetalleComanda } from '../../interfaces/detalle-comanda';\n// import { Impresora } from '../../../admin/interfaces/impresora';\n// import { Categoria } from '../../../wms/interfaces/categoria';\n// import { CategoriaGrupoImpresora } from '../../../wms/interfaces/categoria-grupo';\nimport { Articulo, NodoProducto } from '../../../wms/interfaces/articulo';\n\nimport { ComandaService } from '../../services/comanda.service';\nimport { ArticuloService } from '../../../wms/services/articulo.service';\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\n// import { Cliente } from '../../../admin/interfaces/cliente';\n\ninterface IDatosTranComanda {\n  mesa: ComandaGetResponse;\n}\n\n@Component({\n  selector: 'app-tran-comanda-alt',\n  templateUrl: './tran-comanda-alt.component.html',\n  styleUrls: ['./tran-comanda-alt.component.css']\n})\nexport class TranComandaAltComponent extends TranComanda implements OnInit, OnDestroy {\n\n  // @Input() mesaEnUso: ComandaGetResponse;\n  // @Input() clientePedido: Cliente = null;\n  // @Output() closeSideNavEv = new EventEmitter();\n  // @Output() mesaSavedEv: EventEmitter<any> = new EventEmitter();\n  @ViewChild('txtCodigoBarras') txtCodigoBarras: MatInput;\n\n  public categorias: any[] = [];\n  public subCategorias: any[] = [];\n  public listaSubCategorias: any[] = [];\n  public articulos: Articulo[] = [];\n  public fullListArticulos: Articulo[] = [];  \n\n  constructor(\n    public dialogRef: MatDialogRef<TranComandaAltComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDatosTranComanda,\n    public dialog: MatDialog,\n    protected snackBar: MatSnackBar,\n    public comandaSrvc: ComandaService,\n    protected socket: Socket,\n    protected ls: LocalstorageService,\n    protected pdfServicio: ReportePdfService,\n    protected configSrvc: ConfiguracionService,\n    protected articuloSrvc: ArticuloService,\n    protected bsAccionesCmd: MatBottomSheet\n  ) {\n    super(dialog, snackBar, comandaSrvc, socket, ls, pdfServicio, configSrvc, articuloSrvc, bsAccionesCmd);\n  }\n\n  ngOnInit() {\n    this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\n    this.loadArticulosDePOS();\n    this.setDatos();\n  }\n\n  ngOnDestroy() {\n    this.endSubs.unsubscribe();\n  }\n\n  setDatos = () => {\n    if (this.data) {\n      if (this.data.mesa) {\n        this.mesaEnUso = this.data.mesa;\n        this.alIniciar();\n        this.setSelectedCuenta(this.mesaEnUso.cuentas[0].numero);\n        // console.log('CTA = ', this.cuentaActiva);\n        // console.log(this.mesaEnUso);\n      }\n    }\n  }\n\n  cerrar = () => this.dialogRef.close();\n\n  resetArticulos = () => this.articulos = [];\n  resetListaSubCategorias = () => this.listaSubCategorias = [];\n\n  loadArticulosDePOS = () => {\n    this.endSubs.add(\n      this.articuloSrvc.getArticulosDePOS().subscribe((res: any) => {\n        if (res) {\n          this.categorias = res.categorias;\n          this.subCategorias = res.subcategorias;\n          this.articulos = res.articulos;\n          this.fullListArticulos = JSON.parse(JSON.stringify(this.articulos));\n        }\n      })\n    );\n  }\n\n  loadSubcategorias = (cat: any, subcat: any = null, idx: number = 0) => {\n    if (!this.bloqueoBotones) {\n      // console.log('CAT = ', cat); console.log('SUB = ', subcat); // return;\n      if (!subcat) {\n        this.resetListaSubCategorias();\n        this.resetArticulos();\n        this.listaSubCategorias.push(this.subCategorias.filter(sc => +sc.categoria === +cat.categoria));\n      } else {\n        if (this.listaSubCategorias.length > 0) {\n          this.listaSubCategorias.splice((idx + 1));\n        }\n\n        if (subcat.subcategorias) {\n          if (subcat.subcategorias.length === 0) {\n            this.filterArticulos(+subcat.categoria_grupo);\n          } else {\n            this.listaSubCategorias.push(subcat.subcategorias);\n          }\n        }\n      }\n    }\n  }\n\n  filterArticulos = (idsubcat: number = null) => {\n    if (!this.bloqueoBotones) {\n      if (idsubcat) {\n        this.articulos = this.fullListArticulos.filter(a => +a.categoria_grupo === +idsubcat);\n      } else {\n        this.articulos = this.fullListArticulos;\n      }\n    }\n  }\n\n  addArticulo = (art: Articulo) => {\n    if (!this.bloqueoBotones) {\n      const obj: NodoProducto = {\n        id: +art.articulo,\n        nombre: art.descripcion,\n        precio: +art.precio,\n        impresora: art.impresora,\n        presentacion: art.presentacion,\n        codigo: art.codigo,\n        combo: art.combo,\n        multiple: art.multiple\n      };\n      // console.log(obj); return;\n      // console.log(this.cuentaActiva); return;\n      this.agregarProductos(obj);\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\">\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"start start\">\n        <span class=\"bld\" style=\"font-size: 16pt; margin-left: 10px;\">\n            {{mesaEnUso.mesa.area.nombre}} - Mesa{{mesaEnUso.mesa.numero}} - Comanda {{mesaEnUso.comanda}}\n        </span>\n    </div>\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"end start\">\n        <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"abrirAccionesComanda(dialogRef)\"\n            [disabled]=\"bloqueoBotones\">\n            Acciones\n        </button>\n        <button mat-raised-button type=\"button\" color=\"accent\" style=\"margin-left: 8px;\" (click)=\"cerrar()\"\n            [disabled]=\"bloqueoBotones\">\n            Cerrar\n        </button>\n    </div>\n</div>\n\n<div mat-dialog-content class=\"contenido\">\n    <!-- Div de cuentas-->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"center center\" class=\"divSeparacion\">\n        <mat-chip-list>\n            <mat-chip color=\"accent\" *ngFor=\"let cta of mesaEnUso.cuentas\"\n                [disabled]=\"+cta.cerrada === 1 || bloqueoBotones\" (click)=\"+cta.cerrada === 0 && setSelectedCuenta(cta.numero)\" [selected]=\"+cta.cerrada === 0\">\n                {{cta.nombre}}\n            </mat-chip>\n            <mat-chip (click)=\"nuevaCuenta(dialogRef)\" *ngIf=\"+mesaEnUso.mesa.esmostrador === 0 && +mesaEnUso.mesa.escallcenter === 0\">\n                Nueva\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de div de cuentas-->\n    <!--<mat-divider></mat-divider>-->\n    <!-- Inicia input para código de barras -->\n    <mat-form-field style=\"width: 25%;\" *ngIf=\"usaCodigoBarras\">        \n        <input #txtCodigoBarras=\"matInput\" matInput cdkFocusInitial ngxBarCodePut type=\"text\" placeholder=\"Código\" name=\"codigoBarras\" [(ngModel)]=\"codigoBarras\" [ngModelOptions]=\"{standalone: true}\" (onDetected)=\"buscarArticulo()\">\n    </mat-form-field><br *ngIf=\"usaCodigoBarras\"/>\n    <!-- Fin de input para código de barras -->\n    <!-- Inicia Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\">\n        <mat-chip-list>\n            <mat-chip selected color=\"accent\" *ngFor=\"let cat of categorias\" (click)=\"loadSubcategorias(cat)\" [disabled]=\"bloqueoBotones\">\n                {{cat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de Categorias -->\n    <!--<mat-divider></mat-divider>-->\n    <!-- Inicia Sub Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\" *ngFor=\"let lstSubCat of listaSubCategorias; index as i; last as isLast\" class=\"divSubCategorias\">\n        <mat-chip-list>\n            <mat-chip selected color=\"warn\" class=\"btnAccion\" *ngFor=\"let subcat of lstSubCat\"\n                (click)=\"loadSubcategorias({ categoria: subcat.categoria }, subcat, i)\" [disabled]=\"bloqueoBotones\">\n                {{subcat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de Sub Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start start\">\n        <!-- Inicia artículos -->\n        <div fxFlex=\"55%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" class=\"divArticulos\" fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\" fxLayoutAlign=\"start start\">\n            <div fxFlex=\"20%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxFlex.md=\"25%\" *ngFor=\"let producto of articulos\">\n                <mat-card class=\"mat-elevation-z4\" (click)=\"!bloqueoBotones && addArticulo(producto)\">\n                    <!--\n                    <mat-card-header>\n                        <mat-card-title>{{producto.descripcion}}</mat-card-title>\n                    </mat-card-header>\n                    -->\n                    <!--<img mat-card-image src=\"/assets/img/comida/test_01.jpg\">-->\n                    <mat-card-content>\n                        <p>{{producto.descripcion}}</p>\n                    </mat-card-content>                \n                    <!--<mat-card-actions align=\"around\">\n                        <span matBadge=\"4\" matBadgeOverlap=\"false\">Por comandar</span>\n                        <span matBadge=\"4\" matBadgeOverlap=\"false\">Comandados</span>\n                    </mat-card-actions>-->\n                </mat-card>\n            </div>        \n        </div>\n        <!-- Finaliza artículos -->\n        <div fxFlex=\"45%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" class=\"divArticulos\">\n            <app-lista-productos-comanda [listaProductos]=\"lstProductosDeCuenta\" [noCuenta]=\"+cuentaActiva.numero\"\n                [IdComanda]=\"mesaEnUso.comanda\" [IdCuenta]=\"cuentaActiva.cuenta\" [bloqueoBotones]=\"bloqueoBotones\"\n                [mesaEnUso]=\"mesaEnUso\" (productoRemovedEv)=\"updProductosCuenta($event)\"></app-lista-productos-comanda>\n        </div>\n    </div>\n</div>\n<!--<div mat-dialog-actions align=\"end\"></div>-->","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\n\n@Component({\n  selector: 'app-lista-turno-tipo',\n  templateUrl: './lista-turno.component.html',\n  styleUrls: ['./lista-turno.component.css']\n})\nexport class ListaTurnoTipoComponent implements OnInit {\n\n  public lstTurnos: TipoTurno[];\n  public lstTurnosPaged: TipoTurno[];\n  @Output() getTurnoEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(private turnoSrvc: TipoTurnoService) { }\n\n  ngOnInit() {\n    this.loadTurnos();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstTurnos, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstTurnosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstTurnos.length;\n      this.lstTurnosPaged = PaginarArray(this.lstTurnos, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadTurnos = () => {\n    this.turnoSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstTurnos = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getTurno = (obj: TipoTurno) => {\n    this.getTurnoEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\"  [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstTurnosPaged\" (click)=\"getTurno(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>                \n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Mesa } from '../../interfaces/mesa';\r\nimport { MesaService } from '../../services/mesa.service';\r\n\r\n@Component({\r\n  selector: 'app-mesa',\r\n  templateUrl: './mesa.component.html',\r\n  styleUrls: ['./mesa.component.css']\r\n})\r\nexport class MesaComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() configuracion: any = {\r\n    mesa: 0,\r\n    area: 0,\r\n    numero: 0,\r\n    posx: 0.0000,\r\n    posy: 0.0000,\r\n    tamanio: 48,\r\n    estatus: 1,\r\n    ancho: null,\r\n    alto: null,\r\n    esmostrador: 0,\r\n    vertical: 0,\r\n    etiqueta: null,\r\n    escallcenter: 0\r\n  };\r\n  @Input() dontAllowDrag = true;\r\n  @Input() isDisabled = false;\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onClickMesa = new EventEmitter();\r\n  @Output() moviendoMesa = new EventEmitter();\r\n  @ViewChild('divMesa') divMesa: ElementRef;\r\n\r\n  public objMesa: HTMLElement;\r\n  public urlImage = '/assets/img/mesas/';\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private mesaSrvc: MesaService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (+this.configuracion.esmostrador === 0) {\r\n      this.urlImage += 'table_03.svg';\r\n    } else {\r\n      if (+this.configuracion.escallcenter === 0) {\r\n        if (+this.configuracion.vertical === 0) {\r\n          this.urlImage += 'mostrador_horizontal.svg';\r\n        } else {\r\n          this.urlImage += 'mostrador_vertical.svg';\r\n        }\r\n      } else {\r\n        this.urlImage += 'callcenter.svg';\r\n      }\r\n    }\r\n    // console.log(this.configuracion, this.urlImage);\r\n  }\r\n\r\n  ngAfterViewInit = () => this.objMesa = this.divMesa.nativeElement;\r\n\r\n  clickMesa = () => this.onClickMesa.emit({ mesaSelected: this.configuracion });\r\n\r\n  getAncho = () => {\r\n    if (this.configuracion.ancho && +this.configuracion.ancho > 0) {\r\n      return this.configuracion.ancho;\r\n    }\r\n    return this.configuracion.tamanio;\r\n  }\r\n\r\n  getAlto = () => {\r\n    if (this.configuracion.alto && +this.configuracion.alto > 0) {\r\n      return this.configuracion.alto;\r\n    }\r\n    return this.configuracion.tamanio;\r\n  }\r\n\r\n  dragEnded = (obj: any) => {\r\n    this.dontAllowDrag = true;\r\n    // console.log('Drag ended = ', obj);\r\n    const item = obj.source.element.nativeElement;\r\n    // console.log('HTML ITEM: ', item);\r\n    const parentSize = { x: item.offsetParent.scrollWidth, y: item.offsetParent.scrollHeight };\r\n    // console.log('Parent Size = ', parentSize);\r\n    const distancia = obj.distance;\r\n    // console.log('Distancia = ', distancia);\r\n    const updMesa: Mesa = {\r\n      mesa: this.configuracion.mesa,\r\n      area: this.configuracion.area,\r\n      numero: this.configuracion.numero,\r\n      posx: Math.abs((item.offsetLeft + distancia.x) * 100 / parentSize.x),\r\n      posy: Math.abs((item.offsetTop + distancia.y) * 100 / parentSize.y),\r\n      tamanio: this.configuracion.tamanio,\r\n      estatus: this.configuracion.estatus\r\n    };\r\n    // console.log(updMesa);\r\n    this.mesaSrvc.save(updMesa).subscribe(res => {\r\n      // console.log(res);\r\n      if (res.exito) {\r\n        if (!!res.mesa) {\r\n          this.configuracion.mesa = res.mesa.mesa;\r\n          this.snackBar.open(`Mesa #${res.mesa.numero} actualizada...`, 'Diseño de área', { duration: 3000 });\r\n        } else {\r\n          this.snackBar.open(`Mesa #${this.configuracion.numero} actualizada...`, 'Diseño de área', { duration: 3000 });\r\n        }\r\n      } else {\r\n        this.snackBar.open(`ERROR:${res.mensaje}.`, 'Diseño de área', { duration: 3000 });\r\n      }\r\n      this.dontAllowDrag = false;\r\n      this.moviendoMesa.emit(false);\r\n    });\r\n  }\r\n\r\n  dragStarted = (obj: any) => {\r\n    this.moviendoMesa.emit(true);\r\n  }  \r\n}\r\n","<div #divMesa cdkDrag (cdkDragEnded)=\"dragEnded($event)\" (cdkDragStarted)=\"dragStarted($event)\" cdkDragBoundary=\".areaPosicionamiento\" [cdkDragDisabled]=\"dontAllowDrag\" class=\"divMesa mat-elevation-z6\" \r\n    [ngClass]=\"{'disponible': +configuracion.estatus == 1 && +configuracion.debaja === 0, 'ocupada': +configuracion.estatus == 2 && +configuracion.debaja === 0, 'debaja': +configuracion.debaja === 1, 'call-center-ocupado': +configuracion.estatus === 2 && +configuracion.escallcenter === 1, 'call-center-disponible': +configuracion.estatus === 1 && +configuracion.escallcenter === 1}\"\r\n    (click)=\"clickMesa()\"\r\n    [style.width.px]=\"getAncho()\" \r\n    [style.height.px]=\"getAlto()\" \r\n    [style.left.%]=\"configuracion.posx\" \r\n    [style.top.%]=\"configuracion.posy\"\r\n    [attr.disabled]=\"isDisabled ? true : null\"\r\n    [style.backgroundImage]=\"'url('+ urlImage +')'\">\r\n    <span>{{configuracion.etiqueta || configuracion.numero}}</span>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\nimport { Cuenta } from '../../interfaces/cuenta';\n\ninterface IDataDialog {\n  cuentas: Cuenta[];\n  comensales: number;\n}\n\n@Component({\n  selector: 'app-pide-datos-cuentas',\n  templateUrl: './pide-datos-cuentas.component.html',\n  styleUrls: ['./pide-datos-cuentas.component.css']\n})\nexport class PideDatosCuentasComponent implements OnInit {\n\n  public displayedColumns: string[] = ['numero', 'nombre'];\n  public dataSource: MatTableDataSource<Cuenta>;\n  public esMovil = false;\n  public keyboardLayout: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<PideDatosCuentasComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDataDialog,\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n    this.setTableDataSource();\n    for (let i = 0; i < (+this.data.comensales - 1); i++) {\n      this.agregarFila();\n    }\n    // console.log(this.data);\n  }\n\n  todosConNombre(ctas: Cuenta[]): number {\n    for (let i = 0; i < ctas.length; i++) {\n      if (!ctas[i].nombre) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  terminar = () => {\n    const tcn = this.todosConNombre(this.data.cuentas);\n    if (tcn < 0) {\n      this.dialogRef.close(this.data.cuentas);\n    } else {\n      this.snackBar.open(`Favor ingresar nombre a la cuenta #${this.data.cuentas[tcn].cuenta}...`, 'Cuentas', { duration: 5000 });\n    }\n  }\n\n  setTableDataSource = () => this.dataSource = new MatTableDataSource(this.data.cuentas);\n\n  agregarFila() {\n    this.data.cuentas.push(\n      {\n        cuenta: 0,\n        numero: this.data.cuentas.length + 1,\n        nombre: null,\n        productos: []\n      }\n    );\n    this.dataSource.data = this.data.cuentas;\n  }\n\n  eliminarFila = (obj: Cuenta) => {\n    const idx = this.data.cuentas.findIndex(cta => +cta.numero === +obj.numero);\n    if (idx > 0) {\n      this.data.cuentas.splice(idx, 1);\n      this.data.cuentas.map((cta, i) => cta.numero = (i + 1));\n      this.dataSource.data = this.data.cuentas;\n    } else {\n      // console.log('ELIMINAR = ', obj);\n      // console.log('CUENTAS = ', this.data.cuentas);\n      console.log('No se encuentra esta cuenta...');\n    }\n  }\n}\n","<h1 mat-dialog-title>Ingreso de datos de cuentas</h1>\n<div mat-dialog-content>\n    <table #tblCuentas mat-table [dataSource]=\"dataSource\" class=\"fullWidth\">\n        <ng-container matColumnDef=\"numero\">\n            <th mat-header-cell *matHeaderCellDef>No.</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span>{{element.numero}}</span>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"nombre\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-form-field class=\"fullWidth\">\n                    <input type=\"text\" matInput *ngIf=\"esMovil\" name=\"nombre\" [(ngModel)]=\"element.nombre\" required>\n                    <input type=\"text\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" name=\"nombre\" [(ngModel)]=\"element.nombre\" required>\n                    <button type=\"button\" mat-button matSuffix mat-icon-button (click)=\"eliminarFila(element)\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </td>\n        </ng-container>        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"agregarFila()\" color=\"accent\" [disabled]=\"this.data.cuentas.length === +this.data.comensales\">\n        Agregar\n    </button>\n    <button mat-raised-button (click)=\"terminar()\" color=\"accent\" [disabled]=\"this.data.cuentas.length !== +this.data.comensales\">\n        Terminar        \n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Mesa } from '../../../interfaces/mesa';\nimport { Impresora } from '../../../../admin/interfaces/impresora';\n\nimport { MesaService } from '../../../services/mesa.service';\nimport { ImpresoraService } from '../../../../admin/services/impresora.service';\n\ninterface IData {\n  mesa: Mesa;\n}\n\n@Component({\n  selector: 'app-configura-mesa',\n  templateUrl: './configura-mesa.component.html',\n  styleUrls: ['./configura-mesa.component.css']\n})\nexport class ConfiguraMesaComponent implements OnInit {\n\n  public impresoras: Impresora[] = [];\n  public mesa: any = {};\n\n  constructor(\n    private mesaSrvc: MesaService,\n    private impresoraSrvc: ImpresoraService,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef<ConfiguraMesaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IData\n  ) { }\n\n  ngOnInit() {\n    this.mesa = this.data.mesa;\n    this.loadImpresoras();\n  }\n\n  loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardarConfiguracion = () => {\n    this.mesaSrvc.save(this.mesa).subscribe(res => {\n      if (res.exito) {\n        if (!!res.mesa) {\n          this.snackBar.open(`Mesa #${res.mesa.numero} actualizada...`, 'Configuración de mesa', { duration: 3000 });\n        } else {\n          this.snackBar.open(`Mesa #${this.mesa.numero} actualizada...`, 'Configuración de mesa', { duration: 3000 });\n        }\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}.`, 'Configuración de mesa', { duration: 7000 });\n      }\n      this.dialogRef.close(true);\n    });\n  }\n}\n","<h1 mat-dialog-title>Configuración de mesa {{mesa.numero}}</h1>\n<div mat-dialog-content>\n    <form #frmConfigMesa=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"text\" matInput placeholder=\"Etiqueta\" name=\"etiqueta\" [(ngModel)]=\"mesa.etiqueta\" maxlength=\"3\">\n        </mat-form-field>\n        <mat-form-field class=\"fullWidth\" *ngIf=\"+mesa.esmostrador === 1\">\n            <mat-label>Impresora</mat-label>\n            <mat-select name=\"impresora\" [(ngModel)]=\"mesa.impresora\">\n                <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                    {{imp.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"guardarConfiguracion()\" color=\"accent\" [disabled]=\"!frmConfigMesa.form.valid\">\n        Guardar        \n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso'\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service'\nimport { saveAs } from 'file-saver';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\nimport { FpagoService } from '../../../../admin/services/fpago.service';\nimport { FormaPago } from '../../../../admin/interfaces/forma-pago';\n\n\n@Component({\n  selector: 'app-caja',\n  templateUrl: './caja.component.html',\n  styleUrls: ['./caja.component.css']\n})\nexport class CajaComponent implements OnInit {\n  public params: any = {\n    _validar: false,\n    sede: []\n  };\n  public titulo = 'Resumen de caja';\n  public tiposTurno: TipoTurno[] = [];\n  public cargando = false;\n  public fpagos: FormaPago[] = [];\n  public sedes: UsuarioSede[] = [];\n  public grupos = GLOBAL.grupos;\n\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: false, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private fpagoSrvc: FpagoService,\n    private sedeSrvc: AccesoUsuarioService\n  ) { }\n\n  ngOnInit() {\n    this.loadTiposTurno();\n    this.loadFormaPago();\n    this.loadSedes();\n  }\n\n  loadFormaPago = () => {\n    this.fpagoSrvc.get().subscribe(res => {\n      if (res) {\n        this.fpagos = res;\n      }\n    })\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.getSedes({reporte: true}).subscribe(res => {\n      if (res) {\n        this.sedes = res\n      }\n    })\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  resetParams = () => {\n    this.params = {};\n    this.cargando = false;\n  }\n\n  excelClick = () => {\n    this.cargando = true;\n    this.params._pagos = this.fpagos;\n    this.params._excel = 1;\n\n    this.pdfServicio.getReporteCaja(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.cargando = true;\n    this.params._pagos = this.fpagos;\n    this.params._excel = 0;\n    \n    this.pdfServicio.getReporteCaja(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de caja</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptCaja=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">\n              <mat-label>Tipo de turno</mat-label>\n              <mat-select name=\"turno_tipo\" [(ngModel)]=\"params.turno_tipo\">\n                  <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                      {{tt.descripcion}}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">\n            <mat-label>Sede</mat-label>\n            <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\">\n                <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\n                    {{sede.sede.nombre}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\" *ngIf=\"params.sede && params.sede.length > 1\">\n              <mat-label>Agrupar por</mat-label>\n              <mat-select name=\"grupo\"  [(ngModel)]=\"params._grupo\">\n                  <mat-option *ngFor=\"let grp of grupos\" [value]=\"grp.id\">\n                      {{grp.descripcion}}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <div class=\"row\">\n            <div class=\"col\">\n              <mat-checkbox name=\"mostrar_detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n            </div>\n            <div class=\"col\">\n              <mat-checkbox name=\"validar\" class=\"fullWidth\" [(ngModel)]=\"+params._validar\">Validar Montos</mat-checkbox>\n            </div>\n          </div>\n          <hr *ngIf=\"params._validar\">\n          <form *ngIf=\"params._validar\">\n            <div *ngFor=\"let fp of fpagos\">\n              <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" step=\"0.01\" placeholder=\"{{fp.descripcion}}\" [(ngModel)]=\"fp.monto\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n          </form>\n          <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// import { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { AutoconsultaService } from '../../../services/autoconsulta.service';\nimport { Campo } from '../../../interfaces/autoconsulta';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-autoconsulta',\n  templateUrl: './autoconsulta.component.html',\n  styleUrls: ['./autoconsulta.component.css']\n})\nexport class AutoconsultaComponent implements OnInit {\n  public params: any = { campos: [], datos: [] };\n  public titulo = 'Autoconsulta';\n  public campos: Campo[] = [];\n  public fechas: Campo[] = [];\n  public orden: Campo[] = [];\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: false, showHtml: false, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    // private pdfServicio: ReportePdfService,\n    private autoconsultaSrvc: AutoconsultaService\n  ) { }\n\n  ngOnInit() {\n    this.getCampos();\n    this.getCampos({ por_fecha: 1 }, 2);\n    this.getCampos({ ordenar_por: 1 }, 3);\n  }\n\n  resetParams = () => {\n    this.params = { campos: [], datos: [] };\n    this.cargando = false;\n  }\n\n  getReporte = () => {\n    this.cargando = true;\n    // tslint:disable-next-line: forin\n    for (const key in this.params.campos) {\n      this.params.datos.push(this.params.campos[key]);\n    }\n    this.autoconsultaSrvc.getReporte(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getCampos = (params: any = {}, tipo: number = 1) => {\n    this.cargando = true;\n    this.autoconsultaSrvc.getCampos(params).subscribe(res => {\n      this.cargando = false;\n      switch (tipo) {\n        case 1: this.campos = res; break;\n        case 2: this.fechas = res; break;\n        case 3: this.orden = res; break;\n      }\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Autoconsulta</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Campos</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.campos\" multiple=\"multiple\" required>\n                            <mat-option *ngFor=\"let campo of campos\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Filtrar Por</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.fecha\" required>\n                            <mat-option *ngFor=\"let campo of fechas\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Ordenar Por</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.orden\">\n                            <mat-option *ngFor=\"let campo of orden\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <app-rpt-botones [configuracion]=\"configBotones\" (excelClick)=\"getReporte()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\n\n@Component({\n  selector: 'app-form-turno-tipo',\n  templateUrl: './form-turno.component.html',\n  styleUrls: ['./form-turno.component.css']\n})\nexport class FormTurnoTipoComponent implements OnInit {\n  \n  @Input() turno: TipoTurno;\n  @Output() turnoSavedEv = new EventEmitter();\n\n  constructor(\n  \tprivate _snackBar: MatSnackBar,\n    private turnoSrvc: TipoTurnoService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  resetTurno = () => this.turno = { \n    turno_tipo: null, descripcion: null, activo:1\n  };\n\n  onSubmit = () => {\n    this.turnoSrvc.save(this.turno).subscribe(res => {\n      //console.log(res);\n      if (res.exito) {\n        this.turnoSavedEv.emit();\n        this.resetTurno();\n        this._snackBar.open('Tipo de Turno agregado...', 'Turno', { duration: 3000 });\n      } else {\n        this._snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });        \n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Tipo de Turno {{!!turno.turno_tipo ? turno.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmTurno=\"ngForm\" (ngSubmit)=\"frmTurno.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"turno.descripcion\" required>\n            </mat-form-field>\n            <mat-checkbox name=\"activo\" class=\"fullWidth\" [(ngModel)]=\"+turno.activo\">Activo</mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTurno.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTurno()\" *ngIf=\"turno.turno_tipo\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { PorCategoria, PorArticulo } from '../../../interfaces/reporte-ventas';\nimport { ReporteVentasService } from '../../../services/reporte-ventas.service';\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso';\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-rpt-ventas',\n  templateUrl: './rpt-ventas.component.html',\n  styleUrls: ['./rpt-ventas.component.css']\n})\nexport class RptVentasComponent implements OnInit {\n\n  public tiposReporte: any[] = [];\n  public params: any = {};\n  public paramsToSend: any = {};\n  public msgGenerandoReporte: string = null;\n  public porCategoria: PorCategoria[] = [];\n  public porArticulo: any = { datos: [] };\n  public tiposTurno: TipoTurno[] = [];\n  public sedes: UsuarioSede[] = [];\n  public grupos = GLOBAL.grupos;\n  public tituloCategoria = 'Ventas por categoria';\n  public tituloArticulo = 'Ventas por articulo';\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: true, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private rptVentasSrvc: ReporteVentasService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private sedeSrvc: AccesoUsuarioService\n  ) { }\n\n  ngOnInit() {\n    this.resetParams();\n    this.loadTiposReporte();\n    this.loadTiposTurno();\n    this.loadSedes();\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.getSedes({reporte: true}).subscribe(res => {\n      if (res) {\n        this.sedes = res\n      }\n    })\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  loadTiposReporte = () => {\n    this.tiposReporte = [\n      { tipo_reporte: 1, descripcion: 'Por categoría' },\n      { tipo_reporte: 2, descripcion: 'Por artículo' }\n    ];\n  }\n\n  resetParams = () => {\n    this.porCategoria = [];\n    this.porArticulo = [];\n    this.msgGenerandoReporte = null;\n    this.params = {\n      tipo_reporte: undefined,\n      fdel: moment().startOf('week').format(GLOBAL.dbDateFormat),\n      fal: moment().endOf('week').format(GLOBAL.dbDateFormat)\n    };\n    this.cargando = false;\n  }\n\n  getReporte = (tipo: number = 1) => {\n    this.paramsToSend = JSON.parse(JSON.stringify(this.params));\n    this.msgGenerandoReporte = 'GENERANDO REPORTE EN ';\n    switch (tipo) {\n      case 1 : this.getEnPantalla(); break;\n      case 2 : this.getPdf(); break;\n      case 3 : this.getExcel(); break;\n    }\n  }\n\n  getPdf = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaPdf(); break;\n      case 2: this.getPorArticuloPdf(); break;\n    }\n  }\n\n  getExcel = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaExcel(); break;\n      case 2: this.getPorArticuloExcel(); break;\n    }\n  }\n\n  getPorCategoriaExcel = () => {\n    this.paramsToSend._excel = 1;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoriaPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.tituloCategoria}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloCategoria, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorCategoriaPdf = () => {\n    this.paramsToSend._excel = 0;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoriaPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.tituloCategoria}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloCategoria, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloPdf = () => {\n    this.paramsToSend._excel = 0;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticuloPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.tituloArticulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloArticulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloExcel = () => {\n    this.paramsToSend._excel = 1;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticuloPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.tituloArticulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloArticulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getEnPantalla = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaEnPantalla(); break;\n      case 2: this.getPorArticuloEnPantalla(); break;\n    }\n  }\n\n  cleanParams = () => delete this.paramsToSend.tipo_reporte;\n\n  getPorCategoriaEnPantalla = () => {\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoria(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        this.porCategoria = res;\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', 'Ventas por categoría', { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloEnPantalla = () => {\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticulo(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        this.porArticulo = res;\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', 'Ventas por artículo', { duration: 3000 });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Reporte de ventas</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Tipo</mat-label>\n                        <mat-select name=\"tipo_reporte\" [(ngModel)]=\"params.tipo_reporte\" required>\n                            <mat-option *ngFor=\"let tr of tiposReporte\" [value]=\"tr.tipo_reporte\">\n                                {{tr.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Tipo de turno</mat-label>\n                        <mat-select name=\"turno_tipo\" [(ngModel)]=\"params.turno_tipo\">\n                            <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                                {{tt.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Sede</mat-label>\n                        <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\">\n                            <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\n                                {{sede.sede.nombre}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"params.sede && params.sede.length > 1\">\n                        <mat-label>Agrupar por</mat-label>\n                        <mat-select name=\"grupo\"  [(ngModel)]=\"params._grupo\">\n                            <mat-option *ngFor=\"let grp of grupos\" [value]=\"grp.id\">\n                                {{grp.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"getReporte(3)\" (htmlClick)=\"getReporte(1)\" (pdfClick)=\"getReporte(2)\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"params.tipo_reporte === 1 && porCategoria.length > 0\">\n    <div class=\"col m12 s12\">\n        <app-por-categoria [params]=\"params\" [data]=\"porCategoria\"></app-por-categoria>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"params.tipo_reporte === 2 \">\n    <div class=\"col m12 s12\">\n        <app-por-articulo [params]=\"params\" [data]=\"porArticulo\"></app-por-articulo>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TranComandaAltComponent } from '../tran-comanda-alt/tran-comanda-alt.component';\n\nimport { TranComanda } from '../../classes/tran-comanda';\n\ninterface ITranComanda {\n  tranComanda: TranComanda;\n  dialogRef: MatDialogRef<TranComandaAltComponent>;\n}\n\n@Component({\n  selector: 'app-acciones-comanda',\n  templateUrl: './acciones-comanda.component.html',\n  styleUrls: ['./acciones-comanda.component.css']\n})\nexport class AccionesComandaComponent implements OnInit {\n\n  constructor(\n    private bsAccionesComanda: MatBottomSheetRef<AccionesComandaComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: ITranComanda\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  cerrar = (obj: any = { cerrar: false }) => this.bsAccionesComanda.dismiss(obj);\n\n  notasGenerales = () => {\n    this.data.tranComanda.getNotasGenerales();\n    this.cerrar();\n  }\n\n  comandar = () => {\n    this.data.tranComanda.validarImpresion(false, this.data.dialogRef);\n    this.cerrar();\n  }\n\n  imprimirCuenta = () => {\n    this.data.tranComanda.printCuenta(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  distribuirProductos = () => {\n    this.data.tranComanda.distribuirProductos(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  unirCuentas = () => {\n    this.data.tranComanda.unirCuentas(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  cobrarCuenta = () => {\n    this.data.tranComanda.cobrarCuenta(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  enviarPedido = () => {\n    this.data.tranComanda.enviarPedido(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  trasladarMesa = () => {\n    this.data.tranComanda.trasladoMesa(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  cerrarMesa = () => {\n    this.data.tranComanda.cerrarMesa();\n    this.cerrar({\n      cerrar: true,\n      mesaEnUso: this.data.tranComanda.mesaEnUso\n    });\n  }\n}\n","<mat-action-list>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"notasGenerales()\"\n        [disabled]=\"data.tranComanda.bloqueoBotones\">Notas</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"comandar()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 0\">Comanda</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"imprimirCuenta()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Cuenta</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"distribuirProductos()\"\n        [disabled]=\"data.tranComanda.mesaEnUso.cuentas.length < 2 || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Distribuir</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"unirCuentas()\"\n        [disabled]=\"data.tranComanda.mesaEnUso.cuentas.length < 2 || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Unir cuentas</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"cobrarCuenta()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.esCajero() || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 0\">Cobrar cuenta</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"enviarPedido()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.esCajero() || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 1\">Enviar pedido</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"trasladarMesa()\" [disabled]=\"data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Trasladar</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"cerrarMesa()\"\n        *ngIf=\"data.tranComanda.lstProductosSeleccionados.length <= 0\">Cerrar\n        {{+data.tranComanda.mesaEnUso.mesa.esmostrador === 0 ? 'Mesa' : (+data.tranComanda.mesaEnUso.mesa.escallcenter\n        === 0 ? 'Mostrador' :\n        'Pedido')}}</button>\n</mat-action-list>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Area } from '../../../interfaces/area';\nimport { AreaService } from '../../../services/area.service';\n\n@Component({\n  selector: 'app-lista-area',\n  templateUrl: './lista-area.component.html',\n  styleUrls: ['./lista-area.component.css']\n})\nexport class ListaAreaComponent implements OnInit {\n\n  public lstEntidades: Area[];\n  public lstEntidadesPaged: Area[];\n  @Output() getEntidadEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    public areaSrvc: AreaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.loadEntidades();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstEntidades, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstEntidadesPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstEntidades.length;\n      this.lstEntidadesPaged = PaginarArray(this.lstEntidades, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadEntidades = () => {\n    this.areaSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0), debaja: 1 }).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstEntidades = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getEntidad = (id: number) => {\n    this.areaSrvc.get({ area: id, debaja: 1 }).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.getEntidadEv.emit(lst[0]);\n        }\n      }\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item matRipple *ngFor=\"let element of lstEntidadesPaged\" (click)=\"getEntidad(element.area)\">\n                <mat-icon mat-list-icon>settings</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-propinas',\n  templateUrl: './propinas.component.html',\n  styleUrls: ['./propinas.component.css']\n})\n\nexport class PropinasComponent implements OnInit {\n  public params: any = {};\n  public titulo = 'Propinas';\n  public configBotones: ConfiguracionBotones = {\n    isHtmlDisabled: true, isPdfDisabled: false, isExcelDisabled: false, showHtml: false, showExcel: true, showPdf: true\n  };\n  public cargando = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  resetParams = () => {\n    this.params = {};\n    this.cargando = false;\n  }\n\n  onSubmit() {\n    this.params._excel = 0;\n    this.cargando = true;\n    this.pdfServicio.getReportePropina(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  excelClick() {\n    this.params._excel = 1;\n    this.cargando = true;\n    this.pdfServicio.getReportePropina(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de propinas</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptPropinas=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-checkbox name=\"mostrar_detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n          <app-rpt-botones [configuracion]=\"configBotones\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\" (excelClick)=\"excelClick()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Propina } from '../interfaces/propina';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropinaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'propina';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<Propina[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Propina[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Propina): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar${!!entidad.propina_distribucion ? ('/' + entidad.propina_distribucion) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Mesa, MesaDisponible } from '../interfaces/mesa';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MesaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'mesa';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Mesa[]> {\n    return this.http.get<Mesa[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Mesa) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/mesa/guardar${entidad.mesa ? ('/' + entidad.mesa) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDisponibles(): Observable<MesaDisponible[]> {\n    return this.http.get<MesaDisponible[]>(\n      `${GLOBAL.urlMantenimientos}/area/get_mesas_disponibles?`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTab } from '@angular/material/tabs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { PideTelefonoDialogComponent } from '../../../callcenter/components/pide-telefono-dialog/pide-telefono-dialog.component';\r\n\r\nimport { AbrirMesaComponent } from '../abrir-mesa/abrir-mesa.component';\r\nimport { TranComandaComponent } from '../tran-comanda/tran-comanda.component';\r\nimport { TranComandaAltComponent } from '../tran-comanda-alt/tran-comanda-alt.component';\r\nimport { Area } from '../../interfaces/area';\r\nimport { AreaService } from '../../services/area.service';\r\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../../admin/interfaces/cliente';\r\nimport { Subscription } from 'rxjs';\r\n// import * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-tran-areas',\r\n  templateUrl: './tran-areas.component.html',\r\n  styleUrls: ['./tran-areas.component.css']\r\n})\r\nexport class TranAreasComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  public divSize: any = { h: 0, w: 0 };\r\n  public openedRightPanel: boolean;\r\n  public cargando = false;\r\n\r\n  @ViewChild('matTabArea') pestania: ElementRef;\r\n  @ViewChild('rightSidenav') rightSidenav: MatSidenav;\r\n  @ViewChild('tabArea') tabArea: MatTab;\r\n  @ViewChild('snTranComanda') snTrancomanda: TranComandaComponent;\r\n  public lstTabsAreas: Area[] = [];\r\n  public lstTabsAreasForUpdate: Area[] = [];\r\n  public mesaSeleccionada: any;\r\n  public mesaSeleccionadaToOpen: any;\r\n  public configTipoPantalla = 1;\r\n  public clientePedido: Cliente = null;\r\n\r\n  private endSubs = new Subscription();\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private ls: LocalstorageService,\r\n    public areaSrvc: AreaService,\r\n    public comandaSrvc: ComandaService,\r\n    private configSrvc: ConfiguracionService,\r\n    private socket: Socket\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadAreas();\r\n    this.resetMesaSeleccionada();\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n\r\n      this.socket.on('refrescar:mesa', (obj: any) => {\r\n        // console.log(obj);\r\n        this.loadAreas(true, obj);\r\n      });\r\n    }\r\n    this.configTipoPantalla = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_PANTALLA_TOMA_COMANDA);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.setDivSize();\r\n      this.snTrancomanda.resetMesaEnUso();\r\n    }, 600);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.endSubs.unsubscribe();\r\n  }\r\n\r\n  actualizar = () => {\r\n    // console.log('MESA SELECCIONADA = ', this.mesaSeleccionada);\r\n    const area = this.lstTabsAreas.find((c: Area) => +c.area === +this.mesaSeleccionada.mesa.area.area);\r\n    // console.log('AREA = ', area);\r\n    const areaIndex = this.lstTabsAreas.findIndex((c: Area) => +c.area === +this.mesaSeleccionada.mesa.area.area);\r\n    // console.log('AREA IDX = ', areaIndex);\r\n    const mesaIndex = area.mesas.findIndex(x => +x.mesa === +this.mesaSeleccionada.mesa.mesa);\r\n    // console.log('MESA IDX = ', mesaIndex);\r\n    this.lstTabsAreas[areaIndex].mesas[mesaIndex].estatus = 1;\r\n    // console.log('MESA = ', this.lstTabsAreas[areaIndex].mesas[mesaIndex]);\r\n    this.toggleRightSidenav();\r\n    /*switch (this.configTipoPantalla) {\r\n      case 1: this.toggleRightSidenav(); break;\r\n      // case 2: this.openTranComandaAlt(); break;\r\n      // default: this.toggleRightSidenav();\r\n    }*/\r\n  }\r\n\r\n  resetMesaSeleccionada = () => this.mesaSeleccionada = {\r\n    comanda: null, usuario: null, sede: null, estatus: null,\r\n    mesa: {\r\n      mesa: null,\r\n      area: { area: null, sede: null, area_padre: null, nombre: null },\r\n      numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n    },\r\n    cuentas: []\r\n  }\r\n\r\n  loadAreas = (saveOnTemp = false, objMesaEnUso: any = {}) => {\r\n    this.cargando = true;\r\n    this.endSubs.add(      \r\n      this.areaSrvc.get({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((res) => {\r\n        if (!saveOnTemp) {\r\n          this.lstTabsAreas = res;\r\n          this.cargando = false;\r\n        } else {\r\n          this.lstTabsAreasForUpdate = res;\r\n          this.updateTableStatus(objMesaEnUso.mesaenuso);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  updateTableStatus = (objMesaEnUso: any = {}) => {\r\n    for (const a of this.lstTabsAreasForUpdate) {\r\n      for (const m of a.mesas) {\r\n        this.setEstatusMesa({ area: +a.area, mesa: +m.mesa }, +m.estatus);\r\n      }\r\n    }\r\n    this.cargando = false;\r\n    if (this.rightSidenav.opened) {\r\n      if (+this.mesaSeleccionada.comanda === +objMesaEnUso.comanda) {\r\n        this.toggleRightSidenav();\r\n      }\r\n    }\r\n  }\r\n\r\n  setDivSize() {\r\n    // this.divSize.w = this.pestania.nativeElement.offsetWidth;\r\n    // this.divSize.h = this.pestania.nativeElement.offsetHeight;\r\n  }\r\n\r\n  onResize = (event: any) => this.setDivSize();\r\n\r\n  onClickMesa(m: any) {\r\n    // console.log(m.mesaSelected); return;\r\n    if (!this.cargando) {\r\n      if (+m.mesaSelected.escallcenter === 0) {\r\n        this.aperturaCargaMesa(m);\r\n      } else {\r\n        const varCliPedido = `${GLOBAL.rtClientePedido}_${m.mesaSelected.mesa}`;\r\n        if (+m.mesaSelected.estatus === 1) {\r\n          this.ls.clear(varCliPedido);\r\n          const pideTelefonoRef = this.dialog.open(PideTelefonoDialogComponent, {\r\n            width: '50%',\r\n            disableClose: true,\r\n            data: { mesa: m.mesaSelected }\r\n          });\r\n\r\n          this.endSubs.add(            \r\n            pideTelefonoRef.afterClosed().subscribe((cli: Cliente) => {\r\n              if (cli) {\r\n                this.clientePedido = cli;\r\n                this.ls.set(varCliPedido, this.clientePedido);\r\n                this.aperturaCargaMesa(m);\r\n              }\r\n            })\r\n          );\r\n        } else {\r\n          this.clientePedido = this.ls.get(varCliPedido);\r\n          this.aperturaCargaMesa(m);\r\n        }\r\n      }\r\n    } else {\r\n      this.snackBar.open('El sistema está terminando de cargar información. Por favor intente de nuevo.', 'Áreas', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  aperturaCargaMesa = (m: any) => {\r\n    switch (+m.mesaSelected.estatus) {\r\n      case 1: this.openAbrirMesaDialog(m.mesaSelected); break;\r\n      case 2: this.loadComandaMesa(m.mesaSelected); break;\r\n    }\r\n  }\r\n\r\n  setEstatusMesa = (m: any, estatus: number) => {\r\n    // console.log('Mesa = ', m);\r\n    // console.log('Estatus solicitado = ', estatus);\r\n    const idxArea = this.lstTabsAreas.findIndex(a => +a.area === +m.area);\r\n    // console.log(`Area = ${idxArea}`);\r\n    if (idxArea > -1) {\r\n      const idxMesa = this.lstTabsAreas[idxArea].mesas.findIndex(l => +l.mesa === +m.mesa);\r\n      // console.log(`Mesa = ${idxMesa}`);\r\n      if (idxMesa > -1) {\r\n        this.lstTabsAreas[idxArea].mesas[idxMesa].estatus = estatus;\r\n      }\r\n    }\r\n  }\r\n\r\n  guardarMesa = (m: any) => {\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.save(this.mesaSeleccionadaToOpen).subscribe(res => {\r\n        // console.log(res);\r\n        this.cargando = false;\r\n        if (res.exito) {\r\n          this.socket.emit('refrescar:mesa', {});\r\n          this.mesaSeleccionada = res.comanda;\r\n          // console.log('m', m);\r\n          this.setEstatusMesa(m, +res.comanda.mesa.estatus);\r\n          this.snTrancomanda.llenaProductosSeleccionados(this.mesaSeleccionada);\r\n          this.snTrancomanda.setSelectedCuenta(this.mesaSeleccionada.cuentas[0].numero);\r\n          this.snTrancomanda.rolesUsuario = this.mesaSeleccionada.turno_rol;\r\n          // this.toggleRightSidenav();\r\n          switch (this.configTipoPantalla) {\r\n            case 1: this.toggleRightSidenav(); break;\r\n            case 2: this.openTranComandaAlt(); break;\r\n            default: this.toggleRightSidenav();\r\n          }\r\n        } else {\r\n          this.snackBar.open(`${res.mensaje}`, 'ERROR', { duration: 5000 });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  openAbrirMesaDialog(m: any) {\r\n    // console.log(m);\r\n    this.cargando = true;\r\n    this.mesaSeleccionadaToOpen = {\r\n      nombreArea: this.tabArea.textLabel,\r\n      area: +m.area,\r\n      mesa: +m.mesa,\r\n      numero: +m.numero,\r\n      mesero: '',\r\n      comensales: '1',\r\n      comanda: 0,\r\n      esEvento: false,\r\n      dividirCuentasPorSillas: false,\r\n      estatus: 1,\r\n      clientePedido: this.clientePedido || null,\r\n      cuentas: [\r\n        {\r\n          numero: 1,\r\n          nombre: this.clientePedido?.nombre || 'Única',\r\n          productos: []\r\n        }\r\n      ]\r\n    };\r\n\r\n    if (+m.esmostrador === 0) {\r\n      const abrirMesaRef = this.dialog.open(AbrirMesaComponent, {\r\n        width: '50%',\r\n        height: 'auto',\r\n        disableClose: true,\r\n        data: this.mesaSeleccionadaToOpen\r\n      });\r\n\r\n      this.endSubs.add(        \r\n        abrirMesaRef.afterClosed().subscribe((result: Comanda) => {\r\n          if (result) {\r\n            this.mesaSeleccionadaToOpen = result;\r\n            // console.log(JSON.stringify(this.mesaSeleccionada));\r\n            this.guardarMesa(m);\r\n          } else {\r\n            this.cargando = false;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      this.mesaSeleccionadaToOpen.mesero = this.ls.get(GLOBAL.usrTokenVar).idusr;\r\n      this.guardarMesa(m);\r\n    }\r\n  }\r\n\r\n  toggleRightSidenav = (obj: any = null) => {\r\n    this.rightSidenav.toggle().then((res: MatDrawerToggleResult) => {\r\n      if (res === 'close') {\r\n        // this.checkEstatusMesa();\r\n        if (obj) {\r\n          this.loadAreas(true, { mesaenuso: obj });\r\n        } else {\r\n          // console.log('MESA EN MEMORIA: ', this.mesaSeleccionada);\r\n          // console.log(`TOGGLE SIDE NAV ${moment().format(GLOBAL.dateTimeFormatMilli)}`);\r\n          this.cargando = false;\r\n        }\r\n      } else if (res === 'open') {\r\n        // console.log('MESA SELECTED: ', this.mesaSeleccionada);\r\n        if (this.mesaSeleccionada.cuentas.length === 1) {\r\n          this.snTrancomanda.setSelectedCuenta(this.mesaSeleccionada.cuentas[0].numero);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cerrandoRightSideNav = () => {\r\n    // console.log('Antes de \"resetMesaEnUso\"');\r\n    this.snTrancomanda.resetMesaEnUso();\r\n    // console.log('Antes de \"resetLstProductosDeCuenta\"');\r\n    this.snTrancomanda.resetLstProductosDeCuenta();\r\n    // console.log('Antes de \"resetLstProductosSeleccionados\"');\r\n    this.snTrancomanda.resetLstProductosSeleccionados();\r\n    // console.log('Antes de \"resetCuentaActiva\"');\r\n    this.snTrancomanda.resetCuentaActiva();\r\n    // console.log('Antes de \"loadComandaMesa\"');\r\n    this.snTrancomanda.resetListadoArticulos();\r\n    // console.log('MESA SELECCIONADA EN CERRANDO RIGHT SIDE PANEL = ', this.mesaSeleccionada);    \r\n    // console.log(`CERRANDO ${moment().format(GLOBAL.dateTimeFormatMilli)}`);    \r\n    // this.fuerzaCierreComanda(false);\r\n    this.checkEstatusMesa();\r\n    this.resetMesaSeleccionada();\r\n    // this.cargando = false;\r\n  }\r\n\r\n  msnOpenedChange = (abierto: boolean) => {\r\n    if (!abierto) {\r\n      this.cerrandoRightSideNav();\r\n    }\r\n  }\r\n\r\n  checkEstatusMesa = () => {\r\n    // console.log('MESA EN CHECK ESTATUS MESA = ', this.mesaSeleccionada);\r\n    if (!!this.mesaSeleccionada && !!this.mesaSeleccionada.cuentas && this.mesaSeleccionada.cuentas.length > 0) {\r\n      const abiertas = this.mesaSeleccionada.cuentas.filter(cta => +cta.cerrada === 0).length || 0;\r\n      // console.log('ABIERTAS = ', abiertas);\r\n      if (abiertas === 0) {\r\n        this.setEstatusMesa({\r\n          area: this.mesaSeleccionada.mesa.area.area,\r\n          mesa: this.mesaSeleccionada.mesa.mesa\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  fuerzaCierreComanda = (shouldToggle: boolean) => {\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.cerrarEstacion(this.mesaSeleccionada.comanda).subscribe(resCierre => {\r\n        this.loadComandaMesa(this.mesaSeleccionada.mesa, shouldToggle);\r\n      })\r\n    );\r\n  }\r\n\r\n  openTranComandaAlt = () => {\r\n    const tranComandaRef = this.dialog.open(TranComandaAltComponent, {\r\n      maxWidth: '100vw', maxHeight: '85vh', width: '99vw', height: '85vh',\r\n      disableClose: true,\r\n      data: { mesa: this.mesaSeleccionada }\r\n    });\r\n\r\n    this.endSubs.add(      \r\n      tranComandaRef.afterClosed().subscribe((res: any) => {\r\n        this.checkEstatusMesa();\r\n        if (res) {\r\n          this.loadAreas(true, { mesaenuso: res });\r\n        } else {\r\n          this.cargando = false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadComandaMesa = (obj: any, shouldToggle = true) => {\r\n    // console.log('OBJETO = ', obj);\r\n    if(shouldToggle && this.cargando) {\r\n      this.snackBar.open('El sistema está terminando de cargar información. Por favor intente de nuevo.', 'Áreas', { duration: 5000 });\r\n      return;\r\n    }\r\n\r\n    this.cargando = true;\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.getComandaDeMesa(obj.mesa).subscribe((res: ComandaGetResponse) => {\r\n        // console.log('RESPUESTA DE GET COMANDA = ', res);\r\n        // this.cargando = false;\r\n        if (res.exito) {\r\n          if (!Array.isArray(res)) {\r\n            this.mesaSeleccionada = res;\r\n            this.snTrancomanda.rolesUsuario = this.mesaSeleccionada.turno_rol;\r\n          } else {\r\n            if (res.length === 0) {\r\n              this.mesaSeleccionada = {\r\n                mesa: this.mesaSeleccionada.mesa,\r\n                cuentas: [\r\n                  { cerrada: 1 }\r\n                ]\r\n              };\r\n            }\r\n            this.checkEstatusMesa();\r\n          }\r\n          // console.log('MESA SELECTED = ', this.mesaSeleccionada);\r\n          this.checkEstatusMesa();\r\n          if (shouldToggle) {\r\n            // const cuentas = this.mesaSeleccionada.cuentas;\r\n            this.snTrancomanda.llenaProductosSeleccionados(this.mesaSeleccionada);\r\n            switch (this.configTipoPantalla) {\r\n              case 1: this.toggleRightSidenav(); break;\r\n              case 2: this.openTranComandaAlt(); break;\r\n              default: this.toggleRightSidenav();\r\n            }\r\n          } else {\r\n            // console.log(`SIN TOGGLE RIGHT PANEL ${moment().format(GLOBAL.dateTimeFormat)}`);\r\n            this.checkEstatusMesa();\r\n            this.cargando = false;\r\n          }\r\n        } else {\r\n          if (res.mensaje) {\r\n            this.snackBar.open(`${res.mensaje}`, 'ERROR', { duration: 5000 });\r\n          }\r\n          if (Array.isArray(res)) {\r\n            if (res.length === 0) {\r\n              this.mesaSeleccionada = {\r\n                mesa: this.mesaSeleccionada.mesa,\r\n                cuentas: [\r\n                  { cerrada: 1 }\r\n                ]\r\n              };\r\n            }\r\n          }\r\n          this.checkEstatusMesa();\r\n          this.cargando = false;\r\n        }\r\n        this.checkEstatusMesa();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"matSideNavContainer\">\n    <!-- <mat-sidenav #rightSidenav mode=\"over\" [(opened)]=\"openedRightPanel\" (closedStart)=\"cerrandoRightSideNav()\" position=\"end\" disableClose> -->\n    <mat-sidenav #rightSidenav mode=\"over\" [(opened)]=\"openedRightPanel\" (openedChange)=\"msnOpenedChange($event)\" position=\"end\" disableClose>\n        <app-tran-comanda #snTranComanda [mesaEnUso]=\"mesaSeleccionada\" [clientePedido]=\"clientePedido\" (mesaSavedEv)=\"actualizar()\" (closeSideNavEv)=\"toggleRightSidenav($event)\"></app-tran-comanda>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-tab-group dynamicHeight backgroundColor=\"primary\">\n            <mat-tab #tabArea *ngFor=\"let tabA of lstTabsAreas\" label=\"{{tabA.nombre}}\">\n                <div #matTabArea class=\"divAreaMesa\" (window:resize)=\"onResize($event)\">\n                    <app-mesa *ngFor=\"let m of tabA.mesas\" [configuracion]=\"m\" (onClickMesa)=\"!cargando && onClickMesa($event)\" [isDisabled]=\"cargando\"></app-mesa>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthguardService as AuthGuard } from '../admin/services/authguard.service';\n\nimport { AreaComponent } from './components/area/area/area.component';\nimport { TranAreasComponent } from './components/tran-areas/tran-areas.component';\nimport { TurnoComponent } from './components/turno/turno/turno.component';\nimport { RptVentasComponent } from './components/reportes/rpt-ventas/rpt-ventas.component';\nimport { TurnosComponent } from './components/reportes/turnos/turnos.component';\nimport { PropinasComponent } from './components/reportes/propinas/propinas.component';\nimport { ComandaEnLineaComponent } from './components/comanda-en-linea/comanda-en-linea.component';\nimport { CajaComponent } from './components/reportes/caja/caja.component';\nimport { FacturaComponent } from './components/reportes/factura/factura.component';\nimport { TurnoTipoComponent } from './components/turno-tipo/turno/turno.component';\nimport { PropinaComponent } from './components/propina/propina/propina.component';\n// import { FormPropinaComponent } from './components/propina/form-propina/form-propina.component';\n// import { ListaPropinaComponent } from './components/propina/lista-propina/lista-propina.component';\nimport { AutoconsultaComponent } from './components/reportes/autoconsulta/autoconsulta.component';\nimport { CajacorteComponent } from './components/caja-corte/cajacorte/cajacorte.component';\nimport { TranCocinaComponent } from './components/tran-cocina/tran-cocina.component';\n\nconst routes: Routes = [\n  { path: 'mantareas', component: AreaComponent, canActivate: [AuthGuard] },\n  { path: 'tranareas', component: TranAreasComponent, canActivate: [AuthGuard] },\n  { path: 'turno', component: TurnoComponent, canActivate: [AuthGuard] },\n  { path: 'rptvtascat', component: RptVentasComponent, canActivate: [AuthGuard] },\n  { path: 'rptturnos', component: TurnosComponent, canActivate: [AuthGuard] },\n  { path: 'rptpropinas', component: PropinasComponent, canActivate: [AuthGuard] },\n  { path: 'rptcaja', component: CajaComponent, canActivate: [AuthGuard]},\n  { path: 'rptfactura', component: FacturaComponent, canActivate: [AuthGuard]},\n  { path: 'cmdonline', component: ComandaEnLineaComponent, canActivate: [AuthGuard] },\n  { path: 'tipoturno', component: TurnoTipoComponent, canActivate: [AuthGuard] },\n  { path: 'propina', component: PropinaComponent, canActivate: [AuthGuard] },\n  { path: 'autoconsulta', component: AutoconsultaComponent, canActivate: [AuthGuard] },\n  { path: 'cajacorte', component: CajacorteComponent, canActivate: [AuthGuard] },\n  { path: 'trancocina', component: TranCocinaComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/admin/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RestauranteRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { CajacorteListaComponent } from '../cajacorte-lista/cajacorte-lista.component';\nimport { ccGeneral } from '../../../interfaces/cajacorte';\n\n@Component({\n  selector: 'app-cajacorte',\n  templateUrl: './cajacorte.component.html',\n  styleUrls: ['./cajacorte.component.css']\n})\nexport class CajacorteComponent implements OnInit {\n  public ccorte: ccGeneral;\n  @ViewChild('lstCortecaja') lstCajacorteComponent: CajacorteListaComponent;\n\n  constructor() {\n    this.ccorte = {\n      caja_corte: 0,\n      creacion: null,\n      usuario: 0,\n      turno: 0,\n      confirmado: null,\n      anulado: 0,\n      caja_corte_tipo: 0,\n      descripcion: null,\n      detalle: []\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  editarCajaCorte = (pres: any) => this.ccorte = pres;\n\n  actualizaLista = () => this.lstCajacorteComponent.getCajascortes();\n\n}\n","<div class=\"row\">\n  <div class=\"col m5 s12\">\n    <app-cajacorte-lista  #lstCortecaja (getCajacorteEv)=\"editarCajaCorte($event)\"></app-cajacorte-lista>\n  </div>\n  <div class=\"col m7 s12\">\n    <app-cajacorte-form #frmCortecaja [ccorte]=\"ccorte\" (cajacorteSavedEv)=\"actualizaLista()\"></app-cajacorte-form>\n  </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\nimport { Cuenta } from '../../interfaces/cuenta';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface INuevaCuenta {\n  mesaEnUso: ComandaGetResponse;\n}\n\n@Component({\n  selector: 'app-nueva-cuenta',\n  templateUrl: './nueva-cuenta.component.html',\n  styleUrls: ['./nueva-cuenta.component.css']\n})\nexport class NuevaCuentaComponent implements OnInit {\n\n  public comanda: Comanda;\n  public nuevaCuenta: Cuenta;\n\n  constructor(\n    public dialogRef: MatDialogRef<NuevaCuentaComponent>,\n    private snackBar: MatSnackBar,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: INuevaCuenta\n  ) { }\n\n  ngOnInit() {\n    if (+this.data.mesaEnUso.comanda > 0) {\n      const meu = this.data.mesaEnUso;\n      this.comanda = {\n        area: +meu.mesa.area.area,\n        mesa: +meu.mesa.mesa,\n        mesero: +meu.mesero.usuario,\n        comensales: meu.cuentas.length + 1,\n        dividirCuentasPorSillas: 1,\n        comanda: +meu.comanda,\n        cuentas: meu.cuentas,\n        replaceUnica: false\n      };\n      this.nuevaCuenta = {\n        cuenta: 0,\n        numero: this.comanda.cuentas.length + 1,\n        nombre: undefined,\n        productos: []\n      };\n    }\n  }\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardar = () => {\n    if (this.nuevaCuenta.nombre) {\n      const idx = this.comanda.cuentas.findIndex(c => c.nombre.toUpperCase().trim() === this.nuevaCuenta.nombre.toUpperCase().trim());\n      if (idx < 0) {\n        this.comanda.cuentas.push(this.nuevaCuenta);\n        this.comandaSrvc.save(this.comanda).subscribe(res => {\n          if (res.exito) {\n            this.snackBar.open('Cuenta agregada con éxito', 'Cuentas', { duration: 3000 });\n            this.dialogRef.close(true);\n          } else {\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cuentas', { duration: 7000 });\n          }\n        });\n      } else {\n        this.snackBar.open('Ya existe una cuenta con ese nombre. Por favor ingrese otro nombre.', 'Cuentas', { duration: 7000 });\n      }\n    }\n  }\n}\n","<h1 mat-dialog-title>Nueva cuenta - Comanda #{{data.mesaEnUso.comanda}}</h1>\n<div mat-dialog-content>\n    <form #frmNuevaCuenta=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"text\" matInput placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"nuevaCuenta.nombre\" required>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"guardar()\" [disabled]=\"!frmNuevaCuenta.form.valid\">\n        Guardar\n    </button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Impresora } from '../../../admin/interfaces/impresora';\nimport { Cuenta } from '../../interfaces/cuenta';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface IDatosCuentas {\n  lstProductosSeleccionados: [{\n    id: number;\n    nombre: string;\n    cuenta?: number;\n    cantidad: number;\n    impreso: number;\n    precio?: number;\n    total?: number;\n    notas?: string;\n    showInputNotas: boolean;\n    itemListHeight: string;\n    detalle_comanda?: number;\n    detalle_cuenta?: number;\n    impresora?: Impresora;\n  }];\n  mesaEnUso: {\n    area: string;\n    noMesa: number;\n    cuentas: [{\n      numero: number,\n      nombre: string\n    }];\n  };\n}\n\n@Component({\n  selector: 'app-unir-cuenta',\n  templateUrl: './unir-cuenta.component.html',\n  styleUrls: ['./unir-cuenta.component.css']\n})\nexport class UnirCuentaComponent implements OnInit {\n\n  public cuentaDe: Cuenta;\n  public cuentaA: Cuenta;\n\n  constructor(\n    public dialogRef: MatDialogRef<UnirCuentaComponent>,\n    private comandaSrvc: ComandaService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: IDatosCuentas\n  ) { }\n\n  ngOnInit() {\n    // console.log('Productos enviados = ', this.data.lstProductosSeleccionados);\n  }\n\n  cancelar() {\n    this.dialogRef.close(false);\n  }\n\n  unirCuentas(deCuenta: Cuenta, aCuenta: Cuenta) {\n    // console.log('ORIGEN', deCuenta);\n    // console.log('DESTINO', aCuenta);\n    this.comandaSrvc.unificarCuentas(deCuenta.cuenta, aCuenta.cuenta).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.snackBar.open(res.mensaje, 'Cuentas', { duration: 3000 });\n        this.dialogRef.close(true);\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Cuentas', { duration: 7000 });\n      }\n    });\n    /*\n    if (+deCuenta.numero !== +aCuenta.numero) {\n      this.data.lstProductosSeleccionados.map((p) => {\n        if (+p.cuenta === +deCuenta.cuenta) {\n          p.cuenta = aCuenta.cuenta;\n        }\n      });\n      console.log('Productos seleccionados (Después) = ', this.data.lstProductosSeleccionados);\n    } else {\n      this.data.lstProductosSeleccionados.map(p => p.cuenta = +deCuenta.cuenta);\n    }\n    this.dialogRef.close(this.data.lstProductosSeleccionados);\n    */\n  }\n\n  unirTodas() {\n    // this.unirCuentas();\n  }\n\n}\n","<h1 mat-dialog-title>Unir cuentas</h1>\n<div mat-dialog-content>\n    <form #frmUnirCuenta=\"ngForm\" novalidate>\n        <mat-form-field>\n            <mat-label>Unir cuenta de</mat-label>\n            <mat-select name=\"cuentaDe\" [(ngModel)]=\"cuentaDe\" required>\n                <mat-option *ngFor=\"let ctaDe of data.mesaEnUso.cuentas\" [value]=\"ctaDe\" [disabled]=\"+ctaDe.cerrada === 1\">\n                    {{ctaDe.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>con la cuenta de</mat-label>\n            <mat-select name=\"cuentaA\" [(ngModel)]=\"cuentaA\" required>\n                <mat-option *ngFor=\"let ctaA of data.mesaEnUso.cuentas\" [value]=\"ctaA\" [disabled]=\"+ctaA.cerrada === 1\">\n                    {{ctaA.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"unirCuentas(cuentaDe, cuentaA)\" [disabled]=\"!frmUnirCuenta.form.valid || !cuentaDe || !cuentaA || +cuentaDe.numero === +cuentaA.numero\">\n        Unir cuentas\n    </button>\n    <!--\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"unirTodas()\">\n        Unir todas en una sola\n    </button>\n    -->\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Turno } from '../interfaces/turno';\nimport { DetalleTurno } from '../interfaces/detalle-turno';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurnoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'turno';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Turno[]> {\n    return this.http.get<Turno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Turno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${entidad.turno ? ('/' + entidad.turno) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idturno: number, fltr: any = {}): Observable<DetalleTurno[]> {\n    return this.http.get<DetalleTurno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar_usuario/${idturno}?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleTurno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/agregar_usuario/${entidad.turno}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularDetalle(entidad: DetalleTurno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/anular_usuario/${entidad.turno}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  replicaDetalleTurno(idTurnoOriginal: number, idTurnoCopia: number): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/replica_detalle_turno/${idTurnoOriginal}/${idTurnoCopia}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { WmsModule } from '../wms/wms.module';\nimport { PosModule } from '../pos/pos.module';\nimport { CallcenterModule } from '../callcenter/callcenter.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\n\nimport { NgxBarCodePutModule } from 'ngx-barcodeput';\n\nimport { RestauranteRoutingModule } from './restaurante-routing.module';\nimport { TranAreasComponent } from './components/tran-areas/tran-areas.component';\nimport { MesaComponent } from './components/mesa/mesa.component';\nimport { AbrirMesaComponent } from './components/abrir-mesa/abrir-mesa.component';\nimport { TranComandaComponent } from './components/tran-comanda/tran-comanda.component';\nimport { ListaProductosComandaComponent } from './components/lista-productos-comanda/lista-productos-comanda.component';\nimport { UnirCuentaComponent } from './components/unir-cuenta/unir-cuenta.component';\nimport { ListaAreaComponent } from './components/area/lista-area/lista-area.component';\nimport { FormAreaComponent } from './components/area/form-area/form-area.component';\nimport { AreaComponent } from './components/area/area/area.component';\nimport { PideDatosCuentasComponent } from './components/pide-datos-cuentas/pide-datos-cuentas.component';\nimport { TurnoComponent } from './components/turno/turno/turno.component';\nimport { ListaTurnoComponent } from './components/turno/lista-turno/lista-turno.component';\nimport { FormTurnoComponent } from './components/turno/form-turno/form-turno.component';\nimport { AreaDesignerComponent } from './components/area/area-designer/area-designer.component';\nimport { RptVentasComponent } from './components/reportes/rpt-ventas/rpt-ventas.component';\nimport { PorCategoriaComponent } from './components/reportes/rpt-ventas/por-categoria/por-categoria.component';\nimport { PorArticuloComponent } from './components/reportes/rpt-ventas/por-articulo/por-articulo.component';\nimport { TurnosComponent } from './components/reportes/turnos/turnos.component';\nimport { PropinasComponent } from './components/reportes/propinas/propinas.component';\nimport { ComandaEnLineaComponent } from './components/comanda-en-linea/comanda-en-linea.component';\nimport { CajaComponent } from './components/reportes/caja/caja.component';\nimport { FacturaComponent } from './components/reportes/factura/factura.component';\nimport { ListaTurnoTipoComponent } from './components/turno-tipo/lista-turno/lista-turno.component';\nimport { FormTurnoTipoComponent } from './components/turno-tipo/form-turno/form-turno.component';\nimport { TurnoTipoComponent } from './components/turno-tipo/turno/turno.component';\nimport { PropinaComponent } from './components/propina/propina/propina.component';\nimport { FormPropinaComponent } from './components/propina/form-propina/form-propina.component';\nimport { ListaPropinaComponent } from './components/propina/lista-propina/lista-propina.component';\nimport { AutoconsultaComponent } from './components/reportes/autoconsulta/autoconsulta.component';\nimport { CajacorteComponent } from './components/caja-corte/cajacorte/cajacorte.component';\nimport { CajacorteListaComponent } from './components/caja-corte/cajacorte-lista/cajacorte-lista.component';\nimport { CajacorteFormComponent } from './components/caja-corte/cajacorte-form/cajacorte-form.component';\nimport { ValidaPwdGerenteTurnoComponent } from './components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component';\nimport { TrasladoMesaComponent } from './components/traslado-mesa/traslado-mesa.component';\nimport { ConfiguraMesaComponent } from './components/area/configura-mesa/configura-mesa.component';\nimport { TranCocinaComponent } from './components/tran-cocina/tran-cocina.component';\nimport { TranComandaAltComponent } from './components/tran-comanda-alt/tran-comanda-alt.component';\nimport { NotasGeneralesComandaComponent } from './components/notas-generales-comanda/notas-generales-comanda.component';\nimport { NuevaCuentaComponent } from './components/nueva-cuenta/nueva-cuenta.component';\nimport { DistribuirProductosCuentasComponent } from './components/distribuir-productos-cuentas/distribuir-productos-cuentas.component';\nimport { AccionesComandaComponent } from './components/acciones-comanda/acciones-comanda.component';\nimport { SeleccionaTurnoPrevioComponent } from './components/turno/selecciona-turno-previo/selecciona-turno-previo.component';\n\n\n@NgModule({\n  declarations: [\n    TranAreasComponent, MesaComponent, AbrirMesaComponent, TranComandaComponent, ListaProductosComandaComponent, UnirCuentaComponent,\n    ListaAreaComponent, FormAreaComponent, AreaComponent, PideDatosCuentasComponent, TurnoComponent, ListaTurnoComponent,\n    FormTurnoComponent, AreaDesignerComponent, RptVentasComponent, PorCategoriaComponent, PorArticuloComponent, TurnosComponent,\n    PropinasComponent, ComandaEnLineaComponent, CajaComponent, FacturaComponent, ListaTurnoTipoComponent, FormTurnoTipoComponent,\n    TurnoTipoComponent, PropinaComponent, FormPropinaComponent, ListaPropinaComponent, AutoconsultaComponent,\n    CajacorteComponent, CajacorteListaComponent, CajacorteFormComponent, ValidaPwdGerenteTurnoComponent, TrasladoMesaComponent,\n    ConfiguraMesaComponent, TranCocinaComponent, TranComandaAltComponent, NotasGeneralesComandaComponent, NuevaCuentaComponent,\n    DistribuirProductosCuentasComponent,\n    AccionesComandaComponent,\n    SeleccionaTurnoPrevioComponent\n  ],\n  imports: [\n    CommonModule,\n    RestauranteRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgxBarCodePutModule,\n    SharedModule,\n    WmsModule,\n    PosModule,\n    CallcenterModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    EcoFabSpeedDialModule,\n    DragDropModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatBottomSheetModule,\n    MatKeyboardModule\n  ],\n  providers: [\n    MatNativeDateModule\n  ]\n})\nexport class RestauranteModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaTurnoTipoComponent } from '../lista-turno/lista-turno.component';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\n\n@Component({\n  selector: 'app-turno-tipo',\n  templateUrl: './turno.component.html',\n  styleUrls: ['./turno.component.css']\n})\nexport class TurnoTipoComponent implements OnInit {\n\n  public turno: TipoTurno;\n  @ViewChild('lstTurno') lstTurnoComponent: ListaTurnoTipoComponent;\n\n  constructor() {\n    this.turno = { \n      turno_tipo: null, descripcion: null, activo: 1\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setTurno = (cli: TipoTurno) => this.turno = cli;\n\n  refreshTurnoList = () => this.lstTurnoComponent.loadTurnos();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-turno-tipo #lstTurno (getTurnoEv)=\"setTurno($event)\"></app-lista-turno-tipo>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-turno-tipo #frmTurno [turno]=\"turno\" (turnoSavedEv)=\"refreshTurnoList()\"></app-form-turno-tipo>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\n// import { Router } from '@angular/router';\r\nimport { WindowConfiguration } from '../../../shared/interfaces/window-configuration';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\nimport { UnirCuentaComponent } from '../unir-cuenta/unir-cuenta.component';\r\nimport { TrasladoMesaComponent } from '../traslado-mesa/traslado-mesa.component';\r\nimport { CobrarPedidoComponent } from '../../../pos/components/cobrar-pedido/cobrar-pedido.component';\r\nimport { ListaProductoAltComponent } from '../../../wms/components/producto/lista-producto-alt/lista-producto-alt.component';\r\nimport { ConfirmDialogModel, DialogPedidoComponent } from '../../../shared/components/dialog-pedido/dialog-pedido.component';\r\nimport { ConfirmDialogComboModel, DialogComboComponent } from '../../../shared/components/dialog-combo/dialog-combo.component';\r\nimport { NotasGeneralesComandaComponent } from '../notas-generales-comanda/notas-generales-comanda.component';\r\nimport { NuevaCuentaComponent } from '../nueva-cuenta/nueva-cuenta.component';\r\nimport { DistribuirProductosCuentasComponent } from '../distribuir-productos-cuentas/distribuir-productos-cuentas.component';\r\n\r\nimport { Cuenta } from '../../interfaces/cuenta';\r\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\r\nimport { DetalleComanda } from '../../interfaces/detalle-comanda';\r\nimport { Articulo, ArbolArticulos, ProductoSelected, NodoProducto } from '../../../wms/interfaces/articulo';\r\nimport { ArticuloService } from '../../../wms/services/articulo.service';\r\n\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../../admin/interfaces/cliente';\r\nimport * as moment from 'moment';\r\n// import { saveAs } from 'file-saver';\r\nimport { Base64 } from 'js-base64';\r\n\r\n@Component({\r\n  selector: 'app-tran-comanda',\r\n  templateUrl: './tran-comanda.component.html',\r\n  styleUrls: ['./tran-comanda.component.css']\r\n})\r\nexport class TranComandaComponent implements OnInit {\r\n\r\n  @Input() mesaEnUso: ComandaGetResponse;\r\n  @Input() clientePedido: Cliente = null;\r\n  @Output() closeSideNavEv = new EventEmitter();\r\n  @ViewChild('appLstProdAlt') appLstProdAlt: ListaProductoAltComponent;\r\n  @Output() mesaSavedEv: EventEmitter<any> = new EventEmitter();\r\n  @ViewChild('txtCodigoBarras') txtCodigoBarras: MatInput;\r\n\r\n  public lstProductosSeleccionados: ProductoSelected[];\r\n  public lstProductosDeCuenta: ProductoSelected[];\r\n  public lstProductosAImprimir: ProductoSelected[];\r\n  public showPortalComanda = false;\r\n  public showPortalCuenta = false;\r\n  public windowConfig: WindowConfiguration;\r\n  public noComanda = 0;\r\n  public sumCuenta = 0;\r\n  public cuentaActiva: Cuenta;\r\n  public detalleComanda: DetalleComanda;\r\n  public categorias: ArbolArticulos[] = [];\r\n  public bloqueoBotones = false;\r\n  public rolesUsuario: string[] = [];\r\n  public impreso = 0;\r\n  public usaCodigoBarras = false;\r\n  public codigoBarras: string = null;\r\n  public imprimeRecetaEnComanda = true;\r\n\r\n  constructor(\r\n    // private router: Router,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    public comandaSrvc: ComandaService,\r\n    private socket: Socket,\r\n    private ls: LocalstorageService,\r\n    private pdfServicio: ReportePdfService,\r\n    private configSrvc: ConfiguracionService,\r\n    private articuloSrvc: ArticuloService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.resetMesaEnUso();\r\n    this.resetLstProductosSeleccionados();\r\n    this.resetLstProductosDeCuenta();\r\n    this.resetCuentaActiva();\r\n    this.impreso = 0;\r\n    this.noComanda = this.mesaEnUso.comanda || 0;\r\n    this.llenaProductosSeleccionados();\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n    }\r\n    this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\r\n    this.imprimeRecetaEnComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_RECETA_EN_COMANDA);\r\n    // console.log('MESA EN USO = ', this.mesaEnUso);\r\n  }\r\n\r\n  resetMesaEnUso = () => this.mesaEnUso = {\r\n    exito: true,\r\n    comanda: null, usuario: null, sede: null, estatus: null,\r\n    mesa: {\r\n      mesa: null,\r\n      area: { area: null, sede: null, area_padre: null, nombre: null },\r\n      numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n    },\r\n    numero_pedido: null,\r\n    cuentas: []\r\n  }\r\n  resetLstProductosSeleccionados = () => this.lstProductosSeleccionados = [];\r\n  resetLstProductosDeCuenta = () => this.lstProductosDeCuenta = [];\r\n  resetCuentaActiva = () => this.cuentaActiva = { cuenta: null, numero: null, nombre: null, productos: [] };\r\n  resetListadoArticulos = () => this.appLstProdAlt.loadArbolArticulos();\r\n\r\n  setListaCategorias = (cats: ArbolArticulos[] = []) => this.categorias = this.setVerBotones(cats);\r\n\r\n  setVerBotones = (cats: ArbolArticulos[]) => {\r\n    for (const cat of cats) {\r\n      loopSubCategoria:\r\n      for (const subcat of cat.categoria_grupo) {\r\n        for (const art of subcat.articulo) {\r\n          if (+art.mostrar_pos === 1) {\r\n            subcat.mostrarEnPos = true;\r\n            cat.mostrarEnPos = true;\r\n            continue loopSubCategoria;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return cats;\r\n  }\r\n\r\n  clickOnCategoria = (c: ArbolArticulos) => this.appLstProdAlt.fillSubCategorias(c.categoria_grupo);\r\n\r\n  buscarArticulo = () => {\r\n    // console.log(`CODIGO BARRAS = ${this.codigoBarras}`);\r\n    if (this.codigoBarras && this.codigoBarras.trim().length > 0) {\r\n      this.articuloSrvc.getArticulos({ codigo: this.codigoBarras.trim() }).subscribe((arts: Articulo[]) => {\r\n        if (arts && arts.length > 0) {\r\n          const art = arts[0];\r\n          const obj: NodoProducto = {\r\n            id: +art.articulo,\r\n            nombre: art.descripcion,\r\n            precio: +art.precio,\r\n            impresora: art.impresora,\r\n            presentacion: art.presentacion,\r\n            codigo: art.codigo,\r\n            combo: art.combo,\r\n            multiple: art.multiple\r\n          };\r\n          this.agregarProductos(obj);\r\n        }\r\n        this.codigoBarras = null;\r\n        this.txtCodigoBarras.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  llenaProductosSeleccionados = (conQueMesa: ComandaGetResponse = this.mesaEnUso) => {\r\n    if (this.mesaEnUso.comanda == null) {\r\n      this.mesaEnUso = conQueMesa;\r\n    }\r\n    this.lstProductosSeleccionados = [];\r\n\r\n    for (const ctas of conQueMesa.cuentas) {\r\n      for (const p of ctas.productos) {\r\n        this.lstProductosSeleccionados.push({\r\n          id: +p.articulo.articulo,\r\n          nombre: p.articulo.descripcion,\r\n          cuenta: +p.numero_cuenta || 1,\r\n          idcuenta: +ctas.cuenta,\r\n          cantidad: +p.cantidad,\r\n          impreso: +p.impreso,\r\n          precio: parseFloat(p.precio) || 10.00,\r\n          total: parseFloat(p.total) || (parseFloat(p.cantidad) * parseFloat(p.precio)),\r\n          notas: p.notas || '',\r\n          showInputNotas: false,\r\n          itemListHeight: '70px',\r\n          detalle_comanda: +p.detalle_comanda,\r\n          detalle_cuenta: +p.detalle_cuenta,\r\n          impresora: p.articulo.impresora,\r\n          detalle: p.detalle,\r\n          monto_extra: +p.monto_extra || 0.00,\r\n          multiple: +p.articulo.multiple,\r\n          combo: +p.articulo.combo,\r\n          esreceta: +p.articulo.esreceta || 0\r\n        });\r\n      }\r\n    }\r\n    // console.log('SELECCIONADOS = ', this.lstProductosSeleccionados);\r\n  }\r\n\r\n  cerrarMesa = () => {\r\n    // console.log('CERRAR MESA; MESA EN USO = ', this.mesaEnUso);\r\n    this.comandaSrvc.cerrarMesa(this.mesaEnUso.mesa.mesa).subscribe(res => {\r\n      // console.log('RESPUESTA DE CERRAR MESA = ', res);\r\n      if (res.exito) {\r\n        // console.log('EXITO PARA CERRAR LA MESA...', res);\r\n        this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n        this.mesaEnUso.mesa.estatus = 1;\r\n        this.mesaSavedEv.emit();\r\n        this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n      } else {\r\n        // console.log('FALLA PARA CERRAR LA MESA...', res);\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectedCuenta(noCuenta: number) {\r\n    this.bloqueoBotones = true;\r\n    this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +noCuenta);\r\n    this.setLstProductosDeCuenta();\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  setSumaCuenta(lista: ProductoSelected[]) {\r\n    let suma = 0.00;\r\n    // for (let i = 0; i < lista.length; i++) { suma += (lista[i].precio * lista[i].cantidad); }\r\n    for (const item of lista) {\r\n      suma += (item.precio * item.cantidad);\r\n    }\r\n    this.sumCuenta = suma;\r\n  }\r\n\r\n  setLstProductosDeCuenta() {\r\n    const noCta = this.cuentaActiva?.numero || 1;\r\n    this.lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +noCta);\r\n    // console.log(this.lstProductosDeCuenta);\r\n  }\r\n\r\n  agregarProductos(producto: any) {\r\n    // console.log(producto);\r\n    if (+producto.combo === 1 || +producto.multiple === 1) {\r\n      this.bloqueoBotones = true;\r\n      const confirmRef = this.dialog.open(DialogComboComponent, {\r\n        maxWidth: '50%',\r\n        data: new ConfirmDialogComboModel(\r\n          producto,\r\n          'Sí', 'No'\r\n        )\r\n      });\r\n\r\n      confirmRef.afterClosed().subscribe((res: any) => {\r\n        // console.log(res);\r\n        if (res && res.respuesta && res.seleccion.receta.length > 0) {\r\n          // console.log(res.seleccion); // this.bloqueoBotones = false; return;\r\n          this.comandaSrvc.saveDetalleCombo(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, res.seleccion).subscribe(resSaveDetCmb => {\r\n            // console.log('NUEVO DETALLE COMANDA = ', res);\r\n            if (resSaveDetCmb.exito) {\r\n              this.mesaEnUso = resSaveDetCmb.comanda;\r\n              this.llenaProductosSeleccionados(this.mesaEnUso);\r\n              this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n            } else {\r\n              this.snackBar.open(`ERROR:${resSaveDetCmb.mensaje}`, 'Comanda', { duration: 3000 });\r\n            }\r\n            this.bloqueoBotones = false;\r\n          });\r\n        } else {\r\n          this.bloqueoBotones = false;\r\n          this.snackBar.open('Error, Debe seleccionar los productos del combo', 'Comanda', { duration: 7000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.addProductoSelected(producto);\r\n    }\r\n  }\r\n\r\n  addProductoSelected(producto: any) {\r\n    // console.log('PRODUCTO = ', producto);\r\n    // return;\r\n    this.bloqueoBotones = true;\r\n    if (+this.cuentaActiva.numero) {\r\n      const idx = this.lstProductosSeleccionados\r\n        .findIndex(p => +p.id === +producto.id && +p.cuenta === +this.cuentaActiva.numero && +p.impreso === 0);\r\n\r\n      if (idx < 0) {\r\n        this.detalleComanda = {\r\n          articulo: producto.id, cantidad: 1, precio: +producto.precio, total: 1 * +producto.precio, notas: ''\r\n        };\r\n        this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n          // console.log('NUEVO DETALLE COMANDA = ', res);\r\n          if (res.exito) {\r\n            this.mesaEnUso = res.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n          } else {\r\n            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n          }\r\n          this.bloqueoBotones = false;\r\n        });\r\n      } else {\r\n        const tmp: ProductoSelected = this.lstProductosSeleccionados[idx];\r\n        this.detalleComanda = {\r\n          detalle_cuenta: tmp.detalle_cuenta, detalle_comanda: tmp.detalle_comanda, articulo: tmp.id, cantidad: (+tmp.cantidad) + 1,\r\n          precio: +tmp.precio, total: ((+tmp.cantidad) + 1) * (+tmp.precio), notas: tmp.notas\r\n        };\r\n        this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n          // console.log('UPDATE DETALLE COMANDA = ', res);\r\n          if (res.exito) {\r\n            this.mesaEnUso = res.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n          } else {\r\n            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n          }\r\n          this.bloqueoBotones = false;\r\n        });\r\n      }\r\n      this.setLstProductosDeCuenta();\r\n    }\r\n  }\r\n\r\n  updProductosCuenta(obj: any) {\r\n    const nvaLista: ProductoSelected[] = obj.listaProductos || [];\r\n    const lstTemp: ProductoSelected[] = this.lstProductosSeleccionados.filter(p => +p.cuenta !== +this.cuentaActiva.numero);\r\n    if (nvaLista.length > 0) {\r\n      this.lstProductosSeleccionados = lstTemp.concat(nvaLista);\r\n    } else {\r\n      this.lstProductosSeleccionados = lstTemp;\r\n    }\r\n    if (obj.comanda) {\r\n      this.mesaEnUso = obj.comanda;\r\n      this.llenaProductosSeleccionados(this.mesaEnUso);\r\n      this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n    }\r\n  }\r\n\r\n  prepProductosComanda(prods: ProductoSelected[]) {\r\n    // console.log(prods);\r\n    const tmp: any[] = [];\r\n    for (let i = 0; i < prods.length; i++) {\r\n      tmp.push({\r\n        articulo: prods[i].id,\r\n        cantidad: prods[i].cantidad,\r\n        precio: prods[i].precio,\r\n        total: prods[i].total,\r\n        notas: prods[i].notas,\r\n        impreso: 1,\r\n        detalle_comanda: prods[i].detalle_comanda,\r\n        detalle_cuenta: prods[i].detalle_cuenta,\r\n        // impresora: prods[i].impresora\r\n      });\r\n    }\r\n    return tmp;\r\n  }\r\n\r\n  validarImpresion(toPdf = false) {\r\n    const ingresarPedido = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_INGRESO_NUMERO_PEDIDO);\r\n    // this.mesaEnUso.mesa.esmostrador;\r\n    // console.log(this.mesaEnUso);\r\n    if (+this.mesaEnUso.mesa.esmostrador === 1 && ingresarPedido && !this.mesaEnUso.numero_pedido) {\r\n      let pedidos = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_TOTAL_NUMEROS_PEDIDO);\r\n      if (!pedidos || pedidos <= 0) {\r\n        pedidos = 30;\r\n      }\r\n      const confirmRef = this.dialog.open(DialogPedidoComponent, {\r\n        maxWidth: '50%',\r\n        data: new ConfirmDialogModel(\r\n          'Numero de Pedido',\r\n          pedidos,\r\n          'Sí', 'No'\r\n        )\r\n      });\r\n\r\n      confirmRef.afterClosed().subscribe((conf: any) => {\r\n        // console.log(conf);\r\n        if (conf && conf.respuesta && conf.pedido) {\r\n          this.mesaEnUso.numero_pedido = conf.pedido;\r\n          this.printComanda(toPdf);\r\n        } else {\r\n          this.snackBar.open('Error, Debe seleccionar un numero de pedido', 'Comanda', { duration: 7000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.printComanda(toPdf);\r\n    }\r\n  }\r\n\r\n  printComanda(toPdf = false) {\r\n    // solicitar numero de pedido\r\n\r\n    const meu = JSON.parse(JSON.stringify(this.mesaEnUso));\r\n\r\n    this.bloqueoBotones = true;\r\n    this.impreso = 0;\r\n    const modoComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_COMANDA) || 1;\r\n    for (let i = 0; i < meu.cuentas.length; i++) {\r\n      const cuenta = meu.cuentas[i];\r\n      // console.log(cuenta);\r\n      this.cuentaActiva = meu.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n\r\n      const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n\r\n      const lstProductosAImprimir = lstProductosDeCuenta.filter(p => +p.impreso === 0 && +p.cantidad > 0);\r\n      if (lstProductosAImprimir.length > 0) {\r\n        lstProductosDeCuenta.map(p => p.impreso = 1);\r\n        this.noComanda = meu.comanda;\r\n        // console.log(this.cuentaActiva.cuenta);\r\n        this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n        const idxCta = meu.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n        // console.log(meu.cuentas)\r\n        // console.log(idxCta)\r\n        if (idxCta > -1) {\r\n          // meu.cuentas[idxCta] = this.cuentaActiva;\r\n          const objCmd: Comanda = {\r\n            area: meu.mesa.area.area,\r\n            mesa: meu.mesa.mesa,\r\n            mesero: meu.mesero.usuario,\r\n            comanda: meu.comanda,\r\n            cuentas: meu.cuentas,\r\n            numero_pedido: meu.numero_pedido\r\n          };\r\n          // console.log('Comanda a guardar = ', objCmd);\r\n          this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n            // console.log('Respuesta del save = ', res);\r\n            if (res.exito) {\r\n              meu.numero_pedido = res.comanda.numero_pedido;\r\n              // console.log(this.cuentaActiva);\r\n              this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                // console.log('Respuesta de poner impreso = ', resImp);\r\n                if (resImp.exito) {\r\n                  this.impreso++;\r\n                }\r\n\r\n                this.llenaProductosSeleccionados(resImp.comanda);\r\n                this.setSelectedCuenta(cuenta.numero);\r\n                this.snackBar.open('Cuenta actualizada', `Cuenta #${cuenta.numero}`, { duration: 3000 });\r\n\r\n                // Inicio de impresión de comanda\r\n                let AImpresoraNormal: ProductoSelected[] = [];\r\n                let AImpresoraBT: ProductoSelected[] = [];\r\n\r\n                try {\r\n                  AImpresoraNormal = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 0);\r\n                  AImpresoraBT = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 1);\r\n                  // console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                } catch (error) {\r\n                  console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                  console.log('NORMAL = ', AImpresoraNormal);\r\n                  console.log('BT = ', AImpresoraBT);\r\n                  console.log(error);\r\n                }\r\n\r\n                if (!toPdf) {\r\n                  if (AImpresoraNormal.length > 0) {\r\n                    if (modoComanda !== 3) {\r\n\r\n                      if (!this.imprimeRecetaEnComanda) {\r\n                        AImpresoraNormal.map(d => {\r\n                          if (+d.combo === 0 && +d.esreceta === 1) {\r\n                            d.detalle = []\r\n                          }\r\n                          return d;\r\n                        });\r\n                      }\r\n\r\n                      this.socket.emit('print:comanda', `${JSON.stringify({\r\n                        Tipo: 'Comanda',\r\n                        Nombre: this.cuentaActiva.nombre,\r\n                        Numero: this.noComanda,\r\n                        DetalleCuenta: AImpresoraNormal,\r\n                        Ubicacion:\r\n                          `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                        Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                        Total: null,\r\n                        NumeroPedido: meu.numero_pedido,\r\n                        NotasGenerales: (meu.notas_generales || '')\r\n                      })}`);\r\n                      this.snackBar.open(`Imprimiendo comanda #${this.noComanda}`, 'Comanda', { duration: 7000 });\r\n                    } else {\r\n                      this.snackBar.open(`Comanda #${this.noComanda} enviada a cocina`, 'Comanda', { duration: 7000 });\r\n                    }\r\n                    this.bloqueoBotones = false;\r\n                    // console.log(\"imprimiendo\")\r\n                  }\r\n\r\n                  if (AImpresoraBT.length > 0) {\r\n                    if (modoComanda !== 3) {\r\n                      if (!this.imprimeRecetaEnComanda) {\r\n                        AImpresoraBT.map(d => {\r\n                          if (+d.combo === 0 && +d.esreceta === 1) {\r\n                            d.detalle = []\r\n                          }\r\n                          return d;\r\n                        });\r\n                      }\r\n\r\n                      this.printToBT(\r\n                        JSON.stringify({\r\n                          Tipo: 'Comanda',\r\n                          Nombre: this.cuentaActiva.nombre,\r\n                          Numero: this.noComanda,\r\n                          DetalleCuenta: AImpresoraBT,\r\n                          Ubicacion:\r\n                            `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                          Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                          Total: null,\r\n                          NumeroPedido: meu.numero_pedido\r\n                        })\r\n                      );\r\n                    }\r\n                  }\r\n                } else {\r\n                  this.printComandaPDF();\r\n                }\r\n\r\n                if (+this.impreso === meu.cuentas.length) {\r\n                  this.impreso = 0;\r\n                  this.socket.emit('refrescar:mesa', { mesaenuso: meu });\r\n                  this.socket.emit('refrescar:listaCocina', { mesaenuso: meu });\r\n                  if (+meu.mesa.esmostrador === 0) {\r\n                    this.closeSideNavEv.emit();\r\n                  } else {\r\n                    this.cobrarCuenta();\r\n                  }\r\n                }\r\n                // Fin de impresión de comanda\r\n              });\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n            }\r\n            this.bloqueoBotones = false;\r\n          });\r\n        }\r\n      } else {\r\n        this.impreso++;\r\n        // this.snackBar.open('Nada para enviar...', `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n        this.bloqueoBotones = false;\r\n      }\r\n    }\r\n    // console.log('Productos a imprimir = ', this.lstProductosAImprimir);\r\n\r\n  }\r\n\r\n  printToBT = (msgToPrint: string = '') => {\r\n    const convertir = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_ENVIA_COMO_BASE64);\r\n    const data = convertir ? Base64.encode(msgToPrint, true) : msgToPrint;\r\n    // const AppHref = `${GLOBAL.DEEP_LINK_ANDROID}${data}`;\r\n    const AppHref = GLOBAL.DEEP_LINK_ANDROID.replace('__INFOBASE64__', data);\r\n\r\n    try {\r\n      window.location.href = AppHref;\r\n    } catch (error) {\r\n      this.snackBar.open('No se pudo conectar con la aplicación de impresión', 'Comanda', { duration: 3000 });\r\n    }\r\n\r\n    // const a = document.createElement('a');\r\n    // document.body.appendChild(a);\r\n    // a.href = AppHref;\r\n    // a.click();\r\n    // document.body.removeChild(a);\r\n\r\n    // setTimeout(() => wref.close(), 3000);\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  printComandaPDF = () => {\r\n    const noCuenta = +this.cuentaActiva.cuenta;\r\n    this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/pdf' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n      } else {\r\n        this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  sumaDetalle = (detalle: ProductoSelected[]) => {\r\n    let total = 0.00;\r\n    // for (let i = 0; i < detalle.length; i++) { total += detalle[i].total || 0.00; }\r\n    for (const item of detalle) {\r\n      total += +item.total || 0.00;\r\n      total += +item.monto_extra || 0.00;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  printCuenta() {\r\n    this.bloqueoBotones = true;\r\n    this.lstProductosAImprimir = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n    // console.log(this.lstProductosAImprimir);\r\n\r\n    if (this.lstProductosAImprimir.length > 0) {\r\n      this.setSumaCuenta(this.lstProductosAImprimir);\r\n      const totalCuenta = this.sumaDetalle(this.lstProductosAImprimir);\r\n      const printerToUse = this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora;\r\n      const imprimePropSugerida = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_PROPINA_SUGERIDA);\r\n\r\n      const msgToPrint = {\r\n        Tipo: 'Cuenta',\r\n        Nombre: this.cuentaActiva.nombre,\r\n        Numero: null,\r\n        DetalleCuenta: this.lstProductosAImprimir,\r\n        Total: totalCuenta,\r\n        Empresa: this.ls.get(GLOBAL.usrTokenVar).empresa,\r\n        Restaurante: this.ls.get(GLOBAL.usrTokenVar).restaurante,\r\n        PropinaSugerida: imprimePropSugerida ? (totalCuenta * 0.10).toFixed(2) : null,\r\n        Impresora: printerToUse,\r\n        Ubicacion:\r\n          `${this.mesaEnUso.mesa.area.nombre} - Mesa ${this.mesaEnUso.mesa.etiqueta || this.mesaEnUso.mesa.numero\r\n          } - Comanda ${this.mesaEnUso.comanda}`,\r\n        Mesero: `${this.mesaEnUso.mesero.nombres} ${this.mesaEnUso.mesero.apellidos}`\r\n      };\r\n\r\n      if (+printerToUse.bluetooth === 0) {\r\n        this.socket.emit(`print:cuenta`, `${JSON.stringify(msgToPrint)}`);\r\n      } else {\r\n        this.printToBT(JSON.stringify(msgToPrint));\r\n      }\r\n      this.snackBar.open(`Imprimiendo cuenta de ${this.cuentaActiva.nombre}`, 'Cuenta', { duration: 7000 });      \r\n      this.closeSideNavEv.emit();\r\n    } else {\r\n      this.snackBar.open(`La cuenta de ${this.cuentaActiva.nombre} no tiene ningún artículo.`, 'Cuenta', { duration: 7000 });\r\n    }\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  unirCuentas() {\r\n    const unirCuentaRef = this.dialog.open(UnirCuentaComponent, {\r\n      width: '55%',\r\n      data: { lstProductosSeleccionados: this.lstProductosSeleccionados, mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    unirCuentaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  cobrarCuenta() {\r\n    this.comandaSrvc.getCuenta(this.cuentaActiva.cuenta).subscribe(res => {\r\n      if (res.pendiente.length > 0) {\r\n        this.snackBar.open('Cobro', 'Tiene productos sin comandar', { duration: 3000 });\r\n      } else {\r\n        const productosACobrar = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n        if (productosACobrar.length > 0) {\r\n          const cobrarCtaRef = this.dialog.open(CobrarPedidoComponent, {\r\n            width: '95%',\r\n            data: {\r\n              mesaenuso: this.mesaEnUso,\r\n              cuenta: this.cuentaActiva.nombre,\r\n              idcuenta: this.cuentaActiva.cuenta,\r\n              productosACobrar,\r\n              porcentajePropina: 0.00,\r\n              impresora: +this.mesaEnUso.mesa.esmostrador === 0 ?\r\n                (this.mesaEnUso.mesa.area.impresora_factura || null) :\r\n                (this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora),\r\n              clientePedido: this.clientePedido\r\n            }\r\n          });\r\n\r\n          cobrarCtaRef.afterClosed().subscribe(resAC => {\r\n            // console.log(resAC);\r\n            if (resAC && resAC !== 'closePanel') {\r\n              // console.log(res);\r\n              this.cambiarEstatusCuenta(resAC);\r\n              this.closeSideNavEv.emit(this.mesaEnUso);\r\n            } else {\r\n              if (resAC === 'closePanel') {\r\n                this.closeSideNavEv.emit();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          this.snackBar.open('Cobro', 'Sin productos a cobrar.', { duration: 3000 });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  enviarPedido = () => {\r\n    const cuenta = this.mesaEnUso.cuentas[0];\r\n    this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n    const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n    lstProductosDeCuenta.map(p => p.impreso = 1);\r\n    this.noComanda = this.mesaEnUso.comanda;\r\n    this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n    const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n    if (idxCta > -1) {\r\n      const objCmd: Comanda = {\r\n        area: this.mesaEnUso.mesa.area.area,\r\n        mesa: this.mesaEnUso.mesa.mesa,\r\n        mesero: this.mesaEnUso.usuario,\r\n        comanda: this.mesaEnUso.comanda,\r\n        cuentas: this.mesaEnUso.cuentas,\r\n        numero_pedido: this.mesaEnUso.numero_pedido\r\n      };\r\n\r\n      this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n        if (res.exito) {\r\n          this.mesaEnUso.numero_pedido = res.comanda.numero_pedido;\r\n          this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n            this.llenaProductosSeleccionados(resImp.comanda);\r\n            this.setSelectedCuenta(cuenta.numero);\r\n            this.cobrarCuenta();\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cambiarEstatusCuenta = (obj: any) => {\r\n    const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +obj.cuenta);\r\n    this.mesaEnUso.cuentas[idxCta].cerrada = +obj.cerrada;\r\n  }\r\n\r\n  // esCajero = () => (this.rolesUsuario || []).find(r => r.trim().toLocaleLowerCase() === 'cajero') === undefined;\r\n  esCajero = () => false;\r\n\r\n  trasladoMesa = () => {\r\n    const trasladoRef = this.dialog.open(TrasladoMesaComponent, {\r\n      width: '55%',\r\n      data: { mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    trasladoRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n        this.closeSideNavEv.emit(this.mesaEnUso);\r\n      }\r\n    });\r\n  }\r\n\r\n  getNotasGenerales = () => {\r\n    const ngenDialog = this.dialog.open(NotasGeneralesComandaComponent, {\r\n      width: '50%',\r\n      data: { notasGenerales: (this.mesaEnUso.notas_generales || '') }\r\n    });\r\n    ngenDialog.afterClosed().subscribe((notasGen: string) => {\r\n      if (notasGen !== null) {\r\n        if (notasGen.trim().length > 0) {\r\n          this.comandaSrvc.saveNotasGenerales({ comanda: this.mesaEnUso.comanda, notas_generales: notasGen }).subscribe(res => {\r\n            if (res.exito) {\r\n              this.mesaEnUso.notas_generales = notasGen;\r\n              this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  nuevaCuenta = () => {\r\n    const nuevaCuentaRef = this.dialog.open(NuevaCuentaComponent, {\r\n      width: '50%',\r\n      data: { mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    nuevaCuentaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  distribuirProductos = () => {\r\n    const distProdCtaRef = this.dialog.open(DistribuirProductosCuentasComponent, {\r\n      width: '50%',\r\n      data: { mesaEnUso: this.mesaEnUso, lstProductos: (this.lstProductosSeleccionados || []) }\r\n    });\r\n\r\n    distProdCtaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayout.xs=\"column\">\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"center start\">\n        <span class=\"bld\" style=\"font-size: 16pt; margin-left: 10px;\" *ngIf=\"mesaEnUso\">\n            {{mesaEnUso.mesa.area.nombre}} - Mesa {{mesaEnUso.mesa.etiqueta || mesaEnUso.mesa.numero}} - Comanda {{mesaEnUso.comanda}}\n        </span>\n    </div>\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"end start\">\n        <button mat-raised-button type=\"button\" color=\"accent\" style=\"margin-left: 8px;\"\n            (click)=\"closeSideNavEv.emit()\" [disabled]=\"bloqueoBotones\">\n            Cerrar Panel\n        </button>\n    </div>\n</div>\n<!--\n<div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\" fxLayoutAlign=\"center center\">\n    <div class=\"bordeTest\" fxFlex=\"20%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\" fxFlex.md=\"25%\" fxLayoutAlign=\"center center\" *ngFor=\"let cta of mesaEnUso.cuentas\">\n        <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"+cta.cerrada == 1\" (click)=\"setSelectedCuenta(cta.numero)\">\n            {{cta.nombre}}\n        </button>\n    </div>\n</div>\n-->\n<div class=\"divFullSize\">\n    <div class=\"row\">\n        <div class=\"col m12 s12\" align=\"center\" style=\"padding: 0 !important;\" *ngIf=\"mesaEnUso\">\n            <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" *ngFor=\"let cta of mesaEnUso.cuentas\" [disabled]=\"+cta.cerrada == 1\"\n                (click)=\"setSelectedCuenta(cta.numero)\">\n                {{cta.nombre}}\n            </button>\n            <button mat-raised-button type=\"button\" class=\"btnAccion\" (click)=\"nuevaCuenta()\" *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0 && +mesaEnUso.mesa.escallcenter === 0\">\n                Nueva\n            </button>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col m6 s12\" align=\"center\" style=\"padding: 0 !important;\">\n            <span class=\"bld\">Productos</span><br />\n            <mat-form-field class=\"fullWidth\" style=\"margin-left: 10px; margin-right: 10px;\" *ngIf=\"usaCodigoBarras\">\n                <input #txtCodigoBarras=\"matInput\" matInput cdkFocusInitial ngxBarCodePut type=\"text\" placeholder=\"Código\" name=\"codigoBarras\" [(ngModel)]=\"codigoBarras\" [ngModelOptions]=\"{standalone: true}\" (onDetected)=\"buscarArticulo()\">\n            </mat-form-field><br *ngIf=\"usaCodigoBarras\"/>\n            <ng-container *ngFor=\"let c of categorias\">\n                <button mat-raised-button class=\"btnAccion\" color=\"accent\" (click)=\"clickOnCategoria(c)\"\n                    [disabled]=\"!cuentaActiva || bloqueoBotones || !cuentaActiva.cuenta\" *ngIf=\"c.mostrarEnPos\">\n                    {{c.descripcion}}\n                </button>\n            </ng-container>\n        </div>\n        <div class=\"col m6 s12\" align=\"center\" style=\"padding: 0 !important;\">\n            <span class=\"bld\" *ngIf=\"cuentaActiva && cuentaActiva.nombre\">Cuenta de {{cuentaActiva.nombre}}</span>\n            <span class=\"bld\" *ngIf=\"!cuentaActiva || !cuentaActiva.nombre\">Por favor seleccione una cuenta. Gracias.</span>\n            <div align=\"center\">\n                <eco-fab-speed-dial direction=\"down\">\n                    <eco-fab-speed-dial-trigger>\n                        <button mat-fab color=\"warn\">\n                            <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_down</mat-icon>\n                        </button>\n                    </eco-fab-speed-dial-trigger>\n                    <eco-fab-speed-dial-actions>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"getNotasGenerales()\" [disabled]=\"bloqueoBotones\">\n                            Notas\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"validarImpresion()\" [disabled]=\"!cuentaActiva.nombre || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 0\">\n                            Comanda\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"printCuenta()\" [disabled]=\"!cuentaActiva.nombre || bloqueoBotones\"\n                            *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Cuenta\n                        </button>                        \n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"distribuirProductos()\" [disabled]=\"mesaEnUso.cuentas.length < 2 || bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Distribuir\n                        </button>                        \n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"unirCuentas()\" [disabled]=\"mesaEnUso.cuentas.length < 2 || bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Unir cuentas\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"cobrarCuenta()\" [disabled]=\"!cuentaActiva.nombre || esCajero() || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 0\">\n                            Cobrar cuenta\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"enviarPedido()\" [disabled]=\"!cuentaActiva.nombre || esCajero() || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 1\">\n                            Enviar pedido\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"trasladoMesa()\" [disabled]=\"bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Trasladar\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccionComanda\" (click)=\"cerrarMesa()\"\n                            *ngIf=\"mesaEnUso && lstProductosSeleccionados.length <= 0\">\n                            Cerrar {{+mesaEnUso.mesa.esmostrador === 0 ? 'Mesa' : (+mesaEnUso.mesa.escallcenter === 0 ? 'Mostrador' : 'Pedido')}}\n                        </button>\n                    </eco-fab-speed-dial-actions>\n                </eco-fab-speed-dial>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col m6 s12 mat-elevation-z3 colProductos\">\n            <!--<app-lista-producto (productoClickedEv)=\"addProductoSelected($event)\"></app-lista-producto>-->\n            <app-lista-producto-alt #appLstProdAlt (productoClickedEv)=\"agregarProductos($event)\"\n                (categoriasFilledEv)=\"setListaCategorias($event)\" [bloqueoBotones]=\"bloqueoBotones\">\n            </app-lista-producto-alt>\n        </div>\n        <div class=\"col m6 s12 mat-elevation-z3 colProductos\">\n            <app-lista-productos-comanda *ngIf=\"mesaEnUso && cuentaActiva\" [listaProductos]=\"lstProductosDeCuenta\" [noCuenta]=\"cuentaActiva && +cuentaActiva.numero ? +cuentaActiva.numero : 1\"\n                [IdComanda]=\"mesaEnUso.comanda\" [IdCuenta]=\"cuentaActiva.cuenta\" [bloqueoBotones]=\"bloqueoBotones\"\n                [mesaEnUso]=\"mesaEnUso\" (productoRemovedEv)=\"updProductosCuenta($event)\"></app-lista-productos-comanda>\n        </div>\n    </div>    \n</div>","import { Subject, from, fromEvent } from 'rxjs';\nimport { mergeMap, map, filter, debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxBarCodePutDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Input delay\n         */\n        this.debounce = 0;\n        /**\n         * After how many characters start search\n         */\n        this.skipStart = 0;\n        /**\n         * Data cleansing event\n         */\n        this.onDelete = new EventEmitter();\n        /**\n         * Event after data entry\n         */\n        this.onDetected = new EventEmitter();\n        /**\n         * Use for unsubscribe\n         */\n        this.destroy$ = new Subject();\n    }\n    ngAfterViewInit() {\n        /**\n         * Often the code scanner is connected to the computer.\n         * It emulates a press key, so we use keyboard events to press and release keys.\n         */\n        const events = ['keydown', 'keyup'];\n        /**\n         * Empty object for delay logic\n         */\n        const pressed = {};\n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/from.html}\n         */\n        from(events)\n            .pipe(\n        /**\n         * Look at the\n         * {@Link https://rxjs-dev.firebaseapp.com/api/operators/mergeMap}\n         */\n        mergeMap((event) => fromEvent(this.elementRef.nativeElement, event)), \n        /**\n         * Prepare input data\n         */\n        map((event) => {\n            switch (event.type) {\n                case 'keydown':\n                    /**\n                     * Since \"which\" is deprecated, we use it for a temporary variable\n                     * and set the processing time keydown.\n                     */\n                    pressed[event.which] = event.timeStamp;\n                    break;\n                case 'keyup':\n                    /**\n                     * In the delay set the difference between keydown and keyup events.\n                     */\n                    Object.assign(event, { duration: (event.timeStamp - pressed[event.which]) / 1000 });\n                    break;\n            }\n            /**\n             * @return {event: KeyboardEvent}\n             */\n            return event;\n        }), filter((event) => {\n            if (event.keyCode === 8 || event.code === 'Backspace' || event.which === 8) {\n                /**\n                 * Used to clear data.\n                 */\n                this.onDelete.emit({ event, value: event.target.value, type: 'delete' });\n            }\n            /**\n             * Return data after typed in two characters.\n             */\n            return event.target.value.length > this.skipStart;\n        }), \n        /**\n         * Data entry delay is used to limit requests.\n         */\n        debounceTime(this.debounce), \n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/distinct.html}\n         */\n        distinctUntilChanged())\n            /**\n             * Use for unsubscribe\n             */\n            .pipe(takeUntil(this.destroy$))\n            /**\n             * Subscribe to the input data and determine the delay time for our purposes.\n             */\n            .subscribe((event) => {\n            if (event.duration > 0.02) {\n                /**\n                 * Keyboard input.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'keyboard' });\n            }\n            else if (event.duration <= 0.02) {\n                /**\n                 * Input from the scanner.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'scanner' });\n            }\n        });\n    }\n    /**\n     * Use for unsubscribe\n     */\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\nNgxBarCodePutDirective.ɵfac = function NgxBarCodePutDirective_Factory(t) { return new (t || NgxBarCodePutDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgxBarCodePutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxBarCodePutDirective, selectors: [[\"\", \"ngxBarCodePut\", \"\"]], inputs: { debounce: \"debounce\", skipStart: \"skipStart\" }, outputs: { onDelete: \"onDelete\", onDetected: \"onDetected\" } });\nNgxBarCodePutDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgxBarCodePutDirective.propDecorators = {\n    debounce: [{ type: Input }],\n    skipStart: [{ type: Input }],\n    onDelete: [{ type: Output }],\n    onDetected: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxBarCodePut]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { debounce: [{\n            type: Input\n        }], skipStart: [{\n            type: Input\n        }], onDelete: [{\n            type: Output\n        }], onDetected: [{\n            type: Output\n        }] }); })();\n\nclass NgxBarCodePutModule {\n}\nNgxBarCodePutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxBarCodePutModule });\nNgxBarCodePutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxBarCodePutModule_Factory(t) { return new (t || NgxBarCodePutModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxBarCodePutModule, { declarations: [NgxBarCodePutDirective], exports: [NgxBarCodePutDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxBarCodePutDirective],\n                exports: [NgxBarCodePutDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-barcodeput\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxBarCodePutDirective, NgxBarCodePutModule };\n\n//# sourceMappingURL=ngx-barcodeput.js.map","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-header>\n        <mat-card-title>Reporte de ventas</mat-card-title>\n        <mat-card-subtitle>\n            Por categoría<br />\n            Del {{params.fdel | date:'dd/MM/yyyy'}} al {{params.fal | date:'dd/MM/yyyy'}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Porcentaje</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Precio unitario</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let cat of data\">\n                    <ng-container *ngIf=\"cat.subcategoria.length > 0\">\n                        <tr>\n                            <th colspan=\"5\">{{cat.descripcion}}</th>\n                        </tr>\n                        <!-- Inicio de contenedor de subcategorias -->\n                        <ng-container *ngFor=\"let subcat of cat.subcategoria\">\n                            <ng-container *ngIf=\"subcat.articulos.length > 0\">\n                                <tr>\n                                    <th class=\"tab\" colspan=\"5\">{{subcat.descripcion}}</th>\n                                </tr>\n                                <!-- Inicio de contenedor de artículos -->\n                                <ng-container *ngFor=\"let art of subcat.articulos\">\n                                    <tr>\n                                        <td class=\"doubleTab brdBSingle\">{{art.descripcion}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.porcentaje | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.precio_unitario | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                                    </tr>\n                                </ng-container>\n                                <!-- Fin de contenedor de artículos -->\n                                <tr>\n                                    <th class=\"rtxt\" colspan=\"4\">Total de subcategoría:</th>\n                                    <th class=\"rtxt brdTSingleBDouble numWidth\">{{subcat.total | number:'1.2-2'}}</th>\n                                </tr>\n                            </ng-container>\n                        </ng-container>\n                        <!-- Fin de contenedor de subcategorias -->\n                    </ng-container>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n    <!--\n    <mat-card-footer>\n    </mat-card-footer>\n    -->\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { PorCategoria } from '../../../../interfaces/reporte-ventas';\n\n@Component({\n  selector: 'app-por-categoria',\n  templateUrl: './por-categoria.component.html',\n  styleUrls: ['./por-categoria.component.css']\n})\nexport class PorCategoriaComponent implements OnInit {\n\n  @Input() params: any = {};\n  @Input() data: PorCategoria[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ccGeneral, ccDetalle, ccTipo, ccNominacion } from '../../../interfaces/cajacorte';\nimport { CajacorteService } from '../../../services/cajacorte.service';\n\n@Component({\n  selector: 'app-cajacorte-form',\n  templateUrl: './cajacorte-form.component.html',\n  styleUrls: ['./cajacorte-form.component.css']\n})\nexport class CajacorteFormComponent implements OnInit {\n\n  @Input() ccorte: ccGeneral;\n  @Output() cajacorteSavedEv = new EventEmitter();\n  public ccorteTipo: ccTipo[] = [];\n  public ccorteNomi: ccNominacion[] = [];\n\n  public detalle = {\n    caja_corte_detalle: 0,\n    caja_corte: 0,\n    cantidad: 0,\n    total: 0,\n    anulado: 0,\n    caja_corte_nominacion: 0,\n    nombre: null\n  };\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    private cajacorteSrvc: CajacorteService\n  ) {}\n\n  ngOnInit() {\n    this.getCajaCorteTipo();\n    this.getCajaCorteNominacion();\n  }\n\n  getCajaCorteTipo = () => {\n    this.cajacorteSrvc.getCajaCorteTipo().subscribe(res => {\n      this.ccorteTipo = res;\n    });\n  }\n\n  getCajaCorteNominacion = () => {\n    this.cajacorteSrvc.getCajaCorteNominacion().subscribe(res => {\n      this.ccorteNomi = res;\n    });\n  }\n\n  setTotal = () => {\n    if (this.detalle.caja_corte_nominacion) {\n      let tmp = this.ccorteNomi.filter(o => {\n        return o.caja_corte_nominacion == this.detalle.caja_corte_nominacion;\n      })[0];\n\n      if (tmp.calcula == 1) {\n        this.detalle.total = this.detalle.cantidad*tmp.valor;\n      } else {\n        this.detalle.total = this.detalle.cantidad;\n      }\n    }\n  }\n\n  setNamenomi = () => {\n    let tmp = this.ccorteNomi.filter(o => {\n      return o.caja_corte_nominacion == this.detalle.caja_corte_nominacion;\n    })[0];\n    console.log(tmp,  this.detalle.caja_corte_nominacion);\n    this.detalle.nombre = tmp.nombre;\n  }\n\n  setNameTipo = () => {\n    let tmp = this.ccorteTipo.filter(o => {\n      return o.caja_corte_tipo == this.ccorte.caja_corte_tipo;\n    })[0];\n    console.log(tmp, this.ccorte.caja_corte_tipo);\n\n    this.ccorte.descripcion = tmp.descripcion;\n  }\n\n  reseteGeneral = () => this.ccorte = {\n    caja_corte: 0,\n    creacion: null,\n    usuario: 0,\n    turno: 0,\n    confirmado: null,\n    anulado: 0,\n    caja_corte_tipo: 0,\n    descripcion: null,\n    detalle: []\n  }\n\n  resetDetalle = () => this.detalle = {\n    caja_corte_detalle: 0,\n    caja_corte: 0,\n    cantidad: 0,\n    total: 0,\n    anulado: 0,\n    caja_corte_nominacion: 0,\n    nombre: null\n  }\n\n  agregarDetalle = () => {\n    if (this.detalle.caja_corte_nominacion && \n      this.detalle.cantidad &&\n      this.detalle.total) {\n\n      this.ccorte.detalle.push(this.detalle);\n      this.resetDetalle();\n    } else {\n      this._snackBar.open(`Complete los datos de nominaciones`, 'Corte de caja', { duration: 3000 });\n    }\n  }\n\n  guardar = () => {\n    if (confirm('¿Está seguro?')) {\n\n      if (this.ccorte.detalle.length == 0) {\n        this._snackBar.open(`Por favor agregue las nominaciones`, 'Corte de caja', { duration: 3000 });\n        return false;\n      }\n\n      if (!this.ccorte.caja_corte_tipo) {\n        this._snackBar.open(`Seleccione el tipo de corte de caja.`, 'Corte de caja', { duration: 3000 });\n        return false;\n      }\n\n      this.cajacorteSrvc.guardar(this.ccorte).subscribe(res => {\n        if (res.exito) {\n          this.cajacorteSavedEv.emit();\n          this.reseteGeneral();\n        }\n        this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n      });\n    }\n  }\n\n  anularCajaDetalle = (obj: ccDetalle) => {\n    if (confirm('¿Está seguro.?')) {\n      if (obj.caja_corte_detalle) {\n        this.cajacorteSrvc.anularDetalle(obj).subscribe(res => {\n          if (res.exito) {\n            let key = this.ccorte.detalle.indexOf(obj);\n            this.ccorte.detalle.splice(key,1);\n          }\n          this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n        });\n      } else {\n        let key = this.ccorte.detalle.indexOf(obj);\n        this.ccorte.detalle.splice(key,1);\n      }\n    }\n  }\n}\n    \n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n  <mat-card-title>\n    <h5>Corte de caja</h5>\n  </mat-card-title>\n  <mat-card-content>\n    <form #frmcc=\"ngForm\" (ngSubmit)=\"frmcc.form.valid && guardar()\" novalidate>\n      <mat-form-field class=\"fullWidth\">\n        <mat-label>Tipo de Corte</mat-label>\n        <mat-select name=\"tipo\" [(ngModel)]=\"ccorte.caja_corte_tipo\" (selectionChange)=\"setNameTipo()\" required>\n          <mat-option *ngFor=\"let m of ccorteTipo\" [value]=\"m.caja_corte_tipo\">\n            {{m.descripcion}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <p>Agregar nominaciones</p>\n      <div class=\"example-container\">\n        <mat-form-field>\n          <mat-label>Nominación:</mat-label>\n          <mat-select name=\"nominacion\" [(ngModel)]=\"detalle.caja_corte_nominacion\" (selectionChange)=\"setNamenomi()\">\n            <mat-option *ngFor=\"let m of ccorteNomi\" [value]=\"m.caja_corte_nominacion\">\n              {{m.nombre}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Cantidad:</mat-label>\n          <input matInput type=\"number\" step=\"0.01\" name=\"cantidad\" [(ngModel)]=\"detalle.cantidad\" (blur)=\"setTotal()\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Total:</mat-label>\n          <input matInput type=\"number\" step=\"0.01\" name=\"total\" [(ngModel)]=\"detalle.total\" readonly>\n        </mat-form-field>\n        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"agregarDetalle()\" title=\"Agregar el detalle\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <mat-grid-list cols=\"4\" rowHeight=\"7:1\">\n        <mat-grid-tile><b>Nominación</b></mat-grid-tile>\n        <mat-grid-tile><b>Cantidad</b></mat-grid-tile>\n        <mat-grid-tile><b>Total</b></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n\n      <mat-grid-list *ngFor=\"let m of ccorte.detalle\" cols=\"4\" rowHeight=\"7:1\">\n        <mat-grid-tile>{{ m.nombre }}</mat-grid-tile>\n        <mat-grid-tile>{{ m.cantidad }}</mat-grid-tile>\n        <mat-grid-tile>{{ m.total }}</mat-grid-tile>\n        <mat-grid-tile>\n          <mat-icon class=\"anulacion\" (click)=\"anularCajaDetalle(m)\" mat-list-icon>close</mat-icon>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <hr>\n      <div align=\"end\">\n        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"reseteGeneral()\" *ngIf=\"ccorte.caja_corte\">\n          <mat-icon>add</mat-icon>\n        </button>\n        <button mat-icon-button type=\"submit\" color=\"accent\" [disabled]=\"!frmcc.form.valid\" title=\"Guardar corte de caja\">\n          <mat-icon>save</mat-icon>\n        </button>\n      </div>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport * as moment from 'moment';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { DesktopNotificationService } from '../../../shared/services/desktop-notification.service';\r\n\r\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { FacturaService } from '../../../pos/services/factura.service';\r\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { OrdenGkService } from '../../../ghost-kitchen/services/orden-gk.service';\r\n\r\n@Component({\r\n  selector: 'app-comanda-en-linea',\r\n  templateUrl: './comanda-en-linea.component.html',\r\n  styleUrls: ['./comanda-en-linea.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ])\r\n  ]\r\n})\r\nexport class ComandaEnLineaComponent implements OnInit, OnDestroy {\r\n\r\n  public dataSource: any[] = [];\r\n  public columnsToDisplay = ['comanda', 'orden', 'fechahora', 'nombre', 'total', 'imprimir', 'cancelar', 'facturar'];\r\n  public expandedElement: any | null;\r\n  public comandasEnLinea: any[] = [];\r\n  // public intervalId: any;\r\n  public params: any = { de: 0, a: 99 };\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private socket: Socket,\r\n    private ls: LocalstorageService,\r\n    private comandaSrvc: ComandaService,\r\n    private facturaSrvc: FacturaService,\r\n    private dns: DesktopNotificationService,\r\n    private pdfServicio: ReportePdfService,\r\n    private configSrvc: ConfiguracionService,\r\n    private ordenGkSrvc: OrdenGkService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n\r\n      this.socket.on('shopify:updlist', (obj: any = null) => {\r\n        if (obj && obj.corporacion) {\r\n          const suuid = this.ls.get(GLOBAL.usrTokenVar).sede_uuid;\r\n          if (suuid.indexOf(obj.corporacion) > -1) {\r\n            this.loadComandasEnLinea();\r\n            this.notificarUsuario();\r\n          }\r\n        } else {\r\n          this.loadComandasEnLinea();\r\n          this.notificarUsuario();\r\n        }\r\n      });\r\n\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n\r\n      this.socket.on('connect_timeout', () => {\r\n        const msg = 'DESCONECTADO DEL SERVIDOR (TIMEOUT)';\r\n        this.snackBar.open(msg, 'ERROR', { duration: 5000 });\r\n        this.avisoSocketIOEvent(msg);\r\n      });\r\n\r\n      // this.socket.on('pong', (ms: number) => this.snackBar.open(`PONG: ${ms}ms`, 'Pong', { duration: 5000 }));\r\n\r\n      this.socket.on(\r\n        'reconnect_attempt',\r\n        (attempt: number) => this.snackBar.open(`INTENTO DE RECONEXIÓN #${attempt}`, 'ERROR', { duration: 10000 })\r\n      );\r\n\r\n      this.socket.on('shopify:error', (mensaje: string) => {\r\n        this.loadComandasEnLinea();\r\n        this.snackBar.open(`ERROR: ${mensaje}`, 'Firmar', { duration: 10000 });\r\n      });\r\n    }\r\n\r\n    this.loadComandasEnLinea();\r\n  }\r\n\r\n  avisoSocketIOEvent = (aviso: string = '') => {\r\n    const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel('Socket.IO', aviso, 'Aceptar', 'Cancelar')\r\n    });\r\n\r\n    confirmRef.afterClosed().subscribe((confirma: boolean) => { });\r\n  }\r\n\r\n  notificarUsuario = () => {\r\n    const opciones: NotificationOptions = {\r\n      icon: 'assets/img/minilogo.png',\r\n      body: `Se recibió una nueva orden a las ${moment().format(GLOBAL.dateTimeFormat)}.`,\r\n      dir: 'auto'\r\n    };\r\n    this.dns.createNotification('Rest-Touch Pro', 10000, opciones);\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n  loadComandasEnLinea = () => {\r\n    this.comandaSrvc.getComandasOnLIne().subscribe((res: any[]) => {\r\n      /*this.comandasEnLinea = res.map(cel => {\r\n        cel.fhcreacion = moment.utc(cel.fhcreacion).local().format(GLOBAL.dbDateTimeFormat);\r\n        return cel;\r\n      });*/\r\n      this.comandasEnLinea = res;\r\n      this.dataSource = this.comandasEnLinea;\r\n    });\r\n  }\r\n\r\n  setToPrint = (articulos: any[]) => {\r\n    const lstArticulos: any[] = [];\r\n    articulos.forEach(item => {\r\n      lstArticulos.push({\r\n        id: +item.articulo.articulo,\r\n        nombre: item.articulo.descripcion,\r\n        cantidad: +item.cantidad,\r\n        total: +item.total,\r\n        notas: item.notas || '',\r\n        impresora: {\r\n          bluetooth: +item.articulo.impresora.bluetooth,\r\n          direccion_ip: item.articulo.impresora.direccion_ip || '',\r\n          impresora: +item.articulo.impresora.impresora,\r\n          nombre: item.articulo.impresora.nombre || '',\r\n          sede: +item.articulo.impresora.sede,\r\n          ubicacion: item.articulo.impresora.ubicacion || ''\r\n        },\r\n        detalle: item.detalle\r\n      });\r\n    });\r\n    return lstArticulos;\r\n  }\r\n\r\n  getPdf = (obj: any) => {\r\n    const noCuenta = +obj.cuentas[0].cuenta;\r\n    this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/pdf' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n      } else {\r\n        this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  imprimir = (obj: any, idx: number = 0) => {\r\n    // console.log(obj); // return;\r\n    const listaProductos = this.setToPrint(obj.cuentas[0].productos);\r\n    const AImpresoraNormal: ProductoSelected[] = listaProductos.filter(p => +p.impresora.bluetooth === 0);\r\n    const AImpresoraBT: ProductoSelected[] = listaProductos.filter(p => +p.impresora.bluetooth === 1);\r\n\r\n    let objToPrint = {};\r\n\r\n    if (AImpresoraNormal.length > 0) {\r\n      // console.log(AImpresoraNormal);\r\n      objToPrint = {\r\n        Indice: (idx + 1),\r\n        Tipo: 'Comanda',\r\n        Nombre: obj.cuentas[0].nombre,\r\n        Numero: obj.comanda,\r\n        NoOrdenEnLinea: obj.origen_datos.numero_orden,\r\n        DireccionEntrega: obj.origen_datos.direccion_entrega,\r\n        DetalleCuenta: AImpresoraNormal,\r\n        Total: 0.00,\r\n        NotasGenerales: obj.notas_generales || ''\r\n      };\r\n      // console.log('STRING (IN) = ', JSON.stringify(objToPrint));\r\n      // console.log('OBJETO (IN) = ', objToPrint);\r\n      this.socket.emit('print:comanda', `${JSON.stringify(objToPrint)}`);\r\n    }\r\n\r\n    if (AImpresoraBT.length > 0) {\r\n      objToPrint = {\r\n        Tipo: 'Comanda',\r\n        Nombre: obj.cuentas[0].nombre,\r\n        Numero: obj.comanda,\r\n        NoOrdenEnLinea: obj.origen_datos.numero_orden,\r\n        DireccionEntrega: obj.origen_datos.direccion_entrega,\r\n        DetalleCuenta: AImpresoraBT,\r\n        Total: 0.00\r\n      };\r\n      // console.log('STRING (BT) = ', JSON.stringify(objToPrint));\r\n      // console.log('OBJETO (BT) = ', objToPrint);\r\n      this.printToBT(JSON.stringify(objToPrint));\r\n    }   \r\n\r\n    if (+obj.orden_gk > 0) {      \r\n      const params = {\r\n        orden_gk: +obj.orden_gk,\r\n        estatus_orden_gk: 5,\r\n        sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n        comentario: `Se mandó a imprimir la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n      };\r\n      this.cambiarEstatusOrdenGK(params);\r\n    }\r\n  }\r\n\r\n  printToBT = (msgToPrint: string = '') => {\r\n    const AppHref = `com.restouch.impresion://impresion/${msgToPrint}`;\r\n    const wref = window.open(AppHref, 'PrntBT', 'height=200,width=200,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n    setTimeout(() => wref.close(), 1000);\r\n  }\r\n\r\n  firmar = (obj: any) => {\r\n    // console.log(obj);\r\n    this.facturaSrvc.firmar(+obj.factura.factura).subscribe((res: any) => {\r\n      // console.log(res);\r\n      if (res.exito) {\r\n        this.loadComandasEnLinea();\r\n\r\n        if (+obj.orden_gk > 0) {\r\n          const params = {\r\n            orden_gk: +obj.orden_gk,\r\n            estatus_orden_gk: 6,\r\n            sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n            comentario: `Se firmó la factura de la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n          };\r\n          this.cambiarEstatusOrdenGK(params);\r\n        }\r\n\r\n        const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n          maxWidth: '400px',\r\n          data: new ConfirmDialogModel('Imprimir factura', '¿Desea imprimir la factura?', 'Sí', 'No')\r\n        });\r\n\r\n        confirmRef.afterClosed().subscribe((confirma: boolean) => {\r\n          if (confirma) {\r\n            const modoFactura = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_FACTURA) || 1;\r\n            // console.log(`MODO FACTURA = ${modoFactura}`);\r\n            if (modoFactura === 1) {\r\n              this.printFactura(res.factura, obj.origen_datos);\r\n            } else {\r\n              this.representacionGrafica(+obj.factura.factura);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      this.snackBar.open(res.mensaje, 'Facturación', { duration: (res.exito ? 3000 : 10000) });\r\n    });\r\n  }\r\n\r\n  printFactura = (fact: any, datosOrigen: any = {}) => {\r\n    const dataToPrint = {\r\n      NombreEmpresa: fact.empresa.nombre_comercial,\r\n      NitEmpresa: fact.empresa.nit,\r\n      SedeEmpresa: fact.sedeFactura.nombre,\r\n      DireccionEmpresa: fact.empresa.direccion,\r\n      Fecha: moment(fact.fecha_factura).format(GLOBAL.dateFormat),\r\n      Nit: fact.receptor.nit,\r\n      Nombre: fact.receptor.nombre,\r\n      Direccion: fact.receptor.direccion,\r\n      Serie: fact.serie_factura,\r\n      Numero: fact.numero_factura,\r\n      Total: 0.00,\r\n      NoAutorizacion: fact.fel_uuid,\r\n      NombreCertificador: fact.certificador_fel.nombre,\r\n      NitCertificador: fact.certificador_fel.nit,\r\n      FechaDeAutorizacion: fact.fecha_autorizacion,\r\n      NoOrdenEnLinea: datosOrigen.numero_orden,\r\n      FormaDePago: (datosOrigen.metodo_pago && datosOrigen.metodo_pago.length > 0) ? datosOrigen.metodo_pago.join(', ') : '',\r\n      DetalleFactura: []\r\n    };\r\n\r\n    for (const det of fact.detalle) {\r\n      dataToPrint.DetalleFactura.push({\r\n        Cantidad: parseInt(det.cantidad),\r\n        Descripcion: det.articulo.descripcion,\r\n        Total: parseFloat(det.total),\r\n        PrecioUnitario: +det.precio_unitario\r\n      });\r\n      dataToPrint.Total += parseFloat(det.total);\r\n    }\r\n\r\n    this.socket.emit('print:factura', JSON.stringify(dataToPrint));\r\n  }\r\n\r\n  representacionGrafica = (idfactura: number) => {\r\n    this.facturaSrvc.getGrafo(idfactura).subscribe(res => {\r\n      if (res.exito) {\r\n        switch (res.tipo) {\r\n          case 'link': this.openLinkWindow(res.documento); break;\r\n          case 'pdf': this.openPdfDocument(res.documento); break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openLinkWindow = (url: string) =>\r\n    window.open(url, 'winFactPdf', 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no')\r\n\r\n  openPdfDocument = (pdf: string) => {\r\n    const pdfWindow = window.open('', 'winFactPdf', 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n    pdfWindow.document.write(\r\n      '<iframe width=\"100%\" style=\"margin: -8px;border: none;\" height=\"100%\" src=\"data:application/pdf;base64, ' +\r\n      encodeURI(pdf) +\r\n      '\"></iframe>');\r\n  }\r\n\r\n  imprimirLote = () => {\r\n    for (let i = this.params.de; i <= this.params.a; i++) {\r\n      this.imprimir(this.comandasEnLinea[i], i);\r\n    }\r\n  }\r\n\r\n  cancelarPedido = (obj: any) => {\r\n    // console.log(obj);\r\n\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel(\r\n        'Cancelar pedido',\r\n        'Si cancela el pedido, será necesario volver a ingresarlo. ¿Desea continuar?',\r\n        'Sí',\r\n        'No',\r\n        {\r\n          input: [\r\n            {\r\n              select: false,\r\n              label: 'Comentario',\r\n              valor: null,\r\n              id: 'comentario',\r\n              requerido: false\r\n            }\r\n          ]\r\n        }\r\n      )\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res.resultado) {\r\n        const params = {};\r\n\r\n        for (const input of res.config.input) {\r\n          params[input.id] = input.valor;\r\n        }\r\n\r\n        this.comandaSrvc.cancelarPedido(obj.comanda, params).subscribe(resAnula => {\r\n          if (resAnula.exito) {\r\n\r\n            if (+obj.orden_gk > 0) {\r\n              const params = {\r\n                orden_gk: +obj.orden_gk,\r\n                estatus_orden_gk: 2,\r\n                sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n                comentario: `Se canceló la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n              };\r\n              this.cambiarEstatusOrdenGK(params);\r\n            }\r\n\r\n            this.snackBar.open('Pedido cancelado con éxito...', 'Pedido', { duration: 3000 });\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${resAnula.mensaje}`, 'Pedido', { duration: 7000 });\r\n          }\r\n          this.loadComandasEnLinea();\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  cambiarEstatusOrdenGK = (params: any) => {    \r\n    this.ordenGkSrvc.cambiarEstatus(params).subscribe(res => {\r\n      if (res.exito) {        \r\n        this.socket.emit('gk:updEstatusOrden', `${JSON.stringify({ orden_gk: params.orden_gk, estatus_orden_gk: res.estatus_orden_gk, sede_uuid: this.ls.get(GLOBAL.usrTokenVar).sede_uuid })}`);\r\n      } else {\r\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Orden de Ghost Kitchen', { duration: 7000 });          \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!--\n<div class=\"row\">\n    <div class=\"col m12 s12\" align=\"center\">\n        <mat-form-field class=\"btnAccion\">\n            <input type=\"number\" matInput placeholder=\"De\" name=\"de\" [(ngModel)]=\"params.de\" required>\n        </mat-form-field>\n        <mat-form-field class=\"btnAccion\">\n            <input type=\"number\" matInput placeholder=\"A\" name=\"a\" [(ngModel)]=\"params.a\" required>\n        </mat-form-field>\n        <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"imprimirLote()\">\n            Imprimir\n        </button>\n    </div>\n</div>\n-->\n<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"comanda\">\n                <th mat-header-cell *matHeaderCellDef>No.</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.comanda}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"orden\">\n                <th mat-header-cell *matHeaderCellDef>Orden</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.origen_datos.numero_orden || ''}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"fechahora\">\n                <th mat-header-cell *matHeaderCellDef>Fecha/Hora</th>\n                <td mat-cell *matCellDef=\"let element\">{{(element.fhcreacion | date:'dd/MM/yyyy HH:mm:ss') || ''}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef>Cliente</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.cuentas[0].nombre}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef>Total</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.total | number: '1.2-2'}}</td>\n            </ng-container>\n            <!--\n            <ng-container matColumnDef=\"pdf\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">PDF</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"getPdf(element)\">\n                        PDF\n                    </button>\n                </td>\n            </ng-container>\n            -->\n            <ng-container matColumnDef=\"imprimir\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Imprimir</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"imprimir(element)\">\n                        Imprimir\n                    </button>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"cancelar\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Cancelar</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\"\n                        (click)=\"cancelarPedido(element)\">\n                        Cancelar\n                    </button>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"facturar\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Facturar</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"firmar(element)\">\n                        Facturar\n                    </button>\n                </td>\n            </ng-container>\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n                <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                    <div class=\"example-element-detail\"\n                        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                        <table style=\"width: 75%; background-color:#f5f5f5; table-layout: fixed;\">\n                            <caption>\n                                <h5>Detalle del pedido #{{element.comanda}}</h5>\n                                <h6 *ngIf=\"element.origen_datos.numero_orden\">Orden #{{element.origen_datos.numero_orden}}</h6>                                \n                            </caption>\n                            <thead>\n                                <th>Producto</th>\n                                <!--<th class=\"rtxt\">Precio</th>-->\n                                <th class=\"rtxt\">Total</th>\n                            </thead>\n                            <tbody>\n                                <tr *ngIf=\"element.notas_generales\">\n                                    <td colspan=\"2\">\n                                        <p class=\"long-notes\">{{element.notas_generales}}</p>\n                                    </td>\n                                </tr>\n                                <ng-container *ngFor=\"let det of element.cuentas[0].productos\">\n                                    <tr>\n                                        <td>\n                                            {{det.cantidad}} {{det.articulo.descripcion}}<br *ngIf=\"det.notas.length > 0\"/>\n                                            <span *ngIf=\"det.notas.length > 0\">&nbsp;&nbsp;&nbsp;{{det.notas}}</span>\n                                        </td>\n                                        <!--<td class=\"rtxt\">{{det.precio | number: '1.2-2'}}</td>-->\n                                        <td class=\"rtxt\">{{ ((+det.precio * +det.cantidad) + +det.monto_extra) | number: '1.2-2'}}</td>\n                                    </tr>\n                                    <ng-container *ngFor=\"let dc of det.detalle\">\n                                        <tr *ngIf=\"dc.length > 0\">\n                                            <td colspan=\"2\" class=\"tabulador-doble\">\n                                                {{dc}}\n                                            </td>\n                                        </tr>\n                                    </ng-container>                                    \n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n                [class.example-expanded-row]=\"expandedElement === element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { ConfiguracionFechas, ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-turnos',\n  templateUrl: './turnos.component.html',\n  styleUrls: ['./turnos.component.css']\n})\nexport class TurnosComponent implements OnInit {\n\n  public params: any = {};\n  public configParams: ConfiguracionFechas = {\n    isRequiredFDel: true, isRequiredFAl: true\n  };\n  public configBotones: ConfiguracionBotones = {\n    isHtmlDisabled: false, isPdfDisabled: false, isExcelDisabled: false\n  };\n  public cargando = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.resetParams();\n  }\n\n  resetParams = () => {\n    this.params = {\n      fdel: moment().startOf('week').format(GLOBAL.dbDateFormat),\n      fal: moment().endOf('week').format(GLOBAL.dbDateFormat)\n    };\n    // console.log(this.params);\n  }\n\n  getReporte = () => {\n    console.log('GENERANDO CON PARAMETROS = ', this.params);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Reporte de Turnos</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <app-rpt-fechas [(fdel)]=\"params.fdel\" [(fal)]=\"params.fal\" [configuracion]=\"configParams\"></app-rpt-fechas>\n                    <app-rpt-botones\n                        [configuracion]=\"configBotones\"\n                        (htmlClick)=\"getReporte()\"\n                        (pdfClick)=\"getReporte()\"\n                        (excelClick)=\"getReporte()\"\n                        (resetParamsClick)=\"resetParams()\">\n                    </app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>                \n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { Turno } from '../../../interfaces/turno';\nimport { TurnoService } from '../../../services/turno.service';\n\n@Component({\n  selector: 'app-lista-turno',\n  templateUrl: './lista-turno.component.html',\n  styleUrls: ['./lista-turno.component.css']\n})\nexport class ListaTurnoComponent implements OnInit {\n\n  public lstTurnos: Turno[];\n  public lstTurnosPaged: Turno[];\n  @Output() getTurnoEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    private ls: LocalstorageService,\n    private turnoSrvc: TurnoService\n  ) { }\n\n  ngOnInit() {\n    this.loadTurnos();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstTurnos, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstTurnosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstTurnos.length;\n      this.lstTurnosPaged = PaginarArray(this.lstTurnos, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadTurnos = () => {\n    this.turnoSrvc.get({sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0)}).subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstTurnos = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getTurno = (obj: any) => {\n    this.getTurnoEv.emit({\n      turno: obj.turno,\n      turno_tipo: obj.turno_tipo.turno_tipo,\n      fecha: obj.fecha,\n      inicio: obj.inicio,\n      fin: obj.fin\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstTurnosPaged\" (click)=\"getTurno(element)\">\n                <mat-icon mat-list-icon>schedule</mat-icon>\n                <h5 mat-line>Inicio: {{element.inicio | date: 'dd/MM/yyyy HH:mm:ss'}}</h5><br/>\n                <p mat-line>\n                    Fin: {{element.fin | date: 'dd/MM/yyyy HH:mm:ss'}}\n                </p>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { EventEmitter } from '@angular/core';\r\nimport { WindowConfiguration } from '../../shared/interfaces/window-configuration';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\n\r\nimport { UnirCuentaComponent } from '../components/unir-cuenta/unir-cuenta.component';\r\nimport { TrasladoMesaComponent } from '../components/traslado-mesa/traslado-mesa.component';\r\nimport { CobrarPedidoComponent } from '../../pos/components/cobrar-pedido/cobrar-pedido.component';\r\nimport { ListaProductoAltComponent } from '../../wms/components/producto/lista-producto-alt/lista-producto-alt.component';\r\nimport { ConfirmDialogModel, DialogPedidoComponent } from '../../shared/components/dialog-pedido/dialog-pedido.component';\r\nimport { ConfirmDialogComboModel, DialogComboComponent } from '../../shared/components/dialog-combo/dialog-combo.component';\r\nimport { NotasGeneralesComandaComponent } from '../components/notas-generales-comanda/notas-generales-comanda.component';\r\nimport { NuevaCuentaComponent } from '../components/nueva-cuenta/nueva-cuenta.component';\r\nimport { DistribuirProductosCuentasComponent } from '../components/distribuir-productos-cuentas/distribuir-productos-cuentas.component';\r\nimport { TranComandaAltComponent } from '../components/tran-comanda-alt/tran-comanda-alt.component';\r\n\r\nimport { Cuenta } from '../interfaces/cuenta';\r\nimport { Comanda, ComandaGetResponse } from '../interfaces/comanda';\r\nimport { DetalleComanda } from '../interfaces/detalle-comanda';\r\nimport { Articulo, ArbolArticulos, ProductoSelected, NodoProducto } from '../../wms/interfaces/articulo';\r\nimport { ArticuloService } from '../../wms/services/articulo.service';\r\n\r\nimport { ComandaService } from '../services/comanda.service';\r\nimport { ReportePdfService } from '../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../admin/interfaces/cliente';\r\nimport { Categoria } from '../../wms/interfaces/categoria';\r\n\r\nimport { AccionesComandaComponent } from '../components/acciones-comanda/acciones-comanda.component';\r\nimport { Base64 } from 'js-base64';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport class TranComanda {\r\n    public mesaEnUso: ComandaGetResponse;\r\n    public clientePedido: Cliente = null;\r\n    public closeSideNavEv = new EventEmitter();\r\n    public appLstProdAlt: ListaProductoAltComponent;\r\n    public mesaSavedEv = new EventEmitter();\r\n    public txtCodigoBarras: MatInput;\r\n\r\n    public lstProductosSeleccionados: ProductoSelected[];\r\n    public lstProductosDeCuenta: ProductoSelected[];\r\n    public lstProductosAImprimir: ProductoSelected[];\r\n    public showPortalComanda = false;\r\n    public showPortalCuenta = false;\r\n    public windowConfig: WindowConfiguration;\r\n    public noComanda = 0;\r\n    public sumCuenta = 0;\r\n    public cuentaActiva: Cuenta;\r\n    public detalleComanda: DetalleComanda;\r\n    public categorias: (ArbolArticulos[] | Categoria[]) = [];\r\n    public bloqueoBotones = false;\r\n    public rolesUsuario: string[] = [];\r\n    public impreso = 0;\r\n    public usaCodigoBarras = false;\r\n    public codigoBarras: string = null;\r\n    public imprimeRecetaEnComanda = true;\r\n\r\n    protected endSubs = new Subscription();\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        protected snackBar: MatSnackBar,\r\n        public comandaSrvc: ComandaService,\r\n        protected socket: Socket,\r\n        protected ls: LocalstorageService,\r\n        protected pdfServicio: ReportePdfService,\r\n        protected configSrvc: ConfiguracionService,\r\n        protected articuloSrvc: ArticuloService,\r\n        protected bsAccionesCmd: MatBottomSheet\r\n    ) { }\r\n\r\n    alIniciar = () => {\r\n        // this.resetMesaEnUso();\r\n        this.resetLstProductosSeleccionados();\r\n        this.resetLstProductosDeCuenta();\r\n        this.resetCuentaActiva();\r\n        this.impreso = 0;\r\n        this.noComanda = this.mesaEnUso.comanda || 0;\r\n        this.llenaProductosSeleccionados();\r\n        if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n            this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n            this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n        }\r\n        this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\r\n        this.imprimeRecetaEnComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_RECETA_EN_COMANDA);\r\n        // console.log('MESA EN USO = ', this.mesaEnUso);\r\n    }\r\n\r\n    resetMesaEnUso = () => this.mesaEnUso = {\r\n        exito: true,\r\n        comanda: null, usuario: null, sede: null, estatus: null,\r\n        mesa: {\r\n            mesa: null,\r\n            area: { area: null, sede: null, area_padre: null, nombre: null },\r\n            numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n        },\r\n        numero_pedido: null,\r\n        cuentas: []\r\n    }\r\n    resetLstProductosSeleccionados = () => this.lstProductosSeleccionados = [];\r\n    resetLstProductosDeCuenta = () => this.lstProductosDeCuenta = [];\r\n    resetCuentaActiva = () => this.cuentaActiva = { cuenta: null, numero: null, nombre: null, productos: [] };\r\n    resetListadoArticulos = () => this.appLstProdAlt.loadArbolArticulos();\r\n\r\n    setListaCategorias = (cats: ArbolArticulos[] = []) => this.categorias = this.setVerBotones(cats);\r\n\r\n    setVerBotones = (cats: ArbolArticulos[]) => {\r\n        for (const cat of cats) {\r\n            loopSubCategoria:\r\n            for (const subcat of cat.categoria_grupo) {\r\n                for (const art of subcat.articulo) {\r\n                    if (+art.mostrar_pos === 1) {\r\n                        subcat.mostrarEnPos = true;\r\n                        cat.mostrarEnPos = true;\r\n                        continue loopSubCategoria;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    clickOnCategoria = (c: ArbolArticulos) => this.appLstProdAlt.fillSubCategorias(c.categoria_grupo);\r\n\r\n    buscarArticulo = () => {\r\n        // console.log(`CODIGO BARRAS = ${this.codigoBarras}`);\r\n        if (this.codigoBarras && this.codigoBarras.trim().length > 0) {\r\n            this.endSubs.add(                \r\n                this.articuloSrvc.getArticulos({ codigo: this.codigoBarras.trim() }).subscribe((arts: Articulo[]) => {\r\n                    if (arts && arts.length > 0) {\r\n                        const art = arts[0];\r\n                        const obj: NodoProducto = {\r\n                            id: +art.articulo,\r\n                            nombre: art.descripcion,\r\n                            precio: +art.precio,\r\n                            impresora: art.impresora,\r\n                            presentacion: art.presentacion,\r\n                            codigo: art.codigo,\r\n                            combo: art.combo,\r\n                            multiple: art.multiple\r\n                        };\r\n                        this.agregarProductos(obj);\r\n                    }\r\n                    this.codigoBarras = null;\r\n                    this.txtCodigoBarras.focus();\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    llenaProductosSeleccionados = (conQueMesa: ComandaGetResponse = this.mesaEnUso) => {\r\n        if (this.mesaEnUso.comanda == null) {\r\n            this.mesaEnUso = conQueMesa;\r\n        }\r\n        this.lstProductosSeleccionados = [];\r\n\r\n        for (const ctas of conQueMesa.cuentas) {\r\n            for (const p of ctas.productos) {\r\n                this.lstProductosSeleccionados.push({\r\n                    id: +p.articulo.articulo,\r\n                    nombre: p.articulo.descripcion,\r\n                    cuenta: +p.numero_cuenta || 1,\r\n                    idcuenta: +ctas.cuenta,\r\n                    cantidad: +p.cantidad,\r\n                    impreso: +p.impreso,\r\n                    precio: parseFloat(p.precio) || 10.00,\r\n                    total: parseFloat(p.total) || (parseFloat(p.cantidad) * parseFloat(p.precio)),\r\n                    notas: p.notas || '',\r\n                    showInputNotas: false,\r\n                    itemListHeight: '70px',\r\n                    detalle_comanda: +p.detalle_comanda,\r\n                    detalle_cuenta: +p.detalle_cuenta,\r\n                    impresora: p.articulo.impresora,\r\n                    detalle: p.detalle,\r\n                    monto_extra: +p.monto_extra || 0.00,\r\n                    multiple: +p.articulo.multiple,\r\n                    combo: +p.articulo.combo\r\n                });\r\n            }\r\n        }\r\n        // console.log('SELECCIONADOS = ', this.lstProductosSeleccionados);\r\n    }\r\n\r\n    cerrarMesa = () => {\r\n        // console.log('CERRAR MESA; MESA EN USO = ', this.mesaEnUso);\r\n        this.endSubs.add(            \r\n            this.comandaSrvc.cerrarMesa(this.mesaEnUso.mesa.mesa).subscribe(res => {\r\n                // console.log('RESPUESTA DE CERRAR MESA = ', res);\r\n                if (res.exito) {\r\n                    // console.log('EXITO PARA CERRAR LA MESA...', res);\r\n                    this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n                    this.mesaEnUso.mesa.estatus = 1;\r\n                    // this.closeSideNavEv.emit();\r\n                    this.mesaSavedEv.emit();\r\n                    this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n                } else {\r\n                    // console.log('FALLA PARA CERRAR LA MESA...', res);\r\n                    this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    setSelectedCuenta(noCuenta: number) {\r\n        this.bloqueoBotones = true;\r\n        this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +noCuenta);\r\n        this.setLstProductosDeCuenta();\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    setSumaCuenta(lista: ProductoSelected[]) {\r\n        let suma = 0.00;\r\n        // for (let i = 0; i < lista.length; i++) { suma += (lista[i].precio * lista[i].cantidad); }\r\n        for (const item of lista) {\r\n            suma += (item.precio * item.cantidad);\r\n        }\r\n        this.sumCuenta = suma;\r\n    }\r\n\r\n    setLstProductosDeCuenta() {\r\n        this.lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n        // console.log(this.lstProductosDeCuenta);\r\n    }\r\n\r\n    agregarProductos(producto: any) {\r\n        // console.log(producto);\r\n        if (+producto.combo === 1 || +producto.multiple === 1) {\r\n            this.bloqueoBotones = true;\r\n            const confirmRef = this.dialog.open(DialogComboComponent, {\r\n                maxWidth: '50%',\r\n                data: new ConfirmDialogComboModel(\r\n                    producto,\r\n                    'Sí', 'No'\r\n                )\r\n            });\r\n\r\n            this.endSubs.add(                \r\n                confirmRef.afterClosed().subscribe((res: any) => {\r\n                    // console.log(res);\r\n                    if (res && res.respuesta && res.seleccion.receta.length > 0) {\r\n                        // console.log(res.seleccion); // this.bloqueoBotones = false; return;\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.saveDetalleCombo(\r\n                                this.mesaEnUso.comanda,\r\n                                this.cuentaActiva.cuenta, res.seleccion\r\n                            ).subscribe(resSaveDetCmb => {\r\n                                // console.log('NUEVO DETALLE COMANDA = ', res);\r\n                                if (resSaveDetCmb.exito) {\r\n                                    this.mesaEnUso = resSaveDetCmb.comanda;\r\n                                    this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                                    this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                                } else {\r\n                                    this.snackBar.open(`ERROR:${resSaveDetCmb.mensaje}`, 'Comanda', { duration: 3000 });\r\n                                }\r\n                                this.bloqueoBotones = false;\r\n                            })\r\n                        );\r\n                    } else {\r\n                        this.bloqueoBotones = false;\r\n                        this.snackBar.open('Error, Debe seleccionar los productos del combo', 'Comanda', { duration: 7000 });\r\n                    }\r\n                })\r\n            );\r\n        } else {\r\n            this.addProductoSelected(producto);\r\n        }\r\n    }\r\n\r\n    addProductoSelected(producto: any) {\r\n        // console.log('PRODUCTO = ', producto);\r\n        // return;\r\n        this.bloqueoBotones = true;\r\n        if (+this.cuentaActiva.numero) {\r\n            const idx = this.lstProductosSeleccionados\r\n                .findIndex(p => +p.id === +producto.id && +p.cuenta === +this.cuentaActiva.numero && +p.impreso === 0);\r\n\r\n            if (idx < 0) {\r\n                this.detalleComanda = {\r\n                    articulo: producto.id, cantidad: 1, precio: +producto.precio, total: 1 * +producto.precio, notas: ''\r\n                };\r\n                this.endSubs.add(                    \r\n                    this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n                        // console.log('NUEVO DETALLE COMANDA = ', res);\r\n                        if (res.exito) {\r\n                            this.mesaEnUso = res.comanda;\r\n                            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                        } else {\r\n                            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n                        }\r\n                        this.bloqueoBotones = false;\r\n                    })\r\n                );\r\n            } else {\r\n                const tmp: ProductoSelected = this.lstProductosSeleccionados[idx];\r\n                this.detalleComanda = {\r\n                    detalle_cuenta: tmp.detalle_cuenta, detalle_comanda: tmp.detalle_comanda, articulo: tmp.id,\r\n                    cantidad: (+tmp.cantidad) + 1, precio: +tmp.precio, total: ((+tmp.cantidad) + 1) * (+tmp.precio),\r\n                    notas: tmp.notas\r\n                };\r\n                this.endSubs.add(\r\n                    this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n                        // console.log('UPDATE DETALLE COMANDA = ', res);\r\n                        if (res.exito) {\r\n                            this.mesaEnUso = res.comanda;\r\n                            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                        } else {\r\n                            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n                        }\r\n                        this.bloqueoBotones = false;\r\n                    })\r\n                );\r\n            }\r\n            this.setLstProductosDeCuenta();\r\n        }\r\n    }\r\n\r\n    updProductosCuenta(obj: any) {\r\n        const nvaLista: ProductoSelected[] = obj.listaProductos || [];\r\n        const lstTemp: ProductoSelected[] = this.lstProductosSeleccionados.filter(p => +p.cuenta !== +this.cuentaActiva.numero);\r\n        if (nvaLista.length > 0) {\r\n            this.lstProductosSeleccionados = lstTemp.concat(nvaLista);\r\n        } else {\r\n            this.lstProductosSeleccionados = lstTemp;\r\n        }\r\n        if (obj.comanda) {\r\n            this.mesaEnUso = obj.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n        }\r\n    }\r\n\r\n    prepProductosComanda(prods: ProductoSelected[]) {\r\n        // console.log(prods);\r\n        const tmp: any[] = [];\r\n        for (const p of prods) {\r\n            tmp.push({\r\n                articulo: p.id,\r\n                cantidad: p.cantidad,\r\n                precio: p.precio,\r\n                total: p.total,\r\n                notas: p.notas,\r\n                impreso: 1,\r\n                detalle_comanda: p.detalle_comanda,\r\n                detalle_cuenta: p.detalle_cuenta\r\n            });\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    validarImpresion(toPdf = false, dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        const ingresarPedido = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_INGRESO_NUMERO_PEDIDO);\r\n        // this.mesaEnUso.mesa.esmostrador;\r\n        // console.log(this.mesaEnUso);\r\n        if (+this.mesaEnUso.mesa.esmostrador === 1 && ingresarPedido && !this.mesaEnUso.numero_pedido) {\r\n            let pedidos = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_TOTAL_NUMEROS_PEDIDO);\r\n            if (!pedidos || pedidos <= 0) {\r\n                pedidos = 30;\r\n            }\r\n            const confirmRef = this.dialog.open(DialogPedidoComponent, {\r\n                maxWidth: '50%',\r\n                data: new ConfirmDialogModel(\r\n                    'Numero de Pedido',\r\n                    pedidos,\r\n                    'Sí', 'No'\r\n                )\r\n            });\r\n            \r\n            this.endSubs.add(\r\n                confirmRef.afterClosed().subscribe((conf: any) => {\r\n                    // console.log(conf);\r\n                    if (conf && conf.respuesta && conf.pedido) {\r\n                        this.mesaEnUso.numero_pedido = conf.pedido;\r\n                        this.printComanda(toPdf, dialogRef);\r\n                    } else {\r\n                        this.snackBar.open('Error, Debe seleccionar un numero de pedido', 'Comanda', { duration: 7000 });\r\n                    }\r\n                })\r\n            );\r\n        } else {\r\n            this.printComanda(toPdf, dialogRef);\r\n        }\r\n    }\r\n\r\n    printComanda(toPdf = false, dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        // solicitar numero de pedido\r\n        const meu = JSON.parse(JSON.stringify(this.mesaEnUso));\r\n\r\n        this.bloqueoBotones = true;\r\n        this.impreso = 0;\r\n        const modoComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_COMANDA) || 1;\r\n        for (let i = 0; i < meu.cuentas.length; i++) {\r\n            const cuenta = meu.cuentas[i];\r\n            // console.log(cuenta);\r\n            this.cuentaActiva = meu.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n\r\n            const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n\r\n            const lstProductosAImprimir = lstProductosDeCuenta.filter(p => +p.impreso === 0 && +p.cantidad > 0);\r\n            if (lstProductosAImprimir.length > 0) {\r\n                lstProductosDeCuenta.map(p => p.impreso = 1);\r\n                this.noComanda = meu.comanda;\r\n                // console.log(this.cuentaActiva.cuenta);\r\n                this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n                const idxCta = meu.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n                // console.log(meu.cuentas)\r\n                // console.log(idxCta)\r\n                if (idxCta > -1) {\r\n                    // meu.cuentas[idxCta] = this.cuentaActiva;\r\n                    const objCmd: Comanda = {\r\n                        area: meu.mesa.area.area,\r\n                        mesa: meu.mesa.mesa,\r\n                        mesero: meu.usuario,\r\n                        comanda: meu.comanda,\r\n                        cuentas: meu.cuentas,\r\n                        numero_pedido: meu.numero_pedido\r\n                    };\r\n                    // console.log('Comanda a guardar = ', objCmd);\r\n                    this.endSubs.add(                        \r\n                        this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n                            // console.log('Respuesta del save = ', res);\r\n                            if (res.exito) {\r\n                                meu.numero_pedido = res.comanda.numero_pedido;\r\n                                // console.log(this.cuentaActiva);\r\n                                this.endSubs.add(                                    \r\n                                    this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                                        // console.log('Respuesta de poner impreso = ', resImp);\r\n                                        if (resImp.exito) {\r\n                                            this.impreso++;\r\n                                        }\r\n        \r\n                                        this.llenaProductosSeleccionados(resImp.comanda);\r\n                                        this.setSelectedCuenta(cuenta.numero);\r\n                                        this.snackBar.open('Cuenta actualizada', `Cuenta #${cuenta.numero}`, { duration: 3000 });\r\n        \r\n                                        // Inicio de impresión de comanda\r\n                                        let AImpresoraNormal: ProductoSelected[] = [];\r\n                                        let AImpresoraBT: ProductoSelected[] = [];\r\n        \r\n                                        try {\r\n                                            AImpresoraNormal = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 0);\r\n                                            AImpresoraBT = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 1);\r\n                                            // console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                                        } catch (error) {\r\n                                            console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                                            console.log('NORMAL = ', AImpresoraNormal);\r\n                                            console.log('BT = ', AImpresoraBT);\r\n                                            console.log(error);\r\n                                        }\r\n        \r\n                                        if (!toPdf) {\r\n                                            if (AImpresoraNormal.length > 0) {\r\n                                                if (modoComanda !== 3) {\r\n                                                    if (!this.imprimeRecetaEnComanda) {\r\n                                                        AImpresoraNormal.map(d => {\r\n                                                            if (+d.combo === 0 && +d.esreceta === 1) {\r\n                                                                d.detalle = []\r\n                                                            }\r\n                                                            return d;\r\n                                                        });\r\n                                                    }\r\n                                                    this.socket.emit('print:comanda', `${JSON.stringify({\r\n                                                        Tipo: 'Comanda',\r\n                                                        Nombre: this.cuentaActiva.nombre,\r\n                                                        Numero: this.noComanda,\r\n                                                        DetalleCuenta: AImpresoraNormal,\r\n                                                        Ubicacion:\r\n                                                            `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                                                        Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                                                        Total: null,\r\n                                                        NumeroPedido: meu.numero_pedido,\r\n                                                        NotasGenerales: (meu.notas_generales || '')\r\n                                                    })}`);\r\n                                                    this.snackBar.open(`Imprimiendo comanda #${this.noComanda}`, 'Comanda', { duration: 7000 });\r\n                                                } else {\r\n                                                    this.snackBar.open(\r\n                                                        `Comanda #${this.noComanda} enviada a cocina`,\r\n                                                        'Comanda',\r\n                                                        { duration: 7000 }\r\n                                                    );\r\n                                                }\r\n                                                this.bloqueoBotones = false;\r\n                                                // console.log(\"imprimiendo\")\r\n                                            }\r\n        \r\n                                            if (AImpresoraBT.length > 0) {\r\n                                                if (modoComanda !== 3) {\r\n                                                    if (!this.imprimeRecetaEnComanda) {\r\n                                                        AImpresoraNormal.map(d => {\r\n                                                            if (+d.combo === 0 && +d.esreceta === 1) {\r\n                                                                d.detalle = []\r\n                                                            }\r\n                                                            return d;\r\n                                                        });\r\n                                                    }\r\n                                                    this.printToBT(\r\n                                                        JSON.stringify({\r\n                                                            Tipo: 'Comanda',\r\n                                                            Nombre: this.cuentaActiva.nombre,\r\n                                                            Numero: this.noComanda,\r\n                                                            DetalleCuenta: AImpresoraBT,\r\n                                                            Ubicacion:\r\n                                                                `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                                                            Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                                                            Total: null,\r\n                                                            NumeroPedido: meu.numero_pedido\r\n                                                        })\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        } else {\r\n                                            this.printComandaPDF();\r\n                                        }\r\n                                        if (+this.impreso === meu.cuentas.length) {\r\n                                            this.impreso = 0;\r\n                                            this.socket.emit('refrescar:mesa', { mesaenuso: meu });\r\n                                            this.socket.emit('refrescar:listaCocina', { mesaenuso: meu });\r\n                                            if (+meu.mesa.esmostrador === 0) {\r\n                                                if (dialogRef) {\r\n                                                    dialogRef.close();\r\n                                                } else {\r\n                                                    this.closeSideNavEv.emit();\r\n                                                }\r\n                                            } else {\r\n                                                this.cobrarCuenta(dialogRef);\r\n                                            }\r\n                                        }\r\n                                        // Fin de impresión de comanda\r\n                                    })\r\n                                );\r\n                            } else {\r\n                                this.snackBar.open(`ERROR: ${res.mensaje}`, `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n                            }\r\n                            this.bloqueoBotones = false;\r\n                        })\r\n                    );\r\n                }\r\n            } else {\r\n                this.impreso++;\r\n                // this.snackBar.open('Nada para enviar...', `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n                this.bloqueoBotones = false;\r\n            }\r\n        }\r\n        // console.log('Productos a imprimir = ', this.lstProductosAImprimir);\r\n\r\n    }\r\n\r\n    printToBT = (msgToPrint: string = '') => {\r\n        const convertir = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_ENVIA_COMO_BASE64);\r\n        const data = convertir ? Base64.encode(msgToPrint, true) : msgToPrint;\r\n        // const AppHref = `${GLOBAL.DEEP_LINK_ANDROID}${data}`;\r\n        const AppHref = GLOBAL.DEEP_LINK_ANDROID.replace('__INFOBASE64__', data);\r\n        try {\r\n            window.location.href = AppHref;\r\n        } catch (error) {\r\n            this.snackBar.open('No se pudo conectar con la aplicación de impresión', 'Comanda', { duration: 3000 });\r\n        }\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    printComandaPDF = () => {\r\n        const noCuenta = +this.cuentaActiva.cuenta;\r\n        this.endSubs.add(            \r\n            this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n                if (res) {\r\n                    const blob = new Blob([res], { type: 'application/pdf' });\r\n                    const url = window.URL.createObjectURL(blob);\r\n                    window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n                    // this.closeSideNavEv.emit();\r\n                } else {\r\n                    this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    sumaDetalle = (detalle: ProductoSelected[]) => {\r\n        let total = 0.00;\r\n        // for (let i = 0; i < detalle.length; i++) { total += detalle[i].total || 0.00; }\r\n        for (const item of detalle) {\r\n            total += +item.total || 0.00;\r\n            total += +item.monto_extra || 0.00;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    printCuenta(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        this.bloqueoBotones = true;\r\n        this.lstProductosAImprimir = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n        // console.log(this.lstProductosAImprimir);\r\n\r\n        if (this.lstProductosAImprimir.length > 0) {\r\n            this.setSumaCuenta(this.lstProductosAImprimir);\r\n            const totalCuenta = this.sumaDetalle(this.lstProductosAImprimir);\r\n            const printerToUse = this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora;\r\n            const imprimePropSugerida = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_PROPINA_SUGERIDA);\r\n\r\n            const msgToPrint = {\r\n                Tipo: 'Cuenta',\r\n                Nombre: this.cuentaActiva.nombre,\r\n                Numero: null,\r\n                DetalleCuenta: this.lstProductosAImprimir,\r\n                Total: totalCuenta,\r\n                Empresa: this.ls.get(GLOBAL.usrTokenVar).empresa,\r\n                Restaurante: this.ls.get(GLOBAL.usrTokenVar).restaurante,\r\n                PropinaSugerida: imprimePropSugerida ? (totalCuenta * 0.10).toFixed(2) : null,\r\n                Impresora: printerToUse,\r\n                Ubicacion:\r\n                    `${this.mesaEnUso.mesa.area.nombre} - Mesa ${this.mesaEnUso.mesa.etiqueta || this.mesaEnUso.mesa.numero\r\n                    } - Comanda ${this.mesaEnUso.comanda}`,\r\n                Mesero: `${this.mesaEnUso.mesero.nombres} ${this.mesaEnUso.mesero.apellidos}`\r\n            };\r\n\r\n            if (+printerToUse.bluetooth === 0) {\r\n                this.socket.emit(`print:cuenta`, `${JSON.stringify(msgToPrint)}`);\r\n            } else {\r\n                this.printToBT(JSON.stringify(msgToPrint));\r\n            }\r\n            this.snackBar.open(`Imprimiendo cuenta de ${this.cuentaActiva.nombre}`, 'Cuenta', { duration: 7000 });            \r\n            if (dialogRef) {\r\n                dialogRef.close();\r\n            } else {\r\n                this.closeSideNavEv.emit();\r\n            }\r\n        } else {\r\n            this.snackBar.open(`La cuenta de ${this.cuentaActiva.nombre} no tiene ningún artículo.`, 'Cuenta', { duration: 7000 });\r\n        }\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    unirCuentas(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        const unirCuentaRef = this.dialog.open(UnirCuentaComponent, {\r\n            width: '55%',\r\n            data: { lstProductosSeleccionados: this.lstProductosSeleccionados, mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            unirCuentaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    cobrarCuenta(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        this.endSubs.add(            \r\n            this.comandaSrvc.getCuenta(this.cuentaActiva.cuenta).subscribe(res => {\r\n                if (res.pendiente.length > 0) {\r\n                    this.snackBar.open('Cobro', 'Tiene productos sin comandar', { duration: 3000 });\r\n                } else {\r\n                    const productosACobrar = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n                    if (productosACobrar.length > 0) {\r\n                        const cobrarCtaRef = this.dialog.open(CobrarPedidoComponent, {\r\n                            width: '95%',\r\n                            data: {\r\n                                mesaenuso: this.mesaEnUso,\r\n                                cuenta: this.cuentaActiva.nombre,\r\n                                idcuenta: this.cuentaActiva.cuenta,\r\n                                productosACobrar,\r\n                                porcentajePropina: 0.00,\r\n                                impresora: +this.mesaEnUso.mesa.esmostrador === 0 ?\r\n                                    (this.mesaEnUso.mesa.area.impresora_factura || null) :\r\n                                    (this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora),\r\n                                clientePedido: this.clientePedido\r\n                            }\r\n                        });\r\n    \r\n                        this.endSubs.add(                            \r\n                            cobrarCtaRef.afterClosed().subscribe(resAC => {\r\n                                // console.log(resAC);\r\n                                if (resAC && resAC !== 'closePanel') {\r\n                                    // console.log(res);\r\n                                    this.cambiarEstatusCuenta(resAC);\r\n                                    if (dialogRef) {\r\n                                        dialogRef.close(this.mesaEnUso);\r\n                                    } else {\r\n                                        this.closeSideNavEv.emit(this.mesaEnUso);\r\n                                    }\r\n                                } else {\r\n                                    if (resAC === 'closePanel') {\r\n                                        if (dialogRef) {\r\n                                            dialogRef.close(this.mesaEnUso);\r\n                                        } else {\r\n                                            this.closeSideNavEv.emit();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                        );\r\n                    } else {\r\n                        this.snackBar.open('Cobro', 'Sin productos a cobrar.', { duration: 3000 });\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    enviarPedido = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const cuenta = this.mesaEnUso.cuentas[0];\r\n        this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n        const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n        lstProductosDeCuenta.map(p => p.impreso = 1);\r\n        this.noComanda = this.mesaEnUso.comanda;\r\n        this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n        const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n        if (idxCta > -1) {\r\n            const objCmd: Comanda = {\r\n                area: this.mesaEnUso.mesa.area.area,\r\n                mesa: this.mesaEnUso.mesa.mesa,\r\n                mesero: this.mesaEnUso.usuario,\r\n                comanda: this.mesaEnUso.comanda,\r\n                cuentas: this.mesaEnUso.cuentas,\r\n                numero_pedido: this.mesaEnUso.numero_pedido\r\n            };\r\n\r\n            this.endSubs.add(                \r\n                this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n                    if (res.exito) {\r\n                        this.mesaEnUso.numero_pedido = res.comanda.numero_pedido;\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                                this.llenaProductosSeleccionados(resImp.comanda);\r\n                                this.setSelectedCuenta(cuenta.numero);\r\n                                this.cobrarCuenta(dialogRef);\r\n                            })\r\n                        );\r\n                    }\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    cambiarEstatusCuenta = (obj: any) => {\r\n        const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +obj.cuenta);\r\n        this.mesaEnUso.cuentas[idxCta].cerrada = +obj.cerrada;\r\n    }\r\n\r\n    // esCajero = () => (this.rolesUsuario || []).find(r => r.trim().toLocaleLowerCase() === 'cajero') === undefined;\r\n    esCajero = () => false;\r\n\r\n    trasladoMesa = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const trasladoRef = this.dialog.open(TrasladoMesaComponent, {\r\n            width: '55%',\r\n            data: { mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            trasladoRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n                    if (dialogRef) {\r\n                        dialogRef.close(this.mesaEnUso);\r\n                    } else {\r\n                        this.closeSideNavEv.emit(this.mesaEnUso);\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    getNotasGenerales = () => {\r\n        const ngenDialog = this.dialog.open(NotasGeneralesComandaComponent, {\r\n            width: '50%',\r\n            data: { notasGenerales: (this.mesaEnUso.notas_generales || '') }\r\n        });\r\n        this.endSubs.add(            \r\n            ngenDialog.afterClosed().subscribe((notasGen: string) => {\r\n                if (notasGen !== null) {\r\n                    if (notasGen.trim().length > 0) {\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.saveNotasGenerales({ comanda: this.mesaEnUso.comanda, notas_generales: notasGen }).subscribe(res => {\r\n                                if (res.exito) {\r\n                                    this.mesaEnUso.notas_generales = notasGen;\r\n                                    this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n                                } else {\r\n                                    this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n                                }\r\n                            })\r\n                        );\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    nuevaCuenta = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const nuevaCuentaRef = this.dialog.open(NuevaCuentaComponent, {\r\n            width: '50%',\r\n            data: { mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            nuevaCuentaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    distribuirProductos = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const distProdCtaRef = this.dialog.open(DistribuirProductosCuentasComponent, {\r\n            width: '50%',\r\n            data: { mesaEnUso: this.mesaEnUso, lstProductos: (this.lstProductosSeleccionados || []) }\r\n        });\r\n        this.endSubs.add(            \r\n            distProdCtaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    abrirAccionesComanda = (dialogRef: MatDialogRef<TranComandaAltComponent>) => {\r\n        const bs = this.bsAccionesCmd.open(AccionesComandaComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                tranComanda: this,\r\n                dialogRef\r\n            }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            bs.afterDismissed().subscribe((result: any) => {\r\n                if (result?.cerrar) {\r\n                    dialogRef.close(result.mesaEnUso || null);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\nimport { SeleccionaTurnoPrevioComponent } from '../selecciona-turno-previo/selecciona-turno-previo.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as moment from 'moment';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { Turno } from '../../../interfaces/turno';\nimport { DetalleTurno } from '../../../interfaces/detalle-turno';\nimport { TurnoService } from '../../../services/turno.service';\nimport { UsuarioTipo } from '../../../../admin/interfaces/usuario-tipo';\nimport { UsuarioTipoService } from '../../../../admin/services/usuario-tipo.service';\nimport { Usuario } from '../../../../admin/models/usuario';\nimport { UsuarioService } from '../../../../admin/services/usuario.service';\n\n@Component({\n  selector: 'app-form-turno',\n  templateUrl: './form-turno.component.html',\n  styleUrls: ['./form-turno.component.css']\n})\nexport class FormTurnoComponent implements OnInit {\n\n  @Input() turno: Turno;\n  @Output() turnoSavedEv = new EventEmitter();\n\n  public showTurnoForm = true;\n  public showDetalleTurnoForm = true;\n\n  public detallesTurno: DetalleTurno[] = [];\n  public detalleTurno: DetalleTurno;\n  public displayedColumns: string[] = ['usuario_tipo', 'usuario', 'editItem'];\n  public dataSource: MatTableDataSource<DetalleTurno>;\n  public tiposTurno: TipoTurno[] = [];\n  public tiposUsuario: UsuarioTipo[] = [];\n  public usuarios: Usuario[] = [];\n  public esMovil = false;\n  public comandas: any[] = [];\n  public facturas: any[] = [];\n  public pendientes = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private turnoSrvc: TurnoService,\n    private usuarioTipoSrvc: UsuarioTipoService,\n    private usuarioSrvc: UsuarioService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetTurno();\n    this.loadTiposTurno();\n    this.loadTiposUsuario();\n    this.loadUsuarios();\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  loadTiposUsuario = () => {\n    this.usuarioTipoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposUsuario = res;\n      }\n    });\n  }\n\n  loadUsuarios = () => {\n    this.usuarioSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\n      if (res) {\n        this.usuarios = res;\n      }\n    });\n  }\n\n  resetTurno = () => {\n    this.pendientes = false;\n    this.comandas = [];\n    this.facturas = [];\n    this.turno = {\n      turno: null, turno_tipo: null, inicio: moment().format(GLOBAL.dbDateTimeFormat), fin: null\n    };\n    this.resetDetalleTurno();\n    this.detallesTurno = [];\n    this.updateTableDataSource();\n  }\n\n  saveInfoTurno = () => {\n    this.pendientes = false;\n    this.turnoSrvc.save(this.turno).subscribe(res => {\n      if (res.exito) {\n        this.turnoSavedEv.emit();\n        this.resetTurno();\n        this.turno = res.turno;\n        this.snackBar.open('Turno modificado con éxito...', 'Turno', { duration: 3000 });\n      } else {\n        // console.log(res.mensaje);\n        if (res.pendientes) {\n          this.snackBar.open(`ERROR: Error al cerrar el turno`, 'Turno', { duration: 3000 });\n          this.pendientes = true;\n          this.comandas = res.comandas;\n          this.facturas = res.facturas;\n        }\n\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n\n      }\n    });\n  }\n\n  onSubmit = () => {\n    if (moment(this.turno.fin).isValid()) {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel('Cerrar turno', 'La fecha de finalización cerrará el turno. ¿Desea continuar?', 'Sí', 'No')\n      });\n\n      dialogRef.afterClosed().subscribe(res => {\n        if (res) {\n          this.saveInfoTurno();\n        }\n      });\n\n    } else {\n      this.saveInfoTurno();\n    }\n  }\n\n  resetDetalleTurno = () => this.detalleTurno = { turno: !!this.turno.turno ? this.turno.turno : null, usuario: null, usuario_tipo: null };\n\n  loadDetalleTurno = (idturno: number = +this.turno.turno) => {\n    this.turnoSrvc.getDetalle(idturno, { turno: idturno }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.detallesTurno = res;\n        this.updateTableDataSource();\n      }\n    });\n  }\n\n  onSubmitDetail = () => {\n    this.detalleTurno.turno = this.turno.turno;\n    // console.log(this.detalleTurno); return;\n    this.turnoSrvc.saveDetalle(this.detalleTurno).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.loadDetalleTurno();\n        this.resetDetalleTurno();\n        this.snackBar.open('Usuario agregado al turno...', 'Turno', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n      }\n    });\n  }\n\n  anularDetalleTurno = (obj: any) => {\n    // console.log(obj);\n    this.turnoSrvc.anularDetalle({\n      turno: obj.turno, usuario: obj.usuario.usuario, usuario_tipo: obj.usuario_tipo.usuario_tipo\n    }).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.loadDetalleTurno();\n        this.resetDetalleTurno();\n        this.snackBar.open('Se quitó al usuario del turno...', 'Turno', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n      }\n    });\n  }\n\n  updateTableDataSource = () => this.dataSource = new MatTableDataSource(this.detallesTurno);\n\n  getNow = () => moment().format(GLOBAL.dbDateTimeFormat);\n\n  copiaDetalleTurno = () => {\n    const dialogRef = this.dialog.open(SeleccionaTurnoPrevioComponent, {\n      maxWidth: '400px',\n      data: { turnoCopia: this.turno }\n    });\n\n    dialogRef.afterClosed().subscribe(() =>  this.loadDetalleTurno(+this.turno.turno));\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Turno {{!!turno.turno ? (turno.inicio | date:'dd/MM/yyyy HH:mm:ss') : ''}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showTurnoForm = true;\" *ngIf=\"!showTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showTurnoForm = false;\" *ngIf=\"showTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmTurno=\"ngForm\" *ngIf=\"showTurnoForm\" (ngSubmit)=\"frmTurno.form.valid && onSubmit()\" novalidate>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Tipo de turno</mat-label>\n                    <mat-select name=\"turno_tipo\" [(ngModel)]=\"turno.turno_tipo\" required>\n                        <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                            {{tt.descripcion}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <input matInput type=\"datetime-locale\" placeholder=\"Inicio\" name=\"inicio\" [(ngModel)]=\"turno.inicio\" required>\n                    <button type=\"button\" *ngIf=\"!turno.inicio\" mat-button matSuffix mat-icon-button (click)=\"turno.inicio=getNow()\">\n                        <mat-icon class=\"iconFontSize\">query_builder</mat-icon>\n                    </button>\n                    <button type=\"button\" mat-button *ngIf=\"turno.inicio\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"turno.inicio=null\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>                \n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <input matInput type=\"datetime-locale\" placeholder=\"Fin\" name=\"fin\" [(ngModel)]=\"turno.fin\">\n                    <button type=\"button\" *ngIf=\"!turno.fin\" mat-button matSuffix mat-icon-button (click)=\"turno.fin=getNow()\">\n                        <mat-icon class=\"iconFontSize\">query_builder</mat-icon>\n                    </button>\n                    <button type=\"button\" mat-button *ngIf=\"turno.fin\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"turno.fin=null\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>                \n            </div>\n            <div role=\"group\" align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTurno.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTurno()\" *ngIf=\"turno.turno\">\n                    Nuevo\n                </button>\n            </div>\n            <div *ngIf=\"pendientes\">\n                \n                    <h6>Documentos Pendientes</h6>\n                \n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <label><b>Comandas sin facturar</b></label>\n                            <ul>\n                                <li *ngFor=\"let com of comandas\" >{{com}}</li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <label><b>Facturas sin firmar</b></label>\n                            <ul>\n                                <li *ngFor=\"let fac of facturas\" >{{fac}}</li>\n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n<hr *ngIf=\"turno.turno\" />\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"turno.turno\">\n    <mat-card-title>\n        <h4>\n            Detalle del turno {{turno.inicio | date:'dd/MM/yyyy HH:mm:ss'}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleTurnoForm = true;\" *ngIf=\"!showDetalleTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleTurnoForm = false;\" *ngIf=\"showDetalleTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmDetalleTurno=\"ngForm\" *ngIf=\"showDetalleTurnoForm\" (ngSubmit)=\"frmDetalleTurno.form.valid && onSubmitDetail()\" novalidate>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Tipo</mat-label>\n                    <mat-select name=\"usuario_tipo\" [(ngModel)]=\"detalleTurno.usuario_tipo\" required>\n                        <mat-option *ngFor=\"let tu of tiposUsuario\" [value]=\"tu.usuario_tipo\">\n                            {{tu.descripcion}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Usuario</mat-label>\n                    <mat-select name=\"usuario\" [(ngModel)]=\"detalleTurno.usuario\" required>\n                        <mat-option *ngFor=\"let u of usuarios\" [value]=\"u.usuario\">\n                            {{u.nombres}} {{u.apellidos}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div align=\"right\">\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"copiaDetalleTurno()\" [disabled]=\"!!turno.fin\">\n                    Copiar de turno anterior\n                </button>\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmDetalleTurno.form.valid || !!turno.fin\">\n                    Guardar\n                </button>                \n            </div>\n        </form>\n        <hr *ngIf=\"detallesTurno.length > 0\"/>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"detallesTurno.length > 0\">\n            <ng-container matColumnDef=\"usuario_tipo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{element.usuario_tipo.descripcion}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"usuario\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Usuario</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.usuario.nombres}} {{element.usuario.apellidos}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"editItem\">\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\n                    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"anularDetalleTurno(element)\" [disabled]=\"!!turno.fin\">\n                        Anular\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../shared/global';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\n\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-valida-pwd-gerente-turno',\n  templateUrl: './valida-pwd-gerente-turno.component.html',\n  styleUrls: ['./valida-pwd-gerente-turno.component.css']\n})\nexport class ValidaPwdGerenteTurnoComponent implements OnInit {\n\n  public data: any = { pwd: undefined };\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ValidaPwdGerenteTurnoComponent>,\n    private comandaSrvc: ComandaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n  terminar = () => {\n    this.comandaSrvc.validaPwdGerenteTurno(this.data.pwd).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.dialogRef.close(res.esgerente);\n      } else {\n        this.dialogRef.close(false);\n      }\n    });\n  }\n}\n","<h1 mat-dialog-title>Contraseña del gerente de turno</h1>\n<mat-dialog-content>\n    <form #frmValidarPwdGerenteTurno=\"ngForm\" (ngSubmit)=\"frmValidarPwdGerenteTurno.form.valid\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"password\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Contraseña del gerente de turno\" name=\"pwd\" [(ngModel)]=\"data.pwd\" required>\n            <input type=\"password\" matInput *ngIf=\"esMovil\" placeholder=\"Contraseña del gerente de turno\" name=\"pwd\" [(ngModel)]=\"data.pwd\" required>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar()\" [disabled]=\"!frmValidarPwdGerenteTurno.form.valid\" color=\"accent\">\n        Eliminar producto\n    </button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\nimport { DialogCocina } from '../../../shared/interfaces/config-reportes';\nimport { DesktopNotificationService } from '../../../shared/services/desktop-notification.service';\nimport { ConfirmDialogModel, DialogCocinaComponent } from '../../../shared/components/dialog-cocina/dialog-cocina.component';\nimport * as moment from 'moment';\n\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-tran-cocina',\n  templateUrl: './tran-cocina.component.html',\n  styleUrls: ['./tran-cocina.component.css']\n})\nexport class TranCocinaComponent implements OnInit {\n\n  public lstComandasCocina: any[] = [];\n  public lstComandasCocinaEnProceso: any[] = [];\n\n  constructor(\n    private ls: LocalstorageService,\n    private comandaSrvc: ComandaService,\n    private socket: Socket,\n    private dns: DesktopNotificationService,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\n\n      this.socket.on('refrescar:listaCocina', () => {\n        this.loadComandasCocina();\n        this.notificarUsuario();\n      });\n\n      setInterval(() => {\n        this.setTiempo();\n      }, 1000);\n\n    }\n    this.loadComandasCocina();\n  }\n\n  notificarUsuario = () => {\n    const opciones: NotificationOptions = {\n      icon: 'assets/img/minilogo.png',\n      body: `Se recibió una nueva orden a las ${moment().format(GLOBAL.dateTimeFormat)}.`,\n      dir: 'auto'\n    };\n    this.dns.createNotification('Rest-Touch Pro', 10000, opciones);\n  }\n\n  loadComandasCocina = () => this.comandaSrvc.getComandasCocina().subscribe(res => {\n    this.lstComandasCocina = res.pendientes;\n    this.lstComandasCocinaEnProceso = res.enproceso;\n    this.setTiempo();\n  })\n\n  setTiempo = () => {\n    if (this.lstComandasCocinaEnProceso) {\n      for (let i = 0; i < this.lstComandasCocinaEnProceso.length; i++) {\n        const comanda = this.lstComandasCocinaEnProceso[i];\n        const msecPerMinute = 1000 * 60;\n        const msecPerHour = msecPerMinute * 60;\n        const msecPerDay = msecPerHour * 24;\n\n        // asignar la fecha en milisegundos\n        let date = new Date(comanda.fecha_proceso);\n        this.lstComandasCocinaEnProceso[i].inicio_proceso = date;\n        comanda.inicio = date;\n        const dateMsec = date.getTime();\n\n        // asignar la fecha el 1 de enero del a la media noche\n        date = new Date();\n\n        // Obtener la diferencia en milisegundos\n        let interval = date.getTime() - dateMsec;\n\n        // Calcular cuentos días contiene el intervalo. Substraer cuantos días\n        // tiene el intervalo para determinar el sobrante\n        const days = Math.floor(interval / msecPerDay);\n        interval = interval - (days * msecPerDay);\n\n        // Calcular las horas , minutos y segundos\n        const hours = Math.floor(interval / msecPerHour);\n        interval = interval - (hours * msecPerHour);\n\n        const minutes = Math.floor(interval / msecPerMinute);\n        interval = interval - (minutes * msecPerMinute);\n\n        const seconds = Math.floor(interval / 1000);\n        const tiempo = new Date();\n\n        tiempo.setHours(hours);\n        tiempo.setMinutes(minutes);\n        tiempo.setSeconds(seconds);\n\n        this.lstComandasCocinaEnProceso[i].tiempo_transcurrido = tiempo;\n        if (comanda.tiempo_preparacion) {\n          // tslint:disable-next-line: variable-name\n          const tiempo_preparacion = comanda.tiempo_preparacion.split(':');\n          comanda.inicio.setHours(comanda.inicio.getHours() + (+tiempo_preparacion[0]));\n          comanda.inicio.setMinutes(comanda.inicio.getMinutes() + (+tiempo_preparacion[1]));\n          this.lstComandasCocinaEnProceso[i].fin_proceso = comanda.inicio;\n        } else {\n          this.lstComandasCocinaEnProceso[i].fin_proceso = date;\n        }\n      }\n    }\n\n  }\n\n  comparaFecha = (cmd: any) => {\n    const date = new Date();\n    return date > cmd.fin_proceso;\n  }\n\n  setCocinado = (cmd: any, estatus = 2) => {\n    const res: DialogCocina = { respuesta: false, tiempo: '' };\n    const confirmRef = this.dialog.open(DialogCocinaComponent, {\n      maxWidth: '400px',\n      data: new ConfirmDialogModel(\n        'Cocina',\n        `¿Seguro de marcar como '${+estatus === 1 ? 'vista' : 'cocinada'}' la comanda #${cmd.comanda}?`,\n        'Sí', 'No',\n        res,\n        +estatus === 1 ? true : false\n      )\n    });\n\n    confirmRef.afterClosed().subscribe((conf: DialogCocina) => {\n\n      if (conf && conf.respuesta && conf.tiempo) {\n        // console.log(conf);\n        const datos: any = {\n          numero: +cmd.numero,\n          estatus: estatus,\n          tiempo: conf.tiempo\n        };\n\n        this.comandaSrvc.setComandaCocinada(+cmd.comanda, datos).subscribe((respuesta: any) => {\n          if (respuesta.exito) {\n            this.snackBar.open(respuesta.mensaje, 'Cocina', { duration: 3000 });\n          } else {\n            this.snackBar.open(`ERROR: ${respuesta.mensaje}`, 'Cocina', { duration: 7000 });\n          }\n          this.loadComandasCocina();\n        });\n      }\n    });\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"bordeRght\">\n        <div class=\"divContenedor\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" fxFlexFill fxLayoutAlign=\"start start\">\n            <div fxFlex=\"100%\" fxLayoutAlign=\"center start\">\n                <h4>Pendientes</h4>\n            </div>\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"50%\" *ngFor=\"let cmd of lstComandasCocina\">\n                <mat-card class=\"mat-elevation-z4\">\n                    <mat-card-header>\n                        <mat-card-title>Comanda #{{cmd.comanda}} - {{cmd.numero}}</mat-card-title>\n                        <mat-card-subtitle>\n                            Area {{cmd.mesa.area.nombre}} - Mesa #{{cmd.mesa.etiqueta || cmd.mesa.numero}}<br />\n                            Atiende: {{cmd.mesero.nombres}} {{cmd.mesero.apellidos}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <ng-container *ngFor=\"let cta of cmd.cuentas\">\n                            <table *ngIf=\"cta.productos.length > 0\">\n                                <tr *ngFor=\"let prod of cta.productos\">\n                                    <td>\n                                        {{prod.cantidad}} {{prod.articulo.descripcion}}\n                                        <br *ngIf=\"prod.detalle.length > 0\" />\n                                        <ng-container *ngFor=\"let specs of prod.detalle\">                                            \n                                            <span>{{specs.trim()}}</span><br/>\n                                        </ng-container>\n                                        <br *ngIf=\"!!prod.notas && prod.notas.length > 0 && !prod.detalle\" />\n                                        <span *ngIf=\"!!prod.notas && prod.notas.length > 0\">\n                                            <strong>Notas:</strong> {{prod.notas}}\n                                        </span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ng-container>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <button mat-raised-button color=\"accent\" type=\"button\"\n                            (click)=\"setCocinado(cmd, 1)\">Vista</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"bordeLft\">\n        <div class=\"divContenedor\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" fxFlexFill fxLayoutAlign=\"start start\">\n            <div fxFlex=\"100%\" fxLayoutAlign=\"center start\">\n                <h4>En Proceso</h4>\n            </div>\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"50%\"\n                *ngFor=\"let cmdEnProceso of lstComandasCocinaEnProceso\">\n                <mat-card class=\"mat-elevation-z4\">\n                    <mat-card-header>\n                        <mat-card-title>Comanda #{{cmdEnProceso.comanda}} - {{cmdEnProceso.numero}}</mat-card-title>\n                        <mat-card-subtitle>\n                            Area {{cmdEnProceso.mesa.area.nombre}} - Mesa #{{cmdEnProceso.mesa.etiqueta || cmdEnProceso.mesa.numero}}<br />\n                            Atiende: {{cmdEnProceso.mesero.nombres}} {{cmdEnProceso.mesero.apellidos}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div align=\"center\">\n                            <h6 [ngClass]=\"{'text-danger': comparaFecha(cmdEnProceso)}\">\n                                {{cmdEnProceso.tiempo_transcurrido | date: 'HH:mm:ss'}}\n                            </h6>\n                        </div>\n                        <ng-container *ngFor=\"let cta of cmdEnProceso.cuentas\">\n                            <table *ngIf=\"cta.productos.length > 0\">\n                                <tr *ngFor=\"let prod of cta.productos\">\n                                    <td>\n                                        {{prod.cantidad}} {{prod.articulo.descripcion}}\n                                        <br *ngIf=\"prod.detalle.length > 0\" />\n                                        <ng-container *ngFor=\"let specs of prod.detalle\">                                            \n                                            <span>{{specs.trim()}}</span><br/>\n                                        </ng-container>\n                                        <br *ngIf=\"!!prod.notas && prod.notas.length > 0 && !prod.detalle\" />\n                                        <span *ngIf=\"!!prod.notas && prod.notas.length > 0\">\n                                            <strong>Notas:</strong> {{prod.notas}}\n                                        </span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ng-container>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <button mat-raised-button color=\"accent\" type=\"button\"\n                            (click)=\"setCocinado(cmdEnProceso)\">Cocinado</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaAreaComponent } from '../lista-area/lista-area.component';\nimport { Area } from '../../../interfaces/area';\n\n\n@Component({\n  selector: 'app-area',\n  templateUrl: './area.component.html',\n  styleUrls: ['./area.component.css']\n})\nexport class AreaComponent implements OnInit {\n\n  public area: Area;\n  @ViewChild('listaAreas') lstAreasComponent: ListaAreaComponent;\n\n  constructor() {\n    this.area = {area: null, sede: null, nombre: null, impresora: null, impresora_factura: null };\n  }\n\n  ngOnInit() {\n  }\n\n  setArea = (obj: Area) => this.area = obj;\n\n  refreshAreaList = () => {\n    this.lstAreasComponent.loadEntidades();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-area #listaAreas (getEntidadEv)=\"setArea($event)\"></app-lista-area>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-area [entidad]=\"area\" (entidadSavedEv)=\"refreshAreaList()\"></app-form-area>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}