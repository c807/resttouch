{"version":3,"sources":["webpack:///src/app/wms/services/tipo-movimiento.service.ts","webpack:///src/app/orden-compra/components/orden-compra/orden-compra/orden-compra.component.ts","webpack:///src/app/orden-compra/components/orden-compra/orden-compra/orden-compra.component.html","webpack:///src/app/orden-compra/components/orden-compra/form-orden-compra/form-orden-compra.component.ts","webpack:///src/app/orden-compra/components/orden-compra/form-orden-compra/form-orden-compra.component.html","webpack:///src/app/orden-compra/orden-compra-routing.module.ts","webpack:///src/app/orden-compra/services/orden-compra.service.ts","webpack:///src/app/orden-compra/orden-compra.module.ts","webpack:///src/app/orden-compra/components/orden-compra/lista-orden-compra/lista-orden-compra.component.ts","webpack:///src/app/orden-compra/components/orden-compra/lista-orden-compra/lista-orden-compra.component.html"],"names":["TipoMovimientoService","http","srvcErrHndl","fltr","get","urlCatalogos","pipe","reintentos","errorHandler","OrdenCompraComponent","ls","setOrdenCompra","oc","ordenCompra","frmOrdenCompra","loadDetalleOrdenCompra","orden_compra","refreshOrdenCompraList","lstOrdenCompraComponent","loadOrdenesCompra","proveedor","usuario","usrTokenVar","idusr","notas","estatus_movimiento","bodega","tipo_movimiento","FormOrdenCompraComponent","snackBar","ordenCompraSrvc","proveedorSrvc","articuloSrvc","tipoMovimientoSrvc","bodegaSrvc","ordenCompraSavedEv","showOrdenCompraForm","showDetalleOrdenCompraForm","detallesOrdenCompra","displayedColumns","proveedores","articulos","tiposMovimiento","bodegas","keyboardLayout","IDIOMA_TECLADO","esMovil","loadProveedores","subscribe","res","loadTiposMovimiento","loadBodegas","resetOrdenCompra","resetDetalleOrdenCompra","onSubmit","save","exito","emit","compra","fecha","loadArticulos","getArticulos","detalleOrdenCompra","orden_compra_detalle","articulo","cantidad","monto","total","idoc","getDetalle","updateTableDataSource","getDetalleOrdenCompra","iddetalle","onSubmitDetail","saveDetalle","dataSource","generarIngreso","enmovil","routes","path","component","canActivate","redirectTo","pathMatch","OrdenCompraRoutingModule","forChild","OrdenCompraService","ordenCompraUrl","urlWms","entidad","post","OrdenCompraModule","ListaOrdenCompraComponent","getOrdenCompraEv","length","pageSize","pageSizeOptions","pageIndex","txtFiltro","lst","lstOrdenesCompra","applyFilter","getOrdenCompra","obj","pageChange","e","tmpList","lstOrdenesCompraPaged"],"mappings":"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","file":"orden-compra-orden-compra-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoMovimiento } from '../interfaces/tipo-movimiento';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoMovimientoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<TipoMovimiento[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    }; */\n    return this.http.get<TipoMovimiento[]>(\n      `${GLOBAL.urlCatalogos}/get_tipo_movimiento?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ListaOrdenCompraComponent } from '../lista-orden-compra/lista-orden-compra.component';\nimport { FormOrdenCompraComponent } from '../form-orden-compra/form-orden-compra.component';\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\n\n@Component({\n  selector: 'app-orden-compra',\n  templateUrl: './orden-compra.component.html',\n  styleUrls: ['./orden-compra.component.css']\n})\nexport class OrdenCompraComponent implements OnInit {\n\n  public ordenCompra: OrdenCompra;\n  @ViewChild('lstOrdenCompra') lstOrdenCompraComponent: ListaOrdenCompraComponent;\n  @ViewChild('frmOrdenCompra') frmOrdenCompra: FormOrdenCompraComponent;\n\n  constructor(\n    private ls: LocalstorageService\n  ) {\n    this.ordenCompra = {\n      orden_compra: null, proveedor: null, usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), notas: null, estatus_movimiento: 1, bodega: null, tipo_movimiento: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setOrdenCompra = (oc: OrdenCompra) => {\n    //console.log(oc);\n    this.ordenCompra = oc;\n    this.frmOrdenCompra.loadDetalleOrdenCompra(+this.ordenCompra.orden_compra);\n  }\n\n  refreshOrdenCompraList = () => {\n    this.lstOrdenCompraComponent.loadOrdenesCompra();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-orden-compra #lstOrdenCompra (getOrdenCompraEv)=\"setOrdenCompra($event)\"></app-lista-orden-compra>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-orden-compra #frmOrdenCompra [ordenCompra]=\"ordenCompra\"\n            (ordenCompraSavedEv)=\"refreshOrdenCompraList()\"></app-form-orden-compra>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\n\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\nimport { DetalleOrdenCompra } from '../../../interfaces/detalle-orden-compra';\nimport { OrdenCompraService } from '../../../services/orden-compra.service';\nimport { Proveedor } from '../../../../wms/interfaces/proveedor';\nimport { ProveedorService } from '../../../../wms/services/proveedor.service';\nimport { Articulo } from '../../../../wms/interfaces/articulo';\nimport { ArticuloService } from '../../../../wms/services/articulo.service';\nimport { TipoMovimiento } from '../../../../wms/interfaces/tipo-movimiento';\nimport { TipoMovimientoService } from '../../../../wms/services/tipo-movimiento.service';\nimport { Bodega } from '../../../../wms/interfaces/bodega';\nimport { BodegaService } from '../../../../wms/services/bodega.service';\n\n@Component({\n  selector: 'app-form-orden-compra',\n  templateUrl: './form-orden-compra.component.html',\n  styleUrls: ['./form-orden-compra.component.css']\n})\nexport class FormOrdenCompraComponent implements OnInit {\n\n  @Input() ordenCompra: OrdenCompra;\n  @Output() ordenCompraSavedEv = new EventEmitter();\n\n  public showOrdenCompraForm = true;\n  public showDetalleOrdenCompraForm = true;\n\n  public detallesOrdenCompra: DetalleOrdenCompra[] = [];\n  public detalleOrdenCompra: DetalleOrdenCompra;\n  public displayedColumns: string[] = ['articulo', 'cantidad', 'monto', 'total', 'editItem'];\n  public dataSource: MatTableDataSource<DetalleOrdenCompra>;\n  public proveedores: Proveedor[] = [];\n  public articulos: Articulo[] = [];\n  public tiposMovimiento: TipoMovimiento[] = [];\n  public bodegas: Bodega[] = [];\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private ordenCompraSrvc: OrdenCompraService,\n    private proveedorSrvc: ProveedorService,\n    private articuloSrvc: ArticuloService,\n    private tipoMovimientoSrvc: TipoMovimientoService,\n    private bodegaSrvc: BodegaService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetOrdenCompra();\n    this.loadProveedores();\n    this.loadArticulos();\n    this.loadBodegas();\n    this.loadTiposMovimiento();\n  }\n\n  loadProveedores = () => {\n    this.proveedorSrvc.get().subscribe(res => {\n      if (res) {\n        this.proveedores = res;\n      }\n    });\n  }\n\n  loadTiposMovimiento = () => {\n    this.tipoMovimientoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposMovimiento = res;\n      }\n    });\n  }\n\n  loadBodegas = () => {\n    this.bodegaSrvc.get().subscribe(res => {\n      if (res) {\n        this.bodegas = res;\n      }\n    });\n  }\n\n  resetOrdenCompra = () => {\n    this.ordenCompra = {\n      orden_compra: null, proveedor: null, usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), notas: null,\n      estatus_movimiento: 1, bodega: null, tipo_movimiento: null\n    };\n    this.resetDetalleOrdenCompra();\n  }\n\n  onSubmit = () => {\n    this.ordenCompraSrvc.save(this.ordenCompra).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.ordenCompraSavedEv.emit();\n        this.resetOrdenCompra();\n        this.ordenCompra = {\n          orden_compra: +res.compra.orden_compra,\n          proveedor: res.compra.proveedor,\n          fecha: res.compra.fecha,\n          usuario: res.compra.usuario,\n          notas: res.compra.notas,\n          estatus_movimiento: 1\n        };\n        this.loadDetalleOrdenCompra(this.ordenCompra.orden_compra);\n      }\n    });\n  }\n\n  loadArticulos = () => {\n    this.articuloSrvc.getArticulos().subscribe(res => {\n      if (res) {\n        this.articulos = res;\n      }\n    });\n  }\n\n  resetDetalleOrdenCompra = () => this.detalleOrdenCompra = {\n    orden_compra_detalle: null, orden_compra: (!!this.ordenCompra.orden_compra ? this.ordenCompra.orden_compra : null), articulo: null,\n    cantidad: null, monto: null, total: null\n  }\n\n  loadDetalleOrdenCompra = (idoc: number = +this.ordenCompra.orden_compra) => {\n    this.ordenCompraSrvc.getDetalle(idoc, { orden_compra: idoc }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.detallesOrdenCompra = res;\n        this.updateTableDataSource();\n      }\n    });\n  }\n\n  getDetalleOrdenCompra = (idoc: number = +this.ordenCompra.orden_compra, iddetalle: number) => {\n    this.ordenCompraSrvc.getDetalle(idoc, { orden_compra_detalle: iddetalle }).subscribe((res: any[]) => {\n      // console.log(res);\n      if (res) {\n        this.detalleOrdenCompra = {\n          orden_compra_detalle: res[0].orden_compra_detalle,\n          orden_compra: res[0].orden_compra,\n          articulo: res[0].articulo.articulo,\n          cantidad: +res[0].cantidad,\n          monto: +res[0].monto,\n          total: +res[0].total\n        };\n        this.showDetalleOrdenCompraForm = true;\n      }\n    });\n  }\n\n  onSubmitDetail = () => {\n    this.detalleOrdenCompra.orden_compra = this.ordenCompra.orden_compra;\n    this.ordenCompraSrvc.saveDetalle(this.detalleOrdenCompra).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.loadDetalleOrdenCompra();\n        this.resetDetalleOrdenCompra();\n      }\n    });\n  }\n\n  updateTableDataSource = () => this.dataSource = new MatTableDataSource(this.detallesOrdenCompra);\n\n  generarIngreso = () => {\n    this.ordenCompra.estatus_movimiento = 2;\n    this.onSubmit();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Orden de compra{{!!ordenCompra.orden_compra ? (' No. ' + ordenCompra.orden_compra) : ''}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showOrdenCompraForm = true;\"\n                *ngIf=\"!showOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showOrdenCompraForm = false;\"\n                *ngIf=\"showOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmOrdenCompra=\"ngForm\" *ngIf=\"showOrdenCompraForm\" (ngSubmit)=\"frmOrdenCompra.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Proveedor</mat-label>\n                <mat-select name=\"proveedor\" [(ngModel)]=\"ordenCompra.proveedor\" required>\n                    <mat-option *ngFor=\"let prov of proveedores\" [value]=\"prov.proveedor\">\n                        ({{prov.nit}}) {{prov.razon_social}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas\" name=\"notas\" [(ngModel)]=\"ordenCompra.notas\">\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Notas\" name=\"notas\" [(ngModel)]=\"ordenCompra.notas\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Tipo de movimiento</mat-label>\n                <mat-select name=\"tipo_movimiento\" [(ngModel)]=\"ordenCompra.tipo_movimiento\">\n                    <mat-option *ngFor=\"let tm of tiposMovimiento\" [value]=\"tm.tipo_movimiento\">\n                        {{tm.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Bodega</mat-label>\n                <mat-select name=\"bodega\" [(ngModel)]=\"ordenCompra.bodega\">\n                    <mat-option *ngFor=\"let bode of bodegas\" [value]=\"bode.bodega\">\n                        {{bode.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"generarIngreso()\"\n                    *ngIf=\"ordenCompra.orden_compra && detallesOrdenCompra.length > 0\"\n                    [disabled]=\"!frmOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0 || !ordenCompra.bodega || !ordenCompra.tipo_movimiento\">\n                    Generar ingreso\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetOrdenCompra()\"\n                    *ngIf=\"ordenCompra.orden_compra\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n<hr *ngIf=\"ordenCompra.orden_compra\" />\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"ordenCompra.orden_compra\">\n    <mat-card-title>\n        <h4>\n            Detalle de orden de compra No. {{ordenCompra.orden_compra}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleOrdenCompraForm = true;\"\n                *ngIf=\"!showDetalleOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleOrdenCompraForm = false;\"\n                *ngIf=\"showDetalleOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmDetalleOrdenCompra=\"ngForm\" *ngIf=\"showDetalleOrdenCompraForm\" (ngSubmit)=\"frmDetalleOrdenCompra.form.valid && onSubmitDetail()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Artículo</mat-label>\n                <mat-select name=\"articulo\" [(ngModel)]=\"detalleOrdenCompra.articulo\" required>\n                    <mat-option *ngFor=\"let a of articulos\" [value]=\"a.articulo\">\n                        {{a.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput type=\"number\" placeholder=\"Cantidad\" name=\"cantidad\" [(ngModel)]=\"detalleOrdenCompra.cantidad\" (change)=\"detalleOrdenCompra.total = +detalleOrdenCompra.monto * +detalleOrdenCompra.cantidad\" required>\n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput type=\"number\" placeholder=\"Monto\" name=\"monto\" [(ngModel)]=\"detalleOrdenCompra.monto\" (change)=\"detalleOrdenCompra.total = +detalleOrdenCompra.monto * +detalleOrdenCompra.cantidad\" required>\n            </mat-form-field>\n            \n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmDetalleOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetDetalleOrdenCompra()\"\n                    *ngIf=\"detalleOrdenCompra.orden_compra_detalle\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n        <hr *ngIf=\"detallesOrdenCompra.length > 0\" />\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\"\n            *ngIf=\"detallesOrdenCompra.length > 0\">\n            <ng-container matColumnDef=\"articulo\">\n                <th mat-header-cell *matHeaderCellDef>Artículo</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{element.articulo.descripcion}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"cantidad\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"monto\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Monto</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.monto | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Total</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.total | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"editItem\">\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\n                    <button mat-raised-button type=\"button\" color=\"accent\"\n                        (click)=\"getDetalleOrdenCompra(element.orden_compra, element.orden_compra_detalle)\"\n                        [disabled]=\"[2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                        Editar\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n    </mat-card-content>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthguardService as AuthGuard } from '../admin/services/authguard.service';\n\nimport { OrdenCompraComponent } from './components/orden-compra/orden-compra/orden-compra.component';\n\nconst routes: Routes = [\n  { path: 'ordcomp', component: OrdenCompraComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/admin/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdenCompraRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { OrdenCompra } from '../interfaces/orden-compra';\nimport { DetalleOrdenCompra } from '../interfaces/detalle-orden-compra';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenCompraService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private ordenCompraUrl = 'compra';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<OrdenCompra[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<OrdenCompra[]>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: OrdenCompra) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/guardar${+entidad.orden_compra > 0 ? ('/' + entidad.orden_compra) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idoc: number, fltr: any = {}): Observable<DetalleOrdenCompra[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<DetalleOrdenCompra[]>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/buscar_detalle/${idoc}?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleOrdenCompra) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/guardar_detalle/${entidad.orden_compra}${+entidad.orden_compra_detalle > 0 ? ('/' + entidad.orden_compra_detalle) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\n\nimport { OrdenCompraRoutingModule } from './orden-compra-routing.module';\nimport { OrdenCompraComponent } from './components/orden-compra/orden-compra/orden-compra.component';\nimport { ListaOrdenCompraComponent } from './components/orden-compra/lista-orden-compra/lista-orden-compra.component';\nimport { FormOrdenCompraComponent } from './components/orden-compra/form-orden-compra/form-orden-compra.component';\n\n\n@NgModule({\n  declarations: [OrdenCompraComponent, ListaOrdenCompraComponent, FormOrdenCompraComponent],\n  imports: [\n    CommonModule,\n    OrdenCompraRoutingModule,\n    SharedModule,\n    HttpClientModule,\n    FormsModule,\n    MatKeyboardModule,\n    MatListModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatTreeModule,\n  ]\n})\nexport class OrdenCompraModule { }\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\nimport { OrdenCompraService } from '../../../services/orden-compra.service';\n\n@Component({\n  selector: 'app-lista-orden-compra',\n  templateUrl: './lista-orden-compra.component.html',\n  styleUrls: ['./lista-orden-compra.component.css']\n})\nexport class ListaOrdenCompraComponent implements OnInit {\n\n  public lstOrdenesCompra: OrdenCompra[];\n  public lstOrdenesCompraPaged: OrdenCompra[];\n  @Output() getOrdenCompraEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private ordenCompraSrvc: OrdenCompraService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadOrdenesCompra();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstOrdenesCompra, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstOrdenesCompraPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstOrdenesCompra.length;\n      this.lstOrdenesCompraPaged = PaginarArray(this.lstOrdenesCompra, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadOrdenesCompra = () => {\n    this.ordenCompraSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstOrdenesCompra = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getOrdenCompra = (obj: any) => {\n    this.getOrdenCompraEv.emit({\n      orden_compra: obj.orden_compra,\n      proveedor: obj.proveedor || 0,\n      fecha: obj.fecha,\n      usuario: obj.usuario || 0,\n      notas: obj.notas,\n      estatus_movimiento: obj.estatus_movimiento || 1\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstOrdenesCompraPaged\" (click)=\"getOrdenCompra(element)\">\n                <mat-icon mat-list-icon>description</mat-icon>\n                <h5 mat-line>No. {{element.orden_compra}}</h5><br/>\n                <p mat-line>\n                    Fecha: {{element.fecha | date: 'dd/MM/yyyy'}}\n                </p>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n"]}