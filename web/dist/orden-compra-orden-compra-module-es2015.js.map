{"version":3,"sources":["./src/app/wms/services/tipo-movimiento.service.ts","./src/app/orden-compra/components/orden-compra/orden-compra/orden-compra.component.ts","./src/app/orden-compra/components/orden-compra/orden-compra/orden-compra.component.html","./src/app/orden-compra/components/orden-compra/form-orden-compra/form-orden-compra.component.ts","./src/app/orden-compra/components/orden-compra/form-orden-compra/form-orden-compra.component.html","./src/app/orden-compra/orden-compra-routing.module.ts","./src/app/orden-compra/services/orden-compra.service.ts","./src/app/orden-compra/orden-compra.module.ts","./src/app/orden-compra/components/orden-compra/lista-orden-compra/lista-orden-compra.component.ts","./src/app/orden-compra/components/orden-compra/lista-orden-compra/lista-orden-compra.component.html"],"names":[],"mappings":"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","file":"orden-compra-orden-compra-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoMovimiento } from '../interfaces/tipo-movimiento';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoMovimientoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<TipoMovimiento[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    }; */\n    return this.http.get<TipoMovimiento[]>(\n      `${GLOBAL.urlCatalogos}/get_tipo_movimiento?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ListaOrdenCompraComponent } from '../lista-orden-compra/lista-orden-compra.component';\nimport { FormOrdenCompraComponent } from '../form-orden-compra/form-orden-compra.component';\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\n\n@Component({\n  selector: 'app-orden-compra',\n  templateUrl: './orden-compra.component.html',\n  styleUrls: ['./orden-compra.component.css']\n})\nexport class OrdenCompraComponent implements OnInit {\n\n  public ordenCompra: OrdenCompra;\n  @ViewChild('lstOrdenCompra') lstOrdenCompraComponent: ListaOrdenCompraComponent;\n  @ViewChild('frmOrdenCompra') frmOrdenCompra: FormOrdenCompraComponent;\n\n  constructor(\n    private ls: LocalstorageService\n  ) {\n    this.ordenCompra = {\n      orden_compra: null, proveedor: null, usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), notas: null, estatus_movimiento: 1, bodega: null, tipo_movimiento: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setOrdenCompra = (oc: OrdenCompra) => {\n    //console.log(oc);\n    this.ordenCompra = oc;\n    this.frmOrdenCompra.loadDetalleOrdenCompra(+this.ordenCompra.orden_compra);\n  }\n\n  refreshOrdenCompraList = () => {\n    this.lstOrdenCompraComponent.loadOrdenesCompra();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-orden-compra #lstOrdenCompra (getOrdenCompraEv)=\"setOrdenCompra($event)\"></app-lista-orden-compra>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-orden-compra #frmOrdenCompra [ordenCompra]=\"ordenCompra\"\n            (ordenCompraSavedEv)=\"refreshOrdenCompraList()\"></app-form-orden-compra>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\n\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\nimport { DetalleOrdenCompra } from '../../../interfaces/detalle-orden-compra';\nimport { OrdenCompraService } from '../../../services/orden-compra.service';\nimport { Proveedor } from '../../../../wms/interfaces/proveedor';\nimport { ProveedorService } from '../../../../wms/services/proveedor.service';\nimport { Articulo } from '../../../../wms/interfaces/articulo';\nimport { ArticuloService } from '../../../../wms/services/articulo.service';\nimport { TipoMovimiento } from '../../../../wms/interfaces/tipo-movimiento';\nimport { TipoMovimientoService } from '../../../../wms/services/tipo-movimiento.service';\nimport { Bodega } from '../../../../wms/interfaces/bodega';\nimport { BodegaService } from '../../../../wms/services/bodega.service';\n\n@Component({\n  selector: 'app-form-orden-compra',\n  templateUrl: './form-orden-compra.component.html',\n  styleUrls: ['./form-orden-compra.component.css']\n})\nexport class FormOrdenCompraComponent implements OnInit {\n\n  @Input() ordenCompra: OrdenCompra;\n  @Output() ordenCompraSavedEv = new EventEmitter();\n\n  public showOrdenCompraForm = true;\n  public showDetalleOrdenCompraForm = true;\n\n  public detallesOrdenCompra: DetalleOrdenCompra[] = [];\n  public detalleOrdenCompra: DetalleOrdenCompra;\n  public displayedColumns: string[] = ['articulo', 'cantidad', 'monto', 'total', 'editItem'];\n  public dataSource: MatTableDataSource<DetalleOrdenCompra>;\n  public proveedores: Proveedor[] = [];\n  public articulos: Articulo[] = [];\n  public tiposMovimiento: TipoMovimiento[] = [];\n  public bodegas: Bodega[] = [];\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private ordenCompraSrvc: OrdenCompraService,\n    private proveedorSrvc: ProveedorService,\n    private articuloSrvc: ArticuloService,\n    private tipoMovimientoSrvc: TipoMovimientoService,\n    private bodegaSrvc: BodegaService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetOrdenCompra();\n    this.loadProveedores();\n    this.loadArticulos();\n    this.loadBodegas();\n    this.loadTiposMovimiento();\n  }\n\n  loadProveedores = () => {\n    this.proveedorSrvc.get().subscribe(res => {\n      if (res) {\n        this.proveedores = res;\n      }\n    });\n  }\n\n  loadTiposMovimiento = () => {\n    this.tipoMovimientoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposMovimiento = res;\n      }\n    });\n  }\n\n  loadBodegas = () => {\n    this.bodegaSrvc.get().subscribe(res => {\n      if (res) {\n        this.bodegas = res;\n      }\n    });\n  }\n\n  resetOrdenCompra = () => {\n    this.ordenCompra = {\n      orden_compra: null, proveedor: null, usuario: (this.ls.get(GLOBAL.usrTokenVar).idusr || 0), notas: null,\n      estatus_movimiento: 1, bodega: null, tipo_movimiento: null\n    };\n    this.resetDetalleOrdenCompra();\n  }\n\n  onSubmit = () => {\n    this.ordenCompraSrvc.save(this.ordenCompra).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.ordenCompraSavedEv.emit();\n        this.resetOrdenCompra();\n        this.ordenCompra = {\n          orden_compra: +res.compra.orden_compra,\n          proveedor: res.compra.proveedor,\n          fecha: res.compra.fecha,\n          usuario: res.compra.usuario,\n          notas: res.compra.notas,\n          estatus_movimiento: 1\n        };\n        this.loadDetalleOrdenCompra(this.ordenCompra.orden_compra);\n      }\n    });\n  }\n\n  loadArticulos = () => {\n    this.articuloSrvc.getArticulos().subscribe(res => {\n      if (res) {\n        this.articulos = res;\n      }\n    });\n  }\n\n  resetDetalleOrdenCompra = () => this.detalleOrdenCompra = {\n    orden_compra_detalle: null, orden_compra: (!!this.ordenCompra.orden_compra ? this.ordenCompra.orden_compra : null), articulo: null,\n    cantidad: null, monto: null, total: null\n  }\n\n  loadDetalleOrdenCompra = (idoc: number = +this.ordenCompra.orden_compra) => {\n    this.ordenCompraSrvc.getDetalle(idoc, { orden_compra: idoc }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.detallesOrdenCompra = res;\n        this.updateTableDataSource();\n      }\n    });\n  }\n\n  getDetalleOrdenCompra = (idoc: number = +this.ordenCompra.orden_compra, iddetalle: number) => {\n    this.ordenCompraSrvc.getDetalle(idoc, { orden_compra_detalle: iddetalle }).subscribe((res: any[]) => {\n      // console.log(res);\n      if (res) {\n        this.detalleOrdenCompra = {\n          orden_compra_detalle: res[0].orden_compra_detalle,\n          orden_compra: res[0].orden_compra,\n          articulo: res[0].articulo.articulo,\n          cantidad: +res[0].cantidad,\n          monto: +res[0].monto,\n          total: +res[0].total\n        };\n        this.showDetalleOrdenCompraForm = true;\n      }\n    });\n  }\n\n  onSubmitDetail = () => {\n    this.detalleOrdenCompra.orden_compra = this.ordenCompra.orden_compra;\n    this.ordenCompraSrvc.saveDetalle(this.detalleOrdenCompra).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.loadDetalleOrdenCompra();\n        this.resetDetalleOrdenCompra();\n      }\n    });\n  }\n\n  updateTableDataSource = () => this.dataSource = new MatTableDataSource(this.detallesOrdenCompra);\n\n  generarIngreso = () => {\n    this.ordenCompra.estatus_movimiento = 2;\n    this.onSubmit();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Orden de compra{{!!ordenCompra.orden_compra ? (' No. ' + ordenCompra.orden_compra) : ''}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showOrdenCompraForm = true;\"\n                *ngIf=\"!showOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showOrdenCompraForm = false;\"\n                *ngIf=\"showOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmOrdenCompra=\"ngForm\" *ngIf=\"showOrdenCompraForm\" (ngSubmit)=\"frmOrdenCompra.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Proveedor</mat-label>\n                <mat-select name=\"proveedor\" [(ngModel)]=\"ordenCompra.proveedor\" required>\n                    <mat-option *ngFor=\"let prov of proveedores\" [value]=\"prov.proveedor\">\n                        ({{prov.nit}}) {{prov.razon_social}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas\" name=\"notas\" [(ngModel)]=\"ordenCompra.notas\">\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Notas\" name=\"notas\" [(ngModel)]=\"ordenCompra.notas\">\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Tipo de movimiento</mat-label>\n                <mat-select name=\"tipo_movimiento\" [(ngModel)]=\"ordenCompra.tipo_movimiento\">\n                    <mat-option *ngFor=\"let tm of tiposMovimiento\" [value]=\"tm.tipo_movimiento\">\n                        {{tm.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Bodega</mat-label>\n                <mat-select name=\"bodega\" [(ngModel)]=\"ordenCompra.bodega\">\n                    <mat-option *ngFor=\"let bode of bodegas\" [value]=\"bode.bodega\">\n                        {{bode.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"generarIngreso()\"\n                    *ngIf=\"ordenCompra.orden_compra && detallesOrdenCompra.length > 0\"\n                    [disabled]=\"!frmOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0 || !ordenCompra.bodega || !ordenCompra.tipo_movimiento\">\n                    Generar ingreso\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetOrdenCompra()\"\n                    *ngIf=\"ordenCompra.orden_compra\">\n                    Nueva\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n<hr *ngIf=\"ordenCompra.orden_compra\" />\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"ordenCompra.orden_compra\">\n    <mat-card-title>\n        <h4>\n            Detalle de orden de compra No. {{ordenCompra.orden_compra}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleOrdenCompraForm = true;\"\n                *ngIf=\"!showDetalleOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleOrdenCompraForm = false;\"\n                *ngIf=\"showDetalleOrdenCompraForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmDetalleOrdenCompra=\"ngForm\" *ngIf=\"showDetalleOrdenCompraForm\" (ngSubmit)=\"frmDetalleOrdenCompra.form.valid && onSubmitDetail()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Artículo</mat-label>\n                <mat-select name=\"articulo\" [(ngModel)]=\"detalleOrdenCompra.articulo\" required>\n                    <mat-option *ngFor=\"let a of articulos\" [value]=\"a.articulo\">\n                        {{a.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput type=\"number\" placeholder=\"Cantidad\" name=\"cantidad\" [(ngModel)]=\"detalleOrdenCompra.cantidad\" (change)=\"detalleOrdenCompra.total = +detalleOrdenCompra.monto * +detalleOrdenCompra.cantidad\" required>\n            </mat-form-field>\n\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input matInput type=\"number\" placeholder=\"Monto\" name=\"monto\" [(ngModel)]=\"detalleOrdenCompra.monto\" (change)=\"detalleOrdenCompra.total = +detalleOrdenCompra.monto * +detalleOrdenCompra.cantidad\" required>\n            </mat-form-field>\n            \n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmDetalleOrdenCompra.form.valid || [2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetDetalleOrdenCompra()\"\n                    *ngIf=\"detalleOrdenCompra.orden_compra_detalle\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n        <hr *ngIf=\"detallesOrdenCompra.length > 0\" />\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\"\n            *ngIf=\"detallesOrdenCompra.length > 0\">\n            <ng-container matColumnDef=\"articulo\">\n                <th mat-header-cell *matHeaderCellDef>Artículo</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{element.articulo.descripcion}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"cantidad\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Cantidad</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.cantidad | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"monto\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Monto</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.monto | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Total</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.total | number:'1.2-2'}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"editItem\">\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\n                    <button mat-raised-button type=\"button\" color=\"accent\"\n                        (click)=\"getDetalleOrdenCompra(element.orden_compra, element.orden_compra_detalle)\"\n                        [disabled]=\"[2, 3].indexOf(+ordenCompra.estatus_movimiento) >= 0\">\n                        Editar\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n    </mat-card-content>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthguardService as AuthGuard } from '../admin/services/authguard.service';\n\nimport { OrdenCompraComponent } from './components/orden-compra/orden-compra/orden-compra.component';\n\nconst routes: Routes = [\n  { path: 'ordcomp', component: OrdenCompraComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/admin/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdenCompraRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { OrdenCompra } from '../interfaces/orden-compra';\nimport { DetalleOrdenCompra } from '../interfaces/detalle-orden-compra';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenCompraService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private ordenCompraUrl = 'compra';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<OrdenCompra[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<OrdenCompra[]>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: OrdenCompra) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/guardar${+entidad.orden_compra > 0 ? ('/' + entidad.orden_compra) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idoc: number, fltr: any = {}): Observable<DetalleOrdenCompra[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<DetalleOrdenCompra[]>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/buscar_detalle/${idoc}?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleOrdenCompra) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlWms}/${this.ordenCompraUrl}/guardar_detalle/${entidad.orden_compra}${+entidad.orden_compra_detalle > 0 ? ('/' + entidad.orden_compra_detalle) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\n\nimport { OrdenCompraRoutingModule } from './orden-compra-routing.module';\nimport { OrdenCompraComponent } from './components/orden-compra/orden-compra/orden-compra.component';\nimport { ListaOrdenCompraComponent } from './components/orden-compra/lista-orden-compra/lista-orden-compra.component';\nimport { FormOrdenCompraComponent } from './components/orden-compra/form-orden-compra/form-orden-compra.component';\n\n\n@NgModule({\n  declarations: [OrdenCompraComponent, ListaOrdenCompraComponent, FormOrdenCompraComponent],\n  imports: [\n    CommonModule,\n    OrdenCompraRoutingModule,\n    SharedModule,\n    HttpClientModule,\n    FormsModule,\n    MatKeyboardModule,\n    MatListModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatTreeModule,\n  ]\n})\nexport class OrdenCompraModule { }\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { OrdenCompra } from '../../../interfaces/orden-compra';\nimport { OrdenCompraService } from '../../../services/orden-compra.service';\n\n@Component({\n  selector: 'app-lista-orden-compra',\n  templateUrl: './lista-orden-compra.component.html',\n  styleUrls: ['./lista-orden-compra.component.css']\n})\nexport class ListaOrdenCompraComponent implements OnInit {\n\n  public lstOrdenesCompra: OrdenCompra[];\n  public lstOrdenesCompraPaged: OrdenCompra[];\n  @Output() getOrdenCompraEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    private ordenCompraSrvc: OrdenCompraService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.loadOrdenesCompra();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstOrdenesCompra, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstOrdenesCompraPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstOrdenesCompra.length;\n      this.lstOrdenesCompraPaged = PaginarArray(this.lstOrdenesCompra, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadOrdenesCompra = () => {\n    this.ordenCompraSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstOrdenesCompra = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getOrdenCompra = (obj: any) => {\n    this.getOrdenCompraEv.emit({\n      orden_compra: obj.orden_compra,\n      proveedor: obj.proveedor || 0,\n      fecha: obj.fecha,\n      usuario: obj.usuario || 0,\n      notas: obj.notas,\n      estatus_movimiento: obj.estatus_movimiento || 1\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" (input)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n            <input matInput *ngIf=\"esMovil\" (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstOrdenesCompraPaged\" (click)=\"getOrdenCompra(element)\">\n                <mat-icon mat-list-icon>description</mat-icon>\n                <h5 mat-line>No. {{element.orden_compra}}</h5><br/>\n                <p mat-line>\n                    Fecha: {{element.fecha | date: 'dd/MM/yyyy'}}\n                </p>\n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n"],"sourceRoot":"webpack:///"}