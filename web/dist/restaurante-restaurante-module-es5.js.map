{"version":3,"sources":["webpack:///src/app/restaurante/services/tipo-turno.service.ts","webpack:///src/app/restaurante/services/autoconsulta.service.ts","webpack:///src/app/restaurante/components/propina/lista-propina/lista-propina.component.ts","webpack:///src/app/restaurante/components/propina/lista-propina/lista-propina.component.html","webpack:///src/app/restaurante/components/reportes/factura/factura.component.ts","webpack:///src/app/restaurante/components/reportes/factura/factura.component.html","webpack:///src/app/restaurante/components/caja-corte/cajacorte-lista/cajacorte-lista.component.ts","webpack:///src/app/restaurante/components/caja-corte/cajacorte-lista/cajacorte-lista.component.html","webpack:///src/app/restaurante/components/turno/turno/turno.component.ts","webpack:///src/app/restaurante/components/turno/turno/turno.component.html","webpack:///src/app/restaurante/components/abrir-mesa/abrir-mesa.component.ts","webpack:///src/app/restaurante/components/abrir-mesa/abrir-mesa.component.html","webpack:///src/app/admin/services/usuario-tipo.service.ts","webpack:///src/app/restaurante/components/lista-productos-comanda/lista-productos-comanda.component.ts","webpack:///src/app/restaurante/components/lista-productos-comanda/lista-productos-comanda.component.html","webpack:///src/app/restaurante/components/propina/propina/propina.component.ts","webpack:///src/app/restaurante/components/propina/propina/propina.component.html","webpack:///src/app/restaurante/components/area/area-designer/area-designer.component.ts","webpack:///src/app/restaurante/components/area/area-designer/area-designer.component.html","webpack:///src/app/restaurante/services/area.service.ts","webpack:///src/app/restaurante/components/area/form-area/form-area.component.ts","webpack:///src/app/restaurante/components/area/form-area/form-area.component.html","webpack:///src/app/restaurante/components/turno/selecciona-turno-previo/selecciona-turno-previo.component.ts","webpack:///src/app/restaurante/components/turno/selecciona-turno-previo/selecciona-turno-previo.component.html","webpack:///src/app/restaurante/components/reportes/rpt-ventas/por-articulo/por-articulo.component.html","webpack:///src/app/restaurante/components/reportes/rpt-ventas/por-articulo/por-articulo.component.ts","webpack:///src/app/restaurante/components/notas-generales-comanda/notas-generales-comanda.component.ts","webpack:///src/app/restaurante/components/notas-generales-comanda/notas-generales-comanda.component.html","webpack:///src/app/restaurante/components/traslado-mesa/traslado-mesa.component.ts","webpack:///src/app/restaurante/components/traslado-mesa/traslado-mesa.component.html","webpack:///src/app/restaurante/services/reporte-ventas.service.ts","webpack:///src/app/restaurante/services/cajacorte.service.ts","webpack:///src/app/restaurante/components/propina/form-propina/form-propina.component.ts","webpack:///src/app/restaurante/components/propina/form-propina/form-propina.component.html","webpack:///src/app/restaurante/components/distribuir-productos-cuentas/distribuir-productos-cuentas.component.ts","webpack:///src/app/restaurante/components/distribuir-productos-cuentas/distribuir-productos-cuentas.component.html","webpack:///src/app/restaurante/components/tran-comanda-alt/tran-comanda-alt.component.ts","webpack:///src/app/restaurante/components/tran-comanda-alt/tran-comanda-alt.component.html","webpack:///src/app/restaurante/components/turno-tipo/lista-turno/lista-turno.component.ts","webpack:///src/app/restaurante/components/turno-tipo/lista-turno/lista-turno.component.html","webpack:///src/app/restaurante/components/mesa/mesa.component.ts","webpack:///src/app/restaurante/components/mesa/mesa.component.html","webpack:///src/app/restaurante/components/pide-datos-cuentas/pide-datos-cuentas.component.ts","webpack:///src/app/restaurante/components/pide-datos-cuentas/pide-datos-cuentas.component.html","webpack:///src/app/restaurante/components/area/configura-mesa/configura-mesa.component.ts","webpack:///src/app/restaurante/components/area/configura-mesa/configura-mesa.component.html","webpack:///src/app/restaurante/components/reportes/caja/caja.component.ts","webpack:///src/app/restaurante/components/reportes/caja/caja.component.html","webpack:///src/app/restaurante/components/reportes/autoconsulta/autoconsulta.component.ts","webpack:///src/app/restaurante/components/reportes/autoconsulta/autoconsulta.component.html","webpack:///src/app/restaurante/components/turno-tipo/form-turno/form-turno.component.ts","webpack:///src/app/restaurante/components/turno-tipo/form-turno/form-turno.component.html","webpack:///src/app/restaurante/components/reportes/rpt-ventas/rpt-ventas.component.ts","webpack:///src/app/restaurante/components/reportes/rpt-ventas/rpt-ventas.component.html","webpack:///src/app/restaurante/components/acciones-comanda/acciones-comanda.component.ts","webpack:///src/app/restaurante/components/acciones-comanda/acciones-comanda.component.html","webpack:///src/app/restaurante/components/area/lista-area/lista-area.component.ts","webpack:///src/app/restaurante/components/area/lista-area/lista-area.component.html","webpack:///src/app/restaurante/components/reportes/propinas/propinas.component.ts","webpack:///src/app/restaurante/components/reportes/propinas/propinas.component.html","webpack:///src/app/restaurante/services/propina.service.ts","webpack:///src/app/restaurante/services/mesa.service.ts","webpack:///src/app/restaurante/components/tran-areas/tran-areas.component.ts","webpack:///src/app/restaurante/components/tran-areas/tran-areas.component.html","webpack:///src/app/restaurante/restaurante-routing.module.ts","webpack:///src/app/restaurante/components/caja-corte/cajacorte/cajacorte.component.ts","webpack:///src/app/restaurante/components/caja-corte/cajacorte/cajacorte.component.html","webpack:///src/app/restaurante/components/nueva-cuenta/nueva-cuenta.component.ts","webpack:///src/app/restaurante/components/nueva-cuenta/nueva-cuenta.component.html","webpack:///src/app/restaurante/components/unir-cuenta/unir-cuenta.component.ts","webpack:///src/app/restaurante/components/unir-cuenta/unir-cuenta.component.html","webpack:///src/app/restaurante/services/turno.service.ts","webpack:///src/app/restaurante/restaurante.module.ts","webpack:///src/app/restaurante/components/turno-tipo/turno/turno.component.ts","webpack:///src/app/restaurante/components/turno-tipo/turno/turno.component.html","webpack:///src/app/restaurante/components/tran-comanda/tran-comanda.component.ts","webpack:///src/app/restaurante/components/tran-comanda/tran-comanda.component.html","webpack:///node_modules/ngx-barcodeput/__ivy_ngcc__/fesm2015/ngx-barcodeput.js","webpack:///src/app/restaurante/components/reportes/rpt-ventas/por-categoria/por-categoria.component.html","webpack:///src/app/restaurante/components/reportes/rpt-ventas/por-categoria/por-categoria.component.ts","webpack:///src/app/restaurante/components/caja-corte/cajacorte-form/cajacorte-form.component.ts","webpack:///src/app/restaurante/components/caja-corte/cajacorte-form/cajacorte-form.component.html","webpack:///src/app/restaurante/components/comanda-en-linea/comanda-en-linea.component.ts","webpack:///src/app/restaurante/components/comanda-en-linea/comanda-en-linea.component.html","webpack:///src/app/restaurante/components/reportes/turnos/turnos.component.ts","webpack:///src/app/restaurante/components/reportes/turnos/turnos.component.html","webpack:///src/app/restaurante/components/turno/lista-turno/lista-turno.component.ts","webpack:///src/app/restaurante/components/turno/lista-turno/lista-turno.component.html","webpack:///src/app/restaurante/classes/tran-comanda.ts","webpack:///src/app/restaurante/components/turno/form-turno/form-turno.component.ts","webpack:///src/app/restaurante/components/turno/form-turno/form-turno.component.html","webpack:///src/app/restaurante/components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component.ts","webpack:///src/app/restaurante/components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component.html","webpack:///src/app/restaurante/components/tran-cocina/tran-cocina.component.ts","webpack:///src/app/restaurante/components/tran-cocina/tran-cocina.component.html","webpack:///src/app/restaurante/components/area/area/area.component.ts","webpack:///src/app/restaurante/components/area/area/area.component.html"],"names":["TipoTurnoService","http","moduleUrl","srvcErrHndl","fltr","get","urlMantenimientos","pipe","reintentos","errorHandler","entidad","post","turno_tipo","AutoconsultaService","urlCatalogos","httpOptions","headers","Accept","responseType","urlAppRestaurante","ListaPropinaComponent","propinaSrvc","displayedColumns","getPropinaEv","loadPropinas","subscribe","lst","length","lstPropinas","dataSource","paginator","getPropina","obj","emit","filterValue","filter","trim","toLowerCase","applyFilter","FacturaComponent","snackBar","pdfServicio","params","titulo","cargando","configBotones","showPdf","showHtml","showExcel","isPdfDisabled","isExcelDisabled","resetParams","fdel","startOf","format","dbDateFormat","fal","chkDates","_excel","getReporteFactura","res","blob","Blob","type","open","duration","excelClick","onSubmit","CajacorteListaComponent","ccorteSrvc","_snackBar","getCajacorteEv","getCajascortes","buscar","listacc","anularCaja","confirm","anularCorte","exito","mensaje","getCajacorte","filtro","filtrar","TurnoComponent","setTurno","trn","turno","frmTurno","loadDetalleTurno","pendientes","comandas","facturas","refreshTurnoList","lstTurnoComponent","loadTurnos","inicio","dbDateTimeFormat","fin","AbrirMesaComponent","dialogRef","data","dialogDatosCuentas","usuarioSrvc","ls","lstMeseros","esMovil","loadMeseros","getMeserosTurno","toNumber","valor","usrTokenVar","enmovil","keyboardLayout","IDIOMA_TECLADO","pideDatosCuentasRef","width","disableClose","cuentas","comensales","afterClosed","result","close","dividirCuentasPorSillas","pedirDatosDeCuentas","terminar","UsuarioTipoService","ListaProductosComandaComponent","comandaSrvc","socket","dialog","listaProductos","noCuenta","listHeight","IdComanda","IdCuenta","bloqueoBotones","mesaEnUso","productoRemovedEv","totalDeProductos","cantidadDeProductos","removeProducto","p","idx","estaAutorizado","cantidad","detalleComanda","detalle_cuenta","detalle_comanda","articulo","id","precio","total","notas","autorizado","saveDetalle","comanda","mesaenuso","deleteProductoFromList","deleteProductoFromListAfterPrinted","dialogoRef","dialogDelete","respuesta","producto","saveNotasProducto","getTotalProductos","monto_extra","changes","console","log","showInputNotas","itemListHeight","ev","PropinaComponent","setPropina","pres","propina","propina_distribucion","usuario_tipo","porcentaje","anulado","sede","grupal","refreshPropinaList","lstPropinaComponent","AreaDesignerComponent","mesaSrvc","mesas","contextMenuPosition","x","y","getNextTableNumber","reduce","max","numero","addTable","w","h","esmostrador","vertical","escallcenter","push","mesa","area","posx","posy","tamanio","estatus","ancho","alto","saveNewMesa","addMostrador","esVertical","addCallCenter","pos","save","onClickMesa","configurarMesa","item","configMesaRef","toggleDeBaja","deBaja","confBajaMesa","maxWidth","conf","debaja","findIndex","m","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","AreaService","FormAreaComponent","entidadSrvc","impresoraSrvc","entidadSavedEv","sedeUsr","lstAreas","impresoras","loadAreas","loadImpresoras","resetEntidad","nombre","impresora_factura","impresora","openDesigner","areaDesignerRef","SeleccionaTurnoPrevioComponent","turnoSrvc","lstTurnos","limite","i","cancelar","copiar","turnoSelected","confDialog","resConf","replicaDetalleTurno","turnoCopia","PorArticuloComponent","NotasGeneralesComandaComponent","TrasladoMesaComponent","mesasDisponibles","loadMesasDisponibles","getDisponibles","trasladar","trasladarMesa","destino","ReporteVentasService","urlFacturacion","CajacorteService","FormPropinaComponent","propinaSavedEv","usuarios","loadUsuario","resetPropina","DistribuirProductosCuentasComponent","cantidadProducto","cpLstProductos","compLstProductos","guardar","lstObj","idcuenta","cuenta","distribuirCuentas","meu","mesero","usuario","replaceUnica","lstProductos","forEach","laCta","find","c","cerrada","JSON","parse","stringify","TranComandaAltComponent","configSrvc","articuloSrvc","bsAccionesCmd","categorias","subCategorias","listaSubCategorias","articulos","fullListArticulos","setDatos","alIniciar","setSelectedCuenta","cerrar","resetArticulos","resetListaSubCategorias","loadArticulosDePOS","endSubs","add","getArticulosDePOS","subcategorias","loadSubcategorias","cat","subcat","sc","categoria","splice","filterArticulos","categoria_grupo","idsubcat","a","addArticulo","art","descripcion","presentacion","codigo","combo","multiple","agregarProductos","usaCodigoBarras","getConfig","CONSTANTES","RT_USA_CODIGO_BARRAS","unsubscribe","abrirAccionesComanda","updProductosCuenta","ListaTurnoTipoComponent","getTurnoEv","pageSize","pageSizeOptions","pageIndex","txtFiltro","getTurno","pageChange","e","tmpList","lstTurnosPaged","MesaComponent","configuracion","etiqueta","dontAllowDrag","isDisabled","moviendoMesa","urlImage","ngAfterViewInit","objMesa","divMesa","nativeElement","clickMesa","mesaSelected","getAncho","getAlto","dragEnded","source","element","parentSize","offsetParent","scrollWidth","scrollHeight","distancia","distance","updMesa","Math","abs","offsetLeft","offsetTop","dragStarted","PideDatosCuentasComponent","tcn","todosConNombre","setTableDataSource","eliminarFila","cta","map","agregarFila","ctas","productos","ConfiguraMesaComponent","guardarConfiguracion","CajaComponent","tipoTurnoSrvc","fpagoSrvc","sedeSrvc","_validar","tiposTurno","fpagos","sedes","grupos","loadFormaPago","loadSedes","getSedes","reporte","loadTiposTurno","_pagos","getReporteCaja","AutoconsultaComponent","autoconsultaSrvc","campos","datos","fechas","orden","getReporte","key","getCampos","tipo","por_fecha","ordenar_por","FormTurnoTipoComponent","turnoSavedEv","resetTurno","activo","RptVentasComponent","rptVentasSrvc","tiposReporte","paramsToSend","msgGenerandoReporte","porCategoria","porArticulo","tituloCategoria","tituloArticulo","loadTiposReporte","tipo_reporte","undefined","endOf","getEnPantalla","getPdf","getExcel","getPorCategoriaPdf","getPorArticuloPdf","getPorCategoriaExcel","getPorArticuloExcel","cleanParams","porCategoriaPdf","porArticuloPdf","getPorCategoriaEnPantalla","getPorArticuloEnPantalla","AccionesComandaComponent","bsAccionesComanda","dismiss","notasGenerales","tranComanda","getNotasGenerales","comandar","validarImpresion","imprimirCuenta","printCuenta","distribuirProductos","unirCuentas","cobrarCuenta","enviarPedido","trasladoMesa","cerrarMesa","ListaAreaComponent","areaSrvc","getEntidadEv","loadEntidades","lstEntidades","getEntidad","lstEntidadesPaged","PropinasComponent","isHtmlDisabled","getReportePropina","PropinaService","MesaService","TranAreasComponent","divSize","lstTabsAreas","lstTabsAreasForUpdate","configTipoPantalla","clientePedido","actualizar","mesaSeleccionada","areaIndex","mesaIndex","toggleRightSidenav","resetMesaSeleccionada","area_padre","saveOnTemp","objMesaEnUso","updateTableStatus","setEstatusMesa","rightSidenav","opened","onResize","setDivSize","aperturaCargaMesa","openAbrirMesaDialog","loadComandaMesa","idxArea","idxMesa","l","guardarMesa","mesaSeleccionadaToOpen","snTrancomanda","llenaProductosSeleccionados","rolesUsuario","turno_rol","openTranComandaAlt","toggle","then","cerrandoRightSideNav","resetMesaEnUso","resetLstProductosDeCuenta","resetLstProductosSeleccionados","resetCuentaActiva","resetListadoArticulos","checkEstatusMesa","msnOpenedChange","abierto","abiertas","fuerzaCierreComanda","shouldToggle","cerrarEstacion","resCierre","tranComandaRef","maxHeight","height","getComandaDeMesa","Array","isArray","sede_uuid","on","RT_PANTALLA_TOMA_COMANDA","setTimeout","varCliPedido","rtClientePedido","clear","pideTelefonoRef","cli","set","nombreArea","tabArea","textLabel","esEvento","abrirMesaRef","idusr","routes","path","component","canActivate","redirectTo","pathMatch","RestauranteRoutingModule","forChild","CajacorteComponent","editarCajaCorte","ccorte","actualizaLista","lstCajacorteComponent","caja_corte","creacion","confirmado","caja_corte_tipo","detalle","NuevaCuentaComponent","nuevaCuenta","toUpperCase","UnirCuentaComponent","deCuenta","aCuenta","unificarCuentas","TurnoService","idturno","idTurnoOriginal","idTurnoCopia","RestauranteModule","TurnoTipoComponent","TranComandaComponent","closeSideNavEv","mesaSavedEv","showPortalComanda","showPortalCuenta","noComanda","sumCuenta","impreso","codigoBarras","imprimeRecetaEnComanda","numero_pedido","lstProductosSeleccionados","lstProductosDeCuenta","cuentaActiva","appLstProdAlt","loadArbolArticulos","setListaCategorias","cats","setVerBotones","loopSubCategoria","mostrar_pos","mostrarEnPos","clickOnCategoria","fillSubCategorias","buscarArticulo","getArticulos","arts","txtCodigoBarras","focus","conQueMesa","numero_cuenta","parseFloat","esreceta","printToBT","msgToPrint","convertir","RT_ENVIA_COMO_BASE64","encode","AppHref","DEEP_LINK_ANDROID","replace","window","location","href","error","printComandaPDF","getComanda","url","URL","createObjectURL","sumaDetalle","prepProductosComanda","idxCta","objCmd","setProductoImpreso","resImp","cambiarEstatusCuenta","esCajero","trasladoRef","ngenDialog","notas_generales","notasGen","saveNotasGenerales","nuevaCuentaRef","distProdCtaRef","RT_IMPRIME_RECETA_EN_COMANDA","setLstProductosDeCuenta","lista","suma","noCta","confirmRef","seleccion","receta","saveDetalleCombo","resSaveDetCmb","addProductoSelected","tmp","nvaLista","lstTemp","concat","prods","toPdf","ingresarPedido","RT_INGRESO_NUMERO_PEDIDO","pedidos","RT_TOTAL_NUMEROS_PEDIDO","pedido","printComanda","modoComanda","RT_MODO_COMANDA","lstProductosAImprimir","AImpresoraNormal","AImpresoraBT","bluetooth","d","Tipo","Nombre","Numero","DetalleCuenta","Ubicacion","Mesero","nombres","apellidos","Total","NumeroPedido","NotasGenerales","setSumaCuenta","totalCuenta","printerToUse","imprimePropSugerida","RT_IMPRIME_PROPINA_SUGERIDA","Empresa","empresa","Restaurante","restaurante","PropinaSugerida","toFixed","Impresora","unirCuentaRef","getCuenta","pendiente","productosACobrar","cobrarCtaRef","porcentajePropina","resAC","NgxBarCodePutDirective","elementRef","debounce","skipStart","onDelete","onDetected","destroy$","events","pressed","which","timeStamp","Object","assign","keyCode","code","value","target","time","next","complete","ɵfac","NgxBarCodePutDirective_Factory","t","ɵdir","selectors","inputs","outputs","ctorParameters","propDecorators","ngDevMode","args","selector","NgxBarCodePutModule","ɵmod","ɵinj","factory","NgxBarCodePutModule_Factory","ngJitMode","declarations","exports","PorCategoriaComponent","CajacorteFormComponent","cajacorteSrvc","cajacorteSavedEv","ccorteTipo","ccorteNomi","caja_corte_detalle","caja_corte_nominacion","getCajaCorteTipo","getCajaCorteNominacion","setTotal","o","calcula","setNamenomi","setNameTipo","reseteGeneral","resetDetalle","agregarDetalle","anularCajaDetalle","anularDetalle","indexOf","ComandaEnLineaComponent","facturaSrvc","dns","ordenGkSrvc","columnsToDisplay","comandasEnLinea","de","avisoSocketIOEvent","aviso","confirma","notificarUsuario","opciones","icon","body","dateTimeFormat","dir","createNotification","loadComandasEnLinea","getComandasOnLIne","setToPrint","lstArticulos","direccion_ip","ubicacion","imprimir","objToPrint","Indice","NoOrdenEnLinea","origen_datos","numero_orden","DireccionEntrega","direccion_entrega","orden_gk","estatus_orden_gk","comentario","cambiarEstatusOrdenGK","wref","firmar","factura","modoFactura","RT_MODO_FACTURA","printFactura","representacionGrafica","fact","datosOrigen","dataToPrint","NombreEmpresa","nombre_comercial","NitEmpresa","nit","SedeEmpresa","sedeFactura","DireccionEmpresa","direccion","Fecha","fecha_factura","dateFormat","Nit","receptor","Direccion","Serie","serie_factura","numero_factura","NoAutorizacion","fel_uuid","NombreCertificador","certificador_fel","NitCertificador","FechaDeAutorizacion","fecha_autorizacion","FormaDePago","metodo_pago","join","DetalleFactura","det","Cantidad","parseInt","Descripcion","PrecioUnitario","precio_unitario","idfactura","getGrafo","openLinkWindow","documento","openPdfDocument","pdf","pdfWindow","document","write","encodeURI","imprimirLote","cancelarPedido","input","select","label","requerido","resultado","config","resAnula","cambiarEstatus","corporacion","suuid","msg","attempt","minHeight","TurnosComponent","configParams","isRequiredFDel","isRequiredFAl","ListaTurnoComponent","fecha","TranComanda","bs","autoFocus","afterDismissed","FormTurnoComponent","usuarioTipoSrvc","showTurnoForm","showDetalleTurnoForm","detallesTurno","tiposUsuario","loadTiposUsuario","loadUsuarios","resetDetalleTurno","updateTableDataSource","saveInfoTurno","isValid","detalleTurno","getDetalle","onSubmitDetail","anularDetalleTurno","getNow","copiaDetalleTurno","ValidaPwdGerenteTurnoComponent","pwd","validaPwdGerenteTurno","esgerente","TranCocinaComponent","lstComandasCocina","lstComandasCocinaEnProceso","loadComandasCocina","getComandasCocina","enproceso","setTiempo","msecPerMinute","msecPerHour","msecPerDay","date","Date","fecha_proceso","inicio_proceso","dateMsec","getTime","interval","days","floor","hours","minutes","seconds","tiempo","setHours","setMinutes","setSeconds","tiempo_transcurrido","tiempo_preparacion","split","getHours","getMinutes","fin_proceso","comparaFecha","cmd","setCocinado","setComandaCocinada","setInterval","AreaComponent","setArea","refreshAreaList","lstAreasComponent"],"mappings":"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","file":"restaurante-restaurante-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { TipoTurno } from '../interfaces/tipo-turno';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TipoTurnoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'turno';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<TipoTurno[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<TipoTurno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_turno_tipo?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: TipoTurno) {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar_turno_tipo${entidad.turno_tipo ? ('/' + entidad.turno_tipo) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Campo } from '../interfaces/autoconsulta';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AutoconsultaService {\n  private srvcErrHndl: ServiceErrorHandler;\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  getCampos(fltr: any = {}): Observable<Campo[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    };*/\n    return this.http.get<Campo[]>(\n      `${GLOBAL.urlCatalogos}/get_campos?${qs.stringify(fltr)}`\n      // httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getReporte(fltr: any = {}) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        // 'Authorization': this.usrToken,\n        Accept: 'application/vnd.ms-excel'\n      }),\n      responseType: 'blob' as 'json'\n    };\n    return this.http.post<string>(\n      `${GLOBAL.urlAppRestaurante}/reporte/autoconsulta`,\n      fltr,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { Propina } from '../../../interfaces/propina';\nimport { PropinaService } from '../../../services/propina.service';\n\n@Component({\n  selector: 'app-lista-propina',\n  templateUrl: './lista-propina.component.html',\n  styleUrls: ['./lista-propina.component.css']\n})\nexport class ListaPropinaComponent implements OnInit {\n\n  public displayedColumns: string[] = ['propina'];\n  public dataSource: MatTableDataSource<Propina>;\n  public lstPropinas: Propina[];\n  @Output() getPropinaEv = new EventEmitter();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(private propinaSrvc: PropinaService) { }\n\n  ngOnInit() {\n    this.loadPropinas();\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  loadPropinas = () => {\n    this.propinaSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstPropinas = lst;\n          this.dataSource = new MatTableDataSource(this.lstPropinas);\n          this.dataSource.paginator = this.paginator;\n        }\n      }\n    });\n  }\n\n  getPropina = (obj: Propina) => {\n    this.getPropinaEv.emit(obj);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field>\n            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar...\">\n        </mat-form-field>\n        <table mat-table [dataSource]=\"dataSource\">\n            <ng-container matColumnDef=\"propina\">\n                <!--<th mat-header-cell *matHeaderCellDef> No. </th>-->\n                <td mat-cell *matCellDef=\"let element\" (click)=\"getPropina(element)\">\n                    <mat-list>\n                        <mat-list-item>\n                            <mat-icon mat-list-icon>line_weight</mat-icon>\n                            <h5 mat-line>{{element.porcentaje}}%</h5>\n                            <span mat-line>{{element.usuario_tipo.descripcion}}</span>\n                            <button mat-icon-button type=\"button\" color=\"accent\">\n                                <mat-icon>arrow_right_alt</mat-icon>\n                            </button>\n                        </mat-list-item>\n                    </mat-list>\n                </td>\n            </ng-container>\n            <!--<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>-->\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-factura',\n  templateUrl: './factura.component.html',\n  styleUrls: ['./factura.component.css']\n})\nexport class FacturaComponent implements OnInit {\n  public params: any = {};\n  public titulo = 'Facturas';\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: false, showExcel: true, isPdfDisabled: false, isExcelDisabled: false\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService\n  ) { }\n\n  ngOnInit() {\n    this.resetParams();\n  }\n\n  resetParams = () => {\n    this.params = {\n      fdel: moment().startOf('month').format(GLOBAL.dbDateFormat),\n      fal: moment().format(GLOBAL.dbDateFormat)\n    };\n    this.cargando = false;\n  }\n\n  onSubmit() {\n    this.cargando = true;\n    this.params._excel = 0;\n    this.pdfServicio.getReporteFactura(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  excelClick() {\n    this.cargando = true;\n    this.params._excel = 1;\n    this.pdfServicio.getReporteFactura(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  chkDates = () => {\n    this.configBotones.isPdfDisabled = (!this.params.fdel || !this.params.fal);\n    this.configBotones.isExcelDisabled = (!this.params.fdel || !this.params.fal);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de facturas</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptFactura=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" (change)=\"chkDates()\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" (change)=\"chkDates()\" required>\n          </mat-form-field>\n          <div class=\"row\">\n            <div class=\"col\">\n              <mat-checkbox name=\"detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n            </div>\n            <div class=\"col\">\n              <mat-checkbox name=\"anuladas\" class=\"fullWidth\" [(ngModel)]=\"+params._anuladas\">Mostrar Únicamente Anuladas</mat-checkbox>\n            </div>\n          </div>          \n          <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ccGeneral } from '../../../interfaces/cajacorte';\nimport { CajacorteService } from '../../../services/cajacorte.service';\n\n@Component({\n  selector: 'app-cajacorte-lista',\n  templateUrl: './cajacorte-lista.component.html',\n  styleUrls: ['./cajacorte-lista.component.css']\n})\nexport class CajacorteListaComponent implements OnInit {\n\n  public displayedColumns: string[] = ['ccGeneral'];\n  public dataSource: MatTableDataSource<ccGeneral>;\n  public listacc: ccGeneral[];\n  @Output() getCajacorteEv = new EventEmitter();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private ccorteSrvc: CajacorteService,\n    private _snackBar: MatSnackBar\n   ) { }\n\n  ngOnInit() {\n    this.getCajascortes();\n  }\n\n  filtrar (filtro: string) {\n    this.dataSource.filter = filtro.trim().toLowerCase();\n  };\n\n  getCajascortes = () => {\n    this.ccorteSrvc.buscar().subscribe(lst => {\n      this.listacc = lst;\n      this.dataSource = new MatTableDataSource(this.listacc);\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  anularCaja = (obj: ccGeneral) => {\n    if (confirm('¿Si anula este corte, se anulará también las nominaciones.?')) {\n      this.ccorteSrvc.anularCorte(obj).subscribe(res => {\n        if (res.exito) {\n          this.getCajascortes();\n        }\n        this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n      });\n    }\n  }\n\n  getCajacorte = (obj: ccGeneral) => {\n    this.getCajacorteEv.emit(obj);\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n  <mat-card-content>\n    <mat-form-field>\n\t    <input matInput (keyup)=\"filtrar($event.target.value)\" placeholder=\"Buscar...\">\n\t</mat-form-field>\n\t<table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"ccGeneral\">\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-list>\n                    <mat-list-item>\n                        <mat-icon class=\"anulaicon\" (click)=\"anularCaja(element)\" mat-list-icon>close</mat-icon>\n                        <h5 mat-line>{{ element.descripcion }}</h5>\n                        <span mat-line>{{ element.creacion }}</span>\n                        <span mat-line>Total: {{ element.total }}</span>\n                        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"getCajacorte(element)\">\n                            <mat-icon>arrow_right_alt</mat-icon>\n                        </button>\n                    </mat-list-item>\n                </mat-list>\n            </td>\n        </ng-container>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, ViewChild } from '@angular/core';\n//import { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { ListaTurnoComponent } from '../lista-turno/lista-turno.component';\nimport { FormTurnoComponent } from '../form-turno/form-turno.component';\nimport { Turno } from '../../../interfaces/turno';\n\n@Component({\n  selector: 'app-turno',\n  templateUrl: './turno.component.html',\n  styleUrls: ['./turno.component.css']\n})\nexport class TurnoComponent implements OnInit {\n\n  public turno: Turno;\n  @ViewChild('lstTurno') lstTurnoComponent: ListaTurnoComponent;\n  @ViewChild('frmTurno') frmTurno: FormTurnoComponent;\n\n  constructor(\n    //private ls: LocalstorageService\n  ) {\n    this.turno = {\n      turno: null, turno_tipo: null, inicio: moment().format(GLOBAL.dbDateTimeFormat), fin: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setTurno = (trn: Turno) => {\n    //console.log(trn); \n    this.turno = trn;\n    this.frmTurno.loadDetalleTurno(+this.turno.turno);\n    this.frmTurno.pendientes = false;\n    this.frmTurno.comandas = []\n    this.frmTurno.facturas = []\n  }\n\n  refreshTurnoList = () => this.lstTurnoComponent.loadTurnos();\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-turno #lstTurno (getTurnoEv)=\"setTurno($event)\"></app-lista-turno>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-turno #frmTurno [turno]=\"turno\" (turnoSavedEv)=\"refreshTurnoList()\"></app-form-turno>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PideDatosCuentasComponent } from '../pide-datos-cuentas/pide-datos-cuentas.component';\n\nimport { Cuenta } from '../../interfaces/cuenta';\nimport { Comanda } from '../../interfaces/comanda';\nimport { Usuario } from '../../../admin/models/usuario';\nimport { UsuarioService } from '../../../admin/services/usuario.service';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\n@Component({\n  selector: 'app-abrir-mesa',\n  templateUrl: './abrir-mesa.component.html',\n  styleUrls: ['./abrir-mesa.component.css']\n})\nexport class AbrirMesaComponent implements OnInit {\n\n  public lstMeseros: Usuario[] = [];\n  public esMovil = false;\n  public keyboardLayout: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AbrirMesaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Comanda,\n    public dialogDatosCuentas: MatDialog,\n    public usuarioSrvc: UsuarioService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n    this.loadMeseros();\n  }\n\n  loadMeseros = () => {\n    this.usuarioSrvc.getMeserosTurno().subscribe(res => {\n      if (res) {\n        this.lstMeseros = res;\n      }\n    });\n  }\n\n  pedirDatosDeCuentas(obj: Comanda) {\n\n    const pideDatosCuentasRef = this.dialogDatosCuentas.open(PideDatosCuentasComponent, {\n      width: '50%',\n      disableClose: true,\n      data: { cuentas: obj.cuentas, comensales: this.data.comensales }\n    });\n\n    pideDatosCuentasRef.afterClosed().subscribe((result: Cuenta[]) => {\n      obj.cuentas = result;\n      this.dialogRef.close(obj);\n    });\n\n  }\n\n  terminar(obj: Comanda = null) {\n    if (!obj) {\n      this.dialogRef.close();\n    } else {\n      if (!obj.dividirCuentasPorSillas) {\n        this.dialogRef.close(obj);\n      } else {\n        this.pedirDatosDeCuentas(obj);\n      }\n    }\n  }\n\n  toNumber = (valor: any): number => +valor;\n\n}\n","<h1 mat-dialog-title>Abrir mesa</h1>\n<mat-dialog-content>\n    <form #frmAbrirMesa=\"ngForm\" (ngSubmit)=\"frmAbrirMesa.form.valid\" novalidate>\n        <mat-form-field class=\"separatorMargin\">\n            <mat-label>Mesero</mat-label>\n            <mat-select name=\"mesero\" [(ngModel)]=\"data.mesero\">\n                <mat-option *ngFor=\"let usr of lstMeseros\" [value]=\"usr.usuario.usuario\">\n                    {{usr.usuario.nombres}} {{usr.usuario.apellidos}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field class=\"separatorMargin\">\n            <input type=\"text\" *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" matInput placeholder=\"# Comensales\" name=\"comensales\" [(ngModel)]=\"data.comensales\" required>\n            <input type=\"text\" *ngIf=\"esMovil\" matInput placeholder=\"# Comensales\" name=\"comensales\" [(ngModel)]=\"data.comensales\" required>\n        </mat-form-field>\n        <mat-checkbox name=\"esEvento\" class=\"separatorMargin\" [(ngModel)]=\"+data.esEvento\">¿Es evento?</mat-checkbox>\n        <mat-checkbox name=\"dividirCuentasPorSillas\" class=\"separatorMargin\" [(ngModel)]=\"+data.dividirCuentasPorSillas\"\n            [disabled]=\"+data.comensales <= 1\">¿Dividir cuentas?</mat-checkbox>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"terminar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar(data)\" [disabled]=\"!frmAbrirMesa.form.valid\" color=\"accent\">\n        Abrir mesa\n    </button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { UsuarioTipo } from '../interfaces/usuario-tipo';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioTipoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  // private moduleUrl: string = 'turno';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<UsuarioTipo[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<UsuarioTipo[]>(\n      `${GLOBAL.urlCatalogos}/get_tipo_usuario?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  /*\n  save(entidad: UsuarioTipo) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    };\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar_turno_tipo${entidad.turno_tipo ? ('/' + entidad.turno_tipo) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n  */\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ValidaPwdGerenteTurnoComponent } from '../valida-pwd-gerente-turno/valida-pwd-gerente-turno.component';\nimport { Socket } from 'ngx-socket-io';\n\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\n\nimport { DetalleComanda } from '../../interfaces/detalle-comanda';\nimport { ComandaService } from '../../services/comanda.service';\nimport { DialogElminarProductoComponent, ElminarProductoModel } from 'src/app/shared/components/dialog-elminar-producto/dialog-elminar-producto.component';\n\n\n@Component({\n  selector: 'app-lista-productos-comanda',\n  templateUrl: './lista-productos-comanda.component.html',\n  styleUrls: ['./lista-productos-comanda.component.css']\n})\nexport class ListaProductosComandaComponent implements OnInit, OnChanges {\n\n  @Input() listaProductos: ProductoSelected[] = [];\n  @Input() noCuenta: number = null;\n  @Input() listHeight = '450px';\n  @Input() IdComanda = 0;\n  @Input() IdCuenta = 0;\n  @Input() bloqueoBotones = false;\n  @Input() mesaEnUso: any = {};\n  @Output() productoRemovedEv = new EventEmitter();\n  public esMovil = false;\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public detalleComanda: DetalleComanda;\n  public totalDeProductos = 0.00;\n  public cantidadDeProductos = 0;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private comandaSrvc: ComandaService,\n    private socket: Socket,\n    public dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.listaProductos && this.listaProductos.length > 0) {\n      this.getTotalProductos();\n    }\n  }\n\n  removeProducto = (p: ProductoSelected, idx: number, estaAutorizado = false, cantidad?: number) => {\n    this.bloqueoBotones = true;\n    this.detalleComanda = {\n      detalle_cuenta: p.detalle_cuenta,\n      detalle_comanda: p.detalle_comanda,\n      articulo: p.id,\n      cantidad: +p.cantidad > 1 ? (+p.cantidad) - 1 : 0,\n      precio: +p.precio,\n      total: +p.cantidad > 1 ? ((+p.cantidad) - 1) * (+p.precio) : 0,\n      notas: p.notas,\n      autorizado: estaAutorizado\n    };\n\n    if (cantidad){\n      this.detalleComanda.cantidad = cantidad;\n      this.detalleComanda.total = (cantidad * this.detalleComanda.precio)\n    }\n\n    this.comandaSrvc.saveDetalle(this.IdComanda, this.IdCuenta, this.detalleComanda).subscribe(res => {\n      if (res.exito) {\n        p.cantidad = this.detalleComanda.cantidad;\n        this.productoRemovedEv.emit({ listaProductos: this.listaProductos, comanda: res.comanda });\n        if (+p.cantidad === 0) {\n          this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\n          this.socket.emit('refrescar:listaCocina', { mesaenuso: this.mesaEnUso });\n        }\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 3000 });\n      }\n      this.bloqueoBotones = false;\n    });\n  }\n\n  deleteProductoFromList = (p: ProductoSelected, idx: number, estaAutorizado = false) => {\n    p.cantidad = 0;\n    p.notas = '';\n    this.removeProducto(p, idx, estaAutorizado);\n  }\n\n  deleteProductoFromListAfterPrinted = (p: ProductoSelected, idx: number) => {\n    this.bloqueoBotones = true;\n    const dialogoRef = this.dialog.open(ValidaPwdGerenteTurnoComponent, {\n      width: '40%', disableClose: true\n    });\n\n    dialogoRef.afterClosed().subscribe(res => {\n      // console.log(res);\n      if (res) {\n        // this.autorizar = true;\n        //this.deleteProductoFromList(p, idx, true);\n        const dialogDelete = this.dialog.open(DialogElminarProductoComponent, {\n          width: '40%', disableClose: true, data: new ElminarProductoModel(p)\n        });\n\n        dialogDelete.afterClosed().subscribe(res => {\n          if (res && res.respuesta){\n            this.removeProducto(res.producto, idx, true, res.producto.cantidad)\n            this.snackBar.open('Se eliminará el producto seleccionado.', 'Comanda', { duration: 5000 });\n          }\n        })        \n      } else {\n        this.snackBar.open('La contraseña no es correcta', 'Comanda', { duration: 5000 });\n      }\n      this.bloqueoBotones = false;\n    });\n  }\n\n  toggleShowInputNotas(p: ProductoSelected) {\n    console.log('ARTICULO = ', p);\n    p.showInputNotas = !p.showInputNotas;\n    if (p.showInputNotas) {\n      p.itemListHeight = '140px';\n    } else {\n      p.itemListHeight = '70px';\n      this.saveNotasProducto(p);\n    }\n  }\n\n  saveNotasProducto = (p: ProductoSelected) => {\n    this.comandaSrvc.saveNotasProducto({ detalle_comanda: p.detalle_comanda, notas: p.notas }).subscribe(res => {\n      if (res.exito) {\n        this.snackBar.open('Notas de producto guardadas con éxito...', 'Producto', { duration: 3000 });\n      }\n    });\n  }\n\n  doAction(ev: string) {\n    console.log(ev);\n  }\n\n  getTotalProductos = () => {\n    this.totalDeProductos = 0.00;\n    this.cantidadDeProductos = 0;\n    for (const p of this.listaProductos) {\n      this.totalDeProductos += ((p.cantidad * p.precio) + p.monto_extra);\n      this.cantidadDeProductos += p.cantidad;\n    }\n  }\n\n}\n","<mat-list class=\"fullWidth\" [style.height]=\"listHeight\">\n    <mat-list-item *ngIf=\"listaProductos.length > 0\">\n        <div matLine>\n            <span class=\"lineaDeTotal\">\n                {{cantidadDeProductos}} {{cantidadDeProductos > 1 ? 'artículos' : 'artículo'}} por {{totalDeProductos | number: '1.2-2'}}\n            </span>            \n        </div>\n    </mat-list-item>\n    <mat-list-item *ngFor=\"let p of listaProductos; let i = index;\" [ngClass]=\"{'noImpreso': +p.impreso === 0}\" >\n        <div matLine class=\"fullWidth\" *ngIf=\"+p.cantidad > 0\">\n            <div class=\"row\">\n                <div class=\"col m6 s12\">\n                    <span matLine>\n                        <span *ngIf=\"+p.multiple === 0\">{{p.cantidad}}</span>&nbsp;{{p.nombre}}\n                    </span>\n                    <ng-container *ngIf=\"+p.combo === 1\">\n                        <div matLine *ngFor=\"let det of p.detalle\">\n                            <span class=\"tabulador\">{{det}}</span>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"col m6 s12\" align=\"end\">\n                    <!--<span>{{p.detalle | json}}</span>-->\n                    <span>{{ ((p.cantidad * p.precio) + p.monto_extra) | number: '1.2-2' }}</span>&nbsp;\n                    <eco-fab-speed-dial direction=\"left\" *ngIf=\"+p.impreso === 0\">\n                        <eco-fab-speed-dial-trigger>\n                            <button mat-fab>\n                                <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_left</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-trigger>\n                        <eco-fab-speed-dial-actions>\n                            <button mat-mini-fab (click)=\"deleteProductoFromList(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">delete_forever</mat-icon>\n                            </button>\n                            <button mat-mini-fab (click)=\"removeProducto(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\" *ngIf=\"p.detalle.length <= 1\">\n                                <mat-icon style=\"font-size: 16pt !important;\">remove_circle</mat-icon>\n                            </button>\n                            <button mat-mini-fab (click)=\"toggleShowInputNotas(p)\" color=\"accent\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">notes</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-actions>\n                    </eco-fab-speed-dial>\n                    <eco-fab-speed-dial direction=\"left\" *ngIf=\"+p.impreso === 1\">\n                        <eco-fab-speed-dial-trigger>\n                            <button mat-fab>\n                                <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_left</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-trigger>\n                        <eco-fab-speed-dial-actions>\n                            <button mat-mini-fab (click)=\"deleteProductoFromListAfterPrinted(p, i)\" color=\"warn\" [disabled]=\"bloqueoBotones\">\n                                <mat-icon style=\"font-size: 16pt !important;\">delete_forever</mat-icon>\n                            </button>\n                        </eco-fab-speed-dial-actions>\n                    </eco-fab-speed-dial>\n                </div>\n            </div>\n        </div>\n        <div matLine class=\"fullWidth\" *ngIf=\"+p.cantidad > 0\">\n            <mat-form-field class=\"fullWidth\" *ngIf=\"p.showInputNotas\">\n                <input matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas de producto\" [(ngModel)]=\"p.notas\" (keyup.enter)=\"toggleShowInputNotas(p)\" (blur)=\"saveNotasProducto(p)\" maxlength=\"1000\">\n                <input matInput *ngIf=\"esMovil\" placeholder=\"Notas de producto\" [(ngModel)]=\"p.notas\" (keyup.enter)=\"toggleShowInputNotas(p)\" (blur)=\"saveNotasProducto(p)\" maxlength=\"1000\">\n            </mat-form-field>\n        </div>\n    </mat-list-item>\n</mat-list>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaPropinaComponent } from '../lista-propina/lista-propina.component';\nimport { Propina } from '../../../interfaces/propina';\n\n@Component({\n  selector: 'app-propina',\n  templateUrl: './propina.component.html',\n  styleUrls: ['./propina.component.css']\n})\nexport class PropinaComponent implements OnInit {\n  public propina: Propina;\n  @ViewChild('lstPropina') lstPropinaComponent: ListaPropinaComponent;\n  constructor() {\n    this.propina = {\n      propina_distribucion: null, usuario_tipo: null, porcentaje: null, anulado: null, sede: null, grupal: null\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setPropina = (pres: any) => this.propina = {\n    propina_distribucion: pres.propina_distribucion,\n    usuario_tipo: pres.usuario_tipo.usuario_tipo,\n    porcentaje: pres.porcentaje,\n    anulado: pres.anulado,\n    sede: pres.sede,\n    grupal: pres.grupal\n  }\n\n  refreshPropinaList = () => this.lstPropinaComponent.loadPropinas();\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-propina #lstPropina (getPropinaEv)=\"setPropina($event)\"></app-lista-propina>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-propina #frmPropina [propina]=\"propina\" (propinaSavedEv)=\"refreshPropinaList()\"></app-form-propina>\n    </div>\n</div>","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { ConfiguraMesaComponent } from '../configura-mesa/configura-mesa.component';\r\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport { Mesa } from '../../../interfaces/mesa';\r\n// import { Impresora } from '../../../../admin/interfaces/impresora';\r\n\r\nimport { MesaService } from '../../../services/mesa.service';\r\n// import { ImpresoraService } from '../../../../admin/services/impresora.service';\r\n\r\n@Component({\r\n  selector: 'app-area-designer',\r\n  templateUrl: './area-designer.component.html',\r\n  styleUrls: ['./area-designer.component.css']\r\n})\r\nexport class AreaDesignerComponent implements OnInit {\r\n\r\n  @ViewChild(MatMenuTrigger) contextMenu: MatMenuTrigger;\r\n\r\n  public mesas: Mesa[] = [];\r\n  public contextMenuPosition = { x: '0px', y: '0px' };\r\n  // public impresoras: Impresora[] = [];\r\n  public cargando = false;\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private mesaSrvc: MesaService,\r\n    public dialogRef: MatDialogRef<AreaDesignerComponent>,\r\n    public dialog: MatDialog,\r\n    // public impresoraSrvc: ImpresoraService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // console.log(this.data);\r\n    this.mesas = this.data.mesas;\r\n    // console.log(this.mesas);\r\n    // this.loadImpresoras();\r\n  }\r\n\r\n  // loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\r\n\r\n  getNextTableNumber = () =>\r\n    this.mesas.length > 0 ?\r\n      (this.mesas.reduce((max, p) => +p.numero > max ? +p.numero : max, (!!this.mesas[0].numero ? +this.mesas[0].numero : 0)) + 1) :\r\n      1\r\n\r\n  addTable = (w = 72, h = 72, esmostrador = 0, vertical = 0, escallcenter = 0) => {\r\n    this.cargando = true;\r\n    this.mesas.push({\r\n      mesa: null,\r\n      area: this.data.area,\r\n      numero: this.getNextTableNumber(),\r\n      posx: 1,\r\n      posy: 1,\r\n      tamanio: 72,\r\n      estatus: 1,\r\n      ancho: w,\r\n      alto: h,\r\n      esmostrador,\r\n      vertical,\r\n      escallcenter\r\n    });\r\n    this.saveNewMesa(this.mesas[this.mesas.length - 1], this.mesas.length - 1);\r\n  }\r\n\r\n  addMostrador = (esVertical = false) => this.addTable((esVertical ? 72 : 144), (esVertical ? 144 : 72), 1, (esVertical ? 1 : 0));\r\n\r\n  addCallCenter = () => this.addTable(72, 72, 1, 0, 1);\r\n\r\n  saveNewMesa = (mesa: Mesa, pos: number) => {\r\n    this.mesaSrvc.save(mesa).subscribe(res => {\r\n      if (res.exito) {\r\n        if (!!res.mesa) {\r\n          this.mesas[pos] = res.mesa;\r\n        }\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Mesa', { duration: 7000 });\r\n      }\r\n      this.cargando = false;\r\n    });\r\n  }\r\n\r\n  onClickMesa = (obj: any) => { };\r\n\r\n  terminar = () => this.dialogRef.close(this.mesas);\r\n\r\n  onContextMenu(event: MouseEvent, item: Mesa) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n\r\n  configurarMesa = (item: Mesa) => {\r\n    const configMesaRef = this.dialog.open(ConfiguraMesaComponent, {\r\n      width: '50%',\r\n      data: { mesa: item }\r\n    });\r\n\r\n    configMesaRef.afterClosed().subscribe(res => {\r\n\r\n    });\r\n  }\r\n\r\n  toggleDeBaja = (item: Mesa, deBaja = 1) => {\r\n    const confBajaMesa = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel(\r\n        +item.esmostrador === 0 ? 'Mesa' : 'Mostrador',\r\n        `¿Seguro que desea ${\r\n        deBaja === 1 ? 'dar de baja' : 'habilitar'\r\n        } ${+item.esmostrador === 0 ? 'la mesa' : 'el mostrador'} #${item.numero}?`,\r\n        'Sí', 'No'\r\n      )\r\n    });\r\n\r\n    confBajaMesa.afterClosed().subscribe((conf: boolean) => {\r\n      if (conf) {\r\n        item.debaja = deBaja;\r\n        this.mesaSrvc.save(item).subscribe(res => {\r\n          if (res.exito) {\r\n            if (!!res.mesa) {\r\n              const idx = this.mesas.findIndex(m => +m.mesa === +res.mesa.mesa);\r\n              if (idx > -1) {\r\n                this.mesas[idx] = res.mesa;\r\n              }\r\n              this.snackBar.open(res.mensaje, 'Mesa', { duration: 3000 });\r\n            }\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Mesa', { duration: 7000 });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"diseniador\">\r\n    <div style=\"height: 55px;\" align=\"center\">\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addTable()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mesa\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addMostrador()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mostrador\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addMostrador(true)\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Mostrador vertical\r\n        </button>\r\n        <button mat-raised-button type=\"button\" class=\"btnAccion\" color=\"accent\" (click)=\"addCallCenter()\" [disabled]=\"cargando\">\r\n            <mat-icon class=\"btnIconSize\">add</mat-icon>&nbsp;Call center\r\n        </button>        \r\n        <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"terminar()\" [disabled]=\"cargando\">\r\n            Terminar\r\n        </button>\r\n    </div>\r\n    <div style=\"height: 5px; width: 100%;\"></div>\r\n    <div id=\"divAreaPosicionamiento\" class=\"areaPosicionamiento\">\r\n        <app-mesa *ngFor=\"let m of mesas\" [configuracion]=\"m\" (onClickMesa)=\"!cargando && onClickMesa($event)\" (moviendoMesa)=\"cargando = $event\" [dontAllowDrag]=\"cargando\" (contextmenu)=\"!cargando && onContextMenu($event, m)\">            \r\n        </app-mesa>\r\n    </div>\r\n    <!-- Inicio del menu contextual -->\r\n    <div style=\"visibility: hidden; position: fixed;\" [style.left]=\"contextMenuPosition.x\" [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\"></div>\r\n    <mat-menu #contextMenu=\"matMenu\">\r\n        <ng-template matMenuContent let-item=\"item\">\r\n            <span mat-menu-item class=\"mesaTitle\" disableRipple=\"true\">Mesa #{{item.numero}} ({{item.mesa}})</span>\r\n            <mat-divider></mat-divider>\r\n            <button mat-menu-item (click)=\"configurarMesa(item)\" *ngIf=\"+item.debaja === 0\">\r\n                <mat-icon class=\"btnIconSize\">settings</mat-icon>Configuracion\r\n            </button>\r\n            <button mat-menu-item (click)=\"toggleDeBaja(item)\" *ngIf=\"+item.debaja === 0\" class=\"customize\" [disabled]=\"+item.estatus === 2\">\r\n                <mat-icon class=\"btnIconSize\">thumb_down</mat-icon>Dar de baja\r\n            </button>\r\n            <button mat-menu-item (click)=\"toggleDeBaja(item, 0)\" *ngIf=\"+item.debaja === 1\" class=\"customizeUp\" [disabled]=\"+item.estatus === 2\">\r\n                <mat-icon class=\"btnIconSize\">thumb_up</mat-icon>Habilitar\r\n            </button>\r\n        </ng-template>\r\n    </mat-menu>\r\n    <!-- Fin del menu contextual -->\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Area } from '../interfaces/area';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'area';\n\n  constructor(\n    private http: HttpClient,\n    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  get(fltr: any = {}): Observable<Area[]> {   \n    return this.http.get<Area[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/get_areas?${qs.stringify(fltr)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Area) {   \n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${entidad.area ? ('/' + entidad.area) : ''}`,\n      entidad      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../../shared/global';\r\nimport { AreaDesignerComponent } from '../area-designer/area-designer.component';\r\n\r\nimport { Area } from '../../../interfaces/area';\r\nimport { Impresora } from '../../../../admin/interfaces/impresora';\r\nimport { AreaService } from '../../../services/area.service';\r\nimport { ImpresoraService } from '../../../../admin/services/impresora.service';\r\n\r\n@Component({\r\n  selector: 'app-form-area',\r\n  templateUrl: './form-area.component.html',\r\n  styleUrls: ['./form-area.component.css']\r\n})\r\nexport class FormAreaComponent implements OnInit {\r\n\r\n  @Input() entidad: Area;\r\n  @Output() entidadSavedEv = new EventEmitter();\r\n  public sedeUsr = 0;\r\n  public lstAreas: Area[] = [];\r\n  public esMovil = false;\r\n  public impresoras: Impresora[] = [];\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    public dialog: MatDialog,\r\n    private entidadSrvc: AreaService,\r\n    private impresoraSrvc: ImpresoraService,\r\n    private ls: LocalstorageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sedeUsr = this.ls.get(GLOBAL.usrTokenVar).sede || 0;\r\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\r\n    this.resetEntidad();\r\n    this.loadAreas();\r\n    this.loadImpresoras();\r\n  }\r\n\r\n  loadAreas = () => this.entidadSrvc.get({ sede: this.sedeUsr, debaja: 1 }).subscribe(res => this.lstAreas = res);\r\n\r\n  loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\r\n\r\n  resetEntidad = () => this.entidad = { area: null, sede: this.sedeUsr, nombre: null, mesas: [], impresora_factura: null, impresora: null };\r\n\r\n  onSubmit = () => {\r\n    // console.log(this.entidad); return;\r\n    this.entidadSrvc.save(this.entidad).subscribe(res => {\r\n      if (res.exito) {\r\n        this.snackBar.open(`${res.mensaje}`, 'Área', { duration: 3000 });\r\n        this.resetEntidad();\r\n        this.loadAreas();\r\n        this.entidadSavedEv.emit();\r\n      } else {\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Área', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  openDesigner = () => {\r\n    const areaDesignerRef = this.dialog.open(AreaDesignerComponent, {\r\n      width: '800px',\r\n      disableClose: true,\r\n      data: { area: +this.entidad.area, mesas: this.entidad.mesas || [] }\r\n    });\r\n\r\n    areaDesignerRef.afterClosed().subscribe((result: any) => {\r\n      if (result) {\r\n        // console.log(result);\r\n        this.entidadSavedEv.emit();\r\n        this.entidadSrvc.get({ area: +this.entidad.area, debaja: 1 }).subscribe(res => {\r\n          if (res && res.length > 0) {\r\n            this.entidad = res[0];\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>Área</h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmEntidad=\"ngForm\" (ngSubmit)=\"frmEntidad.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\" *ngIf=\"esMovil\">\n                <input type=\"text\" matInput placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"entidad.nombre\" minlength=\"1\" maxlength=\"100\" required>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Área padre</mat-label>\n                <mat-select name=\"area_padre\" [(ngModel)]=\"entidad.area_padre\">\n                    <mat-option *ngFor=\"let ar of lstAreas\" [value]=\"ar.area\">\n                        {{ar.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Impresora</mat-label>\n                <mat-select name=\"impresora\" [(ngModel)]=\"entidad.impresora\" required>\n                    <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                        {{imp.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Impresora de factura</mat-label>\n                <mat-select name=\"impresora_factura\" [(ngModel)]=\"entidad.impresora_factura\">\n                    <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                        {{imp.nombre}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <h5>Mesas en el área: {{entidad.mesas.length}}</h5>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\"\n                    [disabled]=\"!frmEntidad.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"openDesigner()\"\n                    *ngIf=\"entidad.area\">\n                    Diseñar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetEntidad()\" *ngIf=\"entidad.area\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\n\nimport { Turno } from '../../../interfaces/turno';\nimport { TurnoService } from '../../../services/turno.service';\n\ninterface IDataCopiarTurno {\n  turnoCopia: Turno;\n}\n\n@Component({\n  selector: 'app-selecciona-turno-previo',\n  templateUrl: './selecciona-turno-previo.component.html',\n  styleUrls: ['./selecciona-turno-previo.component.css']\n})\nexport class SeleccionaTurnoPrevioComponent implements OnInit {\n\n  public lstTurnos: Turno[] = [];\n  public turnoSelected: Turno;\n\n  constructor(\n    public dialogRef: MatDialogRef<SeleccionaTurnoPrevioComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDataCopiarTurno,\n    public ls: LocalstorageService,\n    private snackBar: MatSnackBar,\n    private turnoSrvc: TurnoService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.loadTurnos();\n  }\n\n  loadTurnos = () => {\n    this.lstTurnos = [];\n    this.turnoSrvc.get({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((lst: Turno[]) => {\n      if (lst && lst.length > 0) {\n        const limite = lst.length >= 11 ? 11 : lst.length;\n        for (let i = 0; i < limite; i++) {\n          this.lstTurnos.push(lst[i]);\n        }\n      }\n    });\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n  copiar = () => {\n    if (this.turnoSelected) {\n      const confDialog = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel('Detalle de turno', 'Esto copiará el detalle del turno que seleccionó. ¿Desea continuar?', 'Sí', 'No')\n      });\n\n      confDialog.afterClosed().subscribe(resConf => {\n        if (resConf) {\n          this.turnoSrvc.replicaDetalleTurno(this.turnoSelected.turno, this.data.turnoCopia.turno).subscribe(res => {\n            if (res.exito) {\n              this.snackBar.open('Turno copiado con éxito', 'Detalle turno', { duration: 3000 });\n            } else {\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Detalle turno', { duration: 7000 });\n            }\n            this.dialogRef.close();\n          });\n        }\n      });\n    }\n  }\n}\n","<h1 mat-dialog-title>¿De qué turno quiere copiar el detalle?</h1>\n<div mat-dialog-content>\n    <mat-nav-list>\n        <ng-container *ngFor=\"let element of lstTurnos\">\n            <mat-list-item (click)=\"turnoSelected = element\" *ngIf=\"+element.turno !== +data.turnoCopia.turno\">\n                <mat-icon mat-list-icon>schedule</mat-icon>\n                <h5 mat-line>Inicio: {{element.inicio | date: 'dd/MM/yyyy HH:mm:ss'}}</h5><br />\n                <p mat-line>Fin: {{element.fin | date: 'dd/MM/yyyy HH:mm:ss'}}</p>\n            </mat-list-item>\n        </ng-container>\n    </mat-nav-list>\n    <small *ngIf=\"turnoSelected\">\n        <div>\n            <strong>Seleccionó el turno que inicia el {{turnoSelected.inicio | date: 'dd/MM/yyyy HH:mm:ss'}} y finaliza\n                el {{turnoSelected.fin | date: 'dd/MM/yyyy HH:mm:ss'}}</strong>\n        </div>\n    </small>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button type=\"button\" (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"copiar()\" [disabled]=\"!turnoSelected\">\n        Copiar\n    </button>\n</div>","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-header>\n        <mat-card-title>Reporte de ventas</mat-card-title>\n        <mat-card-subtitle>\n            Por artículo<br />\n            Del {{params.fdel | date:'dd/MM/yyyy'}} al {{params.fal | date:'dd/MM/yyyy'}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content *ngIf=\"data.grupo == 1\">\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let art of data.datos\">\n                    <tr>\n                        <td class=\"doubleTab brdBSingle\">{{art.articulo.descripcion}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"data.grupo == 2\">\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let sede of data.datos\">\n                    <tr>\n                        <th class=\"brdTSingleBSingle\" colspan=\"3\">{{ sede.sede }}</th>\n                    </tr>\n                    <tr *ngFor=\"let art of sede.articulos\">\n                        <td class=\"doubleTab brdBSingle\">{{art.articulo.descripcion}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n\n    <!--\n    <mat-card-footer>\n    </mat-card-footer>\n    -->\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\n\n// import { PorArticulo } from '../../../../interfaces/reporte-ventas';\n\n@Component({\n  selector: 'app-por-articulo',\n  templateUrl: './por-articulo.component.html',\n  styleUrls: ['./por-articulo.component.css']\n})\nexport class PorArticuloComponent implements OnInit {\n\n  @Input() params: any = {};\n  @Input() data: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../shared/global';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\n\n@Component({\n  selector: 'app-notas-generales-comanda',\n  templateUrl: './notas-generales-comanda.component.html',\n  styleUrls: ['./notas-generales-comanda.component.css']\n})\nexport class NotasGeneralesComandaComponent implements OnInit {\n\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<NotasGeneralesComandaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  terminar = (obj: string = null) => this.dialogRef.close(obj);\n\n}\n","<h1 mat-dialog-title>Notas generales de comanda</h1>\n<mat-dialog-content>\n    <form #frmNotasGenCom=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <textarea matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Notas generales\" name=\"notasGenerales\" [(ngModel)]=\"data.notasGenerales\" maxlength=\"1000\"></textarea>\n            <textarea matInput *ngIf=\"esMovil\" placeholder=\"Notas generales\" name=\"notasGenerales\" [(ngModel)]=\"data.notasGenerales\" maxlength=\"1000\"></textarea>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"terminar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar(data.notasGenerales)\" color=\"accent\">\n        Guardar\n    </button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { MesaDisponible } from '../../interfaces/mesa';\n\nimport { MesaService } from '../../services/mesa.service';\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-traslado-mesa',\n  templateUrl: './traslado-mesa.component.html',\n  styleUrls: ['./traslado-mesa.component.css']\n})\nexport class TrasladoMesaComponent implements OnInit {\n\n  public mesasDisponibles: MesaDisponible[] = [];\n  public destino: MesaDisponible;\n\n  constructor(\n    public dialogRef: MatDialogRef<TrasladoMesaComponent>,\n    private snackBar: MatSnackBar,\n    private mesaSrvc: MesaService,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.loadMesasDisponibles();\n  }\n\n  loadMesasDisponibles = () => this.mesaSrvc.getDisponibles().subscribe((res: MesaDisponible[]) => this.mesasDisponibles = res);\n\n  cancelar = () => this.dialogRef.close(false);\n\n  trasladar = () => {\n    this.comandaSrvc.trasladarMesa(+this.data.mesaEnUso.comanda, +this.data.mesaEnUso.mesa.mesa, +this.destino.mesa).subscribe(res => {\n      if (res.exito) {\n        this.snackBar.open(res.mensaje, 'Traslado de mesa', { duration: 3000 });\n        this.dialogRef.close(true);\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Traslado de mesa', { duration: 7000 });\n      }\n    });\n  }\n\n}\n","<h1 mat-dialog-title>Trasladar a otra mesa</h1>\n<div mat-dialog-content>\n    <form #frmTrasladarMesa=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <mat-label>Trasladar a mesa:</mat-label>\n            <mat-select name=\"destino\" [(ngModel)]=\"destino\" required>\n                <mat-option *ngFor=\"let mDispon of mesasDisponibles\" [value]=\"mDispon\">\n                    {{mDispon.area.nombre}} - {{mDispon.etiqueta || mDispon.numero}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"trasladar()\" [disabled]=\"!frmTrasladarMesa.form.valid\">\n        Trasladar\n    </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { PorCategoria, PorArticulo } from '../interfaces/reporte-ventas';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReporteVentasService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'reporte/venta'; \n\n  constructor(\n    private http: HttpClient,    \n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();    \n  }\n\n  porCategoria(params: any): Observable<PorCategoria[]> {\n    return this.http.get<PorCategoria[]>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/categoria?${qs.stringify(params)}`\n      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porArticulo(params: any): Observable<PorArticulo[]> {\n    return this.http.get<PorArticulo[]>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/articulo?${qs.stringify(params)}`      \n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porCategoriaPdf(params: Object) {\n    const httpOptions = {\n      headers: new HttpHeaders({        \n        Accept: 'application/pdf'\n      }),\n      responseType: 'blob' as 'json'\n    };\n\n    return this.http.get<string>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/categoriapdf/1?${qs.stringify(params)}`,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  porArticuloPdf(params: Object) {\n    const httpOptions = {\n      headers: new HttpHeaders({        \n        Accept: 'application/pdf'\n      }),\n      responseType: 'blob' as 'json'\n    };\n\n    return this.http.get<string>(\n      `${GLOBAL.urlFacturacion}/${this.moduleUrl}/articulopdf/1?${qs.stringify(params)}`,\n      httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { ccGeneral, ccDetalle, ccTipo, ccNominacion } from '../interfaces/cajacorte';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CajacorteService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'cajacorte';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  buscar(fltr: any = {}): Observable<ccGeneral[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccGeneral[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCajaCorteTipo(fltr: any = {}): Observable<ccTipo[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccTipo[]>(\n      `${GLOBAL.urlCatalogos}/get_caja_corte_tipo?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getCajaCorteNominacion(fltr: any = {}): Observable<ccNominacion[]> {\n    /*const httpOptions = {\n      headers: new HttpHeaders({\n        Authorization: this.usrToken\n      })\n    };*/\n    return this.http.get<ccNominacion[]>(\n      `${GLOBAL.urlCatalogos}/get_caja_corte_nominacion?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  guardar(entidad: ccGeneral): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularCorte(entidad: ccGeneral): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/anular_caja`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularDetalle(entidad: ccDetalle): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/anular_caja_detalle`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Propina } from '../../../interfaces/propina';\nimport { PropinaService } from '../../../services/propina.service';\n\nimport { UsuarioTipo } from '../../../../admin/interfaces/usuario-tipo';\nimport { UsuarioTipoService } from '../../../../admin/services/usuario-tipo.service';\n\n@Component({\n  selector: 'app-form-propina',\n  templateUrl: './form-propina.component.html',\n  styleUrls: ['./form-propina.component.css']\n})\nexport class FormPropinaComponent implements OnInit {\n\n  @Input() propina: Propina;\n  @Output() propinaSavedEv = new EventEmitter();\n  public usuarios: UsuarioTipo[] = [];\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private propinaSrvc: PropinaService,\n    private usuarioSrvc: UsuarioTipoService\n  ) { }\n\n  ngOnInit() {\n    this.resetPropina();\n    this.loadUsuario();\n  }\n\n  loadUsuario = () => {\n    this.usuarioSrvc.get().subscribe(res => {\n      this.usuarios = res;\n    });\n  }\n\n  resetPropina = () => this.propina = {\n    propina_distribucion: null, usuario_tipo: null, porcentaje: null, anulado: 0, sede: null, grupal: 0\n  }\n\n  onSubmit = () => {\n    this.propinaSrvc.save(this.propina).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.propinaSavedEv.emit();\n        this.resetPropina();\n        this.snackBar.open('Propina agregada...', 'Distribucion de propinas', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Distribucion de propinas', { duration: 3000 });\n      }\n    });\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmPropina=\"ngForm\" (ngSubmit)=\"frmPropina.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <mat-label>Tipo Usuario</mat-label>\n                <mat-select name=\"usuario\" [(ngModel)]=\"propina.usuario_tipo\" required>\n                    <mat-option *ngFor=\"let m of usuarios\" [value]=\"m.usuario_tipo\">\n                        {{m.descripcion}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" step=\"0.01\" placeholder=\"Porcentaje\" name=\"porcentaje\" [(ngModel)]=\"propina.porcentaje\" required>\n            </mat-form-field>\n            <div class=\"row\">\n                <div class=\"col m6 s6\">\n                    <mat-checkbox name=\"grupal\" class=\"fullWidth\" [(ngModel)]=\"+propina.grupal\">Propina Grupal</mat-checkbox>\n                </div>\n                <div class=\"col m6 s6\">\n                    <mat-checkbox name=\"anulado\" class=\"fullWidth\" [(ngModel)]=\"+propina.anulado\">Anulado</mat-checkbox>\n                </div>\n            </div>\n            \n            <div align=\"end\">\n                <button mat-icon-button type=\"submit\" color=\"accent\" [disabled]=\"!frmPropina.form.valid\">\n                    <mat-icon>save</mat-icon>\n                </button>\n                <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"resetPropina()\" *ngIf=\"propina.propina_distribucion\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface IDialogComanda {\n  mesaEnUso: ComandaGetResponse;\n  lstProductos: ProductoSelected[];\n}\n\n@Component({\n  selector: 'app-distribuir-productos-cuentas',\n  templateUrl: './distribuir-productos-cuentas.component.html',\n  styleUrls: ['./distribuir-productos-cuentas.component.css']\n})\nexport class DistribuirProductosCuentasComponent implements OnInit {\n\n  public comanda: Comanda;\n  public cantidadProducto: number[] = [];\n  public cpLstProductos: ProductoSelected[] = [];\n  public compLstProductos: ProductoSelected[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<DistribuirProductosCuentasComponent>,\n    private snackBar: MatSnackBar,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: IDialogComanda\n  ) { }\n\n  ngOnInit() {\n    if (+this.data.mesaEnUso.comanda > 0) {\n      const meu = this.data.mesaEnUso;\n      this.comanda = {\n        area: +meu.mesa.area.area,\n        mesa: +meu.mesa.mesa,\n        mesero: +meu.mesero.usuario,\n        comensales: meu.cuentas.length + 1,\n        dividirCuentasPorSillas: 1,\n        comanda: +meu.comanda,\n        cuentas: meu.cuentas,\n        replaceUnica: false\n      };\n    }\n\n    this.cpLstProductos = [];\n\n    if (this.data.lstProductos.length > 0) {\n      // console.log(this.data.lstProductos);\n      // console.log(this.data.mesaEnUso.cuentas);\n      this.data.lstProductos.forEach(item => {\n        const laCta = this.data.mesaEnUso.cuentas.find(c => +c.cuenta === +item.idcuenta);\n        if (+laCta.cerrada === 0) {\n          this.cpLstProductos.push(item);\n          this.cantidadProducto.push(+item.cantidad);\n        }\n      });\n      this.cpLstProductos = JSON.parse(JSON.stringify(this.cpLstProductos));\n      this.compLstProductos = JSON.parse(JSON.stringify(this.cpLstProductos));\n    }\n  }\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardar = () => {\n    const lstObj: any[] = [];\n    let idx = 0;\n    for (const p of this.cpLstProductos) {\n      if (+p.idcuenta !== +this.compLstProductos[idx].idcuenta) {\n        lstObj.push({\n          detalle_comanda: +p.detalle_comanda,\n          cuenta: +p.idcuenta,\n          cantidad: +p.cantidad\n        });\n      }\n      idx++;\n    }\n    if (lstObj.length > 0) {\n      this.comandaSrvc.distribuirCuentas(lstObj).subscribe(res => {\n        if (res.exito) {\n          this.snackBar.open('Productos redistribuidos', 'Cuentas', { duration: 3000 });\n          this.dialogRef.close(true);\n        } else {\n          this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cuentas', { duration: 7000 });\n          this.cancelar();\n        }\n      });\n    } else {\n      this.snackBar.open('Sin cambios en las cuentas.', 'Cuentas', { duration: 7000 });\n      this.dialogRef.close(true);\n    }\n  }\n}\n","<h1 mat-dialog-title>Distribución de productos - Comanda #{{data.mesaEnUso.comanda}}</h1>\n<div mat-dialog-content>\n    <table>\n        <tr>\n            <th>Artículo</th>\n            <th class=\"rtxt size-cantidad\">Cantidad</th>\n            <th>Cuenta</th>\n        </tr>\n        <tr *ngFor=\"let prod of cpLstProductos; index as i\">\n            <td>{{prod.nombre}}</td>\n            <td class=\"rtxt\">\n                <mat-form-field class=\"size-cantidad\">\n                    <input type=\"number\" matInput name=\"cantidad\" min=\"1\" [max]=\"cantidadProducto[i]\" [(ngModel)]=\"prod.cantidad\" required [disabled]=\"+prod.combo === 1\">\n                </mat-form-field>                \n            </td>\n            <td>\n                <mat-select name=\"cuenta\" [(ngModel)]=\"prod.idcuenta\" required>\n                    <mat-option *ngFor=\"let cta of comanda.cuentas\" [value]=\"+cta.cuenta\" [disabled]=\"+cta.cerrada === 1 || +prod.idcuenta === +cta.cuenta\">\n                        {{cta.nombre}}\n                    </mat-option>\n                </mat-select>\n            </td>\n        </tr>\n    </table>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"guardar()\">\n        Guardar\n    </button>\n</div>","import { Component, OnInit, Inject, ViewChild, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatInput } from '@angular/material/input';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { GLOBAL } from '../../../shared/global';\nimport { TranComanda } from '../../classes/tran-comanda';\n\nimport { Socket } from 'ngx-socket-io';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\n\n// import { Cuenta } from '../../interfaces/cuenta';\nimport { ComandaGetResponse } from '../../interfaces/comanda';\n// import { DetalleComanda } from '../../interfaces/detalle-comanda';\n// import { Impresora } from '../../../admin/interfaces/impresora';\n// import { Categoria } from '../../../wms/interfaces/categoria';\n// import { CategoriaGrupoImpresora } from '../../../wms/interfaces/categoria-grupo';\nimport { Articulo, NodoProducto } from '../../../wms/interfaces/articulo';\n\nimport { ComandaService } from '../../services/comanda.service';\nimport { ArticuloService } from '../../../wms/services/articulo.service';\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\n// import { Cliente } from '../../../admin/interfaces/cliente';\n\ninterface IDatosTranComanda {\n  mesa: ComandaGetResponse;\n}\n\n@Component({\n  selector: 'app-tran-comanda-alt',\n  templateUrl: './tran-comanda-alt.component.html',\n  styleUrls: ['./tran-comanda-alt.component.css']\n})\nexport class TranComandaAltComponent extends TranComanda implements OnInit, OnDestroy {\n\n  // @Input() mesaEnUso: ComandaGetResponse;\n  // @Input() clientePedido: Cliente = null;\n  // @Output() closeSideNavEv = new EventEmitter();\n  // @Output() mesaSavedEv: EventEmitter<any> = new EventEmitter();\n  @ViewChild('txtCodigoBarras') txtCodigoBarras: MatInput;\n\n  public categorias: any[] = [];\n  public subCategorias: any[] = [];\n  public listaSubCategorias: any[] = [];\n  public articulos: Articulo[] = [];\n  public fullListArticulos: Articulo[] = [];  \n\n  constructor(\n    public dialogRef: MatDialogRef<TranComandaAltComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDatosTranComanda,\n    public dialog: MatDialog,\n    protected snackBar: MatSnackBar,\n    public comandaSrvc: ComandaService,\n    protected socket: Socket,\n    protected ls: LocalstorageService,\n    protected pdfServicio: ReportePdfService,\n    protected configSrvc: ConfiguracionService,\n    protected articuloSrvc: ArticuloService,\n    protected bsAccionesCmd: MatBottomSheet\n  ) {\n    super(dialog, snackBar, comandaSrvc, socket, ls, pdfServicio, configSrvc, articuloSrvc, bsAccionesCmd);\n  }\n\n  ngOnInit() {\n    this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\n    this.loadArticulosDePOS();\n    this.setDatos();\n  }\n\n  ngOnDestroy() {\n    this.endSubs.unsubscribe();\n  }\n\n  setDatos = () => {\n    if (this.data) {\n      if (this.data.mesa) {\n        this.mesaEnUso = this.data.mesa;\n        this.alIniciar();\n        this.setSelectedCuenta(this.mesaEnUso.cuentas[0].numero);\n        // console.log('CTA = ', this.cuentaActiva);\n        // console.log(this.mesaEnUso);\n      }\n    }\n  }\n\n  cerrar = () => this.dialogRef.close();\n\n  resetArticulos = () => this.articulos = [];\n  resetListaSubCategorias = () => this.listaSubCategorias = [];\n\n  loadArticulosDePOS = () => {\n    this.endSubs.add(\n      this.articuloSrvc.getArticulosDePOS().subscribe((res: any) => {\n        if (res) {\n          this.categorias = res.categorias;\n          this.subCategorias = res.subcategorias;\n          this.articulos = res.articulos;\n          this.fullListArticulos = JSON.parse(JSON.stringify(this.articulos));\n        }\n      })\n    );\n  }\n\n  loadSubcategorias = (cat: any, subcat: any = null, idx: number = 0) => {\n    if (!this.bloqueoBotones) {\n      // console.log('CAT = ', cat); console.log('SUB = ', subcat); // return;\n      if (!subcat) {\n        this.resetListaSubCategorias();\n        this.resetArticulos();\n        this.listaSubCategorias.push(this.subCategorias.filter(sc => +sc.categoria === +cat.categoria));\n      } else {\n        if (this.listaSubCategorias.length > 0) {\n          this.listaSubCategorias.splice((idx + 1));\n        }\n\n        if (subcat.subcategorias) {\n          if (subcat.subcategorias.length === 0) {\n            this.filterArticulos(+subcat.categoria_grupo);\n          } else {\n            this.listaSubCategorias.push(subcat.subcategorias);\n          }\n        }\n      }\n    }\n  }\n\n  filterArticulos = (idsubcat: number = null) => {\n    if (!this.bloqueoBotones) {\n      if (idsubcat) {\n        this.articulos = this.fullListArticulos.filter(a => +a.categoria_grupo === +idsubcat);\n      } else {\n        this.articulos = this.fullListArticulos;\n      }\n    }\n  }\n\n  addArticulo = (art: Articulo) => {\n    if (!this.bloqueoBotones) {\n      const obj: NodoProducto = {\n        id: +art.articulo,\n        nombre: art.descripcion,\n        precio: +art.precio,\n        impresora: art.impresora,\n        presentacion: art.presentacion,\n        codigo: art.codigo,\n        combo: art.combo,\n        multiple: art.multiple\n      };\n      // console.log(obj); return;\n      // console.log(this.cuentaActiva); return;\n      this.agregarProductos(obj);\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\">\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"start start\">\n        <span class=\"bld\" style=\"font-size: 16pt; margin-left: 10px;\">\n            {{mesaEnUso.mesa.area.nombre}} - Mesa{{mesaEnUso.mesa.numero}} - Comanda {{mesaEnUso.comanda}}\n        </span>\n    </div>\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"end start\">\n        <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"abrirAccionesComanda(dialogRef)\"\n            [disabled]=\"bloqueoBotones\">\n            Acciones\n        </button>\n        <button mat-raised-button type=\"button\" color=\"accent\" style=\"margin-left: 8px;\" (click)=\"cerrar()\"\n            [disabled]=\"bloqueoBotones\">\n            Cerrar\n        </button>\n    </div>\n</div>\n\n<div mat-dialog-content class=\"contenido\">\n    <!-- Div de cuentas-->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"center center\" class=\"divSeparacion\">\n        <mat-chip-list>\n            <mat-chip color=\"accent\" *ngFor=\"let cta of mesaEnUso.cuentas\"\n                [disabled]=\"+cta.cerrada === 1 || bloqueoBotones\" (click)=\"+cta.cerrada === 0 && setSelectedCuenta(cta.numero)\" [selected]=\"+cta.cerrada === 0\">\n                {{cta.nombre}}\n            </mat-chip>\n            <mat-chip (click)=\"nuevaCuenta(dialogRef)\" *ngIf=\"+mesaEnUso.mesa.esmostrador === 0 && +mesaEnUso.mesa.escallcenter === 0\">\n                Nueva\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de div de cuentas-->\n    <!--<mat-divider></mat-divider>-->\n    <!-- Inicia input para código de barras -->\n    <mat-form-field style=\"width: 25%;\" *ngIf=\"usaCodigoBarras\">        \n        <input #txtCodigoBarras=\"matInput\" matInput cdkFocusInitial ngxBarCodePut type=\"text\" placeholder=\"Código\" name=\"codigoBarras\" [(ngModel)]=\"codigoBarras\" [ngModelOptions]=\"{standalone: true}\" (onDetected)=\"buscarArticulo()\">\n    </mat-form-field><br *ngIf=\"usaCodigoBarras\"/>\n    <!-- Fin de input para código de barras -->\n    <!-- Inicia Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\">\n        <mat-chip-list>\n            <mat-chip selected color=\"accent\" *ngFor=\"let cat of categorias\" (click)=\"loadSubcategorias(cat)\" [disabled]=\"bloqueoBotones\">\n                {{cat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de Categorias -->\n    <!--<mat-divider></mat-divider>-->\n    <!-- Inicia Sub Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start center\" *ngFor=\"let lstSubCat of listaSubCategorias; index as i; last as isLast\" class=\"divSubCategorias\">\n        <mat-chip-list>\n            <mat-chip selected color=\"warn\" class=\"btnAccion\" *ngFor=\"let subcat of lstSubCat\"\n                (click)=\"loadSubcategorias({ categoria: subcat.categoria }, subcat, i)\" [disabled]=\"bloqueoBotones\">\n                {{subcat.descripcion}}\n            </mat-chip>\n        </mat-chip-list>\n    </div>\n    <!-- Fin de Sub Categorias -->\n    <div fxLayout=\"row wrap\" fxLayout.xs=\"column\" fxLayoutAlign=\"start start\">\n        <!-- Inicia artículos -->\n        <div fxFlex=\"55%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" class=\"divArticulos\" fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\" fxLayoutAlign=\"start start\">\n            <div fxFlex=\"20%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxFlex.md=\"25%\" *ngFor=\"let producto of articulos\">\n                <mat-card class=\"mat-elevation-z4\" (click)=\"!bloqueoBotones && addArticulo(producto)\">\n                    <!--\n                    <mat-card-header>\n                        <mat-card-title>{{producto.descripcion}}</mat-card-title>\n                    </mat-card-header>\n                    -->\n                    <!--<img mat-card-image src=\"/assets/img/comida/test_01.jpg\">-->\n                    <mat-card-content>\n                        <p>{{producto.descripcion}}</p>\n                    </mat-card-content>                \n                    <!--<mat-card-actions align=\"around\">\n                        <span matBadge=\"4\" matBadgeOverlap=\"false\">Por comandar</span>\n                        <span matBadge=\"4\" matBadgeOverlap=\"false\">Comandados</span>\n                    </mat-card-actions>-->\n                </mat-card>\n            </div>        \n        </div>\n        <!-- Finaliza artículos -->\n        <div fxFlex=\"45%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" class=\"divArticulos\">\n            <app-lista-productos-comanda [listaProductos]=\"lstProductosDeCuenta\" [noCuenta]=\"+cuentaActiva.numero\"\n                [IdComanda]=\"mesaEnUso.comanda\" [IdCuenta]=\"cuentaActiva.cuenta\" [bloqueoBotones]=\"bloqueoBotones\"\n                [mesaEnUso]=\"mesaEnUso\" (productoRemovedEv)=\"updProductosCuenta($event)\"></app-lista-productos-comanda>\n        </div>\n    </div>\n</div>\n<!--<div mat-dialog-actions align=\"end\"></div>-->","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\n\n@Component({\n  selector: 'app-lista-turno-tipo',\n  templateUrl: './lista-turno.component.html',\n  styleUrls: ['./lista-turno.component.css']\n})\nexport class ListaTurnoTipoComponent implements OnInit {\n\n  public lstTurnos: TipoTurno[];\n  public lstTurnosPaged: TipoTurno[];\n  @Output() getTurnoEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(private turnoSrvc: TipoTurnoService) { }\n\n  ngOnInit() {\n    this.loadTurnos();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstTurnos, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstTurnosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstTurnos.length;\n      this.lstTurnosPaged = PaginarArray(this.lstTurnos, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadTurnos = () => {\n    this.turnoSrvc.get().subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstTurnos = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getTurno = (obj: TipoTurno) => {\n    this.getTurnoEv.emit(obj);\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\"  [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstTurnosPaged\" (click)=\"getTurno(element)\">\n                <mat-icon mat-list-icon>line_weight</mat-icon>\n                <h5 mat-line>{{element.descripcion}}</h5>                \n            </mat-list-item>\n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { Mesa } from '../../interfaces/mesa';\r\nimport { MesaService } from '../../services/mesa.service';\r\n\r\n@Component({\r\n  selector: 'app-mesa',\r\n  templateUrl: './mesa.component.html',\r\n  styleUrls: ['./mesa.component.css']\r\n})\r\nexport class MesaComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() configuracion: any = {\r\n    mesa: 0,\r\n    area: 0,\r\n    numero: 0,\r\n    posx: 0.0000,\r\n    posy: 0.0000,\r\n    tamanio: 48,\r\n    estatus: 1,\r\n    ancho: null,\r\n    alto: null,\r\n    esmostrador: 0,\r\n    vertical: 0,\r\n    etiqueta: null,\r\n    escallcenter: 0\r\n  };\r\n  @Input() dontAllowDrag = true;\r\n  @Input() isDisabled = false;\r\n  // tslint:disable-next-line: no-output-on-prefix\r\n  @Output() onClickMesa = new EventEmitter();\r\n  @Output() moviendoMesa = new EventEmitter();\r\n  @ViewChild('divMesa') divMesa: ElementRef;\r\n\r\n  public objMesa: HTMLElement;\r\n  public urlImage = '/assets/img/mesas/';\r\n\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private mesaSrvc: MesaService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (+this.configuracion.esmostrador === 0) {\r\n      this.urlImage += 'table_03.svg';\r\n    } else {\r\n      if (+this.configuracion.escallcenter === 0) {\r\n        if (+this.configuracion.vertical === 0) {\r\n          this.urlImage += 'mostrador_horizontal.svg';\r\n        } else {\r\n          this.urlImage += 'mostrador_vertical.svg';\r\n        }\r\n      } else {\r\n        this.urlImage += 'callcenter.svg';\r\n      }\r\n    }\r\n    // console.log(this.configuracion, this.urlImage);\r\n  }\r\n\r\n  ngAfterViewInit = () => this.objMesa = this.divMesa.nativeElement;\r\n\r\n  clickMesa = () => this.onClickMesa.emit({ mesaSelected: this.configuracion });\r\n\r\n  getAncho = () => {\r\n    if (this.configuracion.ancho && +this.configuracion.ancho > 0) {\r\n      return this.configuracion.ancho;\r\n    }\r\n    return this.configuracion.tamanio;\r\n  }\r\n\r\n  getAlto = () => {\r\n    if (this.configuracion.alto && +this.configuracion.alto > 0) {\r\n      return this.configuracion.alto;\r\n    }\r\n    return this.configuracion.tamanio;\r\n  }\r\n\r\n  dragEnded = (obj: any) => {\r\n    this.dontAllowDrag = true;\r\n    // console.log('Drag ended = ', obj);\r\n    const item = obj.source.element.nativeElement;\r\n    // console.log('HTML ITEM: ', item);\r\n    const parentSize = { x: item.offsetParent.scrollWidth, y: item.offsetParent.scrollHeight };\r\n    // console.log('Parent Size = ', parentSize);\r\n    const distancia = obj.distance;\r\n    // console.log('Distancia = ', distancia);\r\n    const updMesa: Mesa = {\r\n      mesa: this.configuracion.mesa,\r\n      area: this.configuracion.area,\r\n      numero: this.configuracion.numero,\r\n      posx: Math.abs((item.offsetLeft + distancia.x) * 100 / parentSize.x),\r\n      posy: Math.abs((item.offsetTop + distancia.y) * 100 / parentSize.y),\r\n      tamanio: this.configuracion.tamanio,\r\n      estatus: this.configuracion.estatus\r\n    };\r\n    // console.log(updMesa);\r\n    this.mesaSrvc.save(updMesa).subscribe(res => {\r\n      // console.log(res);\r\n      if (res.exito) {\r\n        if (!!res.mesa) {\r\n          this.configuracion.mesa = res.mesa.mesa;\r\n          this.snackBar.open(`Mesa #${res.mesa.numero} actualizada...`, 'Diseño de área', { duration: 3000 });\r\n        } else {\r\n          this.snackBar.open(`Mesa #${this.configuracion.numero} actualizada...`, 'Diseño de área', { duration: 3000 });\r\n        }\r\n      } else {\r\n        this.snackBar.open(`ERROR:${res.mensaje}.`, 'Diseño de área', { duration: 3000 });\r\n      }\r\n      this.dontAllowDrag = false;\r\n      this.moviendoMesa.emit(false);\r\n    });\r\n  }\r\n\r\n  dragStarted = (obj: any) => {\r\n    this.moviendoMesa.emit(true);\r\n  }  \r\n}\r\n","<div #divMesa cdkDrag (cdkDragEnded)=\"dragEnded($event)\" (cdkDragStarted)=\"dragStarted($event)\" cdkDragBoundary=\".areaPosicionamiento\" [cdkDragDisabled]=\"dontAllowDrag\" class=\"divMesa mat-elevation-z6\" \r\n    [ngClass]=\"{'disponible': +configuracion.estatus == 1 && +configuracion.debaja === 0, 'ocupada': +configuracion.estatus == 2 && +configuracion.debaja === 0, 'debaja': +configuracion.debaja === 1, 'call-center-ocupado': +configuracion.estatus === 2 && +configuracion.escallcenter === 1, 'call-center-disponible': +configuracion.estatus === 1 && +configuracion.escallcenter === 1}\"\r\n    (click)=\"clickMesa()\"\r\n    [style.width.px]=\"getAncho()\" \r\n    [style.height.px]=\"getAlto()\" \r\n    [style.left.%]=\"configuracion.posx\" \r\n    [style.top.%]=\"configuracion.posy\"\r\n    [attr.disabled]=\"isDisabled ? true : null\"\r\n    [style.backgroundImage]=\"'url('+ urlImage +')'\">\r\n    <span>{{configuracion.etiqueta || configuracion.numero}}</span>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\n\nimport { Cuenta } from '../../interfaces/cuenta';\n\ninterface IDataDialog {\n  cuentas: Cuenta[];\n  comensales: number;\n}\n\n@Component({\n  selector: 'app-pide-datos-cuentas',\n  templateUrl: './pide-datos-cuentas.component.html',\n  styleUrls: ['./pide-datos-cuentas.component.css']\n})\nexport class PideDatosCuentasComponent implements OnInit {\n\n  public displayedColumns: string[] = ['numero', 'nombre'];\n  public dataSource: MatTableDataSource<Cuenta>;\n  public esMovil = false;\n  public keyboardLayout: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<PideDatosCuentasComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IDataDialog,\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n    this.setTableDataSource();\n    for (let i = 0; i < (+this.data.comensales - 1); i++) {\n      this.agregarFila();\n    }\n    // console.log(this.data);\n  }\n\n  todosConNombre(ctas: Cuenta[]): number {\n    for (let i = 0; i < ctas.length; i++) {\n      if (!ctas[i].nombre) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  terminar = () => {\n    const tcn = this.todosConNombre(this.data.cuentas);\n    if (tcn < 0) {\n      this.dialogRef.close(this.data.cuentas);\n    } else {\n      this.snackBar.open(`Favor ingresar nombre a la cuenta #${this.data.cuentas[tcn].cuenta}...`, 'Cuentas', { duration: 5000 });\n    }\n  }\n\n  setTableDataSource = () => this.dataSource = new MatTableDataSource(this.data.cuentas);\n\n  agregarFila() {\n    this.data.cuentas.push(\n      {\n        cuenta: 0,\n        numero: this.data.cuentas.length + 1,\n        nombre: null,\n        productos: []\n      }\n    );\n    this.dataSource.data = this.data.cuentas;\n  }\n\n  eliminarFila = (obj: Cuenta) => {\n    const idx = this.data.cuentas.findIndex(cta => +cta.numero === +obj.numero);\n    if (idx > 0) {\n      this.data.cuentas.splice(idx, 1);\n      this.data.cuentas.map((cta, i) => cta.numero = (i + 1));\n      this.dataSource.data = this.data.cuentas;\n    } else {\n      // console.log('ELIMINAR = ', obj);\n      // console.log('CUENTAS = ', this.data.cuentas);\n      console.log('No se encuentra esta cuenta...');\n    }\n  }\n}\n","<h1 mat-dialog-title>Ingreso de datos de cuentas</h1>\n<div mat-dialog-content>\n    <table #tblCuentas mat-table [dataSource]=\"dataSource\" class=\"fullWidth\">\n        <ng-container matColumnDef=\"numero\">\n            <th mat-header-cell *matHeaderCellDef>No.</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <span>{{element.numero}}</span>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"nombre\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let element\">\n                <mat-form-field class=\"fullWidth\">\n                    <input type=\"text\" matInput *ngIf=\"esMovil\" name=\"nombre\" [(ngModel)]=\"element.nombre\" required>\n                    <input type=\"text\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" name=\"nombre\" [(ngModel)]=\"element.nombre\" required>\n                    <button type=\"button\" mat-button matSuffix mat-icon-button (click)=\"eliminarFila(element)\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>\n            </td>\n        </ng-container>        \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"agregarFila()\" color=\"accent\" [disabled]=\"this.data.cuentas.length === +this.data.comensales\">\n        Agregar\n    </button>\n    <button mat-raised-button (click)=\"terminar()\" color=\"accent\" [disabled]=\"this.data.cuentas.length !== +this.data.comensales\">\n        Terminar        \n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Mesa } from '../../../interfaces/mesa';\nimport { Impresora } from '../../../../admin/interfaces/impresora';\n\nimport { MesaService } from '../../../services/mesa.service';\nimport { ImpresoraService } from '../../../../admin/services/impresora.service';\n\ninterface IData {\n  mesa: Mesa;\n}\n\n@Component({\n  selector: 'app-configura-mesa',\n  templateUrl: './configura-mesa.component.html',\n  styleUrls: ['./configura-mesa.component.css']\n})\nexport class ConfiguraMesaComponent implements OnInit {\n\n  public impresoras: Impresora[] = [];\n  public mesa: any = {};\n\n  constructor(\n    private mesaSrvc: MesaService,\n    private impresoraSrvc: ImpresoraService,\n    private snackBar: MatSnackBar,\n    public dialogRef: MatDialogRef<ConfiguraMesaComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: IData\n  ) { }\n\n  ngOnInit() {\n    this.mesa = this.data.mesa;\n    this.loadImpresoras();\n  }\n\n  loadImpresoras = () => this.impresoraSrvc.get().subscribe(res => this.impresoras = res);\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardarConfiguracion = () => {\n    this.mesaSrvc.save(this.mesa).subscribe(res => {\n      if (res.exito) {\n        if (!!res.mesa) {\n          this.snackBar.open(`Mesa #${res.mesa.numero} actualizada...`, 'Configuración de mesa', { duration: 3000 });\n        } else {\n          this.snackBar.open(`Mesa #${this.mesa.numero} actualizada...`, 'Configuración de mesa', { duration: 3000 });\n        }\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}.`, 'Configuración de mesa', { duration: 7000 });\n      }\n      this.dialogRef.close(true);\n    });\n  }\n}\n","<h1 mat-dialog-title>Configuración de mesa {{mesa.numero}}</h1>\n<div mat-dialog-content>\n    <form #frmConfigMesa=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"text\" matInput placeholder=\"Etiqueta\" name=\"etiqueta\" [(ngModel)]=\"mesa.etiqueta\" maxlength=\"3\">\n        </mat-form-field>\n        <mat-form-field class=\"fullWidth\" *ngIf=\"+mesa.esmostrador === 1\">\n            <mat-label>Impresora</mat-label>\n            <mat-select name=\"impresora\" [(ngModel)]=\"mesa.impresora\">\n                <mat-option *ngFor=\"let imp of impresoras\" [value]=\"imp.impresora\">\n                    {{imp.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"guardarConfiguracion()\" color=\"accent\" [disabled]=\"!frmConfigMesa.form.valid\">\n        Guardar        \n    </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso'\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service'\nimport { saveAs } from 'file-saver';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\nimport { FpagoService } from '../../../../admin/services/fpago.service';\nimport { FormaPago } from '../../../../admin/interfaces/forma-pago';\n\n\n@Component({\n  selector: 'app-caja',\n  templateUrl: './caja.component.html',\n  styleUrls: ['./caja.component.css']\n})\nexport class CajaComponent implements OnInit {\n  public params: any = {\n    _validar: false,\n    sede: []\n  };\n  public titulo = 'Resumen de caja';\n  public tiposTurno: TipoTurno[] = [];\n  public cargando = false;\n  public fpagos: FormaPago[] = [];\n  public sedes: UsuarioSede[] = [];\n  public grupos = GLOBAL.grupos;\n\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: false, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private fpagoSrvc: FpagoService,\n    private sedeSrvc: AccesoUsuarioService\n  ) { }\n\n  ngOnInit() {\n    this.loadTiposTurno();\n    this.loadFormaPago();\n    this.loadSedes();\n  }\n\n  loadFormaPago = () => {\n    this.fpagoSrvc.get().subscribe(res => {\n      if (res) {\n        this.fpagos = res;\n      }\n    })\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.getSedes({reporte: true}).subscribe(res => {\n      if (res) {\n        this.sedes = res\n      }\n    })\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  resetParams = () => {\n    this.params = {};\n    this.cargando = false;\n  }\n\n  excelClick = () => {\n    this.cargando = true;\n    this.params._pagos = this.fpagos;\n    this.params._excel = 1;\n\n    this.pdfServicio.getReporteCaja(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  onSubmit() {\n    this.cargando = true;\n    this.params._pagos = this.fpagos;\n    this.params._excel = 0;\n    \n    this.pdfServicio.getReporteCaja(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de caja</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptCaja=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">\n              <mat-label>Tipo de turno</mat-label>\n              <mat-select name=\"turno_tipo\" [(ngModel)]=\"params.turno_tipo\">\n                  <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                      {{tt.descripcion}}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">            \n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">\n            <mat-label>Sede</mat-label>\n            <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\">\n                <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\n                    {{sede.sede.nombre}}\n                </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\" *ngIf=\"params.sede && params.sede.length > 1\">\n              <mat-label>Agrupar por</mat-label>\n              <mat-select name=\"grupo\"  [(ngModel)]=\"params._grupo\">\n                  <mat-option *ngFor=\"let grp of grupos\" [value]=\"grp.id\">\n                      {{grp.descripcion}}\n                  </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <div class=\"row\">\n            <div class=\"col\">\n              <mat-checkbox name=\"mostrar_detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n            </div>\n            <div class=\"col\">\n              <mat-checkbox name=\"validar\" class=\"fullWidth\" [(ngModel)]=\"+params._validar\">Validar Montos</mat-checkbox>\n            </div>\n          </div>\n          <hr *ngIf=\"params._validar\">\n          <form *ngIf=\"params._validar\">\n            <div *ngFor=\"let fp of fpagos\">\n              <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"number\" step=\"0.01\" placeholder=\"{{fp.descripcion}}\" [(ngModel)]=\"fp.monto\" [ngModelOptions]=\"{standalone: true}\">\n              </mat-form-field>\n            </div>\n          </form>\n          <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"excelClick()\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n// import { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { AutoconsultaService } from '../../../services/autoconsulta.service';\nimport { Campo } from '../../../interfaces/autoconsulta';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-autoconsulta',\n  templateUrl: './autoconsulta.component.html',\n  styleUrls: ['./autoconsulta.component.css']\n})\nexport class AutoconsultaComponent implements OnInit {\n  public params: any = { campos: [], datos: [] };\n  public titulo = 'Autoconsulta';\n  public campos: Campo[] = [];\n  public fechas: Campo[] = [];\n  public orden: Campo[] = [];\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: false, showHtml: false, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    // private pdfServicio: ReportePdfService,\n    private autoconsultaSrvc: AutoconsultaService\n  ) { }\n\n  ngOnInit() {\n    this.getCampos();\n    this.getCampos({ por_fecha: 1 }, 2);\n    this.getCampos({ ordenar_por: 1 }, 3);\n  }\n\n  resetParams = () => {\n    this.params = { campos: [], datos: [] };\n    this.cargando = false;\n  }\n\n  getReporte = () => {\n    this.cargando = true;\n    // tslint:disable-next-line: forin\n    for (const key in this.params.campos) {\n      this.params.datos.push(this.params.campos[key]);\n    }\n    this.autoconsultaSrvc.getReporte(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getCampos = (params: any = {}, tipo: number = 1) => {\n    this.cargando = true;\n    this.autoconsultaSrvc.getCampos(params).subscribe(res => {\n      this.cargando = false;\n      switch (tipo) {\n        case 1: this.campos = res; break;\n        case 2: this.fechas = res; break;\n        case 3: this.orden = res; break;\n      }\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Autoconsulta</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Campos</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.campos\" multiple=\"multiple\" required>\n                            <mat-option *ngFor=\"let campo of campos\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Filtrar Por</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.fecha\" required>\n                            <mat-option *ngFor=\"let campo of fechas\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Ordenar Por</mat-label>\n                        <mat-select name=\"campos\" [(ngModel)]=\"params.orden\">\n                            <mat-option *ngFor=\"let campo of orden\" [value]=\"campo.tabla_campo\">\n                                {{campo.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <app-rpt-botones [configuracion]=\"configBotones\" (excelClick)=\"getReporte()\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\n\n@Component({\n  selector: 'app-form-turno-tipo',\n  templateUrl: './form-turno.component.html',\n  styleUrls: ['./form-turno.component.css']\n})\nexport class FormTurnoTipoComponent implements OnInit {\n  \n  @Input() turno: TipoTurno;\n  @Output() turnoSavedEv = new EventEmitter();\n\n  constructor(\n  \tprivate _snackBar: MatSnackBar,\n    private turnoSrvc: TipoTurnoService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  resetTurno = () => this.turno = { \n    turno_tipo: null, descripcion: null, activo:1\n  };\n\n  onSubmit = () => {\n    this.turnoSrvc.save(this.turno).subscribe(res => {\n      //console.log(res);\n      if (res.exito) {\n        this.turnoSavedEv.emit();\n        this.resetTurno();\n        this._snackBar.open('Tipo de Turno agregado...', 'Turno', { duration: 3000 });\n      } else {\n        this._snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });        \n      }\n    });\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Tipo de Turno {{!!turno.turno_tipo ? turno.descripcion : ''}}\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmTurno=\"ngForm\" (ngSubmit)=\"frmTurno.form.valid && onSubmit()\" novalidate>\n            <mat-form-field class=\"fullWidth\">\n                <input matInput type=\"text\" placeholder=\"Descripción\" name=\"descripcion\" [(ngModel)]=\"turno.descripcion\" required>\n            </mat-form-field>\n            <mat-checkbox name=\"activo\" class=\"fullWidth\" [(ngModel)]=\"+turno.activo\">Activo</mat-checkbox>\n            <div align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTurno.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTurno()\" *ngIf=\"turno.turno_tipo\">\n                    Nuevo\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { PorCategoria, PorArticulo } from '../../../interfaces/reporte-ventas';\nimport { ReporteVentasService } from '../../../services/reporte-ventas.service';\nimport { UsuarioSede } from '../../../../admin/interfaces/acceso';\nimport { AccesoUsuarioService } from '../../../../admin/services/acceso-usuario.service';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-rpt-ventas',\n  templateUrl: './rpt-ventas.component.html',\n  styleUrls: ['./rpt-ventas.component.css']\n})\nexport class RptVentasComponent implements OnInit {\n\n  public tiposReporte: any[] = [];\n  public params: any = {};\n  public paramsToSend: any = {};\n  public msgGenerandoReporte: string = null;\n  public porCategoria: PorCategoria[] = [];\n  public porArticulo: any = { datos: [] };\n  public tiposTurno: TipoTurno[] = [];\n  public sedes: UsuarioSede[] = [];\n  public grupos = GLOBAL.grupos;\n  public tituloCategoria = 'Ventas por categoria';\n  public tituloArticulo = 'Ventas por articulo';\n  public cargando = false;\n  public configBotones: ConfiguracionBotones = {\n    showPdf: true, showHtml: true, showExcel: true\n  };\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private rptVentasSrvc: ReporteVentasService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private sedeSrvc: AccesoUsuarioService\n  ) { }\n\n  ngOnInit() {\n    this.resetParams();\n    this.loadTiposReporte();\n    this.loadTiposTurno();\n    this.loadSedes();\n  }\n\n  loadSedes = () => {\n    this.sedeSrvc.getSedes({reporte: true}).subscribe(res => {\n      if (res) {\n        this.sedes = res\n      }\n    })\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  loadTiposReporte = () => {\n    this.tiposReporte = [\n      { tipo_reporte: 1, descripcion: 'Por categoría' },\n      { tipo_reporte: 2, descripcion: 'Por artículo' }\n    ];\n  }\n\n  resetParams = () => {\n    this.porCategoria = [];\n    this.porArticulo = [];\n    this.msgGenerandoReporte = null;\n    this.params = {\n      tipo_reporte: undefined,\n      fdel: moment().startOf('week').format(GLOBAL.dbDateFormat),\n      fal: moment().endOf('week').format(GLOBAL.dbDateFormat)\n    };\n    this.cargando = false;\n  }\n\n  getReporte = (tipo: number = 1) => {\n    this.paramsToSend = JSON.parse(JSON.stringify(this.params));\n    this.msgGenerandoReporte = 'GENERANDO REPORTE EN ';\n    switch (tipo) {\n      case 1 : this.getEnPantalla(); break;\n      case 2 : this.getPdf(); break;\n      case 3 : this.getExcel(); break;\n    }\n  }\n\n  getPdf = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaPdf(); break;\n      case 2: this.getPorArticuloPdf(); break;\n    }\n  }\n\n  getExcel = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaExcel(); break;\n      case 2: this.getPorArticuloExcel(); break;\n    }\n  }\n\n  getPorCategoriaExcel = () => {\n    this.paramsToSend._excel = 1;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoriaPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.tituloCategoria}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloCategoria, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorCategoriaPdf = () => {\n    this.paramsToSend._excel = 0;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoriaPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.tituloCategoria}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloCategoria, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloPdf = () => {\n    this.paramsToSend._excel = 0;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticuloPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.tituloArticulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloArticulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloExcel = () => {\n    this.paramsToSend._excel = 1;\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticuloPdf(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.tituloArticulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.tituloArticulo, { duration: 3000 });\n      }\n    });\n  }\n\n  getEnPantalla = () => {\n    switch (this.params.tipo_reporte) {\n      case 1: this.getPorCategoriaEnPantalla(); break;\n      case 2: this.getPorArticuloEnPantalla(); break;\n    }\n  }\n\n  cleanParams = () => delete this.paramsToSend.tipo_reporte;\n\n  getPorCategoriaEnPantalla = () => {\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porCategoria(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        this.porCategoria = res;\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', 'Ventas por categoría', { duration: 3000 });\n      }\n    });\n  }\n\n  getPorArticuloEnPantalla = () => {\n    this.cargando = true;\n    this.cleanParams();\n    this.rptVentasSrvc.porArticulo(this.paramsToSend).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        this.porArticulo = res;\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', 'Ventas por artículo', { duration: 3000 });\n      }\n    });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Reporte de ventas</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Tipo</mat-label>\n                        <mat-select name=\"tipo_reporte\" [(ngModel)]=\"params.tipo_reporte\" required>\n                            <mat-option *ngFor=\"let tr of tiposReporte\" [value]=\"tr.tipo_reporte\">\n                                {{tr.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Tipo de turno</mat-label>\n                        <mat-select name=\"turno_tipo\" [(ngModel)]=\"params.turno_tipo\">\n                            <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                                {{tt.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Del\" name=\"fdel\" [(ngModel)]=\"params.fdel\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <input type=\"date\" matInput placeholder=\"Al\" name=\"fal\" [(ngModel)]=\"params.fal\" required>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\">\n                        <mat-label>Sede</mat-label>\n                        <mat-select name=\"sede\" multiple [(ngModel)]=\"params.sede\">\n                            <mat-option *ngFor=\"let sede of sedes\" [value]=\"sede.sede.sede\">\n                                {{sede.sede.nombre}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"fullWidth\" *ngIf=\"params.sede && params.sede.length > 1\">\n                        <mat-label>Agrupar por</mat-label>\n                        <mat-select name=\"grupo\"  [(ngModel)]=\"params._grupo\">\n                            <mat-option *ngFor=\"let grp of grupos\" [value]=\"grp.id\">\n                                {{grp.descripcion}}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <app-rpt-botones [configuracion]=\"configBotones\" (excelClick) = \"getReporte(3)\" (htmlClick)=\"getReporte(1)\" (pdfClick)=\"getReporte(2)\" (resetParamsClick)=\"resetParams()\"></app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"params.tipo_reporte === 1 && porCategoria.length > 0\">\n    <div class=\"col m12 s12\">\n        <app-por-categoria [params]=\"params\" [data]=\"porCategoria\"></app-por-categoria>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"params.tipo_reporte === 2 \">\n    <div class=\"col m12 s12\">\n        <app-por-articulo [params]=\"params\" [data]=\"porArticulo\"></app-por-articulo>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TranComandaAltComponent } from '../tran-comanda-alt/tran-comanda-alt.component';\n\nimport { TranComanda } from '../../classes/tran-comanda';\n\ninterface ITranComanda {\n  tranComanda: TranComanda;\n  dialogRef: MatDialogRef<TranComandaAltComponent>;\n}\n\n@Component({\n  selector: 'app-acciones-comanda',\n  templateUrl: './acciones-comanda.component.html',\n  styleUrls: ['./acciones-comanda.component.css']\n})\nexport class AccionesComandaComponent implements OnInit {\n\n  constructor(\n    private bsAccionesComanda: MatBottomSheetRef<AccionesComandaComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: ITranComanda\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  cerrar = (obj: any = { cerrar: false }) => this.bsAccionesComanda.dismiss(obj);\n\n  notasGenerales = () => {\n    this.data.tranComanda.getNotasGenerales();\n    this.cerrar();\n  }\n\n  comandar = () => {\n    this.data.tranComanda.validarImpresion(false, this.data.dialogRef);\n    this.cerrar();\n  }\n\n  imprimirCuenta = () => {\n    this.data.tranComanda.printCuenta(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  distribuirProductos = () => {\n    this.data.tranComanda.distribuirProductos(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  unirCuentas = () => {\n    this.data.tranComanda.unirCuentas(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  cobrarCuenta = () => {\n    this.data.tranComanda.cobrarCuenta(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  enviarPedido = () => {\n    this.data.tranComanda.enviarPedido(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  trasladarMesa = () => {\n    this.data.tranComanda.trasladoMesa(this.data.dialogRef);\n    this.cerrar();\n  }\n\n  cerrarMesa = () => {\n    this.data.tranComanda.cerrarMesa();\n    this.cerrar({\n      cerrar: true,\n      mesaEnUso: this.data.tranComanda.mesaEnUso\n    });\n  }\n}\n","<mat-action-list>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"notasGenerales()\"\n        [disabled]=\"data.tranComanda.bloqueoBotones\">Notas</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"comandar()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 0\">Comanda</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"imprimirCuenta()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Cuenta</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"distribuirProductos()\"\n        [disabled]=\"data.tranComanda.mesaEnUso.cuentas.length < 2 || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Distribuir</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"unirCuentas()\"\n        [disabled]=\"data.tranComanda.mesaEnUso.cuentas.length < 2 || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Unir cuentas</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"cobrarCuenta()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.esCajero() || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 0\">Cobrar cuenta</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"enviarPedido()\"\n        [disabled]=\"!data.tranComanda.cuentaActiva.nombre || data.tranComanda.esCajero() || data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.escallcenter === 1\">Enviar pedido</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"trasladarMesa()\" [disabled]=\"data.tranComanda.bloqueoBotones\"\n        *ngIf=\"+data.tranComanda.mesaEnUso.mesa.esmostrador === 0\">Trasladar</button>\n    <button class=\"accion-comanda mat-elevation-z4\" mat-list-item (click)=\"cerrarMesa()\"\n        *ngIf=\"data.tranComanda.lstProductosSeleccionados.length <= 0\">Cerrar\n        {{+data.tranComanda.mesaEnUso.mesa.esmostrador === 0 ? 'Mesa' : (+data.tranComanda.mesaEnUso.mesa.escallcenter\n        === 0 ? 'Mostrador' :\n        'Pedido')}}</button>\n</mat-action-list>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\n\nimport { Area } from '../../../interfaces/area';\nimport { AreaService } from '../../../services/area.service';\n\n@Component({\n  selector: 'app-lista-area',\n  templateUrl: './lista-area.component.html',\n  styleUrls: ['./lista-area.component.css']\n})\nexport class ListaAreaComponent implements OnInit {\n\n  public lstEntidades: Area[];\n  public lstEntidadesPaged: Area[];\n  @Output() getEntidadEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    public areaSrvc: AreaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.loadEntidades();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstEntidades, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstEntidadesPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstEntidades.length;\n      this.lstEntidadesPaged = PaginarArray(this.lstEntidades, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadEntidades = () => {\n    this.areaSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0), debaja: 1 }).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstEntidades = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getEntidad = (id: number) => {\n    this.areaSrvc.get({ area: id, debaja: 1 }).subscribe((lst) => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.getEntidadEv.emit(lst[0]);\n        }\n      }\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item matRipple *ngFor=\"let element of lstEntidadesPaged\" (click)=\"getEntidad(element.area)\">\n                <mat-icon mat-list-icon>settings</mat-icon>\n                <h5 mat-line>{{element.nombre}}</h5>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ReportePdfService } from '../../../services/reporte-pdf.service';\nimport { saveAs } from 'file-saver';\nimport { ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-propinas',\n  templateUrl: './propinas.component.html',\n  styleUrls: ['./propinas.component.css']\n})\n\nexport class PropinasComponent implements OnInit {\n  public params: any = {};\n  public titulo = 'Propinas';\n  public configBotones: ConfiguracionBotones = {\n    isHtmlDisabled: true, isPdfDisabled: false, isExcelDisabled: false, showHtml: false, showExcel: true, showPdf: true\n  };\n  public cargando = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private pdfServicio: ReportePdfService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  resetParams = () => {\n    this.params = {};\n    this.cargando = false;\n  }\n\n  onSubmit() {\n    this.params._excel = 0;\n    this.cargando = true;\n    this.pdfServicio.getReportePropina(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/pdf' });\n        saveAs(blob, `${this.titulo}.pdf`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n  excelClick() {\n    this.params._excel = 1;\n    this.cargando = true;\n    this.pdfServicio.getReportePropina(this.params).subscribe(res => {\n      this.cargando = false;\n      if (res) {\n        const blob = new Blob([res], { type: 'application/vnd.ms-excel' });\n        saveAs(blob, `${this.titulo}.xls`);\n      } else {\n        this.snackBar.open('No se pudo generar el reporte...', this.titulo, { duration: 3000 });\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col m12 s12\">\n    <mat-card class=\"mat-elevation-z4 fullWidth\">\n      <mat-card-title>\n        <h4>Reporte de propinas</h4>\n      </mat-card-title>\n      <mat-card-content>\n        <form #frmRptPropinas=\"ngForm\" novalidate>\n          <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"date\" placeholder=\"Del\" [(ngModel)]=\"params.fdel\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-form-field class=\"fullWidth\">\n            <input matInput type=\"date\" placeholder=\"Al\" [(ngModel)]=\"params.fal\" [ngModelOptions]=\"{standalone: true}\" required>\n          </mat-form-field>\n          <mat-checkbox name=\"mostrar_detalle\" class=\"fullWidth\" [(ngModel)]=\"+params._detalle\">Mostrar Detalle</mat-checkbox>\n          <app-rpt-botones [configuracion]=\"configBotones\" (pdfClick)=\"onSubmit()\" (resetParamsClick)=\"resetParams()\" (excelClick)=\"excelClick()\"></app-rpt-botones>\n        </form>\n        <app-cargando *ngIf=\"cargando\"></app-cargando>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Propina } from '../interfaces/propina';\n// import { LocalstorageService } from '../../admin/services/localstorage.service';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropinaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'propina';\n  // private usrToken: string = null;\n\n  constructor(\n    private http: HttpClient,\n    // private ls: LocalstorageService\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n    // this.usrToken = this.ls.get(GLOBAL.usrTokenVar) ? this.ls.get(GLOBAL.usrTokenVar).token : null;\n  }\n\n  get(fltr: any = {}): Observable<Propina[]> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.get<Propina[]>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Propina): Observable<any> {\n    /* const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': this.usrToken\n      })\n    }; */\n    return this.http.post<any>(\n      `${GLOBAL.urlAppRestaurante}/${this.moduleUrl}/guardar${!!entidad.propina_distribucion ? ('/' + entidad.propina_distribucion) : ''}`,\n      entidad\n      // , httpOptions\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Mesa, MesaDisponible } from '../interfaces/mesa';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MesaService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'mesa';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Mesa[]> {\n    return this.http.get<Mesa[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Mesa) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/mesa/guardar${entidad.mesa ? ('/' + entidad.mesa) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDisponibles(): Observable<MesaDisponible[]> {\n    return this.http.get<MesaDisponible[]>(\n      `${GLOBAL.urlMantenimientos}/area/get_mesas_disponibles?`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { Component, OnInit, ViewChild, AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTab } from '@angular/material/tabs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { PideTelefonoDialogComponent } from '../../../callcenter/components/pide-telefono-dialog/pide-telefono-dialog.component';\r\n\r\nimport { AbrirMesaComponent } from '../abrir-mesa/abrir-mesa.component';\r\nimport { TranComandaComponent } from '../tran-comanda/tran-comanda.component';\r\nimport { TranComandaAltComponent } from '../tran-comanda-alt/tran-comanda-alt.component';\r\nimport { Area } from '../../interfaces/area';\r\nimport { AreaService } from '../../services/area.service';\r\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../../admin/interfaces/cliente';\r\nimport { Subscription } from 'rxjs';\r\n// import * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-tran-areas',\r\n  templateUrl: './tran-areas.component.html',\r\n  styleUrls: ['./tran-areas.component.css']\r\n})\r\nexport class TranAreasComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  public divSize: any = { h: 0, w: 0 };\r\n  public openedRightPanel: boolean;\r\n  public cargando = false;\r\n\r\n  @ViewChild('matTabArea') pestania: ElementRef;\r\n  @ViewChild('rightSidenav') rightSidenav: MatSidenav;\r\n  @ViewChild('tabArea') tabArea: MatTab;\r\n  @ViewChild('snTranComanda') snTrancomanda: TranComandaComponent;\r\n  public lstTabsAreas: Area[] = [];\r\n  public lstTabsAreasForUpdate: Area[] = [];\r\n  public mesaSeleccionada: any;\r\n  public mesaSeleccionadaToOpen: any;\r\n  public configTipoPantalla = 1;\r\n  public clientePedido: Cliente = null;\r\n\r\n  private endSubs = new Subscription();\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private ls: LocalstorageService,\r\n    public areaSrvc: AreaService,\r\n    public comandaSrvc: ComandaService,\r\n    private configSrvc: ConfiguracionService,\r\n    private socket: Socket\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loadAreas();\r\n    this.resetMesaSeleccionada();\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n\r\n      this.socket.on('refrescar:mesa', (obj: any) => {\r\n        // console.log(obj);\r\n        this.loadAreas(true, obj);\r\n      });\r\n    }\r\n    this.configTipoPantalla = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_PANTALLA_TOMA_COMANDA);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.setDivSize();\r\n      this.snTrancomanda.resetMesaEnUso();\r\n    }, 600);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.endSubs.unsubscribe();\r\n  }\r\n\r\n  actualizar = () => {\r\n    // console.log('MESA SELECCIONADA = ', this.mesaSeleccionada);\r\n    const area = this.lstTabsAreas.find((c: Area) => +c.area === +this.mesaSeleccionada.mesa.area.area);\r\n    // console.log('AREA = ', area);\r\n    const areaIndex = this.lstTabsAreas.findIndex((c: Area) => +c.area === +this.mesaSeleccionada.mesa.area.area);\r\n    // console.log('AREA IDX = ', areaIndex);\r\n    const mesaIndex = area.mesas.findIndex(x => +x.mesa === +this.mesaSeleccionada.mesa.mesa);\r\n    // console.log('MESA IDX = ', mesaIndex);\r\n    this.lstTabsAreas[areaIndex].mesas[mesaIndex].estatus = 1;\r\n    // console.log('MESA = ', this.lstTabsAreas[areaIndex].mesas[mesaIndex]);\r\n    this.toggleRightSidenav();\r\n    /*switch (this.configTipoPantalla) {\r\n      case 1: this.toggleRightSidenav(); break;\r\n      // case 2: this.openTranComandaAlt(); break;\r\n      // default: this.toggleRightSidenav();\r\n    }*/\r\n  }\r\n\r\n  resetMesaSeleccionada = () => this.mesaSeleccionada = {\r\n    comanda: null, usuario: null, sede: null, estatus: null,\r\n    mesa: {\r\n      mesa: null,\r\n      area: { area: null, sede: null, area_padre: null, nombre: null },\r\n      numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n    },\r\n    cuentas: []\r\n  }\r\n\r\n  loadAreas = (saveOnTemp = false, objMesaEnUso: any = {}) => {\r\n    this.cargando = true;\r\n    this.endSubs.add(      \r\n      this.areaSrvc.get({ sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe((res) => {\r\n        if (!saveOnTemp) {\r\n          this.lstTabsAreas = res;\r\n          this.cargando = false;\r\n        } else {\r\n          this.lstTabsAreasForUpdate = res;\r\n          this.updateTableStatus(objMesaEnUso.mesaenuso);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  updateTableStatus = (objMesaEnUso: any = {}) => {\r\n    for (const a of this.lstTabsAreasForUpdate) {\r\n      for (const m of a.mesas) {\r\n        this.setEstatusMesa({ area: +a.area, mesa: +m.mesa }, +m.estatus);\r\n      }\r\n    }\r\n    this.cargando = false;\r\n    if (this.rightSidenav.opened) {\r\n      if (+this.mesaSeleccionada.comanda === +objMesaEnUso.comanda) {\r\n        this.toggleRightSidenav();\r\n      }\r\n    }\r\n  }\r\n\r\n  setDivSize() {\r\n    // this.divSize.w = this.pestania.nativeElement.offsetWidth;\r\n    // this.divSize.h = this.pestania.nativeElement.offsetHeight;\r\n  }\r\n\r\n  onResize = (event: any) => this.setDivSize();\r\n\r\n  onClickMesa(m: any) {\r\n    // console.log(m.mesaSelected); return;\r\n    if (!this.cargando) {\r\n      if (+m.mesaSelected.escallcenter === 0) {\r\n        this.aperturaCargaMesa(m);\r\n      } else {\r\n        const varCliPedido = `${GLOBAL.rtClientePedido}_${m.mesaSelected.mesa}`;\r\n        if (+m.mesaSelected.estatus === 1) {\r\n          this.ls.clear(varCliPedido);\r\n          const pideTelefonoRef = this.dialog.open(PideTelefonoDialogComponent, {\r\n            width: '50%',\r\n            disableClose: true,\r\n            data: { mesa: m.mesaSelected }\r\n          });\r\n\r\n          this.endSubs.add(            \r\n            pideTelefonoRef.afterClosed().subscribe((cli: Cliente) => {\r\n              if (cli) {\r\n                this.clientePedido = cli;\r\n                this.ls.set(varCliPedido, this.clientePedido);\r\n                this.aperturaCargaMesa(m);\r\n              }\r\n            })\r\n          );\r\n        } else {\r\n          this.clientePedido = this.ls.get(varCliPedido);\r\n          this.aperturaCargaMesa(m);\r\n        }\r\n      }\r\n    } else {\r\n      this.snackBar.open('El sistema está terminando de cargar información. Por favor intente de nuevo.', 'Áreas', { duration: 5000 });\r\n    }\r\n  }\r\n\r\n  aperturaCargaMesa = (m: any) => {\r\n    switch (+m.mesaSelected.estatus) {\r\n      case 1: this.openAbrirMesaDialog(m.mesaSelected); break;\r\n      case 2: this.loadComandaMesa(m.mesaSelected); break;\r\n    }\r\n  }\r\n\r\n  setEstatusMesa = (m: any, estatus: number) => {\r\n    // console.log('Mesa = ', m);\r\n    // console.log('Estatus solicitado = ', estatus);\r\n    const idxArea = this.lstTabsAreas.findIndex(a => +a.area === +m.area);\r\n    // console.log(`Area = ${idxArea}`);\r\n    if (idxArea > -1) {\r\n      const idxMesa = this.lstTabsAreas[idxArea].mesas.findIndex(l => +l.mesa === +m.mesa);\r\n      // console.log(`Mesa = ${idxMesa}`);\r\n      if (idxMesa > -1) {\r\n        this.lstTabsAreas[idxArea].mesas[idxMesa].estatus = estatus;\r\n      }\r\n    }\r\n  }\r\n\r\n  guardarMesa = (m: any) => {\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.save(this.mesaSeleccionadaToOpen).subscribe(res => {\r\n        // console.log(res);\r\n        this.cargando = false;\r\n        if (res.exito) {\r\n          this.socket.emit('refrescar:mesa', {});\r\n          this.mesaSeleccionada = res.comanda;\r\n          // console.log('m', m);\r\n          this.setEstatusMesa(m, +res.comanda.mesa.estatus);\r\n          this.snTrancomanda.llenaProductosSeleccionados(this.mesaSeleccionada);\r\n          this.snTrancomanda.setSelectedCuenta(this.mesaSeleccionada.cuentas[0].numero);\r\n          this.snTrancomanda.rolesUsuario = this.mesaSeleccionada.turno_rol;\r\n          // this.toggleRightSidenav();\r\n          switch (this.configTipoPantalla) {\r\n            case 1: this.toggleRightSidenav(); break;\r\n            case 2: this.openTranComandaAlt(); break;\r\n            default: this.toggleRightSidenav();\r\n          }\r\n        } else {\r\n          this.snackBar.open(`${res.mensaje}`, 'ERROR', { duration: 5000 });\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  openAbrirMesaDialog(m: any) {\r\n    // console.log(m);\r\n    this.cargando = true;\r\n    this.mesaSeleccionadaToOpen = {\r\n      nombreArea: this.tabArea.textLabel,\r\n      area: +m.area,\r\n      mesa: +m.mesa,\r\n      numero: +m.numero,\r\n      mesero: '',\r\n      comensales: '1',\r\n      comanda: 0,\r\n      esEvento: false,\r\n      dividirCuentasPorSillas: false,\r\n      estatus: 1,\r\n      clientePedido: this.clientePedido || null,\r\n      cuentas: [\r\n        {\r\n          numero: 1,\r\n          nombre: this.clientePedido?.nombre || 'Única',\r\n          productos: []\r\n        }\r\n      ]\r\n    };\r\n\r\n    if (+m.esmostrador === 0) {\r\n      const abrirMesaRef = this.dialog.open(AbrirMesaComponent, {\r\n        width: '50%',\r\n        height: 'auto',\r\n        disableClose: true,\r\n        data: this.mesaSeleccionadaToOpen\r\n      });\r\n\r\n      this.endSubs.add(        \r\n        abrirMesaRef.afterClosed().subscribe((result: Comanda) => {\r\n          if (result) {\r\n            this.mesaSeleccionadaToOpen = result;\r\n            // console.log(JSON.stringify(this.mesaSeleccionada));\r\n            this.guardarMesa(m);\r\n          } else {\r\n            this.cargando = false;\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      this.mesaSeleccionadaToOpen.mesero = this.ls.get(GLOBAL.usrTokenVar).idusr;\r\n      this.guardarMesa(m);\r\n    }\r\n  }\r\n\r\n  toggleRightSidenav = (obj: any = null) => {\r\n    this.rightSidenav.toggle().then((res: MatDrawerToggleResult) => {\r\n      if (res === 'close') {\r\n        // this.checkEstatusMesa();\r\n        if (obj) {\r\n          this.loadAreas(true, { mesaenuso: obj });\r\n        } else {\r\n          // console.log('MESA EN MEMORIA: ', this.mesaSeleccionada);\r\n          // console.log(`TOGGLE SIDE NAV ${moment().format(GLOBAL.dateTimeFormatMilli)}`);\r\n          this.cargando = false;\r\n        }\r\n      } else if (res === 'open') {\r\n        // console.log('MESA SELECTED: ', this.mesaSeleccionada);\r\n        if (this.mesaSeleccionada.cuentas.length === 1) {\r\n          this.snTrancomanda.setSelectedCuenta(this.mesaSeleccionada.cuentas[0].numero);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  cerrandoRightSideNav = () => {\r\n    // console.log('Antes de \"resetMesaEnUso\"');\r\n    this.snTrancomanda.resetMesaEnUso();\r\n    // console.log('Antes de \"resetLstProductosDeCuenta\"');\r\n    this.snTrancomanda.resetLstProductosDeCuenta();\r\n    // console.log('Antes de \"resetLstProductosSeleccionados\"');\r\n    this.snTrancomanda.resetLstProductosSeleccionados();\r\n    // console.log('Antes de \"resetCuentaActiva\"');\r\n    this.snTrancomanda.resetCuentaActiva();\r\n    // console.log('Antes de \"loadComandaMesa\"');\r\n    this.snTrancomanda.resetListadoArticulos();\r\n    // console.log('MESA SELECCIONADA EN CERRANDO RIGHT SIDE PANEL = ', this.mesaSeleccionada);    \r\n    // console.log(`CERRANDO ${moment().format(GLOBAL.dateTimeFormatMilli)}`);    \r\n    // this.fuerzaCierreComanda(false);\r\n    this.checkEstatusMesa();\r\n    this.resetMesaSeleccionada();\r\n    // this.cargando = false;\r\n  }\r\n\r\n  msnOpenedChange = (abierto: boolean) => {\r\n    if (!abierto) {\r\n      this.cerrandoRightSideNav();\r\n    }\r\n  }\r\n\r\n  checkEstatusMesa = () => {\r\n    // console.log('MESA EN CHECK ESTATUS MESA = ', this.mesaSeleccionada);\r\n    if (!!this.mesaSeleccionada && !!this.mesaSeleccionada.cuentas && this.mesaSeleccionada.cuentas.length > 0) {\r\n      const abiertas = this.mesaSeleccionada.cuentas.filter(cta => +cta.cerrada === 0).length || 0;\r\n      // console.log('ABIERTAS = ', abiertas);\r\n      if (abiertas === 0) {\r\n        this.setEstatusMesa({\r\n          area: this.mesaSeleccionada.mesa.area.area,\r\n          mesa: this.mesaSeleccionada.mesa.mesa\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  fuerzaCierreComanda = (shouldToggle: boolean) => {\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.cerrarEstacion(this.mesaSeleccionada.comanda).subscribe(resCierre => {\r\n        this.loadComandaMesa(this.mesaSeleccionada.mesa, shouldToggle);\r\n      })\r\n    );\r\n  }\r\n\r\n  openTranComandaAlt = () => {\r\n    const tranComandaRef = this.dialog.open(TranComandaAltComponent, {\r\n      maxWidth: '100vw', maxHeight: '85vh', width: '99vw', height: '85vh',\r\n      disableClose: true,\r\n      data: { mesa: this.mesaSeleccionada }\r\n    });\r\n\r\n    this.endSubs.add(      \r\n      tranComandaRef.afterClosed().subscribe((res: any) => {\r\n        this.checkEstatusMesa();\r\n        if (res) {\r\n          this.loadAreas(true, { mesaenuso: res });\r\n        } else {\r\n          this.cargando = false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loadComandaMesa = (obj: any, shouldToggle = true) => {\r\n    // console.log('OBJETO = ', obj);\r\n    if(shouldToggle && this.cargando) {\r\n      this.snackBar.open('El sistema está terminando de cargar información. Por favor intente de nuevo.', 'Áreas', { duration: 5000 });\r\n      return;\r\n    }\r\n\r\n    this.cargando = true;\r\n    this.endSubs.add(      \r\n      this.comandaSrvc.getComandaDeMesa(obj.mesa).subscribe((res: ComandaGetResponse) => {\r\n        // console.log('RESPUESTA DE GET COMANDA = ', res);\r\n        // this.cargando = false;\r\n        if (res.exito) {\r\n          if (!Array.isArray(res)) {\r\n            this.mesaSeleccionada = res;\r\n            this.snTrancomanda.rolesUsuario = this.mesaSeleccionada.turno_rol;\r\n          } else {\r\n            if (res.length === 0) {\r\n              this.mesaSeleccionada = {\r\n                mesa: this.mesaSeleccionada.mesa,\r\n                cuentas: [\r\n                  { cerrada: 1 }\r\n                ]\r\n              };\r\n            }\r\n            this.checkEstatusMesa();\r\n          }\r\n          // console.log('MESA SELECTED = ', this.mesaSeleccionada);\r\n          this.checkEstatusMesa();\r\n          if (shouldToggle) {\r\n            // const cuentas = this.mesaSeleccionada.cuentas;\r\n            this.snTrancomanda.llenaProductosSeleccionados(this.mesaSeleccionada);\r\n            switch (this.configTipoPantalla) {\r\n              case 1: this.toggleRightSidenav(); break;\r\n              case 2: this.openTranComandaAlt(); break;\r\n              default: this.toggleRightSidenav();\r\n            }\r\n          } else {\r\n            // console.log(`SIN TOGGLE RIGHT PANEL ${moment().format(GLOBAL.dateTimeFormat)}`);\r\n            this.checkEstatusMesa();\r\n            this.cargando = false;\r\n          }\r\n        } else {\r\n          if (res.mensaje) {\r\n            this.snackBar.open(`${res.mensaje}`, 'ERROR', { duration: 5000 });\r\n          }\r\n          if (Array.isArray(res)) {\r\n            if (res.length === 0) {\r\n              this.mesaSeleccionada = {\r\n                mesa: this.mesaSeleccionada.mesa,\r\n                cuentas: [\r\n                  { cerrada: 1 }\r\n                ]\r\n              };\r\n            }\r\n          }\r\n          this.checkEstatusMesa();\r\n          this.cargando = false;\r\n        }\r\n        this.checkEstatusMesa();\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"matSideNavContainer\">\n    <!-- <mat-sidenav #rightSidenav mode=\"over\" [(opened)]=\"openedRightPanel\" (closedStart)=\"cerrandoRightSideNav()\" position=\"end\" disableClose> -->\n    <mat-sidenav #rightSidenav mode=\"over\" [(opened)]=\"openedRightPanel\" (openedChange)=\"msnOpenedChange($event)\" position=\"end\" disableClose>\n        <app-tran-comanda #snTranComanda [mesaEnUso]=\"mesaSeleccionada\" [clientePedido]=\"clientePedido\" (mesaSavedEv)=\"actualizar()\" (closeSideNavEv)=\"toggleRightSidenav($event)\"></app-tran-comanda>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-tab-group dynamicHeight backgroundColor=\"primary\">\n            <mat-tab #tabArea *ngFor=\"let tabA of lstTabsAreas\" label=\"{{tabA.nombre}}\">\n                <div #matTabArea class=\"divAreaMesa\" (window:resize)=\"onResize($event)\">\n                    <app-mesa *ngFor=\"let m of tabA.mesas\" [configuracion]=\"m\" (onClickMesa)=\"!cargando && onClickMesa($event)\" [isDisabled]=\"cargando\"></app-mesa>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthguardService as AuthGuard } from '../admin/services/authguard.service';\n\nimport { AreaComponent } from './components/area/area/area.component';\nimport { TranAreasComponent } from './components/tran-areas/tran-areas.component';\nimport { TurnoComponent } from './components/turno/turno/turno.component';\nimport { RptVentasComponent } from './components/reportes/rpt-ventas/rpt-ventas.component';\nimport { TurnosComponent } from './components/reportes/turnos/turnos.component';\nimport { PropinasComponent } from './components/reportes/propinas/propinas.component';\nimport { ComandaEnLineaComponent } from './components/comanda-en-linea/comanda-en-linea.component';\nimport { CajaComponent } from './components/reportes/caja/caja.component';\nimport { FacturaComponent } from './components/reportes/factura/factura.component';\nimport { TurnoTipoComponent } from './components/turno-tipo/turno/turno.component';\nimport { PropinaComponent } from './components/propina/propina/propina.component';\n// import { FormPropinaComponent } from './components/propina/form-propina/form-propina.component';\n// import { ListaPropinaComponent } from './components/propina/lista-propina/lista-propina.component';\nimport { AutoconsultaComponent } from './components/reportes/autoconsulta/autoconsulta.component';\nimport { CajacorteComponent } from './components/caja-corte/cajacorte/cajacorte.component';\nimport { TranCocinaComponent } from './components/tran-cocina/tran-cocina.component';\n\nconst routes: Routes = [\n  { path: 'mantareas', component: AreaComponent, canActivate: [AuthGuard] },\n  { path: 'tranareas', component: TranAreasComponent, canActivate: [AuthGuard] },\n  { path: 'turno', component: TurnoComponent, canActivate: [AuthGuard] },\n  { path: 'rptvtascat', component: RptVentasComponent, canActivate: [AuthGuard] },\n  { path: 'rptturnos', component: TurnosComponent, canActivate: [AuthGuard] },\n  { path: 'rptpropinas', component: PropinasComponent, canActivate: [AuthGuard] },\n  { path: 'rptcaja', component: CajaComponent, canActivate: [AuthGuard]},\n  { path: 'rptfactura', component: FacturaComponent, canActivate: [AuthGuard]},\n  { path: 'cmdonline', component: ComandaEnLineaComponent, canActivate: [AuthGuard] },\n  { path: 'tipoturno', component: TurnoTipoComponent, canActivate: [AuthGuard] },\n  { path: 'propina', component: PropinaComponent, canActivate: [AuthGuard] },\n  { path: 'autoconsulta', component: AutoconsultaComponent, canActivate: [AuthGuard] },\n  { path: 'cajacorte', component: CajacorteComponent, canActivate: [AuthGuard] },\n  { path: 'trancocina', component: TranCocinaComponent, canActivate: [AuthGuard] },\n  { path: '**', redirectTo: '/admin/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RestauranteRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { CajacorteListaComponent } from '../cajacorte-lista/cajacorte-lista.component';\nimport { ccGeneral } from '../../../interfaces/cajacorte';\n\n@Component({\n  selector: 'app-cajacorte',\n  templateUrl: './cajacorte.component.html',\n  styleUrls: ['./cajacorte.component.css']\n})\nexport class CajacorteComponent implements OnInit {\n  public ccorte: ccGeneral;\n  @ViewChild('lstCortecaja') lstCajacorteComponent: CajacorteListaComponent;\n\n  constructor() {\n    this.ccorte = {\n      caja_corte: 0,\n      creacion: null,\n      usuario: 0,\n      turno: 0,\n      confirmado: null,\n      anulado: 0,\n      caja_corte_tipo: 0,\n      descripcion: null,\n      detalle: []\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  editarCajaCorte = (pres: any) => this.ccorte = pres;\n\n  actualizaLista = () => this.lstCajacorteComponent.getCajascortes();\n\n}\n","<div class=\"row\">\n  <div class=\"col m5 s12\">\n    <app-cajacorte-lista  #lstCortecaja (getCajacorteEv)=\"editarCajaCorte($event)\"></app-cajacorte-lista>\n  </div>\n  <div class=\"col m7 s12\">\n    <app-cajacorte-form #frmCortecaja [ccorte]=\"ccorte\" (cajacorteSavedEv)=\"actualizaLista()\"></app-cajacorte-form>\n  </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\nimport { Cuenta } from '../../interfaces/cuenta';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface INuevaCuenta {\n  mesaEnUso: ComandaGetResponse;\n}\n\n@Component({\n  selector: 'app-nueva-cuenta',\n  templateUrl: './nueva-cuenta.component.html',\n  styleUrls: ['./nueva-cuenta.component.css']\n})\nexport class NuevaCuentaComponent implements OnInit {\n\n  public comanda: Comanda;\n  public nuevaCuenta: Cuenta;\n\n  constructor(\n    public dialogRef: MatDialogRef<NuevaCuentaComponent>,\n    private snackBar: MatSnackBar,\n    private comandaSrvc: ComandaService,\n    @Inject(MAT_DIALOG_DATA) public data: INuevaCuenta\n  ) { }\n\n  ngOnInit() {\n    if (+this.data.mesaEnUso.comanda > 0) {\n      const meu = this.data.mesaEnUso;\n      this.comanda = {\n        area: +meu.mesa.area.area,\n        mesa: +meu.mesa.mesa,\n        mesero: +meu.mesero.usuario,\n        comensales: meu.cuentas.length + 1,\n        dividirCuentasPorSillas: 1,\n        comanda: +meu.comanda,\n        cuentas: meu.cuentas,\n        replaceUnica: false\n      };\n      this.nuevaCuenta = {\n        cuenta: 0,\n        numero: this.comanda.cuentas.length + 1,\n        nombre: undefined,\n        productos: []\n      };\n    }\n  }\n\n  cancelar = () => this.dialogRef.close(false);\n\n  guardar = () => {\n    if (this.nuevaCuenta.nombre) {\n      const idx = this.comanda.cuentas.findIndex(c => c.nombre.toUpperCase().trim() === this.nuevaCuenta.nombre.toUpperCase().trim());\n      if (idx < 0) {\n        this.comanda.cuentas.push(this.nuevaCuenta);\n        this.comandaSrvc.save(this.comanda).subscribe(res => {\n          if (res.exito) {\n            this.snackBar.open('Cuenta agregada con éxito', 'Cuentas', { duration: 3000 });\n            this.dialogRef.close(true);\n          } else {\n            this.snackBar.open(`ERROR: ${res.mensaje}`, 'Cuentas', { duration: 7000 });\n          }\n        });\n      } else {\n        this.snackBar.open('Ya existe una cuenta con ese nombre. Por favor ingrese otro nombre.', 'Cuentas', { duration: 7000 });\n      }\n    }\n  }\n}\n","<h1 mat-dialog-title>Nueva cuenta - Comanda #{{data.mesaEnUso.comanda}}</h1>\n<div mat-dialog-content>\n    <form #frmNuevaCuenta=\"ngForm\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"text\" matInput placeholder=\"Nombre\" name=\"nombre\" [(ngModel)]=\"nuevaCuenta.nombre\" required>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"guardar()\" [disabled]=\"!frmNuevaCuenta.form.valid\">\n        Guardar\n    </button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Impresora } from '../../../admin/interfaces/impresora';\nimport { Cuenta } from '../../interfaces/cuenta';\n\nimport { ComandaService } from '../../services/comanda.service';\n\ninterface IDatosCuentas {\n  lstProductosSeleccionados: [{\n    id: number;\n    nombre: string;\n    cuenta?: number;\n    cantidad: number;\n    impreso: number;\n    precio?: number;\n    total?: number;\n    notas?: string;\n    showInputNotas: boolean;\n    itemListHeight: string;\n    detalle_comanda?: number;\n    detalle_cuenta?: number;\n    impresora?: Impresora;\n  }];\n  mesaEnUso: {\n    area: string;\n    noMesa: number;\n    cuentas: [{\n      numero: number,\n      nombre: string\n    }];\n  };\n}\n\n@Component({\n  selector: 'app-unir-cuenta',\n  templateUrl: './unir-cuenta.component.html',\n  styleUrls: ['./unir-cuenta.component.css']\n})\nexport class UnirCuentaComponent implements OnInit {\n\n  public cuentaDe: Cuenta;\n  public cuentaA: Cuenta;\n\n  constructor(\n    public dialogRef: MatDialogRef<UnirCuentaComponent>,\n    private comandaSrvc: ComandaService,\n    private snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: IDatosCuentas\n  ) { }\n\n  ngOnInit() {\n    // console.log('Productos enviados = ', this.data.lstProductosSeleccionados);\n  }\n\n  cancelar() {\n    this.dialogRef.close(false);\n  }\n\n  unirCuentas(deCuenta: Cuenta, aCuenta: Cuenta) {\n    // console.log('ORIGEN', deCuenta);\n    // console.log('DESTINO', aCuenta);\n    this.comandaSrvc.unificarCuentas(deCuenta.cuenta, aCuenta.cuenta).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.snackBar.open(res.mensaje, 'Cuentas', { duration: 3000 });\n        this.dialogRef.close(true);\n      } else {\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Cuentas', { duration: 7000 });\n      }\n    });\n    /*\n    if (+deCuenta.numero !== +aCuenta.numero) {\n      this.data.lstProductosSeleccionados.map((p) => {\n        if (+p.cuenta === +deCuenta.cuenta) {\n          p.cuenta = aCuenta.cuenta;\n        }\n      });\n      console.log('Productos seleccionados (Después) = ', this.data.lstProductosSeleccionados);\n    } else {\n      this.data.lstProductosSeleccionados.map(p => p.cuenta = +deCuenta.cuenta);\n    }\n    this.dialogRef.close(this.data.lstProductosSeleccionados);\n    */\n  }\n\n  unirTodas() {\n    // this.unirCuentas();\n  }\n\n}\n","<h1 mat-dialog-title>Unir cuentas</h1>\n<div mat-dialog-content>\n    <form #frmUnirCuenta=\"ngForm\" novalidate>\n        <mat-form-field>\n            <mat-label>Unir cuenta de</mat-label>\n            <mat-select name=\"cuentaDe\" [(ngModel)]=\"cuentaDe\" required>\n                <mat-option *ngFor=\"let ctaDe of data.mesaEnUso.cuentas\" [value]=\"ctaDe\" [disabled]=\"+ctaDe.cerrada === 1\">\n                    {{ctaDe.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>con la cuenta de</mat-label>\n            <mat-select name=\"cuentaA\" [(ngModel)]=\"cuentaA\" required>\n                <mat-option *ngFor=\"let ctaA of data.mesaEnUso.cuentas\" [value]=\"ctaA\" [disabled]=\"+ctaA.cerrada === 1\">\n                    {{ctaA.nombre}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"warn\">\n        Cancelar\n    </button>\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"unirCuentas(cuentaDe, cuentaA)\" [disabled]=\"!frmUnirCuenta.form.valid || !cuentaDe || !cuentaA || +cuentaDe.numero === +cuentaA.numero\">\n        Unir cuentas\n    </button>\n    <!--\n    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"unirTodas()\">\n        Unir todas en una sola\n    </button>\n    -->\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GLOBAL } from '../../shared/global';\nimport { ServiceErrorHandler } from '../../shared/error-handler';\nimport { Turno } from '../interfaces/turno';\nimport { DetalleTurno } from '../interfaces/detalle-turno';\nimport { Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as qs from 'qs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TurnoService {\n\n  private srvcErrHndl: ServiceErrorHandler;\n  private moduleUrl = 'turno';\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.srvcErrHndl = new ServiceErrorHandler();\n  }\n\n  get(fltr: any = {}): Observable<Turno[]> {\n    return this.http.get<Turno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  save(entidad: Turno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/guardar${entidad.turno ? ('/' + entidad.turno) : ''}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  getDetalle(idturno: number, fltr: any = {}): Observable<DetalleTurno[]> {\n    return this.http.get<DetalleTurno[]>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/buscar_usuario/${idturno}?${qs.stringify(fltr)}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  saveDetalle(entidad: DetalleTurno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/agregar_usuario/${entidad.turno}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  anularDetalle(entidad: DetalleTurno) {\n    return this.http.post<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/anular_usuario/${entidad.turno}`,\n      entidad\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n\n  replicaDetalleTurno(idTurnoOriginal: number, idTurnoCopia: number): Observable<any> {\n    return this.http.get<any>(\n      `${GLOBAL.urlMantenimientos}/${this.moduleUrl}/replica_detalle_turno/${idTurnoOriginal}/${idTurnoCopia}`\n    ).pipe(retry(GLOBAL.reintentos), catchError(this.srvcErrHndl.errorHandler));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { WmsModule } from '../wms/wms.module';\nimport { PosModule } from '../pos/pos.module';\nimport { CallcenterModule } from '../callcenter/callcenter.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { MatKeyboardModule } from 'angular-onscreen-material-keyboard';\nimport { EcoFabSpeedDialModule } from '@ecodev/fab-speed-dial';\n\nimport { NgxBarCodePutModule } from 'ngx-barcodeput';\n\nimport { RestauranteRoutingModule } from './restaurante-routing.module';\nimport { TranAreasComponent } from './components/tran-areas/tran-areas.component';\nimport { MesaComponent } from './components/mesa/mesa.component';\nimport { AbrirMesaComponent } from './components/abrir-mesa/abrir-mesa.component';\nimport { TranComandaComponent } from './components/tran-comanda/tran-comanda.component';\nimport { ListaProductosComandaComponent } from './components/lista-productos-comanda/lista-productos-comanda.component';\nimport { UnirCuentaComponent } from './components/unir-cuenta/unir-cuenta.component';\nimport { ListaAreaComponent } from './components/area/lista-area/lista-area.component';\nimport { FormAreaComponent } from './components/area/form-area/form-area.component';\nimport { AreaComponent } from './components/area/area/area.component';\nimport { PideDatosCuentasComponent } from './components/pide-datos-cuentas/pide-datos-cuentas.component';\nimport { TurnoComponent } from './components/turno/turno/turno.component';\nimport { ListaTurnoComponent } from './components/turno/lista-turno/lista-turno.component';\nimport { FormTurnoComponent } from './components/turno/form-turno/form-turno.component';\nimport { AreaDesignerComponent } from './components/area/area-designer/area-designer.component';\nimport { RptVentasComponent } from './components/reportes/rpt-ventas/rpt-ventas.component';\nimport { PorCategoriaComponent } from './components/reportes/rpt-ventas/por-categoria/por-categoria.component';\nimport { PorArticuloComponent } from './components/reportes/rpt-ventas/por-articulo/por-articulo.component';\nimport { TurnosComponent } from './components/reportes/turnos/turnos.component';\nimport { PropinasComponent } from './components/reportes/propinas/propinas.component';\nimport { ComandaEnLineaComponent } from './components/comanda-en-linea/comanda-en-linea.component';\nimport { CajaComponent } from './components/reportes/caja/caja.component';\nimport { FacturaComponent } from './components/reportes/factura/factura.component';\nimport { ListaTurnoTipoComponent } from './components/turno-tipo/lista-turno/lista-turno.component';\nimport { FormTurnoTipoComponent } from './components/turno-tipo/form-turno/form-turno.component';\nimport { TurnoTipoComponent } from './components/turno-tipo/turno/turno.component';\nimport { PropinaComponent } from './components/propina/propina/propina.component';\nimport { FormPropinaComponent } from './components/propina/form-propina/form-propina.component';\nimport { ListaPropinaComponent } from './components/propina/lista-propina/lista-propina.component';\nimport { AutoconsultaComponent } from './components/reportes/autoconsulta/autoconsulta.component';\nimport { CajacorteComponent } from './components/caja-corte/cajacorte/cajacorte.component';\nimport { CajacorteListaComponent } from './components/caja-corte/cajacorte-lista/cajacorte-lista.component';\nimport { CajacorteFormComponent } from './components/caja-corte/cajacorte-form/cajacorte-form.component';\nimport { ValidaPwdGerenteTurnoComponent } from './components/valida-pwd-gerente-turno/valida-pwd-gerente-turno.component';\nimport { TrasladoMesaComponent } from './components/traslado-mesa/traslado-mesa.component';\nimport { ConfiguraMesaComponent } from './components/area/configura-mesa/configura-mesa.component';\nimport { TranCocinaComponent } from './components/tran-cocina/tran-cocina.component';\nimport { TranComandaAltComponent } from './components/tran-comanda-alt/tran-comanda-alt.component';\nimport { NotasGeneralesComandaComponent } from './components/notas-generales-comanda/notas-generales-comanda.component';\nimport { NuevaCuentaComponent } from './components/nueva-cuenta/nueva-cuenta.component';\nimport { DistribuirProductosCuentasComponent } from './components/distribuir-productos-cuentas/distribuir-productos-cuentas.component';\nimport { AccionesComandaComponent } from './components/acciones-comanda/acciones-comanda.component';\nimport { SeleccionaTurnoPrevioComponent } from './components/turno/selecciona-turno-previo/selecciona-turno-previo.component';\n\n\n@NgModule({\n  declarations: [\n    TranAreasComponent, MesaComponent, AbrirMesaComponent, TranComandaComponent, ListaProductosComandaComponent, UnirCuentaComponent,\n    ListaAreaComponent, FormAreaComponent, AreaComponent, PideDatosCuentasComponent, TurnoComponent, ListaTurnoComponent,\n    FormTurnoComponent, AreaDesignerComponent, RptVentasComponent, PorCategoriaComponent, PorArticuloComponent, TurnosComponent,\n    PropinasComponent, ComandaEnLineaComponent, CajaComponent, FacturaComponent, ListaTurnoTipoComponent, FormTurnoTipoComponent,\n    TurnoTipoComponent, PropinaComponent, FormPropinaComponent, ListaPropinaComponent, AutoconsultaComponent,\n    CajacorteComponent, CajacorteListaComponent, CajacorteFormComponent, ValidaPwdGerenteTurnoComponent, TrasladoMesaComponent,\n    ConfiguraMesaComponent, TranCocinaComponent, TranComandaAltComponent, NotasGeneralesComandaComponent, NuevaCuentaComponent,\n    DistribuirProductosCuentasComponent,\n    AccionesComandaComponent,\n    SeleccionaTurnoPrevioComponent\n  ],\n  imports: [\n    CommonModule,\n    RestauranteRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgxBarCodePutModule,\n    SharedModule,\n    WmsModule,\n    PosModule,\n    CallcenterModule,\n    FlexLayoutModule,\n    MatListModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatDividerModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatSidenavModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    EcoFabSpeedDialModule,\n    DragDropModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatBottomSheetModule,\n    MatKeyboardModule\n  ],\n  providers: [\n    MatNativeDateModule\n  ]\n})\nexport class RestauranteModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ListaTurnoTipoComponent } from '../lista-turno/lista-turno.component';\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\n\n@Component({\n  selector: 'app-turno-tipo',\n  templateUrl: './turno.component.html',\n  styleUrls: ['./turno.component.css']\n})\nexport class TurnoTipoComponent implements OnInit {\n\n  public turno: TipoTurno;\n  @ViewChild('lstTurno') lstTurnoComponent: ListaTurnoTipoComponent;\n\n  constructor() {\n    this.turno = { \n      turno_tipo: null, descripcion: null, activo: 1\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  setTurno = (cli: TipoTurno) => this.turno = cli;\n\n  refreshTurnoList = () => this.lstTurnoComponent.loadTurnos();\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-turno-tipo #lstTurno (getTurnoEv)=\"setTurno($event)\"></app-lista-turno-tipo>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-turno-tipo #frmTurno [turno]=\"turno\" (turnoSavedEv)=\"refreshTurnoList()\"></app-form-turno-tipo>\n    </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\n// import { Router } from '@angular/router';\r\nimport { WindowConfiguration } from '../../../shared/interfaces/window-configuration';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport { MatInput } from '@angular/material/input';\r\n\r\nimport { UnirCuentaComponent } from '../unir-cuenta/unir-cuenta.component';\r\nimport { TrasladoMesaComponent } from '../traslado-mesa/traslado-mesa.component';\r\nimport { CobrarPedidoComponent } from '../../../pos/components/cobrar-pedido/cobrar-pedido.component';\r\nimport { ListaProductoAltComponent } from '../../../wms/components/producto/lista-producto-alt/lista-producto-alt.component';\r\nimport { ConfirmDialogModel, DialogPedidoComponent } from '../../../shared/components/dialog-pedido/dialog-pedido.component';\r\nimport { ConfirmDialogComboModel, DialogComboComponent } from '../../../shared/components/dialog-combo/dialog-combo.component';\r\nimport { NotasGeneralesComandaComponent } from '../notas-generales-comanda/notas-generales-comanda.component';\r\nimport { NuevaCuentaComponent } from '../nueva-cuenta/nueva-cuenta.component';\r\nimport { DistribuirProductosCuentasComponent } from '../distribuir-productos-cuentas/distribuir-productos-cuentas.component';\r\n\r\nimport { Cuenta } from '../../interfaces/cuenta';\r\nimport { Comanda, ComandaGetResponse } from '../../interfaces/comanda';\r\nimport { DetalleComanda } from '../../interfaces/detalle-comanda';\r\nimport { Articulo, ArbolArticulos, ProductoSelected, NodoProducto } from '../../../wms/interfaces/articulo';\r\nimport { ArticuloService } from '../../../wms/services/articulo.service';\r\n\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../../admin/interfaces/cliente';\r\nimport * as moment from 'moment';\r\n// import { saveAs } from 'file-saver';\r\nimport { Base64 } from 'js-base64';\r\n\r\n@Component({\r\n  selector: 'app-tran-comanda',\r\n  templateUrl: './tran-comanda.component.html',\r\n  styleUrls: ['./tran-comanda.component.css']\r\n})\r\nexport class TranComandaComponent implements OnInit {\r\n\r\n  @Input() mesaEnUso: ComandaGetResponse;\r\n  @Input() clientePedido: Cliente = null;\r\n  @Output() closeSideNavEv = new EventEmitter();\r\n  @ViewChild('appLstProdAlt') appLstProdAlt: ListaProductoAltComponent;\r\n  @Output() mesaSavedEv: EventEmitter<any> = new EventEmitter();\r\n  @ViewChild('txtCodigoBarras') txtCodigoBarras: MatInput;\r\n\r\n  public lstProductosSeleccionados: ProductoSelected[];\r\n  public lstProductosDeCuenta: ProductoSelected[];\r\n  public lstProductosAImprimir: ProductoSelected[];\r\n  public showPortalComanda = false;\r\n  public showPortalCuenta = false;\r\n  public windowConfig: WindowConfiguration;\r\n  public noComanda = 0;\r\n  public sumCuenta = 0;\r\n  public cuentaActiva: Cuenta;\r\n  public detalleComanda: DetalleComanda;\r\n  public categorias: ArbolArticulos[] = [];\r\n  public bloqueoBotones = false;\r\n  public rolesUsuario: string[] = [];\r\n  public impreso = 0;\r\n  public usaCodigoBarras = false;\r\n  public codigoBarras: string = null;\r\n  public imprimeRecetaEnComanda = true;\r\n\r\n  constructor(\r\n    // private router: Router,\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    public comandaSrvc: ComandaService,\r\n    private socket: Socket,\r\n    private ls: LocalstorageService,\r\n    private pdfServicio: ReportePdfService,\r\n    private configSrvc: ConfiguracionService,\r\n    private articuloSrvc: ArticuloService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.resetMesaEnUso();\r\n    this.resetLstProductosSeleccionados();\r\n    this.resetLstProductosDeCuenta();\r\n    this.resetCuentaActiva();\r\n    this.impreso = 0;\r\n    this.noComanda = this.mesaEnUso.comanda || 0;\r\n    this.llenaProductosSeleccionados();\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n    }\r\n    this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\r\n    this.imprimeRecetaEnComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_RECETA_EN_COMANDA);\r\n    // console.log('MESA EN USO = ', this.mesaEnUso);\r\n  }\r\n\r\n  resetMesaEnUso = () => this.mesaEnUso = {\r\n    exito: true,\r\n    comanda: null, usuario: null, sede: null, estatus: null,\r\n    mesa: {\r\n      mesa: null,\r\n      area: { area: null, sede: null, area_padre: null, nombre: null },\r\n      numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n    },\r\n    numero_pedido: null,\r\n    cuentas: []\r\n  }\r\n  resetLstProductosSeleccionados = () => this.lstProductosSeleccionados = [];\r\n  resetLstProductosDeCuenta = () => this.lstProductosDeCuenta = [];\r\n  resetCuentaActiva = () => this.cuentaActiva = { cuenta: null, numero: null, nombre: null, productos: [] };\r\n  resetListadoArticulos = () => this.appLstProdAlt.loadArbolArticulos();\r\n\r\n  setListaCategorias = (cats: ArbolArticulos[] = []) => this.categorias = this.setVerBotones(cats);\r\n\r\n  setVerBotones = (cats: ArbolArticulos[]) => {\r\n    for (const cat of cats) {\r\n      loopSubCategoria:\r\n      for (const subcat of cat.categoria_grupo) {\r\n        for (const art of subcat.articulo) {\r\n          if (+art.mostrar_pos === 1) {\r\n            subcat.mostrarEnPos = true;\r\n            cat.mostrarEnPos = true;\r\n            continue loopSubCategoria;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return cats;\r\n  }\r\n\r\n  clickOnCategoria = (c: ArbolArticulos) => this.appLstProdAlt.fillSubCategorias(c.categoria_grupo);\r\n\r\n  buscarArticulo = () => {\r\n    // console.log(`CODIGO BARRAS = ${this.codigoBarras}`);\r\n    if (this.codigoBarras && this.codigoBarras.trim().length > 0) {\r\n      this.articuloSrvc.getArticulos({ codigo: this.codigoBarras.trim() }).subscribe((arts: Articulo[]) => {\r\n        if (arts && arts.length > 0) {\r\n          const art = arts[0];\r\n          const obj: NodoProducto = {\r\n            id: +art.articulo,\r\n            nombre: art.descripcion,\r\n            precio: +art.precio,\r\n            impresora: art.impresora,\r\n            presentacion: art.presentacion,\r\n            codigo: art.codigo,\r\n            combo: art.combo,\r\n            multiple: art.multiple\r\n          };\r\n          this.agregarProductos(obj);\r\n        }\r\n        this.codigoBarras = null;\r\n        this.txtCodigoBarras.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  llenaProductosSeleccionados = (conQueMesa: ComandaGetResponse = this.mesaEnUso) => {\r\n    if (this.mesaEnUso.comanda == null) {\r\n      this.mesaEnUso = conQueMesa;\r\n    }\r\n    this.lstProductosSeleccionados = [];\r\n\r\n    for (const ctas of conQueMesa.cuentas) {\r\n      for (const p of ctas.productos) {\r\n        this.lstProductosSeleccionados.push({\r\n          id: +p.articulo.articulo,\r\n          nombre: p.articulo.descripcion,\r\n          cuenta: +p.numero_cuenta || 1,\r\n          idcuenta: +ctas.cuenta,\r\n          cantidad: +p.cantidad,\r\n          impreso: +p.impreso,\r\n          precio: parseFloat(p.precio) || 10.00,\r\n          total: parseFloat(p.total) || (parseFloat(p.cantidad) * parseFloat(p.precio)),\r\n          notas: p.notas || '',\r\n          showInputNotas: false,\r\n          itemListHeight: '70px',\r\n          detalle_comanda: +p.detalle_comanda,\r\n          detalle_cuenta: +p.detalle_cuenta,\r\n          impresora: p.articulo.impresora,\r\n          detalle: p.detalle,\r\n          monto_extra: +p.monto_extra || 0.00,\r\n          multiple: +p.articulo.multiple,\r\n          combo: +p.articulo.combo,\r\n          esreceta: +p.articulo.esreceta || 0\r\n        });\r\n      }\r\n    }\r\n    // console.log('SELECCIONADOS = ', this.lstProductosSeleccionados);\r\n  }\r\n\r\n  cerrarMesa = () => {\r\n    // console.log('CERRAR MESA; MESA EN USO = ', this.mesaEnUso);\r\n    this.comandaSrvc.cerrarMesa(this.mesaEnUso.mesa.mesa).subscribe(res => {\r\n      // console.log('RESPUESTA DE CERRAR MESA = ', res);\r\n      if (res.exito) {\r\n        // console.log('EXITO PARA CERRAR LA MESA...', res);\r\n        this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n        this.mesaEnUso.mesa.estatus = 1;\r\n        this.mesaSavedEv.emit();\r\n        this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n      } else {\r\n        // console.log('FALLA PARA CERRAR LA MESA...', res);\r\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  setSelectedCuenta(noCuenta: number) {\r\n    this.bloqueoBotones = true;\r\n    this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +noCuenta);\r\n    this.setLstProductosDeCuenta();\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  setSumaCuenta(lista: ProductoSelected[]) {\r\n    let suma = 0.00;\r\n    // for (let i = 0; i < lista.length; i++) { suma += (lista[i].precio * lista[i].cantidad); }\r\n    for (const item of lista) {\r\n      suma += (item.precio * item.cantidad);\r\n    }\r\n    this.sumCuenta = suma;\r\n  }\r\n\r\n  setLstProductosDeCuenta() {\r\n    const noCta = this.cuentaActiva?.numero || 1;\r\n    this.lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +noCta);\r\n    // console.log(this.lstProductosDeCuenta);\r\n  }\r\n\r\n  agregarProductos(producto: any) {\r\n    // console.log(producto);\r\n    if (+producto.combo === 1 || +producto.multiple === 1) {\r\n      this.bloqueoBotones = true;\r\n      const confirmRef = this.dialog.open(DialogComboComponent, {\r\n        maxWidth: '50%',\r\n        data: new ConfirmDialogComboModel(\r\n          producto,\r\n          'Sí', 'No'\r\n        )\r\n      });\r\n\r\n      confirmRef.afterClosed().subscribe((res: any) => {\r\n        // console.log(res);\r\n        if (res && res.respuesta && res.seleccion.receta.length > 0) {\r\n          // console.log(res.seleccion); // this.bloqueoBotones = false; return;\r\n          this.comandaSrvc.saveDetalleCombo(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, res.seleccion).subscribe(resSaveDetCmb => {\r\n            // console.log('NUEVO DETALLE COMANDA = ', res);\r\n            if (resSaveDetCmb.exito) {\r\n              this.mesaEnUso = resSaveDetCmb.comanda;\r\n              this.llenaProductosSeleccionados(this.mesaEnUso);\r\n              this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n            } else {\r\n              this.snackBar.open(`ERROR:${resSaveDetCmb.mensaje}`, 'Comanda', { duration: 3000 });\r\n            }\r\n            this.bloqueoBotones = false;\r\n          });\r\n        } else {\r\n          this.bloqueoBotones = false;\r\n          this.snackBar.open('Error, Debe seleccionar los productos del combo', 'Comanda', { duration: 7000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.addProductoSelected(producto);\r\n    }\r\n  }\r\n\r\n  addProductoSelected(producto: any) {\r\n    // console.log('PRODUCTO = ', producto);\r\n    // return;\r\n    this.bloqueoBotones = true;\r\n    if (+this.cuentaActiva.numero) {\r\n      const idx = this.lstProductosSeleccionados\r\n        .findIndex(p => +p.id === +producto.id && +p.cuenta === +this.cuentaActiva.numero && +p.impreso === 0);\r\n\r\n      if (idx < 0) {\r\n        this.detalleComanda = {\r\n          articulo: producto.id, cantidad: 1, precio: +producto.precio, total: 1 * +producto.precio, notas: ''\r\n        };\r\n        this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n          // console.log('NUEVO DETALLE COMANDA = ', res);\r\n          if (res.exito) {\r\n            this.mesaEnUso = res.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n          } else {\r\n            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n          }\r\n          this.bloqueoBotones = false;\r\n        });\r\n      } else {\r\n        const tmp: ProductoSelected = this.lstProductosSeleccionados[idx];\r\n        this.detalleComanda = {\r\n          detalle_cuenta: tmp.detalle_cuenta, detalle_comanda: tmp.detalle_comanda, articulo: tmp.id, cantidad: (+tmp.cantidad) + 1,\r\n          precio: +tmp.precio, total: ((+tmp.cantidad) + 1) * (+tmp.precio), notas: tmp.notas\r\n        };\r\n        this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n          // console.log('UPDATE DETALLE COMANDA = ', res);\r\n          if (res.exito) {\r\n            this.mesaEnUso = res.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n          } else {\r\n            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n          }\r\n          this.bloqueoBotones = false;\r\n        });\r\n      }\r\n      this.setLstProductosDeCuenta();\r\n    }\r\n  }\r\n\r\n  updProductosCuenta(obj: any) {\r\n    const nvaLista: ProductoSelected[] = obj.listaProductos || [];\r\n    const lstTemp: ProductoSelected[] = this.lstProductosSeleccionados.filter(p => +p.cuenta !== +this.cuentaActiva.numero);\r\n    if (nvaLista.length > 0) {\r\n      this.lstProductosSeleccionados = lstTemp.concat(nvaLista);\r\n    } else {\r\n      this.lstProductosSeleccionados = lstTemp;\r\n    }\r\n    if (obj.comanda) {\r\n      this.mesaEnUso = obj.comanda;\r\n      this.llenaProductosSeleccionados(this.mesaEnUso);\r\n      this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n    }\r\n  }\r\n\r\n  prepProductosComanda(prods: ProductoSelected[]) {\r\n    // console.log(prods);\r\n    const tmp: any[] = [];\r\n    for (let i = 0; i < prods.length; i++) {\r\n      tmp.push({\r\n        articulo: prods[i].id,\r\n        cantidad: prods[i].cantidad,\r\n        precio: prods[i].precio,\r\n        total: prods[i].total,\r\n        notas: prods[i].notas,\r\n        impreso: 1,\r\n        detalle_comanda: prods[i].detalle_comanda,\r\n        detalle_cuenta: prods[i].detalle_cuenta,\r\n        // impresora: prods[i].impresora\r\n      });\r\n    }\r\n    return tmp;\r\n  }\r\n\r\n  validarImpresion(toPdf = false) {\r\n    const ingresarPedido = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_INGRESO_NUMERO_PEDIDO);\r\n    // this.mesaEnUso.mesa.esmostrador;\r\n    // console.log(this.mesaEnUso);\r\n    if (+this.mesaEnUso.mesa.esmostrador === 1 && ingresarPedido && !this.mesaEnUso.numero_pedido) {\r\n      let pedidos = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_TOTAL_NUMEROS_PEDIDO);\r\n      if (!pedidos || pedidos <= 0) {\r\n        pedidos = 30;\r\n      }\r\n      const confirmRef = this.dialog.open(DialogPedidoComponent, {\r\n        maxWidth: '50%',\r\n        data: new ConfirmDialogModel(\r\n          'Numero de Pedido',\r\n          pedidos,\r\n          'Sí', 'No'\r\n        )\r\n      });\r\n\r\n      confirmRef.afterClosed().subscribe((conf: any) => {\r\n        // console.log(conf);\r\n        if (conf && conf.respuesta && conf.pedido) {\r\n          this.mesaEnUso.numero_pedido = conf.pedido;\r\n          this.printComanda(toPdf);\r\n        } else {\r\n          this.snackBar.open('Error, Debe seleccionar un numero de pedido', 'Comanda', { duration: 7000 });\r\n        }\r\n      });\r\n    } else {\r\n      this.printComanda(toPdf);\r\n    }\r\n  }\r\n\r\n  printComanda(toPdf = false) {\r\n    // solicitar numero de pedido\r\n\r\n    const meu = JSON.parse(JSON.stringify(this.mesaEnUso));\r\n\r\n    this.bloqueoBotones = true;\r\n    this.impreso = 0;\r\n    const modoComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_COMANDA) || 1;\r\n    for (let i = 0; i < meu.cuentas.length; i++) {\r\n      const cuenta = meu.cuentas[i];\r\n      // console.log(cuenta);\r\n      this.cuentaActiva = meu.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n\r\n      const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n\r\n      const lstProductosAImprimir = lstProductosDeCuenta.filter(p => +p.impreso === 0 && +p.cantidad > 0);\r\n      if (lstProductosAImprimir.length > 0) {\r\n        lstProductosDeCuenta.map(p => p.impreso = 1);\r\n        this.noComanda = meu.comanda;\r\n        // console.log(this.cuentaActiva.cuenta);\r\n        this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n        const idxCta = meu.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n        // console.log(meu.cuentas)\r\n        // console.log(idxCta)\r\n        if (idxCta > -1) {\r\n          // meu.cuentas[idxCta] = this.cuentaActiva;\r\n          const objCmd: Comanda = {\r\n            area: meu.mesa.area.area,\r\n            mesa: meu.mesa.mesa,\r\n            mesero: meu.mesero.usuario,\r\n            comanda: meu.comanda,\r\n            cuentas: meu.cuentas,\r\n            numero_pedido: meu.numero_pedido\r\n          };\r\n          // console.log('Comanda a guardar = ', objCmd);\r\n          this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n            // console.log('Respuesta del save = ', res);\r\n            if (res.exito) {\r\n              meu.numero_pedido = res.comanda.numero_pedido;\r\n              // console.log(this.cuentaActiva);\r\n              this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                // console.log('Respuesta de poner impreso = ', resImp);\r\n                if (resImp.exito) {\r\n                  this.impreso++;\r\n                }\r\n\r\n                this.llenaProductosSeleccionados(resImp.comanda);\r\n                this.setSelectedCuenta(cuenta.numero);\r\n                this.snackBar.open('Cuenta actualizada', `Cuenta #${cuenta.numero}`, { duration: 3000 });\r\n\r\n                // Inicio de impresión de comanda\r\n                let AImpresoraNormal: ProductoSelected[] = [];\r\n                let AImpresoraBT: ProductoSelected[] = [];\r\n\r\n                try {\r\n                  AImpresoraNormal = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 0);\r\n                  AImpresoraBT = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 1);\r\n                  // console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                } catch (error) {\r\n                  console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                  console.log('NORMAL = ', AImpresoraNormal);\r\n                  console.log('BT = ', AImpresoraBT);\r\n                  console.log(error);\r\n                }\r\n\r\n                if (!toPdf) {\r\n                  if (AImpresoraNormal.length > 0) {\r\n                    if (modoComanda !== 3) {\r\n\r\n                      if (!this.imprimeRecetaEnComanda) {\r\n                        AImpresoraNormal.map(d => {\r\n                          if (+d.combo === 0 && +d.esreceta === 1) {\r\n                            d.detalle = []\r\n                          }\r\n                          return d;\r\n                        });\r\n                      }\r\n\r\n                      this.socket.emit('print:comanda', `${JSON.stringify({\r\n                        Tipo: 'Comanda',\r\n                        Nombre: this.cuentaActiva.nombre,\r\n                        Numero: this.noComanda,\r\n                        DetalleCuenta: AImpresoraNormal,\r\n                        Ubicacion:\r\n                          `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                        Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                        Total: null,\r\n                        NumeroPedido: meu.numero_pedido,\r\n                        NotasGenerales: (meu.notas_generales || '')\r\n                      })}`);\r\n                      this.snackBar.open(`Imprimiendo comanda #${this.noComanda}`, 'Comanda', { duration: 7000 });\r\n                    } else {\r\n                      this.snackBar.open(`Comanda #${this.noComanda} enviada a cocina`, 'Comanda', { duration: 7000 });\r\n                    }\r\n                    this.bloqueoBotones = false;\r\n                    // console.log(\"imprimiendo\")\r\n                  }\r\n\r\n                  if (AImpresoraBT.length > 0) {\r\n                    if (modoComanda !== 3) {\r\n                      if (!this.imprimeRecetaEnComanda) {\r\n                        AImpresoraBT.map(d => {\r\n                          if (+d.combo === 0 && +d.esreceta === 1) {\r\n                            d.detalle = []\r\n                          }\r\n                          return d;\r\n                        });\r\n                      }\r\n\r\n                      this.printToBT(\r\n                        JSON.stringify({\r\n                          Tipo: 'Comanda',\r\n                          Nombre: this.cuentaActiva.nombre,\r\n                          Numero: this.noComanda,\r\n                          DetalleCuenta: AImpresoraBT,\r\n                          Ubicacion:\r\n                            `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                          Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                          Total: null,\r\n                          NumeroPedido: meu.numero_pedido\r\n                        })\r\n                      );\r\n                    }\r\n                  }\r\n                } else {\r\n                  this.printComandaPDF();\r\n                }\r\n\r\n                if (+this.impreso === meu.cuentas.length) {\r\n                  this.impreso = 0;\r\n                  this.socket.emit('refrescar:mesa', { mesaenuso: meu });\r\n                  this.socket.emit('refrescar:listaCocina', { mesaenuso: meu });\r\n                  if (+meu.mesa.esmostrador === 0) {\r\n                    this.closeSideNavEv.emit();\r\n                  } else {\r\n                    this.cobrarCuenta();\r\n                  }\r\n                }\r\n                // Fin de impresión de comanda\r\n              });\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n            }\r\n            this.bloqueoBotones = false;\r\n          });\r\n        }\r\n      } else {\r\n        this.impreso++;\r\n        // this.snackBar.open('Nada para enviar...', `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n        this.bloqueoBotones = false;\r\n      }\r\n    }\r\n    // console.log('Productos a imprimir = ', this.lstProductosAImprimir);\r\n\r\n  }\r\n\r\n  printToBT = (msgToPrint: string = '') => {\r\n    const convertir = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_ENVIA_COMO_BASE64);\r\n    const data = convertir ? Base64.encode(msgToPrint, true) : msgToPrint;\r\n    // const AppHref = `${GLOBAL.DEEP_LINK_ANDROID}${data}`;\r\n    const AppHref = GLOBAL.DEEP_LINK_ANDROID.replace('__INFOBASE64__', data);\r\n\r\n    try {\r\n      window.location.href = AppHref;\r\n    } catch (error) {\r\n      this.snackBar.open('No se pudo conectar con la aplicación de impresión', 'Comanda', { duration: 3000 });\r\n    }\r\n\r\n    // const a = document.createElement('a');\r\n    // document.body.appendChild(a);\r\n    // a.href = AppHref;\r\n    // a.click();\r\n    // document.body.removeChild(a);\r\n\r\n    // setTimeout(() => wref.close(), 3000);\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  printComandaPDF = () => {\r\n    const noCuenta = +this.cuentaActiva.cuenta;\r\n    this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/pdf' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n      } else {\r\n        this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  sumaDetalle = (detalle: ProductoSelected[]) => {\r\n    let total = 0.00;\r\n    // for (let i = 0; i < detalle.length; i++) { total += detalle[i].total || 0.00; }\r\n    for (const item of detalle) {\r\n      total += +item.total || 0.00;\r\n      total += +item.monto_extra || 0.00;\r\n    }\r\n    return total;\r\n  }\r\n\r\n  printCuenta() {\r\n    this.bloqueoBotones = true;\r\n    this.lstProductosAImprimir = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n    // console.log(this.lstProductosAImprimir);\r\n\r\n    if (this.lstProductosAImprimir.length > 0) {\r\n      this.setSumaCuenta(this.lstProductosAImprimir);\r\n      const totalCuenta = this.sumaDetalle(this.lstProductosAImprimir);\r\n      const printerToUse = this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora;\r\n      const imprimePropSugerida = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_PROPINA_SUGERIDA);\r\n\r\n      const msgToPrint = {\r\n        Tipo: 'Cuenta',\r\n        Nombre: this.cuentaActiva.nombre,\r\n        Numero: null,\r\n        DetalleCuenta: this.lstProductosAImprimir,\r\n        Total: totalCuenta,\r\n        Empresa: this.ls.get(GLOBAL.usrTokenVar).empresa,\r\n        Restaurante: this.ls.get(GLOBAL.usrTokenVar).restaurante,\r\n        PropinaSugerida: imprimePropSugerida ? (totalCuenta * 0.10).toFixed(2) : null,\r\n        Impresora: printerToUse,\r\n        Ubicacion:\r\n          `${this.mesaEnUso.mesa.area.nombre} - Mesa ${this.mesaEnUso.mesa.etiqueta || this.mesaEnUso.mesa.numero\r\n          } - Comanda ${this.mesaEnUso.comanda}`,\r\n        Mesero: `${this.mesaEnUso.mesero.nombres} ${this.mesaEnUso.mesero.apellidos}`\r\n      };\r\n\r\n      if (+printerToUse.bluetooth === 0) {\r\n        this.socket.emit(`print:cuenta`, `${JSON.stringify(msgToPrint)}`);\r\n      } else {\r\n        this.printToBT(JSON.stringify(msgToPrint));\r\n      }\r\n      this.snackBar.open(`Imprimiendo cuenta de ${this.cuentaActiva.nombre}`, 'Cuenta', { duration: 7000 });      \r\n      this.closeSideNavEv.emit();\r\n    } else {\r\n      this.snackBar.open(`La cuenta de ${this.cuentaActiva.nombre} no tiene ningún artículo.`, 'Cuenta', { duration: 7000 });\r\n    }\r\n    this.bloqueoBotones = false;\r\n  }\r\n\r\n  unirCuentas() {\r\n    const unirCuentaRef = this.dialog.open(UnirCuentaComponent, {\r\n      width: '55%',\r\n      data: { lstProductosSeleccionados: this.lstProductosSeleccionados, mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    unirCuentaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  cobrarCuenta() {\r\n    this.comandaSrvc.getCuenta(this.cuentaActiva.cuenta).subscribe(res => {\r\n      if (res.pendiente.length > 0) {\r\n        this.snackBar.open('Cobro', 'Tiene productos sin comandar', { duration: 3000 });\r\n      } else {\r\n        const productosACobrar = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n        if (productosACobrar.length > 0) {\r\n          const cobrarCtaRef = this.dialog.open(CobrarPedidoComponent, {\r\n            width: '95%',\r\n            data: {\r\n              mesaenuso: this.mesaEnUso,\r\n              cuenta: this.cuentaActiva.nombre,\r\n              idcuenta: this.cuentaActiva.cuenta,\r\n              productosACobrar,\r\n              porcentajePropina: 0.00,\r\n              impresora: +this.mesaEnUso.mesa.esmostrador === 0 ?\r\n                (this.mesaEnUso.mesa.area.impresora_factura || null) :\r\n                (this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora),\r\n              clientePedido: this.clientePedido\r\n            }\r\n          });\r\n\r\n          cobrarCtaRef.afterClosed().subscribe(resAC => {\r\n            // console.log(resAC);\r\n            if (resAC && resAC !== 'closePanel') {\r\n              // console.log(res);\r\n              this.cambiarEstatusCuenta(resAC);\r\n              this.closeSideNavEv.emit(this.mesaEnUso);\r\n            } else {\r\n              if (resAC === 'closePanel') {\r\n                this.closeSideNavEv.emit();\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          this.snackBar.open('Cobro', 'Sin productos a cobrar.', { duration: 3000 });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  enviarPedido = () => {\r\n    const cuenta = this.mesaEnUso.cuentas[0];\r\n    this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n    const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n    lstProductosDeCuenta.map(p => p.impreso = 1);\r\n    this.noComanda = this.mesaEnUso.comanda;\r\n    this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n    const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n    if (idxCta > -1) {\r\n      const objCmd: Comanda = {\r\n        area: this.mesaEnUso.mesa.area.area,\r\n        mesa: this.mesaEnUso.mesa.mesa,\r\n        mesero: this.mesaEnUso.usuario,\r\n        comanda: this.mesaEnUso.comanda,\r\n        cuentas: this.mesaEnUso.cuentas,\r\n        numero_pedido: this.mesaEnUso.numero_pedido\r\n      };\r\n\r\n      this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n        if (res.exito) {\r\n          this.mesaEnUso.numero_pedido = res.comanda.numero_pedido;\r\n          this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n            this.llenaProductosSeleccionados(resImp.comanda);\r\n            this.setSelectedCuenta(cuenta.numero);\r\n            this.cobrarCuenta();\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cambiarEstatusCuenta = (obj: any) => {\r\n    const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +obj.cuenta);\r\n    this.mesaEnUso.cuentas[idxCta].cerrada = +obj.cerrada;\r\n  }\r\n\r\n  // esCajero = () => (this.rolesUsuario || []).find(r => r.trim().toLocaleLowerCase() === 'cajero') === undefined;\r\n  esCajero = () => false;\r\n\r\n  trasladoMesa = () => {\r\n    const trasladoRef = this.dialog.open(TrasladoMesaComponent, {\r\n      width: '55%',\r\n      data: { mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    trasladoRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n        this.closeSideNavEv.emit(this.mesaEnUso);\r\n      }\r\n    });\r\n  }\r\n\r\n  getNotasGenerales = () => {\r\n    const ngenDialog = this.dialog.open(NotasGeneralesComandaComponent, {\r\n      width: '50%',\r\n      data: { notasGenerales: (this.mesaEnUso.notas_generales || '') }\r\n    });\r\n    ngenDialog.afterClosed().subscribe((notasGen: string) => {\r\n      if (notasGen !== null) {\r\n        if (notasGen.trim().length > 0) {\r\n          this.comandaSrvc.saveNotasGenerales({ comanda: this.mesaEnUso.comanda, notas_generales: notasGen }).subscribe(res => {\r\n            if (res.exito) {\r\n              this.mesaEnUso.notas_generales = notasGen;\r\n              this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n            } else {\r\n              this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  nuevaCuenta = () => {\r\n    const nuevaCuentaRef = this.dialog.open(NuevaCuentaComponent, {\r\n      width: '50%',\r\n      data: { mesaEnUso: this.mesaEnUso }\r\n    });\r\n\r\n    nuevaCuentaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n\r\n  distribuirProductos = () => {\r\n    const distProdCtaRef = this.dialog.open(DistribuirProductosCuentasComponent, {\r\n      width: '50%',\r\n      data: { mesaEnUso: this.mesaEnUso, lstProductos: (this.lstProductosSeleccionados || []) }\r\n    });\r\n\r\n    distProdCtaRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.closeSideNavEv.emit();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div fxLayout=\"row\" fxLayout.xs=\"column\">\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"center start\">\n        <span class=\"bld\" style=\"font-size: 16pt; margin-left: 10px;\" *ngIf=\"mesaEnUso\">\n            {{mesaEnUso.mesa.area.nombre}} - Mesa {{mesaEnUso.mesa.etiqueta || mesaEnUso.mesa.numero}} - Comanda {{mesaEnUso.comanda}}\n        </span>\n    </div>\n    <div fxFlex=\"50%\" fxFelx.xs=\"100%\" fxLayoutAlign=\"end start\">\n        <button mat-raised-button type=\"button\" color=\"accent\" style=\"margin-left: 8px;\"\n            (click)=\"closeSideNavEv.emit()\" [disabled]=\"bloqueoBotones\">\n            Cerrar Panel\n        </button>\n    </div>\n</div>\n<!--\n<div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\" fxLayoutAlign=\"center center\">\n    <div class=\"bordeTest\" fxFlex=\"20%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\" fxFlex.md=\"25%\" fxLayoutAlign=\"center center\" *ngFor=\"let cta of mesaEnUso.cuentas\">\n        <button mat-raised-button type=\"button\" color=\"accent\" [disabled]=\"+cta.cerrada == 1\" (click)=\"setSelectedCuenta(cta.numero)\">\n            {{cta.nombre}}\n        </button>\n    </div>\n</div>\n-->\n<div class=\"divFullSize\">\n    <div class=\"row\">\n        <div class=\"col m12 s12\" align=\"center\" style=\"padding: 0 !important;\" *ngIf=\"mesaEnUso\">\n            <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" *ngFor=\"let cta of mesaEnUso.cuentas\" [disabled]=\"+cta.cerrada == 1\"\n                (click)=\"setSelectedCuenta(cta.numero)\">\n                {{cta.nombre}}\n            </button>\n            <button mat-raised-button type=\"button\" class=\"btnAccion\" (click)=\"nuevaCuenta()\" *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0 && +mesaEnUso.mesa.escallcenter === 0\">\n                Nueva\n            </button>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col m6 s12\" align=\"center\" style=\"padding: 0 !important;\">\n            <span class=\"bld\">Productos</span><br />\n            <mat-form-field class=\"fullWidth\" style=\"margin-left: 10px; margin-right: 10px;\" *ngIf=\"usaCodigoBarras\">\n                <input #txtCodigoBarras=\"matInput\" matInput cdkFocusInitial ngxBarCodePut type=\"text\" placeholder=\"Código\" name=\"codigoBarras\" [(ngModel)]=\"codigoBarras\" [ngModelOptions]=\"{standalone: true}\" (onDetected)=\"buscarArticulo()\">\n            </mat-form-field><br *ngIf=\"usaCodigoBarras\"/>\n            <ng-container *ngFor=\"let c of categorias\">\n                <button mat-raised-button class=\"btnAccion\" color=\"accent\" (click)=\"clickOnCategoria(c)\"\n                    [disabled]=\"!cuentaActiva || bloqueoBotones || !cuentaActiva.cuenta\" *ngIf=\"c.mostrarEnPos\">\n                    {{c.descripcion}}\n                </button>\n            </ng-container>\n        </div>\n        <div class=\"col m6 s12\" align=\"center\" style=\"padding: 0 !important;\">\n            <span class=\"bld\" *ngIf=\"cuentaActiva && cuentaActiva.nombre\">Cuenta de {{cuentaActiva.nombre}}</span>\n            <span class=\"bld\" *ngIf=\"!cuentaActiva || !cuentaActiva.nombre\">Por favor seleccione una cuenta. Gracias.</span>\n            <div align=\"center\">\n                <eco-fab-speed-dial direction=\"down\">\n                    <eco-fab-speed-dial-trigger>\n                        <button mat-fab color=\"warn\">\n                            <mat-icon style=\"font-size: 18pt !important;\">keyboard_arrow_down</mat-icon>\n                        </button>\n                    </eco-fab-speed-dial-trigger>\n                    <eco-fab-speed-dial-actions>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"getNotasGenerales()\" [disabled]=\"bloqueoBotones\">\n                            Notas\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"validarImpresion()\" [disabled]=\"!cuentaActiva.nombre || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 0\">\n                            Comanda\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"printCuenta()\" [disabled]=\"!cuentaActiva.nombre || bloqueoBotones\"\n                            *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Cuenta\n                        </button>                        \n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"distribuirProductos()\" [disabled]=\"mesaEnUso.cuentas.length < 2 || bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Distribuir\n                        </button>                        \n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"unirCuentas()\" [disabled]=\"mesaEnUso.cuentas.length < 2 || bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Unir cuentas\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"cobrarCuenta()\" [disabled]=\"!cuentaActiva.nombre || esCajero() || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 0\">\n                            Cobrar cuenta\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"enviarPedido()\" [disabled]=\"!cuentaActiva.nombre || esCajero() || bloqueoBotones\" *ngIf=\"cuentaActiva && mesaEnUso && +mesaEnUso.mesa.escallcenter === 1\">\n                            Enviar pedido\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccion btnAccionComanda\"\n                            (click)=\"trasladoMesa()\" [disabled]=\"bloqueoBotones\"\n                            *ngIf=\"mesaEnUso && +mesaEnUso.mesa.esmostrador === 0\">\n                            Trasladar\n                        </button>\n                        <button mat-mini-fab type=\"button\" color=\"warn\" class=\"btnAccionComanda\" (click)=\"cerrarMesa()\"\n                            *ngIf=\"mesaEnUso && lstProductosSeleccionados.length <= 0\">\n                            Cerrar {{+mesaEnUso.mesa.esmostrador === 0 ? 'Mesa' : (+mesaEnUso.mesa.escallcenter === 0 ? 'Mostrador' : 'Pedido')}}\n                        </button>\n                    </eco-fab-speed-dial-actions>\n                </eco-fab-speed-dial>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col m6 s12 mat-elevation-z3 colProductos\">\n            <!--<app-lista-producto (productoClickedEv)=\"addProductoSelected($event)\"></app-lista-producto>-->\n            <app-lista-producto-alt #appLstProdAlt (productoClickedEv)=\"agregarProductos($event)\"\n                (categoriasFilledEv)=\"setListaCategorias($event)\" [bloqueoBotones]=\"bloqueoBotones\">\n            </app-lista-producto-alt>\n        </div>\n        <div class=\"col m6 s12 mat-elevation-z3 colProductos\">\n            <app-lista-productos-comanda *ngIf=\"mesaEnUso && cuentaActiva\" [listaProductos]=\"lstProductosDeCuenta\" [noCuenta]=\"cuentaActiva && +cuentaActiva.numero ? +cuentaActiva.numero : 1\"\n                [IdComanda]=\"mesaEnUso.comanda\" [IdCuenta]=\"cuentaActiva.cuenta\" [bloqueoBotones]=\"bloqueoBotones\"\n                [mesaEnUso]=\"mesaEnUso\" (productoRemovedEv)=\"updProductosCuenta($event)\"></app-lista-productos-comanda>\n        </div>\n    </div>    \n</div>","import { Subject, from, fromEvent } from 'rxjs';\nimport { mergeMap, map, filter, debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxBarCodePutDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Input delay\n         */\n        this.debounce = 0;\n        /**\n         * After how many characters start search\n         */\n        this.skipStart = 0;\n        /**\n         * Data cleansing event\n         */\n        this.onDelete = new EventEmitter();\n        /**\n         * Event after data entry\n         */\n        this.onDetected = new EventEmitter();\n        /**\n         * Use for unsubscribe\n         */\n        this.destroy$ = new Subject();\n    }\n    ngAfterViewInit() {\n        /**\n         * Often the code scanner is connected to the computer.\n         * It emulates a press key, so we use keyboard events to press and release keys.\n         */\n        const events = ['keydown', 'keyup'];\n        /**\n         * Empty object for delay logic\n         */\n        const pressed = {};\n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/from.html}\n         */\n        from(events)\n            .pipe(\n        /**\n         * Look at the\n         * {@Link https://rxjs-dev.firebaseapp.com/api/operators/mergeMap}\n         */\n        mergeMap((event) => fromEvent(this.elementRef.nativeElement, event)), \n        /**\n         * Prepare input data\n         */\n        map((event) => {\n            switch (event.type) {\n                case 'keydown':\n                    /**\n                     * Since \"which\" is deprecated, we use it for a temporary variable\n                     * and set the processing time keydown.\n                     */\n                    pressed[event.which] = event.timeStamp;\n                    break;\n                case 'keyup':\n                    /**\n                     * In the delay set the difference between keydown and keyup events.\n                     */\n                    Object.assign(event, { duration: (event.timeStamp - pressed[event.which]) / 1000 });\n                    break;\n            }\n            /**\n             * @return {event: KeyboardEvent}\n             */\n            return event;\n        }), filter((event) => {\n            if (event.keyCode === 8 || event.code === 'Backspace' || event.which === 8) {\n                /**\n                 * Used to clear data.\n                 */\n                this.onDelete.emit({ event, value: event.target.value, type: 'delete' });\n            }\n            /**\n             * Return data after typed in two characters.\n             */\n            return event.target.value.length > this.skipStart;\n        }), \n        /**\n         * Data entry delay is used to limit requests.\n         */\n        debounceTime(this.debounce), \n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/distinct.html}\n         */\n        distinctUntilChanged())\n            /**\n             * Use for unsubscribe\n             */\n            .pipe(takeUntil(this.destroy$))\n            /**\n             * Subscribe to the input data and determine the delay time for our purposes.\n             */\n            .subscribe((event) => {\n            if (event.duration > 0.02) {\n                /**\n                 * Keyboard input.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'keyboard' });\n            }\n            else if (event.duration <= 0.02) {\n                /**\n                 * Input from the scanner.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'scanner' });\n            }\n        });\n    }\n    /**\n     * Use for unsubscribe\n     */\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\nNgxBarCodePutDirective.ɵfac = function NgxBarCodePutDirective_Factory(t) { return new (t || NgxBarCodePutDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgxBarCodePutDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxBarCodePutDirective, selectors: [[\"\", \"ngxBarCodePut\", \"\"]], inputs: { debounce: \"debounce\", skipStart: \"skipStart\" }, outputs: { onDelete: \"onDelete\", onDetected: \"onDetected\" } });\nNgxBarCodePutDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgxBarCodePutDirective.propDecorators = {\n    debounce: [{ type: Input }],\n    skipStart: [{ type: Input }],\n    onDelete: [{ type: Output }],\n    onDetected: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxBarCodePut]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { debounce: [{\n            type: Input\n        }], skipStart: [{\n            type: Input\n        }], onDelete: [{\n            type: Output\n        }], onDetected: [{\n            type: Output\n        }] }); })();\n\nclass NgxBarCodePutModule {\n}\nNgxBarCodePutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxBarCodePutModule });\nNgxBarCodePutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxBarCodePutModule_Factory(t) { return new (t || NgxBarCodePutModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxBarCodePutModule, { declarations: [NgxBarCodePutDirective], exports: [NgxBarCodePutDirective] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxBarCodePutDirective],\n                exports: [NgxBarCodePutDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-barcodeput\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxBarCodePutDirective, NgxBarCodePutModule };\n\n//# sourceMappingURL=ngx-barcodeput.js.map","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-header>\n        <mat-card-title>Reporte de ventas</mat-card-title>\n        <mat-card-subtitle>\n            Por categoría<br />\n            Del {{params.fdel | date:'dd/MM/yyyy'}} al {{params.fal | date:'dd/MM/yyyy'}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <table class=\"tbl\">\n            <thead>\n                <tr>\n                    <th class=\"brdTSingleBSingle\">Descripción</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Cantidad</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Porcentaje</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Precio unitario</th>\n                    <th class=\"rtxt numWidth brdTSingleBSingle\">Total</th>\n                </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let cat of data\">\n                    <ng-container *ngIf=\"cat.subcategoria.length > 0\">\n                        <tr>\n                            <th colspan=\"5\">{{cat.descripcion}}</th>\n                        </tr>\n                        <!-- Inicio de contenedor de subcategorias -->\n                        <ng-container *ngFor=\"let subcat of cat.subcategoria\">\n                            <ng-container *ngIf=\"subcat.articulos.length > 0\">\n                                <tr>\n                                    <th class=\"tab\" colspan=\"5\">{{subcat.descripcion}}</th>\n                                </tr>\n                                <!-- Inicio de contenedor de artículos -->\n                                <ng-container *ngFor=\"let art of subcat.articulos\">\n                                    <tr>\n                                        <td class=\"doubleTab brdBSingle\">{{art.descripcion}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.cantidad | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.porcentaje | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.precio_unitario | number:'1.2-2'}}</td>\n                                        <td class=\"rtxt numWidth brdBSingle\">{{art.total | number:'1.2-2'}}</td>\n                                    </tr>\n                                </ng-container>\n                                <!-- Fin de contenedor de artículos -->\n                                <tr>\n                                    <th class=\"rtxt\" colspan=\"4\">Total de subcategoría:</th>\n                                    <th class=\"rtxt brdTSingleBDouble numWidth\">{{subcat.total | number:'1.2-2'}}</th>\n                                </tr>\n                            </ng-container>\n                        </ng-container>\n                        <!-- Fin de contenedor de subcategorias -->\n                    </ng-container>\n                </ng-container>\n            </tbody>\n        </table>\n    </mat-card-content>\n    <!--\n    <mat-card-footer>\n    </mat-card-footer>\n    -->\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { PorCategoria } from '../../../../interfaces/reporte-ventas';\n\n@Component({\n  selector: 'app-por-categoria',\n  templateUrl: './por-categoria.component.html',\n  styleUrls: ['./por-categoria.component.css']\n})\nexport class PorCategoriaComponent implements OnInit {\n\n  @Input() params: any = {};\n  @Input() data: PorCategoria[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ccGeneral, ccDetalle, ccTipo, ccNominacion } from '../../../interfaces/cajacorte';\nimport { CajacorteService } from '../../../services/cajacorte.service';\n\n@Component({\n  selector: 'app-cajacorte-form',\n  templateUrl: './cajacorte-form.component.html',\n  styleUrls: ['./cajacorte-form.component.css']\n})\nexport class CajacorteFormComponent implements OnInit {\n\n  @Input() ccorte: ccGeneral;\n  @Output() cajacorteSavedEv = new EventEmitter();\n  public ccorteTipo: ccTipo[] = [];\n  public ccorteNomi: ccNominacion[] = [];\n\n  public detalle = {\n    caja_corte_detalle: 0,\n    caja_corte: 0,\n    cantidad: 0,\n    total: 0,\n    anulado: 0,\n    caja_corte_nominacion: 0,\n    nombre: null\n  };\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    private cajacorteSrvc: CajacorteService\n  ) {}\n\n  ngOnInit() {\n    this.getCajaCorteTipo();\n    this.getCajaCorteNominacion();\n  }\n\n  getCajaCorteTipo = () => {\n    this.cajacorteSrvc.getCajaCorteTipo().subscribe(res => {\n      this.ccorteTipo = res;\n    });\n  }\n\n  getCajaCorteNominacion = () => {\n    this.cajacorteSrvc.getCajaCorteNominacion().subscribe(res => {\n      this.ccorteNomi = res;\n    });\n  }\n\n  setTotal = () => {\n    if (this.detalle.caja_corte_nominacion) {\n      let tmp = this.ccorteNomi.filter(o => {\n        return o.caja_corte_nominacion == this.detalle.caja_corte_nominacion;\n      })[0];\n\n      if (tmp.calcula == 1) {\n        this.detalle.total = this.detalle.cantidad*tmp.valor;\n      } else {\n        this.detalle.total = this.detalle.cantidad;\n      }\n    }\n  }\n\n  setNamenomi = () => {\n    let tmp = this.ccorteNomi.filter(o => {\n      return o.caja_corte_nominacion == this.detalle.caja_corte_nominacion;\n    })[0];\n    console.log(tmp,  this.detalle.caja_corte_nominacion);\n    this.detalle.nombre = tmp.nombre;\n  }\n\n  setNameTipo = () => {\n    let tmp = this.ccorteTipo.filter(o => {\n      return o.caja_corte_tipo == this.ccorte.caja_corte_tipo;\n    })[0];\n    console.log(tmp, this.ccorte.caja_corte_tipo);\n\n    this.ccorte.descripcion = tmp.descripcion;\n  }\n\n  reseteGeneral = () => this.ccorte = {\n    caja_corte: 0,\n    creacion: null,\n    usuario: 0,\n    turno: 0,\n    confirmado: null,\n    anulado: 0,\n    caja_corte_tipo: 0,\n    descripcion: null,\n    detalle: []\n  }\n\n  resetDetalle = () => this.detalle = {\n    caja_corte_detalle: 0,\n    caja_corte: 0,\n    cantidad: 0,\n    total: 0,\n    anulado: 0,\n    caja_corte_nominacion: 0,\n    nombre: null\n  }\n\n  agregarDetalle = () => {\n    if (this.detalle.caja_corte_nominacion && \n      this.detalle.cantidad &&\n      this.detalle.total) {\n\n      this.ccorte.detalle.push(this.detalle);\n      this.resetDetalle();\n    } else {\n      this._snackBar.open(`Complete los datos de nominaciones`, 'Corte de caja', { duration: 3000 });\n    }\n  }\n\n  guardar = () => {\n    if (confirm('¿Está seguro?')) {\n\n      if (this.ccorte.detalle.length == 0) {\n        this._snackBar.open(`Por favor agregue las nominaciones`, 'Corte de caja', { duration: 3000 });\n        return false;\n      }\n\n      if (!this.ccorte.caja_corte_tipo) {\n        this._snackBar.open(`Seleccione el tipo de corte de caja.`, 'Corte de caja', { duration: 3000 });\n        return false;\n      }\n\n      this.cajacorteSrvc.guardar(this.ccorte).subscribe(res => {\n        if (res.exito) {\n          this.cajacorteSavedEv.emit();\n          this.reseteGeneral();\n        }\n        this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n      });\n    }\n  }\n\n  anularCajaDetalle = (obj: ccDetalle) => {\n    if (confirm('¿Está seguro.?')) {\n      if (obj.caja_corte_detalle) {\n        this.cajacorteSrvc.anularDetalle(obj).subscribe(res => {\n          if (res.exito) {\n            let key = this.ccorte.detalle.indexOf(obj);\n            this.ccorte.detalle.splice(key,1);\n          }\n          this._snackBar.open(`${res.mensaje}`, 'Corte de caja', { duration: 3000 });\n        });\n      } else {\n        let key = this.ccorte.detalle.indexOf(obj);\n        this.ccorte.detalle.splice(key,1);\n      }\n    }\n  }\n}\n    \n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n  <mat-card-title>\n    <h5>Corte de caja</h5>\n  </mat-card-title>\n  <mat-card-content>\n    <form #frmcc=\"ngForm\" (ngSubmit)=\"frmcc.form.valid && guardar()\" novalidate>\n      <mat-form-field class=\"fullWidth\">\n        <mat-label>Tipo de Corte</mat-label>\n        <mat-select name=\"tipo\" [(ngModel)]=\"ccorte.caja_corte_tipo\" (selectionChange)=\"setNameTipo()\" required>\n          <mat-option *ngFor=\"let m of ccorteTipo\" [value]=\"m.caja_corte_tipo\">\n            {{m.descripcion}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <p>Agregar nominaciones</p>\n      <div class=\"example-container\">\n        <mat-form-field>\n          <mat-label>Nominación:</mat-label>\n          <mat-select name=\"nominacion\" [(ngModel)]=\"detalle.caja_corte_nominacion\" (selectionChange)=\"setNamenomi()\">\n            <mat-option *ngFor=\"let m of ccorteNomi\" [value]=\"m.caja_corte_nominacion\">\n              {{m.nombre}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Cantidad:</mat-label>\n          <input matInput type=\"number\" step=\"0.01\" name=\"cantidad\" [(ngModel)]=\"detalle.cantidad\" (blur)=\"setTotal()\">\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Total:</mat-label>\n          <input matInput type=\"number\" step=\"0.01\" name=\"total\" [(ngModel)]=\"detalle.total\" readonly>\n        </mat-form-field>\n        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"agregarDetalle()\" title=\"Agregar el detalle\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <mat-grid-list cols=\"4\" rowHeight=\"7:1\">\n        <mat-grid-tile><b>Nominación</b></mat-grid-tile>\n        <mat-grid-tile><b>Cantidad</b></mat-grid-tile>\n        <mat-grid-tile><b>Total</b></mat-grid-tile>\n        <mat-grid-tile></mat-grid-tile>\n      </mat-grid-list>\n\n      <mat-grid-list *ngFor=\"let m of ccorte.detalle\" cols=\"4\" rowHeight=\"7:1\">\n        <mat-grid-tile>{{ m.nombre }}</mat-grid-tile>\n        <mat-grid-tile>{{ m.cantidad }}</mat-grid-tile>\n        <mat-grid-tile>{{ m.total }}</mat-grid-tile>\n        <mat-grid-tile>\n          <mat-icon class=\"anulacion\" (click)=\"anularCajaDetalle(m)\" mat-list-icon>close</mat-icon>\n        </mat-grid-tile>\n      </mat-grid-list>\n      <hr>\n      <div align=\"end\">\n        <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"reseteGeneral()\" *ngIf=\"ccorte.caja_corte\">\n          <mat-icon>add</mat-icon>\n        </button>\n        <button mat-icon-button type=\"submit\" color=\"accent\" [disabled]=\"!frmcc.form.valid\" title=\"Guardar corte de caja\">\n          <mat-icon>save</mat-icon>\n        </button>\n      </div>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../../shared/global';\r\nimport * as moment from 'moment';\r\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { DesktopNotificationService } from '../../../shared/services/desktop-notification.service';\r\n\r\nimport { ProductoSelected } from '../../../wms/interfaces/articulo';\r\nimport { ComandaService } from '../../services/comanda.service';\r\nimport { FacturaService } from '../../../pos/services/factura.service';\r\nimport { ReportePdfService } from '../../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../../admin/services/configuracion.service';\r\nimport { OrdenGkService } from '../../../ghost-kitchen/services/orden-gk.service';\r\n\r\n@Component({\r\n  selector: 'app-comanda-en-linea',\r\n  templateUrl: './comanda-en-linea.component.html',\r\n  styleUrls: ['./comanda-en-linea.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ])\r\n  ]\r\n})\r\nexport class ComandaEnLineaComponent implements OnInit, OnDestroy {\r\n\r\n  public dataSource: any[] = [];\r\n  public columnsToDisplay = ['comanda', 'orden', 'fechahora', 'nombre', 'total', 'imprimir', 'cancelar', 'facturar'];\r\n  public expandedElement: any | null;\r\n  public comandasEnLinea: any[] = [];\r\n  // public intervalId: any;\r\n  public params: any = { de: 0, a: 99 };\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private snackBar: MatSnackBar,\r\n    private socket: Socket,\r\n    private ls: LocalstorageService,\r\n    private comandaSrvc: ComandaService,\r\n    private facturaSrvc: FacturaService,\r\n    private dns: DesktopNotificationService,\r\n    private pdfServicio: ReportePdfService,\r\n    private configSrvc: ConfiguracionService,\r\n    private ordenGkSrvc: OrdenGkService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n\r\n      this.socket.on('shopify:updlist', (obj: any = null) => {\r\n        if (obj && obj.corporacion) {\r\n          const suuid = this.ls.get(GLOBAL.usrTokenVar).sede_uuid;\r\n          if (suuid.indexOf(obj.corporacion) > -1) {\r\n            this.loadComandasEnLinea();\r\n            this.notificarUsuario();\r\n          }\r\n        } else {\r\n          this.loadComandasEnLinea();\r\n          this.notificarUsuario();\r\n        }\r\n      });\r\n\r\n      this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n\r\n      this.socket.on('connect_timeout', () => {\r\n        const msg = 'DESCONECTADO DEL SERVIDOR (TIMEOUT)';\r\n        this.snackBar.open(msg, 'ERROR', { duration: 5000 });\r\n        this.avisoSocketIOEvent(msg);\r\n      });\r\n\r\n      // this.socket.on('pong', (ms: number) => this.snackBar.open(`PONG: ${ms}ms`, 'Pong', { duration: 5000 }));\r\n\r\n      this.socket.on(\r\n        'reconnect_attempt',\r\n        (attempt: number) => this.snackBar.open(`INTENTO DE RECONEXIÓN #${attempt}`, 'ERROR', { duration: 10000 })\r\n      );\r\n\r\n      this.socket.on('shopify:error', (mensaje: string) => {\r\n        this.loadComandasEnLinea();\r\n        this.snackBar.open(`ERROR: ${mensaje}`, 'Firmar', { duration: 10000 });\r\n      });\r\n    }\r\n\r\n    this.loadComandasEnLinea();\r\n  }\r\n\r\n  avisoSocketIOEvent = (aviso: string = '') => {\r\n    const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel('Socket.IO', aviso, 'Aceptar', 'Cancelar')\r\n    });\r\n\r\n    confirmRef.afterClosed().subscribe((confirma: boolean) => { });\r\n  }\r\n\r\n  notificarUsuario = () => {\r\n    const opciones: NotificationOptions = {\r\n      icon: 'assets/img/minilogo.png',\r\n      body: `Se recibió una nueva orden a las ${moment().format(GLOBAL.dateTimeFormat)}.`,\r\n      dir: 'auto'\r\n    };\r\n    this.dns.createNotification('Rest-Touch Pro', 10000, opciones);\r\n  }\r\n\r\n  ngOnDestroy() { }\r\n\r\n  loadComandasEnLinea = () => {\r\n    this.comandaSrvc.getComandasOnLIne().subscribe((res: any[]) => {\r\n      /*this.comandasEnLinea = res.map(cel => {\r\n        cel.fhcreacion = moment.utc(cel.fhcreacion).local().format(GLOBAL.dbDateTimeFormat);\r\n        return cel;\r\n      });*/\r\n      this.comandasEnLinea = res;\r\n      this.dataSource = this.comandasEnLinea;\r\n    });\r\n  }\r\n\r\n  setToPrint = (articulos: any[]) => {\r\n    const lstArticulos: any[] = [];\r\n    articulos.forEach(item => {\r\n      lstArticulos.push({\r\n        id: +item.articulo.articulo,\r\n        nombre: item.articulo.descripcion,\r\n        cantidad: +item.cantidad,\r\n        total: +item.total,\r\n        notas: item.notas || '',\r\n        impresora: {\r\n          bluetooth: +item.articulo.impresora.bluetooth,\r\n          direccion_ip: item.articulo.impresora.direccion_ip || '',\r\n          impresora: +item.articulo.impresora.impresora,\r\n          nombre: item.articulo.impresora.nombre || '',\r\n          sede: +item.articulo.impresora.sede,\r\n          ubicacion: item.articulo.impresora.ubicacion || ''\r\n        },\r\n        detalle: item.detalle\r\n      });\r\n    });\r\n    return lstArticulos;\r\n  }\r\n\r\n  getPdf = (obj: any) => {\r\n    const noCuenta = +obj.cuentas[0].cuenta;\r\n    this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n      if (res) {\r\n        const blob = new Blob([res], { type: 'application/pdf' });\r\n        const url = window.URL.createObjectURL(blob);\r\n        window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n      } else {\r\n        this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n      }\r\n    });\r\n  }\r\n\r\n  imprimir = (obj: any, idx: number = 0) => {\r\n    // console.log(obj); // return;\r\n    const listaProductos = this.setToPrint(obj.cuentas[0].productos);\r\n    const AImpresoraNormal: ProductoSelected[] = listaProductos.filter(p => +p.impresora.bluetooth === 0);\r\n    const AImpresoraBT: ProductoSelected[] = listaProductos.filter(p => +p.impresora.bluetooth === 1);\r\n\r\n    let objToPrint = {};\r\n\r\n    if (AImpresoraNormal.length > 0) {\r\n      // console.log(AImpresoraNormal);\r\n      objToPrint = {\r\n        Indice: (idx + 1),\r\n        Tipo: 'Comanda',\r\n        Nombre: obj.cuentas[0].nombre,\r\n        Numero: obj.comanda,\r\n        NoOrdenEnLinea: obj.origen_datos.numero_orden,\r\n        DireccionEntrega: obj.origen_datos.direccion_entrega,\r\n        DetalleCuenta: AImpresoraNormal,\r\n        Total: 0.00,\r\n        NotasGenerales: obj.notas_generales || ''\r\n      };\r\n      // console.log('STRING (IN) = ', JSON.stringify(objToPrint));\r\n      // console.log('OBJETO (IN) = ', objToPrint);\r\n      this.socket.emit('print:comanda', `${JSON.stringify(objToPrint)}`);\r\n    }\r\n\r\n    if (AImpresoraBT.length > 0) {\r\n      objToPrint = {\r\n        Tipo: 'Comanda',\r\n        Nombre: obj.cuentas[0].nombre,\r\n        Numero: obj.comanda,\r\n        NoOrdenEnLinea: obj.origen_datos.numero_orden,\r\n        DireccionEntrega: obj.origen_datos.direccion_entrega,\r\n        DetalleCuenta: AImpresoraBT,\r\n        Total: 0.00\r\n      };\r\n      // console.log('STRING (BT) = ', JSON.stringify(objToPrint));\r\n      // console.log('OBJETO (BT) = ', objToPrint);\r\n      this.printToBT(JSON.stringify(objToPrint));\r\n    }   \r\n\r\n    if (+obj.orden_gk > 0) {      \r\n      const params = {\r\n        orden_gk: +obj.orden_gk,\r\n        estatus_orden_gk: 5,\r\n        sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n        comentario: `Se mandó a imprimir la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n      };\r\n      this.cambiarEstatusOrdenGK(params);\r\n    }\r\n  }\r\n\r\n  printToBT = (msgToPrint: string = '') => {\r\n    const AppHref = `com.restouch.impresion://impresion/${msgToPrint}`;\r\n    const wref = window.open(AppHref, 'PrntBT', 'height=200,width=200,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n    setTimeout(() => wref.close(), 1000);\r\n  }\r\n\r\n  firmar = (obj: any) => {\r\n    // console.log(obj);\r\n    this.facturaSrvc.firmar(+obj.factura.factura).subscribe((res: any) => {\r\n      // console.log(res);\r\n      if (res.exito) {\r\n        this.loadComandasEnLinea();\r\n\r\n        if (+obj.orden_gk > 0) {\r\n          const params = {\r\n            orden_gk: +obj.orden_gk,\r\n            estatus_orden_gk: 6,\r\n            sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n            comentario: `Se firmó la factura de la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n          };\r\n          this.cambiarEstatusOrdenGK(params);\r\n        }\r\n\r\n        const confirmRef = this.dialog.open(ConfirmDialogComponent, {\r\n          maxWidth: '400px',\r\n          data: new ConfirmDialogModel('Imprimir factura', '¿Desea imprimir la factura?', 'Sí', 'No')\r\n        });\r\n\r\n        confirmRef.afterClosed().subscribe((confirma: boolean) => {\r\n          if (confirma) {\r\n            const modoFactura = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_FACTURA) || 1;\r\n            // console.log(`MODO FACTURA = ${modoFactura}`);\r\n            if (modoFactura === 1) {\r\n              this.printFactura(res.factura, obj.origen_datos);\r\n            } else {\r\n              this.representacionGrafica(+obj.factura.factura);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      this.snackBar.open(res.mensaje, 'Facturación', { duration: (res.exito ? 3000 : 10000) });\r\n    });\r\n  }\r\n\r\n  printFactura = (fact: any, datosOrigen: any = {}) => {\r\n    const dataToPrint = {\r\n      NombreEmpresa: fact.empresa.nombre_comercial,\r\n      NitEmpresa: fact.empresa.nit,\r\n      SedeEmpresa: fact.sedeFactura.nombre,\r\n      DireccionEmpresa: fact.empresa.direccion,\r\n      Fecha: moment(fact.fecha_factura).format(GLOBAL.dateFormat),\r\n      Nit: fact.receptor.nit,\r\n      Nombre: fact.receptor.nombre,\r\n      Direccion: fact.receptor.direccion,\r\n      Serie: fact.serie_factura,\r\n      Numero: fact.numero_factura,\r\n      Total: 0.00,\r\n      NoAutorizacion: fact.fel_uuid,\r\n      NombreCertificador: fact.certificador_fel.nombre,\r\n      NitCertificador: fact.certificador_fel.nit,\r\n      FechaDeAutorizacion: fact.fecha_autorizacion,\r\n      NoOrdenEnLinea: datosOrigen.numero_orden,\r\n      FormaDePago: (datosOrigen.metodo_pago && datosOrigen.metodo_pago.length > 0) ? datosOrigen.metodo_pago.join(', ') : '',\r\n      DetalleFactura: []\r\n    };\r\n\r\n    for (const det of fact.detalle) {\r\n      dataToPrint.DetalleFactura.push({\r\n        Cantidad: parseInt(det.cantidad),\r\n        Descripcion: det.articulo.descripcion,\r\n        Total: parseFloat(det.total),\r\n        PrecioUnitario: +det.precio_unitario\r\n      });\r\n      dataToPrint.Total += parseFloat(det.total);\r\n    }\r\n\r\n    this.socket.emit('print:factura', JSON.stringify(dataToPrint));\r\n  }\r\n\r\n  representacionGrafica = (idfactura: number) => {\r\n    this.facturaSrvc.getGrafo(idfactura).subscribe(res => {\r\n      if (res.exito) {\r\n        switch (res.tipo) {\r\n          case 'link': this.openLinkWindow(res.documento); break;\r\n          case 'pdf': this.openPdfDocument(res.documento); break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openLinkWindow = (url: string) =>\r\n    window.open(url, 'winFactPdf', 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no')\r\n\r\n  openPdfDocument = (pdf: string) => {\r\n    const pdfWindow = window.open('', 'winFactPdf', 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n    pdfWindow.document.write(\r\n      '<iframe width=\"100%\" style=\"margin: -8px;border: none;\" height=\"100%\" src=\"data:application/pdf;base64, ' +\r\n      encodeURI(pdf) +\r\n      '\"></iframe>');\r\n  }\r\n\r\n  imprimirLote = () => {\r\n    for (let i = this.params.de; i <= this.params.a; i++) {\r\n      this.imprimir(this.comandasEnLinea[i], i);\r\n    }\r\n  }\r\n\r\n  cancelarPedido = (obj: any) => {\r\n    // console.log(obj);\r\n\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      maxWidth: '400px',\r\n      data: new ConfirmDialogModel(\r\n        'Cancelar pedido',\r\n        'Si cancela el pedido, será necesario volver a ingresarlo. ¿Desea continuar?',\r\n        'Sí',\r\n        'No',\r\n        {\r\n          input: [\r\n            {\r\n              select: false,\r\n              label: 'Comentario',\r\n              valor: null,\r\n              id: 'comentario',\r\n              requerido: false\r\n            }\r\n          ]\r\n        }\r\n      )\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res.resultado) {\r\n        const params = {};\r\n\r\n        for (const input of res.config.input) {\r\n          params[input.id] = input.valor;\r\n        }\r\n\r\n        this.comandaSrvc.cancelarPedido(obj.comanda, params).subscribe(resAnula => {\r\n          if (resAnula.exito) {\r\n\r\n            if (+obj.orden_gk > 0) {\r\n              const params = {\r\n                orden_gk: +obj.orden_gk,\r\n                estatus_orden_gk: 2,\r\n                sede: this.ls.get(GLOBAL.usrTokenVar).sede,\r\n                comentario: `Se canceló la comanda #${obj.comanda} de la orden #${obj.orden_gk} de Ghost Kitchen.`\r\n              };\r\n              this.cambiarEstatusOrdenGK(params);\r\n            }\r\n\r\n            this.snackBar.open('Pedido cancelado con éxito...', 'Pedido', { duration: 3000 });\r\n          } else {\r\n            this.snackBar.open(`ERROR: ${resAnula.mensaje}`, 'Pedido', { duration: 7000 });\r\n          }\r\n          this.loadComandasEnLinea();\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  cambiarEstatusOrdenGK = (params: any) => {    \r\n    this.ordenGkSrvc.cambiarEstatus(params).subscribe(res => {\r\n      if (res.exito) {        \r\n        this.socket.emit('gk:updEstatusOrden', `${JSON.stringify({ orden_gk: params.orden_gk, estatus_orden_gk: res.estatus_orden_gk, sede_uuid: this.ls.get(GLOBAL.usrTokenVar).sede_uuid })}`);\r\n      } else {\r\n        this.snackBar.open(`ERROR:${res.mensaje}`, 'Orden de Ghost Kitchen', { duration: 7000 });          \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!--\n<div class=\"row\">\n    <div class=\"col m12 s12\" align=\"center\">\n        <mat-form-field class=\"btnAccion\">\n            <input type=\"number\" matInput placeholder=\"De\" name=\"de\" [(ngModel)]=\"params.de\" required>\n        </mat-form-field>\n        <mat-form-field class=\"btnAccion\">\n            <input type=\"number\" matInput placeholder=\"A\" name=\"a\" [(ngModel)]=\"params.a\" required>\n        </mat-form-field>\n        <button mat-flat-button type=\"button\" color=\"accent\" (click)=\"imprimirLote()\">\n            Imprimir\n        </button>\n    </div>\n</div>\n-->\n<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"comanda\">\n                <th mat-header-cell *matHeaderCellDef>No.</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.comanda}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"orden\">\n                <th mat-header-cell *matHeaderCellDef>Orden</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.origen_datos.numero_orden || ''}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"fechahora\">\n                <th mat-header-cell *matHeaderCellDef>Fecha/Hora</th>\n                <td mat-cell *matCellDef=\"let element\">{{(element.fhcreacion | date:'dd/MM/yyyy HH:mm:ss') || ''}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"nombre\">\n                <th mat-header-cell *matHeaderCellDef>Cliente</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.cuentas[0].nombre}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"total\">\n                <th mat-header-cell *matHeaderCellDef>Total</th>\n                <td mat-cell *matCellDef=\"let element\">{{element.total | number: '1.2-2'}}</td>\n            </ng-container>\n            <!--\n            <ng-container matColumnDef=\"pdf\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">PDF</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"getPdf(element)\">\n                        PDF\n                    </button>\n                </td>\n            </ng-container>\n            -->\n            <ng-container matColumnDef=\"imprimir\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Imprimir</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"imprimir(element)\">\n                        Imprimir\n                    </button>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"cancelar\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Cancelar</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\"\n                        (click)=\"cancelarPedido(element)\">\n                        Cancelar\n                    </button>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"facturar\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 10%;\">Facturar</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tamanioAmigable\" style=\"width: 10%;\">\n                    <button mat-flat-button type=\"button\" class=\"btnCelSize\" color=\"accent\" (click)=\"firmar(element)\">\n                        Facturar\n                    </button>\n                </td>\n            </ng-container>\n\n            <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n            <ng-container matColumnDef=\"expandedDetail\">\n                <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n                    <div class=\"example-element-detail\"\n                        [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n                        <table style=\"width: 75%; background-color:#f5f5f5; table-layout: fixed;\">\n                            <caption>\n                                <h5>Detalle del pedido #{{element.comanda}}</h5>\n                                <h6 *ngIf=\"element.origen_datos.numero_orden\">Orden #{{element.origen_datos.numero_orden}}</h6>                                \n                            </caption>\n                            <thead>\n                                <th>Producto</th>\n                                <!--<th class=\"rtxt\">Precio</th>-->\n                                <th class=\"rtxt\">Total</th>\n                            </thead>\n                            <tbody>\n                                <tr *ngIf=\"element.notas_generales\">\n                                    <td colspan=\"2\">\n                                        <p class=\"long-notes\">{{element.notas_generales}}</p>\n                                    </td>\n                                </tr>\n                                <ng-container *ngFor=\"let det of element.cuentas[0].productos\">\n                                    <tr>\n                                        <td>\n                                            {{det.cantidad}} {{det.articulo.descripcion}}<br *ngIf=\"det.notas.length > 0\"/>\n                                            <span *ngIf=\"det.notas.length > 0\">&nbsp;&nbsp;&nbsp;{{det.notas}}</span>\n                                        </td>\n                                        <!--<td class=\"rtxt\">{{det.precio | number: '1.2-2'}}</td>-->\n                                        <td class=\"rtxt\">{{ ((+det.precio * +det.cantidad) + +det.monto_extra) | number: '1.2-2'}}</td>\n                                    </tr>\n                                    <ng-container *ngFor=\"let dc of det.detalle\">\n                                        <tr *ngIf=\"dc.length > 0\">\n                                            <td colspan=\"2\" class=\"tabulador-doble\">\n                                                {{dc}}\n                                            </td>\n                                        </tr>\n                                    </ng-container>                                    \n                                </ng-container>\n                            </tbody>\n                        </table>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n            <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\" class=\"example-element-row\"\n                [class.example-expanded-row]=\"expandedElement === element\"\n                (click)=\"expandedElement = expandedElement === element ? null : element\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GLOBAL } from '../../../../shared/global';\nimport * as moment from 'moment';\n\nimport { ConfiguracionFechas, ConfiguracionBotones } from '../../../../shared/interfaces/config-reportes';\n\n@Component({\n  selector: 'app-turnos',\n  templateUrl: './turnos.component.html',\n  styleUrls: ['./turnos.component.css']\n})\nexport class TurnosComponent implements OnInit {\n\n  public params: any = {};\n  public configParams: ConfiguracionFechas = {\n    isRequiredFDel: true, isRequiredFAl: true\n  };\n  public configBotones: ConfiguracionBotones = {\n    isHtmlDisabled: false, isPdfDisabled: false, isExcelDisabled: false\n  };\n  public cargando = false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.resetParams();\n  }\n\n  resetParams = () => {\n    this.params = {\n      fdel: moment().startOf('week').format(GLOBAL.dbDateFormat),\n      fal: moment().endOf('week').format(GLOBAL.dbDateFormat)\n    };\n    // console.log(this.params);\n  }\n\n  getReporte = () => {\n    console.log('GENERANDO CON PARAMETROS = ', this.params);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col m12 s12\">\n        <mat-card class=\"mat-elevation-z4 fullWidth\">\n            <mat-card-title>\n                <h4>Reporte de Turnos</h4>\n            </mat-card-title>\n            <mat-card-content>\n                <form #frmEntidad=\"ngForm\" novalidate>\n                    <app-rpt-fechas [(fdel)]=\"params.fdel\" [(fal)]=\"params.fal\" [configuracion]=\"configParams\"></app-rpt-fechas>\n                    <app-rpt-botones\n                        [configuracion]=\"configBotones\"\n                        (htmlClick)=\"getReporte()\"\n                        (pdfClick)=\"getReporte()\"\n                        (excelClick)=\"getReporte()\"\n                        (resetParamsClick)=\"resetParams()\">\n                    </app-rpt-botones>\n                </form>\n                <app-cargando *ngIf=\"cargando\"></app-cargando>\n            </mat-card-content>\n        </mat-card>                \n    </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { GLOBAL, PaginarArray, MultiFiltro } from '../../../../shared/global';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\n\nimport { Turno } from '../../../interfaces/turno';\nimport { TurnoService } from '../../../services/turno.service';\n\n@Component({\n  selector: 'app-lista-turno',\n  templateUrl: './lista-turno.component.html',\n  styleUrls: ['./lista-turno.component.css']\n})\nexport class ListaTurnoComponent implements OnInit {\n\n  public lstTurnos: Turno[];\n  public lstTurnosPaged: Turno[];\n  @Output() getTurnoEv = new EventEmitter();\n\n  public length = 0;\n  public pageSize = 5;\n  public pageSizeOptions: number[] = [5, 10, 15];\n  public pageIndex = 0;\n  public pageEvent: PageEvent;\n  public txtFiltro = '';\n\n  constructor(\n    private ls: LocalstorageService,\n    private turnoSrvc: TurnoService\n  ) { }\n\n  ngOnInit() {\n    this.loadTurnos();\n  }\n\n  applyFilter() {\n    if (this.txtFiltro.length > 0) {\n      const tmpList = MultiFiltro(this.lstTurnos, this.txtFiltro);\n      this.length = tmpList.length;\n      this.lstTurnosPaged = PaginarArray(tmpList, this.pageSize, this.pageIndex + 1);\n    } else {\n      this.length = this.lstTurnos.length;\n      this.lstTurnosPaged = PaginarArray(this.lstTurnos, this.pageSize, this.pageIndex + 1);\n    }\n  }\n\n  loadTurnos = () => {\n    this.turnoSrvc.get({sede: (+this.ls.get(GLOBAL.usrTokenVar).sede || 0)}).subscribe(lst => {\n      if (lst) {\n        if (lst.length > 0) {\n          this.lstTurnos = lst;\n          this.applyFilter();\n        }\n      }\n    });\n  }\n\n  getTurno = (obj: any) => {\n    this.getTurnoEv.emit({\n      turno: obj.turno,\n      turno_tipo: obj.turno_tipo.turno_tipo,\n      fecha: obj.fecha,\n      inicio: obj.inicio,\n      fin: obj.fin\n    });\n  }\n\n  pageChange = (e: PageEvent) => {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.applyFilter();\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-content>\n        <mat-form-field class=\"fullWidth\">\n            <input matInput (keyup)=\"applyFilter()\" placeholder=\"Buscar...\" [(ngModel)]=\"txtFiltro\" [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n        <mat-nav-list>\n            <mat-list-item *ngFor=\"let element of lstTurnosPaged\" (click)=\"getTurno(element)\">\n                <mat-icon mat-list-icon>schedule</mat-icon>\n                <h5 mat-line>Inicio: {{element.inicio | date: 'dd/MM/yyyy HH:mm:ss'}}</h5><br/>\n                <p mat-line>\n                    Fin: {{element.fin | date: 'dd/MM/yyyy HH:mm:ss'}}\n                </p>\n            </mat-list-item>            \n        </mat-nav-list>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"pageChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n    </mat-card-content>\n</mat-card>\n","import { EventEmitter } from '@angular/core';\r\nimport { WindowConfiguration } from '../../shared/interfaces/window-configuration';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { LocalstorageService } from '../../admin/services/localstorage.service';\r\nimport { GLOBAL } from '../../shared/global';\r\nimport { MatInput } from '@angular/material/input';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\n\r\nimport { UnirCuentaComponent } from '../components/unir-cuenta/unir-cuenta.component';\r\nimport { TrasladoMesaComponent } from '../components/traslado-mesa/traslado-mesa.component';\r\nimport { CobrarPedidoComponent } from '../../pos/components/cobrar-pedido/cobrar-pedido.component';\r\nimport { ListaProductoAltComponent } from '../../wms/components/producto/lista-producto-alt/lista-producto-alt.component';\r\nimport { ConfirmDialogModel, DialogPedidoComponent } from '../../shared/components/dialog-pedido/dialog-pedido.component';\r\nimport { ConfirmDialogComboModel, DialogComboComponent } from '../../shared/components/dialog-combo/dialog-combo.component';\r\nimport { NotasGeneralesComandaComponent } from '../components/notas-generales-comanda/notas-generales-comanda.component';\r\nimport { NuevaCuentaComponent } from '../components/nueva-cuenta/nueva-cuenta.component';\r\nimport { DistribuirProductosCuentasComponent } from '../components/distribuir-productos-cuentas/distribuir-productos-cuentas.component';\r\nimport { TranComandaAltComponent } from '../components/tran-comanda-alt/tran-comanda-alt.component';\r\n\r\nimport { Cuenta } from '../interfaces/cuenta';\r\nimport { Comanda, ComandaGetResponse } from '../interfaces/comanda';\r\nimport { DetalleComanda } from '../interfaces/detalle-comanda';\r\nimport { Articulo, ArbolArticulos, ProductoSelected, NodoProducto } from '../../wms/interfaces/articulo';\r\nimport { ArticuloService } from '../../wms/services/articulo.service';\r\n\r\nimport { ComandaService } from '../services/comanda.service';\r\nimport { ReportePdfService } from '../services/reporte-pdf.service';\r\nimport { ConfiguracionService } from '../../admin/services/configuracion.service';\r\nimport { Cliente } from '../../admin/interfaces/cliente';\r\nimport { Categoria } from '../../wms/interfaces/categoria';\r\n\r\nimport { AccionesComandaComponent } from '../components/acciones-comanda/acciones-comanda.component';\r\nimport { Base64 } from 'js-base64';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport class TranComanda {\r\n    public mesaEnUso: ComandaGetResponse;\r\n    public clientePedido: Cliente = null;\r\n    public closeSideNavEv = new EventEmitter();\r\n    public appLstProdAlt: ListaProductoAltComponent;\r\n    public mesaSavedEv = new EventEmitter();\r\n    public txtCodigoBarras: MatInput;\r\n\r\n    public lstProductosSeleccionados: ProductoSelected[];\r\n    public lstProductosDeCuenta: ProductoSelected[];\r\n    public lstProductosAImprimir: ProductoSelected[];\r\n    public showPortalComanda = false;\r\n    public showPortalCuenta = false;\r\n    public windowConfig: WindowConfiguration;\r\n    public noComanda = 0;\r\n    public sumCuenta = 0;\r\n    public cuentaActiva: Cuenta;\r\n    public detalleComanda: DetalleComanda;\r\n    public categorias: (ArbolArticulos[] | Categoria[]) = [];\r\n    public bloqueoBotones = false;\r\n    public rolesUsuario: string[] = [];\r\n    public impreso = 0;\r\n    public usaCodigoBarras = false;\r\n    public codigoBarras: string = null;\r\n    public imprimeRecetaEnComanda = true;\r\n\r\n    protected endSubs = new Subscription();\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        protected snackBar: MatSnackBar,\r\n        public comandaSrvc: ComandaService,\r\n        protected socket: Socket,\r\n        protected ls: LocalstorageService,\r\n        protected pdfServicio: ReportePdfService,\r\n        protected configSrvc: ConfiguracionService,\r\n        protected articuloSrvc: ArticuloService,\r\n        protected bsAccionesCmd: MatBottomSheet\r\n    ) { }\r\n\r\n    alIniciar = () => {\r\n        // this.resetMesaEnUso();\r\n        this.resetLstProductosSeleccionados();\r\n        this.resetLstProductosDeCuenta();\r\n        this.resetCuentaActiva();\r\n        this.impreso = 0;\r\n        this.noComanda = this.mesaEnUso.comanda || 0;\r\n        this.llenaProductosSeleccionados();\r\n        if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\r\n            this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\r\n            this.socket.on('reconnect', () => this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid));\r\n        }\r\n        this.usaCodigoBarras = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_USA_CODIGO_BARRAS);\r\n        this.imprimeRecetaEnComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_RECETA_EN_COMANDA);\r\n        // console.log('MESA EN USO = ', this.mesaEnUso);\r\n    }\r\n\r\n    resetMesaEnUso = () => this.mesaEnUso = {\r\n        exito: true,\r\n        comanda: null, usuario: null, sede: null, estatus: null,\r\n        mesa: {\r\n            mesa: null,\r\n            area: { area: null, sede: null, area_padre: null, nombre: null },\r\n            numero: null, posx: null, posy: null, tamanio: null, estatus: null\r\n        },\r\n        numero_pedido: null,\r\n        cuentas: []\r\n    }\r\n    resetLstProductosSeleccionados = () => this.lstProductosSeleccionados = [];\r\n    resetLstProductosDeCuenta = () => this.lstProductosDeCuenta = [];\r\n    resetCuentaActiva = () => this.cuentaActiva = { cuenta: null, numero: null, nombre: null, productos: [] };\r\n    resetListadoArticulos = () => this.appLstProdAlt.loadArbolArticulos();\r\n\r\n    setListaCategorias = (cats: ArbolArticulos[] = []) => this.categorias = this.setVerBotones(cats);\r\n\r\n    setVerBotones = (cats: ArbolArticulos[]) => {\r\n        for (const cat of cats) {\r\n            loopSubCategoria:\r\n            for (const subcat of cat.categoria_grupo) {\r\n                for (const art of subcat.articulo) {\r\n                    if (+art.mostrar_pos === 1) {\r\n                        subcat.mostrarEnPos = true;\r\n                        cat.mostrarEnPos = true;\r\n                        continue loopSubCategoria;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return cats;\r\n    }\r\n\r\n    clickOnCategoria = (c: ArbolArticulos) => this.appLstProdAlt.fillSubCategorias(c.categoria_grupo);\r\n\r\n    buscarArticulo = () => {\r\n        // console.log(`CODIGO BARRAS = ${this.codigoBarras}`);\r\n        if (this.codigoBarras && this.codigoBarras.trim().length > 0) {\r\n            this.endSubs.add(                \r\n                this.articuloSrvc.getArticulos({ codigo: this.codigoBarras.trim() }).subscribe((arts: Articulo[]) => {\r\n                    if (arts && arts.length > 0) {\r\n                        const art = arts[0];\r\n                        const obj: NodoProducto = {\r\n                            id: +art.articulo,\r\n                            nombre: art.descripcion,\r\n                            precio: +art.precio,\r\n                            impresora: art.impresora,\r\n                            presentacion: art.presentacion,\r\n                            codigo: art.codigo,\r\n                            combo: art.combo,\r\n                            multiple: art.multiple\r\n                        };\r\n                        this.agregarProductos(obj);\r\n                    }\r\n                    this.codigoBarras = null;\r\n                    this.txtCodigoBarras.focus();\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    llenaProductosSeleccionados = (conQueMesa: ComandaGetResponse = this.mesaEnUso) => {\r\n        if (this.mesaEnUso.comanda == null) {\r\n            this.mesaEnUso = conQueMesa;\r\n        }\r\n        this.lstProductosSeleccionados = [];\r\n\r\n        for (const ctas of conQueMesa.cuentas) {\r\n            for (const p of ctas.productos) {\r\n                this.lstProductosSeleccionados.push({\r\n                    id: +p.articulo.articulo,\r\n                    nombre: p.articulo.descripcion,\r\n                    cuenta: +p.numero_cuenta || 1,\r\n                    idcuenta: +ctas.cuenta,\r\n                    cantidad: +p.cantidad,\r\n                    impreso: +p.impreso,\r\n                    precio: parseFloat(p.precio) || 10.00,\r\n                    total: parseFloat(p.total) || (parseFloat(p.cantidad) * parseFloat(p.precio)),\r\n                    notas: p.notas || '',\r\n                    showInputNotas: false,\r\n                    itemListHeight: '70px',\r\n                    detalle_comanda: +p.detalle_comanda,\r\n                    detalle_cuenta: +p.detalle_cuenta,\r\n                    impresora: p.articulo.impresora,\r\n                    detalle: p.detalle,\r\n                    monto_extra: +p.monto_extra || 0.00,\r\n                    multiple: +p.articulo.multiple,\r\n                    combo: +p.articulo.combo\r\n                });\r\n            }\r\n        }\r\n        // console.log('SELECCIONADOS = ', this.lstProductosSeleccionados);\r\n    }\r\n\r\n    cerrarMesa = () => {\r\n        // console.log('CERRAR MESA; MESA EN USO = ', this.mesaEnUso);\r\n        this.endSubs.add(            \r\n            this.comandaSrvc.cerrarMesa(this.mesaEnUso.mesa.mesa).subscribe(res => {\r\n                // console.log('RESPUESTA DE CERRAR MESA = ', res);\r\n                if (res.exito) {\r\n                    // console.log('EXITO PARA CERRAR LA MESA...', res);\r\n                    this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n                    this.mesaEnUso.mesa.estatus = 1;\r\n                    // this.closeSideNavEv.emit();\r\n                    this.mesaSavedEv.emit();\r\n                    this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n                } else {\r\n                    // console.log('FALLA PARA CERRAR LA MESA...', res);\r\n                    this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    setSelectedCuenta(noCuenta: number) {\r\n        this.bloqueoBotones = true;\r\n        this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +noCuenta);\r\n        this.setLstProductosDeCuenta();\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    setSumaCuenta(lista: ProductoSelected[]) {\r\n        let suma = 0.00;\r\n        // for (let i = 0; i < lista.length; i++) { suma += (lista[i].precio * lista[i].cantidad); }\r\n        for (const item of lista) {\r\n            suma += (item.precio * item.cantidad);\r\n        }\r\n        this.sumCuenta = suma;\r\n    }\r\n\r\n    setLstProductosDeCuenta() {\r\n        this.lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n        // console.log(this.lstProductosDeCuenta);\r\n    }\r\n\r\n    agregarProductos(producto: any) {\r\n        // console.log(producto);\r\n        if (+producto.combo === 1 || +producto.multiple === 1) {\r\n            this.bloqueoBotones = true;\r\n            const confirmRef = this.dialog.open(DialogComboComponent, {\r\n                maxWidth: '50%',\r\n                data: new ConfirmDialogComboModel(\r\n                    producto,\r\n                    'Sí', 'No'\r\n                )\r\n            });\r\n\r\n            this.endSubs.add(                \r\n                confirmRef.afterClosed().subscribe((res: any) => {\r\n                    // console.log(res);\r\n                    if (res && res.respuesta && res.seleccion.receta.length > 0) {\r\n                        // console.log(res.seleccion); // this.bloqueoBotones = false; return;\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.saveDetalleCombo(\r\n                                this.mesaEnUso.comanda,\r\n                                this.cuentaActiva.cuenta, res.seleccion\r\n                            ).subscribe(resSaveDetCmb => {\r\n                                // console.log('NUEVO DETALLE COMANDA = ', res);\r\n                                if (resSaveDetCmb.exito) {\r\n                                    this.mesaEnUso = resSaveDetCmb.comanda;\r\n                                    this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                                    this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                                } else {\r\n                                    this.snackBar.open(`ERROR:${resSaveDetCmb.mensaje}`, 'Comanda', { duration: 3000 });\r\n                                }\r\n                                this.bloqueoBotones = false;\r\n                            })\r\n                        );\r\n                    } else {\r\n                        this.bloqueoBotones = false;\r\n                        this.snackBar.open('Error, Debe seleccionar los productos del combo', 'Comanda', { duration: 7000 });\r\n                    }\r\n                })\r\n            );\r\n        } else {\r\n            this.addProductoSelected(producto);\r\n        }\r\n    }\r\n\r\n    addProductoSelected(producto: any) {\r\n        // console.log('PRODUCTO = ', producto);\r\n        // return;\r\n        this.bloqueoBotones = true;\r\n        if (+this.cuentaActiva.numero) {\r\n            const idx = this.lstProductosSeleccionados\r\n                .findIndex(p => +p.id === +producto.id && +p.cuenta === +this.cuentaActiva.numero && +p.impreso === 0);\r\n\r\n            if (idx < 0) {\r\n                this.detalleComanda = {\r\n                    articulo: producto.id, cantidad: 1, precio: +producto.precio, total: 1 * +producto.precio, notas: ''\r\n                };\r\n                this.endSubs.add(                    \r\n                    this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n                        // console.log('NUEVO DETALLE COMANDA = ', res);\r\n                        if (res.exito) {\r\n                            this.mesaEnUso = res.comanda;\r\n                            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                        } else {\r\n                            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n                        }\r\n                        this.bloqueoBotones = false;\r\n                    })\r\n                );\r\n            } else {\r\n                const tmp: ProductoSelected = this.lstProductosSeleccionados[idx];\r\n                this.detalleComanda = {\r\n                    detalle_cuenta: tmp.detalle_cuenta, detalle_comanda: tmp.detalle_comanda, articulo: tmp.id,\r\n                    cantidad: (+tmp.cantidad) + 1, precio: +tmp.precio, total: ((+tmp.cantidad) + 1) * (+tmp.precio),\r\n                    notas: tmp.notas\r\n                };\r\n                this.endSubs.add(\r\n                    this.comandaSrvc.saveDetalle(this.mesaEnUso.comanda, this.cuentaActiva.cuenta, this.detalleComanda).subscribe(res => {\r\n                        // console.log('UPDATE DETALLE COMANDA = ', res);\r\n                        if (res.exito) {\r\n                            this.mesaEnUso = res.comanda;\r\n                            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n                            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n                        } else {\r\n                            this.snackBar.open(`ERROR:${res.mensaje}`, 'Comanda', { duration: 3000 });\r\n                        }\r\n                        this.bloqueoBotones = false;\r\n                    })\r\n                );\r\n            }\r\n            this.setLstProductosDeCuenta();\r\n        }\r\n    }\r\n\r\n    updProductosCuenta(obj: any) {\r\n        const nvaLista: ProductoSelected[] = obj.listaProductos || [];\r\n        const lstTemp: ProductoSelected[] = this.lstProductosSeleccionados.filter(p => +p.cuenta !== +this.cuentaActiva.numero);\r\n        if (nvaLista.length > 0) {\r\n            this.lstProductosSeleccionados = lstTemp.concat(nvaLista);\r\n        } else {\r\n            this.lstProductosSeleccionados = lstTemp;\r\n        }\r\n        if (obj.comanda) {\r\n            this.mesaEnUso = obj.comanda;\r\n            this.llenaProductosSeleccionados(this.mesaEnUso);\r\n            this.setSelectedCuenta(+this.cuentaActiva.numero);\r\n        }\r\n    }\r\n\r\n    prepProductosComanda(prods: ProductoSelected[]) {\r\n        // console.log(prods);\r\n        const tmp: any[] = [];\r\n        for (const p of prods) {\r\n            tmp.push({\r\n                articulo: p.id,\r\n                cantidad: p.cantidad,\r\n                precio: p.precio,\r\n                total: p.total,\r\n                notas: p.notas,\r\n                impreso: 1,\r\n                detalle_comanda: p.detalle_comanda,\r\n                detalle_cuenta: p.detalle_cuenta\r\n            });\r\n        }\r\n        return tmp;\r\n    }\r\n\r\n    validarImpresion(toPdf = false, dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        const ingresarPedido = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_INGRESO_NUMERO_PEDIDO);\r\n        // this.mesaEnUso.mesa.esmostrador;\r\n        // console.log(this.mesaEnUso);\r\n        if (+this.mesaEnUso.mesa.esmostrador === 1 && ingresarPedido && !this.mesaEnUso.numero_pedido) {\r\n            let pedidos = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_TOTAL_NUMEROS_PEDIDO);\r\n            if (!pedidos || pedidos <= 0) {\r\n                pedidos = 30;\r\n            }\r\n            const confirmRef = this.dialog.open(DialogPedidoComponent, {\r\n                maxWidth: '50%',\r\n                data: new ConfirmDialogModel(\r\n                    'Numero de Pedido',\r\n                    pedidos,\r\n                    'Sí', 'No'\r\n                )\r\n            });\r\n            \r\n            this.endSubs.add(\r\n                confirmRef.afterClosed().subscribe((conf: any) => {\r\n                    // console.log(conf);\r\n                    if (conf && conf.respuesta && conf.pedido) {\r\n                        this.mesaEnUso.numero_pedido = conf.pedido;\r\n                        this.printComanda(toPdf, dialogRef);\r\n                    } else {\r\n                        this.snackBar.open('Error, Debe seleccionar un numero de pedido', 'Comanda', { duration: 7000 });\r\n                    }\r\n                })\r\n            );\r\n        } else {\r\n            this.printComanda(toPdf, dialogRef);\r\n        }\r\n    }\r\n\r\n    printComanda(toPdf = false, dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        // solicitar numero de pedido\r\n        const meu = JSON.parse(JSON.stringify(this.mesaEnUso));\r\n\r\n        this.bloqueoBotones = true;\r\n        this.impreso = 0;\r\n        const modoComanda = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_MODO_COMANDA) || 1;\r\n        for (let i = 0; i < meu.cuentas.length; i++) {\r\n            const cuenta = meu.cuentas[i];\r\n            // console.log(cuenta);\r\n            this.cuentaActiva = meu.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n\r\n            const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n\r\n            const lstProductosAImprimir = lstProductosDeCuenta.filter(p => +p.impreso === 0 && +p.cantidad > 0);\r\n            if (lstProductosAImprimir.length > 0) {\r\n                lstProductosDeCuenta.map(p => p.impreso = 1);\r\n                this.noComanda = meu.comanda;\r\n                // console.log(this.cuentaActiva.cuenta);\r\n                this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n                const idxCta = meu.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n                // console.log(meu.cuentas)\r\n                // console.log(idxCta)\r\n                if (idxCta > -1) {\r\n                    // meu.cuentas[idxCta] = this.cuentaActiva;\r\n                    const objCmd: Comanda = {\r\n                        area: meu.mesa.area.area,\r\n                        mesa: meu.mesa.mesa,\r\n                        mesero: meu.usuario,\r\n                        comanda: meu.comanda,\r\n                        cuentas: meu.cuentas,\r\n                        numero_pedido: meu.numero_pedido\r\n                    };\r\n                    // console.log('Comanda a guardar = ', objCmd);\r\n                    this.endSubs.add(                        \r\n                        this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n                            // console.log('Respuesta del save = ', res);\r\n                            if (res.exito) {\r\n                                meu.numero_pedido = res.comanda.numero_pedido;\r\n                                // console.log(this.cuentaActiva);\r\n                                this.endSubs.add(                                    \r\n                                    this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                                        // console.log('Respuesta de poner impreso = ', resImp);\r\n                                        if (resImp.exito) {\r\n                                            this.impreso++;\r\n                                        }\r\n        \r\n                                        this.llenaProductosSeleccionados(resImp.comanda);\r\n                                        this.setSelectedCuenta(cuenta.numero);\r\n                                        this.snackBar.open('Cuenta actualizada', `Cuenta #${cuenta.numero}`, { duration: 3000 });\r\n        \r\n                                        // Inicio de impresión de comanda\r\n                                        let AImpresoraNormal: ProductoSelected[] = [];\r\n                                        let AImpresoraBT: ProductoSelected[] = [];\r\n        \r\n                                        try {\r\n                                            AImpresoraNormal = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 0);\r\n                                            AImpresoraBT = lstProductosAImprimir.filter(p => +p.impresora.bluetooth === 1);\r\n                                            // console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                                        } catch (error) {\r\n                                            console.log('PRODUCTOS A IMPRIMIR = ', lstProductosAImprimir);\r\n                                            console.log('NORMAL = ', AImpresoraNormal);\r\n                                            console.log('BT = ', AImpresoraBT);\r\n                                            console.log(error);\r\n                                        }\r\n        \r\n                                        if (!toPdf) {\r\n                                            if (AImpresoraNormal.length > 0) {\r\n                                                if (modoComanda !== 3) {\r\n                                                    if (!this.imprimeRecetaEnComanda) {\r\n                                                        AImpresoraNormal.map(d => {\r\n                                                            if (+d.combo === 0 && +d.esreceta === 1) {\r\n                                                                d.detalle = []\r\n                                                            }\r\n                                                            return d;\r\n                                                        });\r\n                                                    }\r\n                                                    this.socket.emit('print:comanda', `${JSON.stringify({\r\n                                                        Tipo: 'Comanda',\r\n                                                        Nombre: this.cuentaActiva.nombre,\r\n                                                        Numero: this.noComanda,\r\n                                                        DetalleCuenta: AImpresoraNormal,\r\n                                                        Ubicacion:\r\n                                                            `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                                                        Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                                                        Total: null,\r\n                                                        NumeroPedido: meu.numero_pedido,\r\n                                                        NotasGenerales: (meu.notas_generales || '')\r\n                                                    })}`);\r\n                                                    this.snackBar.open(`Imprimiendo comanda #${this.noComanda}`, 'Comanda', { duration: 7000 });\r\n                                                } else {\r\n                                                    this.snackBar.open(\r\n                                                        `Comanda #${this.noComanda} enviada a cocina`,\r\n                                                        'Comanda',\r\n                                                        { duration: 7000 }\r\n                                                    );\r\n                                                }\r\n                                                this.bloqueoBotones = false;\r\n                                                // console.log(\"imprimiendo\")\r\n                                            }\r\n        \r\n                                            if (AImpresoraBT.length > 0) {\r\n                                                if (modoComanda !== 3) {\r\n                                                    if (!this.imprimeRecetaEnComanda) {\r\n                                                        AImpresoraNormal.map(d => {\r\n                                                            if (+d.combo === 0 && +d.esreceta === 1) {\r\n                                                                d.detalle = []\r\n                                                            }\r\n                                                            return d;\r\n                                                        });\r\n                                                    }\r\n                                                    this.printToBT(\r\n                                                        JSON.stringify({\r\n                                                            Tipo: 'Comanda',\r\n                                                            Nombre: this.cuentaActiva.nombre,\r\n                                                            Numero: this.noComanda,\r\n                                                            DetalleCuenta: AImpresoraBT,\r\n                                                            Ubicacion:\r\n                                                                `${meu.mesa.area.nombre} - Mesa ${meu.mesa.etiqueta || meu.mesa.numero}`,\r\n                                                            Mesero: `${meu.mesero.nombres} ${meu.mesero.apellidos}`,\r\n                                                            Total: null,\r\n                                                            NumeroPedido: meu.numero_pedido\r\n                                                        })\r\n                                                    );\r\n                                                }\r\n                                            }\r\n                                        } else {\r\n                                            this.printComandaPDF();\r\n                                        }\r\n                                        if (+this.impreso === meu.cuentas.length) {\r\n                                            this.impreso = 0;\r\n                                            this.socket.emit('refrescar:mesa', { mesaenuso: meu });\r\n                                            this.socket.emit('refrescar:listaCocina', { mesaenuso: meu });\r\n                                            if (+meu.mesa.esmostrador === 0) {\r\n                                                if (dialogRef) {\r\n                                                    dialogRef.close();\r\n                                                } else {\r\n                                                    this.closeSideNavEv.emit();\r\n                                                }\r\n                                            } else {\r\n                                                this.cobrarCuenta(dialogRef);\r\n                                            }\r\n                                        }\r\n                                        // Fin de impresión de comanda\r\n                                    })\r\n                                );\r\n                            } else {\r\n                                this.snackBar.open(`ERROR: ${res.mensaje}`, `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n                            }\r\n                            this.bloqueoBotones = false;\r\n                        })\r\n                    );\r\n                }\r\n            } else {\r\n                this.impreso++;\r\n                // this.snackBar.open('Nada para enviar...', `Cuenta #${this.cuentaActiva.numero}`, { duration: 3000 });\r\n                this.bloqueoBotones = false;\r\n            }\r\n        }\r\n        // console.log('Productos a imprimir = ', this.lstProductosAImprimir);\r\n\r\n    }\r\n\r\n    printToBT = (msgToPrint: string = '') => {\r\n        const convertir = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_ENVIA_COMO_BASE64);\r\n        const data = convertir ? Base64.encode(msgToPrint, true) : msgToPrint;\r\n        // const AppHref = `${GLOBAL.DEEP_LINK_ANDROID}${data}`;\r\n        const AppHref = GLOBAL.DEEP_LINK_ANDROID.replace('__INFOBASE64__', data);\r\n        try {\r\n            window.location.href = AppHref;\r\n        } catch (error) {\r\n            this.snackBar.open('No se pudo conectar con la aplicación de impresión', 'Comanda', { duration: 3000 });\r\n        }\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    printComandaPDF = () => {\r\n        const noCuenta = +this.cuentaActiva.cuenta;\r\n        this.endSubs.add(            \r\n            this.pdfServicio.getComanda(noCuenta).subscribe(res => {\r\n                if (res) {\r\n                    const blob = new Blob([res], { type: 'application/pdf' });\r\n                    const url = window.URL.createObjectURL(blob);\r\n                    window.open(url, `cuenta_${noCuenta}`, 'height=700,width=800,menubar=no,location=no,resizable=no,scrollbars=no,status=no');\r\n                    // this.closeSideNavEv.emit();\r\n                } else {\r\n                    this.snackBar.open('No se pudo generar la comanda...', 'Comanda', { duration: 3000 });\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    sumaDetalle = (detalle: ProductoSelected[]) => {\r\n        let total = 0.00;\r\n        // for (let i = 0; i < detalle.length; i++) { total += detalle[i].total || 0.00; }\r\n        for (const item of detalle) {\r\n            total += +item.total || 0.00;\r\n            total += +item.monto_extra || 0.00;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    printCuenta(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        this.bloqueoBotones = true;\r\n        this.lstProductosAImprimir = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n        // console.log(this.lstProductosAImprimir);\r\n\r\n        if (this.lstProductosAImprimir.length > 0) {\r\n            this.setSumaCuenta(this.lstProductosAImprimir);\r\n            const totalCuenta = this.sumaDetalle(this.lstProductosAImprimir);\r\n            const printerToUse = this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora;\r\n            const imprimePropSugerida = this.configSrvc.getConfig(GLOBAL.CONSTANTES.RT_IMPRIME_PROPINA_SUGERIDA);\r\n\r\n            const msgToPrint = {\r\n                Tipo: 'Cuenta',\r\n                Nombre: this.cuentaActiva.nombre,\r\n                Numero: null,\r\n                DetalleCuenta: this.lstProductosAImprimir,\r\n                Total: totalCuenta,\r\n                Empresa: this.ls.get(GLOBAL.usrTokenVar).empresa,\r\n                Restaurante: this.ls.get(GLOBAL.usrTokenVar).restaurante,\r\n                PropinaSugerida: imprimePropSugerida ? (totalCuenta * 0.10).toFixed(2) : null,\r\n                Impresora: printerToUse,\r\n                Ubicacion:\r\n                    `${this.mesaEnUso.mesa.area.nombre} - Mesa ${this.mesaEnUso.mesa.etiqueta || this.mesaEnUso.mesa.numero\r\n                    } - Comanda ${this.mesaEnUso.comanda}`,\r\n                Mesero: `${this.mesaEnUso.mesero.nombres} ${this.mesaEnUso.mesero.apellidos}`\r\n            };\r\n\r\n            if (+printerToUse.bluetooth === 0) {\r\n                this.socket.emit(`print:cuenta`, `${JSON.stringify(msgToPrint)}`);\r\n            } else {\r\n                this.printToBT(JSON.stringify(msgToPrint));\r\n            }\r\n            this.snackBar.open(`Imprimiendo cuenta de ${this.cuentaActiva.nombre}`, 'Cuenta', { duration: 7000 });            \r\n            if (dialogRef) {\r\n                dialogRef.close();\r\n            } else {\r\n                this.closeSideNavEv.emit();\r\n            }\r\n        } else {\r\n            this.snackBar.open(`La cuenta de ${this.cuentaActiva.nombre} no tiene ningún artículo.`, 'Cuenta', { duration: 7000 });\r\n        }\r\n        this.bloqueoBotones = false;\r\n    }\r\n\r\n    unirCuentas(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        const unirCuentaRef = this.dialog.open(UnirCuentaComponent, {\r\n            width: '55%',\r\n            data: { lstProductosSeleccionados: this.lstProductosSeleccionados, mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            unirCuentaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    cobrarCuenta(dialogRef: MatDialogRef<TranComandaAltComponent> = null) {\r\n        this.endSubs.add(            \r\n            this.comandaSrvc.getCuenta(this.cuentaActiva.cuenta).subscribe(res => {\r\n                if (res.pendiente.length > 0) {\r\n                    this.snackBar.open('Cobro', 'Tiene productos sin comandar', { duration: 3000 });\r\n                } else {\r\n                    const productosACobrar = this.lstProductosDeCuenta.filter(p => +p.impreso === 1);\r\n                    if (productosACobrar.length > 0) {\r\n                        const cobrarCtaRef = this.dialog.open(CobrarPedidoComponent, {\r\n                            width: '95%',\r\n                            data: {\r\n                                mesaenuso: this.mesaEnUso,\r\n                                cuenta: this.cuentaActiva.nombre,\r\n                                idcuenta: this.cuentaActiva.cuenta,\r\n                                productosACobrar,\r\n                                porcentajePropina: 0.00,\r\n                                impresora: +this.mesaEnUso.mesa.esmostrador === 0 ?\r\n                                    (this.mesaEnUso.mesa.area.impresora_factura || null) :\r\n                                    (this.mesaEnUso.mesa.impresora || this.mesaEnUso.mesa.area.impresora),\r\n                                clientePedido: this.clientePedido\r\n                            }\r\n                        });\r\n    \r\n                        this.endSubs.add(                            \r\n                            cobrarCtaRef.afterClosed().subscribe(resAC => {\r\n                                // console.log(resAC);\r\n                                if (resAC && resAC !== 'closePanel') {\r\n                                    // console.log(res);\r\n                                    this.cambiarEstatusCuenta(resAC);\r\n                                    if (dialogRef) {\r\n                                        dialogRef.close(this.mesaEnUso);\r\n                                    } else {\r\n                                        this.closeSideNavEv.emit(this.mesaEnUso);\r\n                                    }\r\n                                } else {\r\n                                    if (resAC === 'closePanel') {\r\n                                        if (dialogRef) {\r\n                                            dialogRef.close(this.mesaEnUso);\r\n                                        } else {\r\n                                            this.closeSideNavEv.emit();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            })\r\n                        );\r\n                    } else {\r\n                        this.snackBar.open('Cobro', 'Sin productos a cobrar.', { duration: 3000 });\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    enviarPedido = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const cuenta = this.mesaEnUso.cuentas[0];\r\n        this.cuentaActiva = this.mesaEnUso.cuentas.find((c: Cuenta) => +c.numero === +cuenta.numero);\r\n        const lstProductosDeCuenta = this.lstProductosSeleccionados.filter(p => +p.cuenta === +this.cuentaActiva.numero);\r\n        lstProductosDeCuenta.map(p => p.impreso = 1);\r\n        this.noComanda = this.mesaEnUso.comanda;\r\n        this.cuentaActiva.productos = this.prepProductosComanda(lstProductosDeCuenta);\r\n        const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +this.cuentaActiva.cuenta);\r\n        if (idxCta > -1) {\r\n            const objCmd: Comanda = {\r\n                area: this.mesaEnUso.mesa.area.area,\r\n                mesa: this.mesaEnUso.mesa.mesa,\r\n                mesero: this.mesaEnUso.usuario,\r\n                comanda: this.mesaEnUso.comanda,\r\n                cuentas: this.mesaEnUso.cuentas,\r\n                numero_pedido: this.mesaEnUso.numero_pedido\r\n            };\r\n\r\n            this.endSubs.add(                \r\n                this.comandaSrvc.save(objCmd).subscribe((res) => {\r\n                    if (res.exito) {\r\n                        this.mesaEnUso.numero_pedido = res.comanda.numero_pedido;\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.setProductoImpreso(cuenta.cuenta).subscribe(resImp => {\r\n                                this.llenaProductosSeleccionados(resImp.comanda);\r\n                                this.setSelectedCuenta(cuenta.numero);\r\n                                this.cobrarCuenta(dialogRef);\r\n                            })\r\n                        );\r\n                    }\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    cambiarEstatusCuenta = (obj: any) => {\r\n        const idxCta = this.mesaEnUso.cuentas.findIndex(c => +c.cuenta === +obj.cuenta);\r\n        this.mesaEnUso.cuentas[idxCta].cerrada = +obj.cerrada;\r\n    }\r\n\r\n    // esCajero = () => (this.rolesUsuario || []).find(r => r.trim().toLocaleLowerCase() === 'cajero') === undefined;\r\n    esCajero = () => false;\r\n\r\n    trasladoMesa = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const trasladoRef = this.dialog.open(TrasladoMesaComponent, {\r\n            width: '55%',\r\n            data: { mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            trasladoRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    this.socket.emit('refrescar:mesa', { mesaenuso: this.mesaEnUso });\r\n                    if (dialogRef) {\r\n                        dialogRef.close(this.mesaEnUso);\r\n                    } else {\r\n                        this.closeSideNavEv.emit(this.mesaEnUso);\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    getNotasGenerales = () => {\r\n        const ngenDialog = this.dialog.open(NotasGeneralesComandaComponent, {\r\n            width: '50%',\r\n            data: { notasGenerales: (this.mesaEnUso.notas_generales || '') }\r\n        });\r\n        this.endSubs.add(            \r\n            ngenDialog.afterClosed().subscribe((notasGen: string) => {\r\n                if (notasGen !== null) {\r\n                    if (notasGen.trim().length > 0) {\r\n                        this.endSubs.add(                            \r\n                            this.comandaSrvc.saveNotasGenerales({ comanda: this.mesaEnUso.comanda, notas_generales: notasGen }).subscribe(res => {\r\n                                if (res.exito) {\r\n                                    this.mesaEnUso.notas_generales = notasGen;\r\n                                    this.snackBar.open(res.mensaje, 'Comanda', { duration: 3000 });\r\n                                } else {\r\n                                    this.snackBar.open(`ERROR: ${res.mensaje}`, 'Comanda', { duration: 7000 });\r\n                                }\r\n                            })\r\n                        );\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    nuevaCuenta = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const nuevaCuentaRef = this.dialog.open(NuevaCuentaComponent, {\r\n            width: '50%',\r\n            data: { mesaEnUso: this.mesaEnUso }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            nuevaCuentaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    distribuirProductos = (dialogRef: MatDialogRef<TranComandaAltComponent> = null) => {\r\n        const distProdCtaRef = this.dialog.open(DistribuirProductosCuentasComponent, {\r\n            width: '50%',\r\n            data: { mesaEnUso: this.mesaEnUso, lstProductos: (this.lstProductosSeleccionados || []) }\r\n        });\r\n        this.endSubs.add(            \r\n            distProdCtaRef.afterClosed().subscribe(result => {\r\n                if (result) {\r\n                    if (dialogRef) {\r\n                        dialogRef.close();\r\n                    } else {\r\n                        this.closeSideNavEv.emit();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    abrirAccionesComanda = (dialogRef: MatDialogRef<TranComandaAltComponent>) => {\r\n        const bs = this.bsAccionesCmd.open(AccionesComandaComponent, {\r\n            autoFocus: false,\r\n            data: {\r\n                tranComanda: this,\r\n                dialogRef\r\n            }\r\n        });\r\n\r\n        this.endSubs.add(            \r\n            bs.afterDismissed().subscribe((result: any) => {\r\n                if (result?.cerrar) {\r\n                    dialogRef.close(result.mesaEnUso || null);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { LocalstorageService } from '../../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../../shared/global';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\nimport { SeleccionaTurnoPrevioComponent } from '../selecciona-turno-previo/selecciona-turno-previo.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport * as moment from 'moment';\n\nimport { TipoTurno } from '../../../interfaces/tipo-turno';\nimport { TipoTurnoService } from '../../../services/tipo-turno.service';\nimport { Turno } from '../../../interfaces/turno';\nimport { DetalleTurno } from '../../../interfaces/detalle-turno';\nimport { TurnoService } from '../../../services/turno.service';\nimport { UsuarioTipo } from '../../../../admin/interfaces/usuario-tipo';\nimport { UsuarioTipoService } from '../../../../admin/services/usuario-tipo.service';\nimport { Usuario } from '../../../../admin/models/usuario';\nimport { UsuarioService } from '../../../../admin/services/usuario.service';\n\n@Component({\n  selector: 'app-form-turno',\n  templateUrl: './form-turno.component.html',\n  styleUrls: ['./form-turno.component.css']\n})\nexport class FormTurnoComponent implements OnInit {\n\n  @Input() turno: Turno;\n  @Output() turnoSavedEv = new EventEmitter();\n\n  public showTurnoForm = true;\n  public showDetalleTurnoForm = true;\n\n  public detallesTurno: DetalleTurno[] = [];\n  public detalleTurno: DetalleTurno;\n  public displayedColumns: string[] = ['usuario_tipo', 'usuario', 'editItem'];\n  public dataSource: MatTableDataSource<DetalleTurno>;\n  public tiposTurno: TipoTurno[] = [];\n  public tiposUsuario: UsuarioTipo[] = [];\n  public usuarios: Usuario[] = [];\n  public esMovil = false;\n  public comandas: any[] = [];\n  public facturas: any[] = [];\n  public pendientes = false;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private ls: LocalstorageService,\n    private tipoTurnoSrvc: TipoTurnoService,\n    private turnoSrvc: TurnoService,\n    private usuarioTipoSrvc: UsuarioTipoService,\n    private usuarioSrvc: UsuarioService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n    this.resetTurno();\n    this.loadTiposTurno();\n    this.loadTiposUsuario();\n    this.loadUsuarios();\n  }\n\n  loadTiposTurno = () => {\n    this.tipoTurnoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposTurno = res;\n      }\n    });\n  }\n\n  loadTiposUsuario = () => {\n    this.usuarioTipoSrvc.get().subscribe(res => {\n      if (res) {\n        this.tiposUsuario = res;\n      }\n    });\n  }\n\n  loadUsuarios = () => {\n    this.usuarioSrvc.get({ sede: (this.ls.get(GLOBAL.usrTokenVar).sede || 0) }).subscribe(res => {\n      if (res) {\n        this.usuarios = res;\n      }\n    });\n  }\n\n  resetTurno = () => {\n    this.pendientes = false;\n    this.comandas = [];\n    this.facturas = [];\n    this.turno = {\n      turno: null, turno_tipo: null, inicio: moment().format(GLOBAL.dbDateTimeFormat), fin: null\n    };\n    this.resetDetalleTurno();\n    this.detallesTurno = [];\n    this.updateTableDataSource();\n  }\n\n  saveInfoTurno = () => {\n    this.pendientes = false;\n    this.turnoSrvc.save(this.turno).subscribe(res => {\n      if (res.exito) {\n        this.turnoSavedEv.emit();\n        this.resetTurno();\n        this.turno = res.turno;\n        this.snackBar.open('Turno modificado con éxito...', 'Turno', { duration: 3000 });\n      } else {\n        // console.log(res.mensaje);\n        if (res.pendientes) {\n          this.snackBar.open(`ERROR: Error al cerrar el turno`, 'Turno', { duration: 3000 });\n          this.pendientes = true;\n          this.comandas = res.comandas;\n          this.facturas = res.facturas;\n        }\n\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n\n      }\n    });\n  }\n\n  onSubmit = () => {\n    if (moment(this.turno.fin).isValid()) {\n      const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n        maxWidth: '400px',\n        data: new ConfirmDialogModel('Cerrar turno', 'La fecha de finalización cerrará el turno. ¿Desea continuar?', 'Sí', 'No')\n      });\n\n      dialogRef.afterClosed().subscribe(res => {\n        if (res) {\n          this.saveInfoTurno();\n        }\n      });\n\n    } else {\n      this.saveInfoTurno();\n    }\n  }\n\n  resetDetalleTurno = () => this.detalleTurno = { turno: !!this.turno.turno ? this.turno.turno : null, usuario: null, usuario_tipo: null };\n\n  loadDetalleTurno = (idturno: number = +this.turno.turno) => {\n    this.turnoSrvc.getDetalle(idturno, { turno: idturno }).subscribe(res => {\n      // console.log(res);\n      if (res) {\n        this.detallesTurno = res;\n        this.updateTableDataSource();\n      }\n    });\n  }\n\n  onSubmitDetail = () => {\n    this.detalleTurno.turno = this.turno.turno;\n    // console.log(this.detalleTurno); return;\n    this.turnoSrvc.saveDetalle(this.detalleTurno).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.loadDetalleTurno();\n        this.resetDetalleTurno();\n        this.snackBar.open('Usuario agregado al turno...', 'Turno', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n      }\n    });\n  }\n\n  anularDetalleTurno = (obj: any) => {\n    // console.log(obj);\n    this.turnoSrvc.anularDetalle({\n      turno: obj.turno, usuario: obj.usuario.usuario, usuario_tipo: obj.usuario_tipo.usuario_tipo\n    }).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.loadDetalleTurno();\n        this.resetDetalleTurno();\n        this.snackBar.open('Se quitó al usuario del turno...', 'Turno', { duration: 3000 });\n      } else {\n        this.snackBar.open(`ERROR: ${res.mensaje}`, 'Turno', { duration: 3000 });\n      }\n    });\n  }\n\n  updateTableDataSource = () => this.dataSource = new MatTableDataSource(this.detallesTurno);\n\n  getNow = () => moment().format(GLOBAL.dbDateTimeFormat);\n\n  copiaDetalleTurno = () => {\n    const dialogRef = this.dialog.open(SeleccionaTurnoPrevioComponent, {\n      maxWidth: '400px',\n      data: { turnoCopia: this.turno }\n    });\n\n    dialogRef.afterClosed().subscribe(() =>  this.loadDetalleTurno(+this.turno.turno));\n  }\n\n}\n","<mat-card class=\"mat-elevation-z4 fullWidth\">\n    <mat-card-title>\n        <h4>\n            Turno {{!!turno.turno ? (turno.inicio | date:'dd/MM/yyyy HH:mm:ss') : ''}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showTurnoForm = true;\" *ngIf=\"!showTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showTurnoForm = false;\" *ngIf=\"showTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmTurno=\"ngForm\" *ngIf=\"showTurnoForm\" (ngSubmit)=\"frmTurno.form.valid && onSubmit()\" novalidate>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Tipo de turno</mat-label>\n                    <mat-select name=\"turno_tipo\" [(ngModel)]=\"turno.turno_tipo\" required>\n                        <mat-option *ngFor=\"let tt of tiposTurno\" [value]=\"tt.turno_tipo\">\n                            {{tt.descripcion}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <input matInput type=\"datetime-locale\" placeholder=\"Inicio\" name=\"inicio\" [(ngModel)]=\"turno.inicio\" required>\n                    <button type=\"button\" *ngIf=\"!turno.inicio\" mat-button matSuffix mat-icon-button (click)=\"turno.inicio=getNow()\">\n                        <mat-icon class=\"iconFontSize\">query_builder</mat-icon>\n                    </button>\n                    <button type=\"button\" mat-button *ngIf=\"turno.inicio\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"turno.inicio=null\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>                \n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <input matInput type=\"datetime-locale\" placeholder=\"Fin\" name=\"fin\" [(ngModel)]=\"turno.fin\">\n                    <button type=\"button\" *ngIf=\"!turno.fin\" mat-button matSuffix mat-icon-button (click)=\"turno.fin=getNow()\">\n                        <mat-icon class=\"iconFontSize\">query_builder</mat-icon>\n                    </button>\n                    <button type=\"button\" mat-button *ngIf=\"turno.fin\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"turno.fin=null\">\n                        <mat-icon class=\"iconFontSize\">close</mat-icon>\n                    </button>\n                </mat-form-field>                \n            </div>\n            <div role=\"group\" align=\"end\">\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmTurno.form.valid\">\n                    Guardar\n                </button>\n                <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"resetTurno()\" *ngIf=\"turno.turno\">\n                    Nuevo\n                </button>\n            </div>\n            <div *ngIf=\"pendientes\">\n                \n                    <h6>Documentos Pendientes</h6>\n                \n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <label><b>Comandas sin facturar</b></label>\n                            <ul>\n                                <li *ngFor=\"let com of comandas\" >{{com}}</li>\n                            </ul>\n                        </div>\n                        <div class=\"col\">\n                            <label><b>Facturas sin firmar</b></label>\n                            <ul>\n                                <li *ngFor=\"let fac of facturas\" >{{fac}}</li>\n                            </ul>\n                        </div>\n                    </div>\n                \n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n<hr *ngIf=\"turno.turno\" />\n<mat-card class=\"mat-elevation-z4 fullWidth\" *ngIf=\"turno.turno\">\n    <mat-card-title>\n        <h4>\n            Detalle del turno {{turno.inicio | date:'dd/MM/yyyy HH:mm:ss'}}\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleTurnoForm = true;\" *ngIf=\"!showDetalleTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_more</mat-icon>\n            </button>\n            <button mat-icon-button type=\"button\" color=\"accent\" (click)=\"showDetalleTurnoForm = false;\" *ngIf=\"showDetalleTurnoForm\">\n                <mat-icon class=\"iconFontSize\">expand_less</mat-icon>\n            </button>\n        </h4>\n    </mat-card-title>\n    <mat-card-content>\n        <form #frmDetalleTurno=\"ngForm\" *ngIf=\"showDetalleTurnoForm\" (ngSubmit)=\"frmDetalleTurno.form.valid && onSubmitDetail()\" novalidate>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Tipo</mat-label>\n                    <mat-select name=\"usuario_tipo\" [(ngModel)]=\"detalleTurno.usuario_tipo\" required>\n                        <mat-option *ngFor=\"let tu of tiposUsuario\" [value]=\"tu.usuario_tipo\">\n                            {{tu.descripcion}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"fullWidth\">\n                    <mat-label>Usuario</mat-label>\n                    <mat-select name=\"usuario\" [(ngModel)]=\"detalleTurno.usuario\" required>\n                        <mat-option *ngFor=\"let u of usuarios\" [value]=\"u.usuario\">\n                            {{u.nombres}} {{u.apellidos}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div align=\"right\">\n                <button mat-raised-button type=\"button\" color=\"accent\" class=\"btnAccion\" (click)=\"copiaDetalleTurno()\" [disabled]=\"!!turno.fin\">\n                    Copiar de turno anterior\n                </button>\n                <button mat-raised-button type=\"submit\" color=\"accent\" class=\"btnAccion\" [disabled]=\"!frmDetalleTurno.form.valid || !!turno.fin\">\n                    Guardar\n                </button>                \n            </div>\n        </form>\n        <hr *ngIf=\"detallesTurno.length > 0\"/>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z4 full-width\" *ngIf=\"detallesTurno.length > 0\">\n            <ng-container matColumnDef=\"usuario_tipo\">\n                <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">{{element.usuario_tipo.descripcion}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"usuario\">\n                <th mat-header-cell *matHeaderCellDef class=\"text-right\">Usuario</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-right\">{{element.usuario.nombres}} {{element.usuario.apellidos}}</td>\n            </ng-container>\n            <ng-container matColumnDef=\"editItem\">\n                <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"text-wrap\">\n                    <button mat-raised-button type=\"button\" color=\"accent\" (click)=\"anularDetalleTurno(element)\" [disabled]=\"!!turno.fin\">\n                        Anular\n                    </button>\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n            </tr>\n        </table>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GLOBAL } from '../../../shared/global';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\n\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-valida-pwd-gerente-turno',\n  templateUrl: './valida-pwd-gerente-turno.component.html',\n  styleUrls: ['./valida-pwd-gerente-turno.component.css']\n})\nexport class ValidaPwdGerenteTurnoComponent implements OnInit {\n\n  public data: any = { pwd: undefined };\n  public keyboardLayout = GLOBAL.IDIOMA_TECLADO;\n  public esMovil = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ValidaPwdGerenteTurnoComponent>,\n    private comandaSrvc: ComandaService,\n    private ls: LocalstorageService\n  ) { }\n\n  ngOnInit() {\n    this.esMovil = this.ls.get(GLOBAL.usrTokenVar).enmovil || false;\n  }\n\n  cancelar = () => this.dialogRef.close();\n\n  terminar = () => {\n    this.comandaSrvc.validaPwdGerenteTurno(this.data.pwd).subscribe(res => {\n      // console.log(res);\n      if (res.exito) {\n        this.dialogRef.close(res.esgerente);\n      } else {\n        this.dialogRef.close(false);\n      }\n    });\n  }\n}\n","<h1 mat-dialog-title>Contraseña del gerente de turno</h1>\n<mat-dialog-content>\n    <form #frmValidarPwdGerenteTurno=\"ngForm\" (ngSubmit)=\"frmValidarPwdGerenteTurno.form.valid\" novalidate>\n        <mat-form-field class=\"fullWidth\">\n            <input type=\"password\" matInput *ngIf=\"!esMovil\" [matKeyboard]=\"keyboardLayout\" placeholder=\"Contraseña del gerente de turno\" name=\"pwd\" [(ngModel)]=\"data.pwd\" required>\n            <input type=\"password\" matInput *ngIf=\"esMovil\" placeholder=\"Contraseña del gerente de turno\" name=\"pwd\" [(ngModel)]=\"data.pwd\" required>\n        </mat-form-field>\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button (click)=\"cancelar()\" color=\"secondary\" class=\"btnAccion\">\n        Cancelar\n    </button>\n    <button mat-raised-button (click)=\"terminar()\" [disabled]=\"!frmValidarPwdGerenteTurno.form.valid\" color=\"accent\">\n        Eliminar producto\n    </button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LocalstorageService } from '../../../admin/services/localstorage.service';\nimport { GLOBAL } from '../../../shared/global';\nimport { DialogCocina } from '../../../shared/interfaces/config-reportes';\nimport { DesktopNotificationService } from '../../../shared/services/desktop-notification.service';\nimport { ConfirmDialogModel, DialogCocinaComponent } from '../../../shared/components/dialog-cocina/dialog-cocina.component';\nimport * as moment from 'moment';\n\nimport { ComandaService } from '../../services/comanda.service';\n\n@Component({\n  selector: 'app-tran-cocina',\n  templateUrl: './tran-cocina.component.html',\n  styleUrls: ['./tran-cocina.component.css']\n})\nexport class TranCocinaComponent implements OnInit {\n\n  public lstComandasCocina: any[] = [];\n  public lstComandasCocinaEnProceso: any[] = [];\n\n  constructor(\n    private ls: LocalstorageService,\n    private comandaSrvc: ComandaService,\n    private socket: Socket,\n    private dns: DesktopNotificationService,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit() {\n    if (!!this.ls.get(GLOBAL.usrTokenVar).sede_uuid) {\n      this.socket.emit('joinRestaurant', this.ls.get(GLOBAL.usrTokenVar).sede_uuid);\n\n      this.socket.on('refrescar:listaCocina', () => {\n        this.loadComandasCocina();\n        this.notificarUsuario();\n      });\n\n      setInterval(() => {\n        this.setTiempo();\n      }, 1000);\n\n    }\n    this.loadComandasCocina();\n  }\n\n  notificarUsuario = () => {\n    const opciones: NotificationOptions = {\n      icon: 'assets/img/minilogo.png',\n      body: `Se recibió una nueva orden a las ${moment().format(GLOBAL.dateTimeFormat)}.`,\n      dir: 'auto'\n    };\n    this.dns.createNotification('Rest-Touch Pro', 10000, opciones);\n  }\n\n  loadComandasCocina = () => this.comandaSrvc.getComandasCocina().subscribe(res => {\n    this.lstComandasCocina = res.pendientes;\n    this.lstComandasCocinaEnProceso = res.enproceso;\n    this.setTiempo();\n  })\n\n  setTiempo = () => {\n    if (this.lstComandasCocinaEnProceso) {\n      for (let i = 0; i < this.lstComandasCocinaEnProceso.length; i++) {\n        const comanda = this.lstComandasCocinaEnProceso[i];\n        const msecPerMinute = 1000 * 60;\n        const msecPerHour = msecPerMinute * 60;\n        const msecPerDay = msecPerHour * 24;\n\n        // asignar la fecha en milisegundos\n        let date = new Date(comanda.fecha_proceso);\n        this.lstComandasCocinaEnProceso[i].inicio_proceso = date;\n        comanda.inicio = date;\n        const dateMsec = date.getTime();\n\n        // asignar la fecha el 1 de enero del a la media noche\n        date = new Date();\n\n        // Obtener la diferencia en milisegundos\n        let interval = date.getTime() - dateMsec;\n\n        // Calcular cuentos días contiene el intervalo. Substraer cuantos días\n        // tiene el intervalo para determinar el sobrante\n        const days = Math.floor(interval / msecPerDay);\n        interval = interval - (days * msecPerDay);\n\n        // Calcular las horas , minutos y segundos\n        const hours = Math.floor(interval / msecPerHour);\n        interval = interval - (hours * msecPerHour);\n\n        const minutes = Math.floor(interval / msecPerMinute);\n        interval = interval - (minutes * msecPerMinute);\n\n        const seconds = Math.floor(interval / 1000);\n        const tiempo = new Date();\n\n        tiempo.setHours(hours);\n        tiempo.setMinutes(minutes);\n        tiempo.setSeconds(seconds);\n\n        this.lstComandasCocinaEnProceso[i].tiempo_transcurrido = tiempo;\n        if (comanda.tiempo_preparacion) {\n          // tslint:disable-next-line: variable-name\n          const tiempo_preparacion = comanda.tiempo_preparacion.split(':');\n          comanda.inicio.setHours(comanda.inicio.getHours() + (+tiempo_preparacion[0]));\n          comanda.inicio.setMinutes(comanda.inicio.getMinutes() + (+tiempo_preparacion[1]));\n          this.lstComandasCocinaEnProceso[i].fin_proceso = comanda.inicio;\n        } else {\n          this.lstComandasCocinaEnProceso[i].fin_proceso = date;\n        }\n      }\n    }\n\n  }\n\n  comparaFecha = (cmd: any) => {\n    const date = new Date();\n    return date > cmd.fin_proceso;\n  }\n\n  setCocinado = (cmd: any, estatus = 2) => {\n    const res: DialogCocina = { respuesta: false, tiempo: '' };\n    const confirmRef = this.dialog.open(DialogCocinaComponent, {\n      maxWidth: '400px',\n      data: new ConfirmDialogModel(\n        'Cocina',\n        `¿Seguro de marcar como '${+estatus === 1 ? 'vista' : 'cocinada'}' la comanda #${cmd.comanda}?`,\n        'Sí', 'No',\n        res,\n        +estatus === 1 ? true : false\n      )\n    });\n\n    confirmRef.afterClosed().subscribe((conf: DialogCocina) => {\n\n      if (conf && conf.respuesta && conf.tiempo) {\n        // console.log(conf);\n        const datos: any = {\n          numero: +cmd.numero,\n          estatus: estatus,\n          tiempo: conf.tiempo\n        };\n\n        this.comandaSrvc.setComandaCocinada(+cmd.comanda, datos).subscribe((respuesta: any) => {\n          if (respuesta.exito) {\n            this.snackBar.open(respuesta.mensaje, 'Cocina', { duration: 3000 });\n          } else {\n            this.snackBar.open(`ERROR: ${respuesta.mensaje}`, 'Cocina', { duration: 7000 });\n          }\n          this.loadComandasCocina();\n        });\n      }\n    });\n  }\n\n}\n","<div fxLayout=\"row\" fxLayout.xs=\"column\" fxFlexFill>\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"bordeRght\">\n        <div class=\"divContenedor\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" fxFlexFill fxLayoutAlign=\"start start\">\n            <div fxFlex=\"100%\" fxLayoutAlign=\"center start\">\n                <h4>Pendientes</h4>\n            </div>\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"50%\" *ngFor=\"let cmd of lstComandasCocina\">\n                <mat-card class=\"mat-elevation-z4\">\n                    <mat-card-header>\n                        <mat-card-title>Comanda #{{cmd.comanda}} - {{cmd.numero}}</mat-card-title>\n                        <mat-card-subtitle>\n                            Area {{cmd.mesa.area.nombre}} - Mesa #{{cmd.mesa.etiqueta || cmd.mesa.numero}}<br />\n                            Atiende: {{cmd.mesero.nombres}} {{cmd.mesero.apellidos}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <ng-container *ngFor=\"let cta of cmd.cuentas\">\n                            <table *ngIf=\"cta.productos.length > 0\">\n                                <tr *ngFor=\"let prod of cta.productos\">\n                                    <td>\n                                        {{prod.cantidad}} {{prod.articulo.descripcion}}\n                                        <br *ngIf=\"prod.detalle.length > 0\" />\n                                        <ng-container *ngFor=\"let specs of prod.detalle\">                                            \n                                            <span>{{specs.trim()}}</span><br/>\n                                        </ng-container>\n                                        <br *ngIf=\"!!prod.notas && prod.notas.length > 0 && !prod.detalle\" />\n                                        <span *ngIf=\"!!prod.notas && prod.notas.length > 0\">\n                                            <strong>Notas:</strong> {{prod.notas}}\n                                        </span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ng-container>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <button mat-raised-button color=\"accent\" type=\"button\"\n                            (click)=\"setCocinado(cmd, 1)\">Vista</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"bordeLft\">\n        <div class=\"divContenedor\" fxLayout=\"row wrap\" fxLayoutGap=\"10px grid\" fxFlexFill fxLayoutAlign=\"start start\">\n            <div fxFlex=\"100%\" fxLayoutAlign=\"center start\">\n                <h4>En Proceso</h4>\n            </div>\n            <div fxFlex=\"33%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\" fxFlex.md=\"50%\"\n                *ngFor=\"let cmdEnProceso of lstComandasCocinaEnProceso\">\n                <mat-card class=\"mat-elevation-z4\">\n                    <mat-card-header>\n                        <mat-card-title>Comanda #{{cmdEnProceso.comanda}} - {{cmdEnProceso.numero}}</mat-card-title>\n                        <mat-card-subtitle>\n                            Area {{cmdEnProceso.mesa.area.nombre}} - Mesa #{{cmdEnProceso.mesa.etiqueta || cmdEnProceso.mesa.numero}}<br />\n                            Atiende: {{cmdEnProceso.mesero.nombres}} {{cmdEnProceso.mesero.apellidos}}\n                        </mat-card-subtitle>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div align=\"center\">\n                            <h6 [ngClass]=\"{'text-danger': comparaFecha(cmdEnProceso)}\">\n                                {{cmdEnProceso.tiempo_transcurrido | date: 'HH:mm:ss'}}\n                            </h6>\n                        </div>\n                        <ng-container *ngFor=\"let cta of cmdEnProceso.cuentas\">\n                            <table *ngIf=\"cta.productos.length > 0\">\n                                <tr *ngFor=\"let prod of cta.productos\">\n                                    <td>\n                                        {{prod.cantidad}} {{prod.articulo.descripcion}}\n                                        <br *ngIf=\"prod.detalle.length > 0\" />\n                                        <ng-container *ngFor=\"let specs of prod.detalle\">                                            \n                                            <span>{{specs.trim()}}</span><br/>\n                                        </ng-container>\n                                        <br *ngIf=\"!!prod.notas && prod.notas.length > 0 && !prod.detalle\" />\n                                        <span *ngIf=\"!!prod.notas && prod.notas.length > 0\">\n                                            <strong>Notas:</strong> {{prod.notas}}\n                                        </span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </ng-container>\n                    </mat-card-content>\n                    <mat-card-actions align=\"end\">\n                        <button mat-raised-button color=\"accent\" type=\"button\"\n                            (click)=\"setCocinado(cmdEnProceso)\">Cocinado</button>\n                    </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ListaAreaComponent } from '../lista-area/lista-area.component';\nimport { Area } from '../../../interfaces/area';\n\n\n@Component({\n  selector: 'app-area',\n  templateUrl: './area.component.html',\n  styleUrls: ['./area.component.css']\n})\nexport class AreaComponent implements OnInit {\n\n  public area: Area;\n  @ViewChild('listaAreas') lstAreasComponent: ListaAreaComponent;\n\n  constructor() {\n    this.area = {area: null, sede: null, nombre: null, impresora: null, impresora_factura: null };\n  }\n\n  ngOnInit() {\n  }\n\n  setArea = (obj: Area) => this.area = obj;\n\n  refreshAreaList = () => {\n    this.lstAreasComponent.loadEntidades();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col m5 s12\">\n        <app-lista-area #listaAreas (getEntidadEv)=\"setArea($event)\"></app-lista-area>\n    </div>\n    <div class=\"col m7 s12\">\n        <app-form-area [entidad]=\"area\" (entidadSavedEv)=\"refreshAreaList()\"></app-form-area>\n    </div>\n</div>"]}